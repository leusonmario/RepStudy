import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest11 {

    public static boolean debug = false;

    @Test
    public void test05501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05501");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "delete {[null][delete {[delete {[][null][null]}][null][null]}][null]}");
    }

    @Test
    public void test05502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05502");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest6.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.consistencyLevel(writeConsistencyLevel8);
        org.elasticsearch.index.VersionType versionType10 = deleteRequest6.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.versionType(versionType10);
        boolean boolean12 = deleteRequest11.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.refresh(true);
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest16.getParentTask();
        deleteRequest11.setParentTask(taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.consistencyLevel(writeConsistencyLevel24);
        deleteRequest25.seqNo((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.refresh(true);
        java.lang.String[] strArray39 = deleteRequest36.indices();
        java.lang.String str40 = deleteRequest36.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.refresh(true);
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest47.getParentTask();
        org.elasticsearch.tasks.Task task51 = deleteRequest36.createTask(100L, "delete {[null][null][null]}", "delete {[null][null][null]}", taskId50);
        org.elasticsearch.tasks.Task task52 = deleteRequest25.createTask(100L, "", "delete {[null][null][null]}", taskId50);
        deleteRequest11.setParentTask(taskId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue61 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.index("");
        boolean boolean65 = deleteRequest64.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest64.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException69 = deleteRequest68.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException71 = deleteRequest70.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest70.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue74 = deleteRequest73.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest68.timeout(timeValue74);
        org.elasticsearch.index.VersionType versionType76 = deleteRequest75.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest64.versionType(versionType76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest78.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue85 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest84.timeout(timeValue85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest80.timeout(timeValue85);
        org.elasticsearch.index.shard.ShardId shardId88 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.setShardId(shardId88);
        org.elasticsearch.tasks.TaskId taskId90 = deleteRequest87.getParentTask();
        deleteRequest64.setParentTask(taskId90);
        org.elasticsearch.tasks.Task task92 = deleteRequest11.createTask((long) 100, "delete {[null][hi!][delete {[delete {[null][null][null]}][null][null]}]}", "delete {[delete {[null][null][null]}][][]}", taskId90);
        org.elasticsearch.index.shard.ShardId shardId93 = deleteRequest11.shardId();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][null][null]}" + "'", str40, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(actionRequestValidationException69);
        org.junit.Assert.assertNotNull(actionRequestValidationException71);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(timeValue74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(versionType76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(timeValue85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(taskId90);
        org.junit.Assert.assertNotNull(task92);
        org.junit.Assert.assertNull(shardId93);
    }

    @Test
    public void test05503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05503");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.routing("hi!");
        java.lang.String[] strArray8 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest9.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest13.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest9.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.refresh(false);
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest21.getParentTask();
        deleteRequest9.setParentTask(taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest9.id("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest9.type("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest29.setParentTask("hi!", 10L);
        java.lang.String[] strArray33 = deleteRequest29.indices();
        java.lang.String[] strArray34 = deleteRequest29.indices();
        org.elasticsearch.index.VersionType versionType35 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest9.versionType(versionType35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest7.versionType(versionType35);
        java.lang.String str38 = deleteRequest7.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress39 = deleteRequest7.remoteAddress();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "delete {[null][null][null]}" + "'", str38, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(transportAddress39);
    }

    @Test
    public void test05504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05504");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][delete {[][null][null]}]}][hi!][null]}");
    }

    @Test
    public void test05505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05505");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue7 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.timeout(timeValue7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest2.timeout(timeValue7);
        java.lang.String str10 = deleteRequest9.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.parent("");
        boolean boolean13 = deleteRequest9.getShouldPersistResult();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest9.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest18.shardId();
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest18.remoteAddress(transportAddress20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest22.setParentTask("hi!", 10L);
        java.lang.String str26 = deleteRequest22.toString();
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest22.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest18.timeout(timeValue27);
        java.lang.String str29 = deleteRequest18.parent();
        java.lang.String str30 = deleteRequest18.routing();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest9.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest9.remoteAddress(transportAddress33);
        long long35 = deleteRequest9.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[null][null][null]}" + "'", str26, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    }

    @Test
    public void test05506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05506");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "", "delete {[][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean10 = deleteRequest9.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest12.timeout();
        long long14 = deleteRequest12.primaryTerm();
        deleteRequest12.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType18 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.versionType(versionType18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.setShardId(shardId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.parent("delete {[delete {[null][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.id("delete {[delete {[null][null][delete {[null][null][null]}]}][hi!][null]}");
        java.lang.String str26 = deleteRequest23.parent();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[delete {[null][null][null]}][null][null]}" + "'", str26, "delete {[delete {[null][null][null]}][null][null]}");
    }

    @Test
    public void test05507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05507");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.routing("");
        boolean boolean5 = deleteRequest4.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.parent("delete {[delete {[][null][null]}][hi!][null]}");
        java.lang.String str8 = deleteRequest4.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.parent("delete {[][][]}");
        java.lang.String[] strArray11 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest12.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.consistencyLevel(writeConsistencyLevel22);
        java.lang.String str24 = deleteRequest23.routing();
        org.elasticsearch.index.VersionType versionType25 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.versionType(versionType25);
        org.elasticsearch.index.VersionType versionType27 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest10.versionType(versionType27);
        long long29 = deleteRequest28.version();
        org.elasticsearch.index.shard.IndexShard indexShard30 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete31 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest28, indexShard30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-3L) + "'", long29 == (-3L));
    }

    @Test
    public void test05508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05508");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][hi!]}][hi!]}", "delete {[delete {[][null][null]}][null][null]}", "delete {[delete {[][][]}][delete {[null][hi!][delete {[][null][null]}]}][delete {[delete {[null][][null]}][null][null]}]}");
    }

    @Test
    public void test05509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05509");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest2.setParentTask("hi!", 10L);
        java.lang.String[] strArray6 = deleteRequest2.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest2.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest2.routing("hi!");
        org.elasticsearch.index.shard.ShardId shardId10 = deleteRequest2.shardId();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest2.consistencyLevel(writeConsistencyLevel18);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[null][null][delete {[null][null][null]}]}", deleteRequest19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test05510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05510");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[null][hi!][]}");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest5.getParentTask();
        java.lang.String str10 = deleteRequest5.routing();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
    }

    @Test
    public void test05511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05511");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean4 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest6.timeout();
        long long8 = deleteRequest6.primaryTerm();
        deleteRequest6.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType12 = deleteRequest6.versionType();
        deleteRequest6.seqNo((long) 100);
        long long15 = deleteRequest6.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest6.id("delete {[][delete {[hi!][delete {[delete {[null][null][null]}][null][null]}][delete {[delete {[null][null][null]}][null][null]}]}][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest6.timeout("delete {[delete {[delete {[][][]}][null][null]}][][delete {[null][null][delete {[][][hi!]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[][][]}][null][null]}][][delete {[null][null][delete {[][][hi!]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 100L + "'", long15 == 100L);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test05512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05512");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String str4 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.refresh(false);
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task12 = deleteRequest0.createTask((long) (-1), "", "hi!", taskId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest0.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.refresh(false);
        org.elasticsearch.tasks.TaskId taskId19 = null;
        deleteRequest18.setParentTask(taskId19);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.timeout("delete {[null][delete {[delete {[][null][null]}][hi!][null]}][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][delete {[delete {[][null][null]}][hi!][null]}][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test05513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05513");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest5.indicesOptions();
        org.elasticsearch.common.unit.TimeValue timeValue13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.index("delete {[][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest5.parent("delete {[delete {[delete {[null][null][null]}][][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.refresh(false);
        long long23 = deleteRequest20.seqNo();
        java.lang.String str24 = deleteRequest20.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest20.parent("");
        org.elasticsearch.tasks.TaskId taskId27 = deleteRequest20.getParentTask();
        org.elasticsearch.action.support.IndicesOptions indicesOptions28 = deleteRequest20.indicesOptions();
        java.lang.String str29 = deleteRequest20.type();
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest20.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest5.timeout(timeValue30);
        deleteRequest31.primaryTerm((long) 100);
        boolean boolean34 = deleteRequest31.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest31.type("delete {[null][null][delete {[][null][delete {[null][null][null]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[null][null][null]}" + "'", str24, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId27);
        org.junit.Assert.assertNotNull(indicesOptions28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test05514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05514");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        java.lang.String str5 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.index("");
        java.lang.String str8 = deleteRequest7.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.refresh(false);
        org.elasticsearch.index.VersionType versionType12 = deleteRequest9.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.consistencyLevel(writeConsistencyLevel17);
        org.elasticsearch.index.VersionType versionType19 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest9.versionType(versionType19);
        boolean boolean21 = deleteRequest20.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.refresh(true);
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest25.getParentTask();
        deleteRequest20.setParentTask(taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.consistencyLevel(writeConsistencyLevel33);
        deleteRequest34.seqNo((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest34.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.refresh(true);
        java.lang.String[] strArray48 = deleteRequest45.indices();
        java.lang.String str49 = deleteRequest45.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest56.refresh(true);
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest56.getParentTask();
        org.elasticsearch.tasks.Task task60 = deleteRequest45.createTask(100L, "delete {[null][null][null]}", "delete {[null][null][null]}", taskId59);
        org.elasticsearch.tasks.Task task61 = deleteRequest34.createTask(100L, "", "delete {[null][null][null]}", taskId59);
        deleteRequest20.setParentTask(taskId59);
        deleteRequest7.setParentTask(taskId59);
        boolean boolean64 = deleteRequest7.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest7.id("delete {[null][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress67 = deleteRequest66.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest66.routing("delete {[hi!][null][hi!]}");
        org.elasticsearch.tasks.TaskId taskId70 = deleteRequest69.getParentTask();
        boolean boolean71 = deleteRequest69.refresh();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "delete {[][null][null]}" + "'", str49, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNull(transportAddress67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(taskId70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
    }

    @Test
    public void test05515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05515");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException9, "hi!");
        java.lang.Throwable throwable12 = shardFailure11.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][null][null]}][hi!][null]}", throwable12, "delete {[delete {[][null][null]}][hi!][null]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = shardFailure14.routing;
        java.lang.Throwable throwable16 = shardFailure14.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[null][][null]}][][delete {[null][null][]}]}", throwable16, "delete {[null][null][delete {[][][hi!]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][null]}][delete {[delete {[null][null][null]}][null][null]}][null]}", throwable16, "delete {[null][null][delete {[delete {[][null][null]}][hi!][null]}]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05516");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest2.shardId();
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest2.remoteAddress(transportAddress4);
        java.lang.String str6 = deleteRequest2.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest9.indicesOptions();
        java.lang.String str11 = deleteRequest9.id();
        long long12 = deleteRequest9.primaryTerm();
        java.lang.String str13 = deleteRequest9.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.refresh(false);
        org.elasticsearch.index.VersionType versionType21 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId25 = deleteRequest24.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.index.VersionType versionType28 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest18.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean34 = deleteRequest33.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest36.timeout();
        long long38 = deleteRequest36.primaryTerm();
        deleteRequest36.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType42 = deleteRequest36.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest29.versionType(versionType42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest29.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions47 = deleteRequest46.indicesOptions();
        java.lang.String str48 = deleteRequest46.id();
        long long49 = deleteRequest46.primaryTerm();
        java.lang.String str50 = deleteRequest46.routing();
        java.lang.String str51 = deleteRequest46.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException56 = deleteRequest55.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException58 = deleteRequest57.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest57.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue61 = deleteRequest60.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest55.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId73 = null;
        org.elasticsearch.tasks.Task task74 = deleteRequest69.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId73);
        org.elasticsearch.tasks.TaskId taskId75 = deleteRequest69.getParentTask();
        org.elasticsearch.tasks.Task task76 = deleteRequest62.createTask((long) 1, "delete {[][null][null]}", "delete {[delete {[][null][null]}][hi!][null]}", taskId75);
        org.elasticsearch.tasks.Task task77 = deleteRequest46.createTask((long) ' ', "delete {[null][null][null]}", "", taskId75);
        deleteRequest45.setParentTask(taskId75);
        deleteRequest17.setParentTask(taskId75);
        deleteRequest8.setParentTask(taskId75);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel81 = deleteRequest8.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest8.index("delete {[null][null][delete {[][null][null]}]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel84 = deleteRequest83.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest83.refresh(true);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(versionType42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(indicesOptions47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "delete {[null][null][null]}" + "'", str51, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException56);
        org.junit.Assert.assertNotNull(actionRequestValidationException58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(task74);
        org.junit.Assert.assertNotNull(taskId75);
        org.junit.Assert.assertNotNull(task76);
        org.junit.Assert.assertNotNull(task77);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel81 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel81.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel84 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel84.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest86);
    }

    @Test
    public void test05517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05517");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("hi!");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest10.versionType();
        deleteRequest10.seqNo(1L);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
    }

    @Test
    public void test05518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05518");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("hi!");
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest4.getParentTask();
        java.lang.String str6 = deleteRequest4.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str8 = deleteRequest7.getDescription();
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest7.shardId();
        boolean boolean10 = deleteRequest7.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest11.setParentTask("hi!", 10L);
        java.lang.String[] strArray15 = deleteRequest11.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest16.setParentTask("hi!", 10L);
        java.lang.String[] strArray20 = deleteRequest16.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest11.consistencyLevel(writeConsistencyLevel21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest11.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.refresh(true);
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest24.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest28.setParentTask("hi!", 10L);
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest28.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest28.version((long) ' ');
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest24.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest7.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest4.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest4.setShardId(shardId39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.parent("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId43 = deleteRequest42.shardId();
        deleteRequest42.setParentTask("delete {[][][hi!]}", (long) (byte) 100);
        java.lang.String[] strArray47 = deleteRequest42.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue55 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.timeout(timeValue55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest50.timeout(timeValue55);
        java.lang.String str58 = deleteRequest57.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId62 = deleteRequest61.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel63 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest61.consistencyLevel(writeConsistencyLevel63);
        org.elasticsearch.action.support.IndicesOptions indicesOptions65 = deleteRequest61.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException67 = deleteRequest66.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest66.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue70 = deleteRequest69.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest69.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest73.setParentTask("hi!", 10L);
        java.lang.String[] strArray77 = deleteRequest73.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest78.setParentTask("hi!", 10L);
        java.lang.String[] strArray82 = deleteRequest78.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel83 = deleteRequest78.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest73.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest72.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest61.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest57.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest42.consistencyLevel(writeConsistencyLevel83);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(timeValue55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNull(shardId62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(indicesOptions65);
        org.junit.Assert.assertNotNull(actionRequestValidationException67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(timeValue70);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel83 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel83.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest88);
    }

    @Test
    public void test05519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05519");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        java.lang.String[] strArray5 = deleteRequest0.indices();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean11 = deleteRequest10.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest0.timeout(timeValue14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest0.type("delete {[delete {[null][null][]}][delete {[hi!][null][null]}][delete {[null][null][delete {[null][null][null]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("delete {[delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][null][null]}");
        boolean boolean20 = deleteRequest19.getShouldPersistResult();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test05520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05520");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.refresh(false);
        org.elasticsearch.index.VersionType versionType5 = deleteRequest2.versionType();
        java.lang.String[] strArray6 = deleteRequest2.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.version((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest2.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest14.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.index("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest14.remoteAddress(transportAddress24);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest14.setShardId(shardId26);
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task29 = deleteRequest10.createTask((long) (byte) 0, "", "", taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest10.type("delete {[delete {[null][null][null]}][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][null][null]}]}");
        java.lang.String str32 = deleteRequest10.id();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[null][delete {[][null][null]}][null]}][delete {[hi!][][delete {[][null][null]}]}][delete {[null][delete {[][null][null]}][null]}]}", deleteRequest10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test05521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05521");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String str4 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.refresh(false);
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task12 = deleteRequest0.createTask((long) (-1), "", "hi!", taskId11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest0.setShardId(shardId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.version((long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue28 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.timeout(timeValue28);
        java.lang.String str31 = deleteRequest30.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.routing("");
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = deleteRequest30.remoteAddress();
        long long35 = deleteRequest30.version();
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest30.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest18.timeout(timeValue36);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(transportAddress34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + (-3L) + "'", long35 == (-3L));
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(deleteRequest37);
    }

    @Test
    public void test05522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05522");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId5 = deleteRequest3.shardId();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest9.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.consistencyLevel(writeConsistencyLevel19);
        java.lang.String str21 = deleteRequest20.routing();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest12.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest8.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.type("delete {[null][delete {[null][null][null]}][hi!]}");
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
    }

    @Test
    public void test05523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05523");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String str4 = deleteRequest0.toString();
        long long5 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue10 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.timeout(timeValue10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.timeout(timeValue10);
        org.elasticsearch.index.VersionType versionType13 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("delete {[null][null][hi!]}");
        deleteRequest15.setParentTask("delete {[delete {[null][null][null]}][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][null][null]}]}", (long) '#');
        org.elasticsearch.common.io.stream.StreamInput streamInput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest15.readFrom(streamInput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test05524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05524");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.timeout(timeValue6);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.index("delete {[null][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest11.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest19.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.consistencyLevel(writeConsistencyLevel21);
        java.lang.String str23 = deleteRequest22.routing();
        org.elasticsearch.index.VersionType versionType24 = deleteRequest22.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest14.versionType(versionType24);
        org.elasticsearch.index.VersionType versionType26 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest0.versionType(versionType26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest28.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.consistencyLevel(writeConsistencyLevel38);
        java.lang.String str40 = deleteRequest39.routing();
        org.elasticsearch.index.VersionType versionType41 = deleteRequest39.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest31.versionType(versionType41);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest42.consistencyLevel();
        java.lang.String str44 = deleteRequest42.id();
        deleteRequest42.seqNo((long) 0);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest42.setShardId(shardId47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}", "delete {[null][][null]}", "delete {[delete {[delete {[null][null][null]}][][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][hi!][]}", "delete {[null][hi!][]}", "delete {[null][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.refresh(false);
        org.elasticsearch.index.VersionType versionType62 = deleteRequest59.versionType();
        java.lang.String str63 = deleteRequest59.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest59.index("hi!");
        java.lang.String str66 = deleteRequest59.index();
        long long67 = deleteRequest59.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = deleteRequest59.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest58.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest54.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest50.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest0.consistencyLevel(writeConsistencyLevel68);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(actionRequestValidationException29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(versionType41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(versionType62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "hi!" + "'", str66, "hi!");
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + (-3L) + "'", long67 == (-3L));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel68 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel68.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
    }

    @Test
    public void test05525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05525");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.type("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest0.remoteAddress(transportAddress8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean14 = deleteRequest13.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest17.setParentTask("hi!", 10L);
        java.lang.String[] strArray21 = deleteRequest17.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest0.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue29 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.timeout(timeValue29);
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest28.remoteAddress(transportAddress31);
        java.lang.String str33 = deleteRequest28.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest28.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest28.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest28.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest0.timeout(timeValue38);
        long long40 = deleteRequest0.seqNo();
        long long41 = deleteRequest0.version();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest0.setShardId(shardId42);
        java.lang.String str44 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest48.setParentTask("hi!", 10L);
        java.lang.String[] strArray52 = deleteRequest48.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest48.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId54 = deleteRequest48.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest55.setParentTask("hi!", 10L);
        java.lang.String str59 = deleteRequest55.toString();
        long long60 = deleteRequest55.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue65 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest64.timeout(timeValue65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest55.timeout(timeValue65);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest48.timeout(timeValue65);
        deleteRequest48.setParentTask("delete {[delete {[null][null][null]}][delete {[delete {[null][null][null]}][null][null]}][null]}", (long) (byte) 100);
        org.elasticsearch.tasks.TaskId taskId72 = deleteRequest48.getParentTask();
        org.elasticsearch.tasks.Task task73 = deleteRequest0.createTask(100L, "delete {[hi!][null][hi!]}", "delete {[delete {[null][][null]}][null][null]}", taskId72);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + (-3L) + "'", long41 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[null][hi!][null]}" + "'", str44, "delete {[null][hi!][null]}");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId54);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "delete {[null][null][null]}" + "'", str59, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + (-3L) + "'", long60 == (-3L));
        org.junit.Assert.assertNotNull(timeValue65);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(taskId72);
        org.junit.Assert.assertNotNull(task73);
    }

    @Test
    public void test05526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05526");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][][null]}][][delete {[null][null][]}]}", "delete {[delete {[null][null][null]}][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][null][null]}]}", "delete {[delete {[][null][null]}][null][null]}");
        long long4 = deleteRequest3.primaryTerm();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test05527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05527");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(false);
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        java.lang.String str15 = deleteRequest11.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest18.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.refresh(false);
        org.elasticsearch.index.VersionType versionType25 = deleteRequest22.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.versionType(versionType25);
        deleteRequest26.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest26.getParentTask();
        deleteRequest17.setParentTask(taskId29);
        deleteRequest17.setParentTask("hi!", (long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = null;
        deleteRequest17.remoteAddress(transportAddress34);
        java.lang.String[] strArray36 = deleteRequest17.indices();
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest3.timeout(timeValue37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.version((long) 0);
        java.lang.String str41 = deleteRequest38.index();
        deleteRequest38.primaryTerm((long) '#');
        long long44 = deleteRequest38.seqNo();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
    }

    @Test
    public void test05528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05528");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(false);
        deleteRequest3.primaryTerm((long) (byte) 100);
        java.lang.String str8 = deleteRequest3.toString();
        deleteRequest3.seqNo((long) (byte) 100);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
    }

    @Test
    public void test05529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05529");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        long long11 = deleteRequest3.seqNo();
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest3.timeout();
        boolean boolean13 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue18 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.timeout(timeValue18);
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest17.remoteAddress(transportAddress20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest22.setParentTask("hi!", 10L);
        java.lang.String str26 = deleteRequest22.toString();
        long long27 = deleteRequest22.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue32 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest22.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest17.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest3.timeout(timeValue32);
        long long37 = deleteRequest36.seqNo();
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = null;
        deleteRequest36.remoteAddress(transportAddress38);
        java.lang.String str40 = deleteRequest36.id();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(timeValue18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[null][null][null]}" + "'", str26, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-3L) + "'", long27 == (-3L));
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
    }

    @Test
    public void test05530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05530");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.version((long) ' ');
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.routing("");
        java.lang.String str17 = deleteRequest13.routing();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest13.getParentTask();
        deleteRequest0.setParentTask(taskId18);
        deleteRequest0.setParentTask("delete {[delete {[null][null][null]}][][delete {[delete {[null][null][null]}][][]}]}", (long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest0.type("delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest0.id("delete {[delete {[][][hi!]}][][delete {[][null][null]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest0.timeout();
        org.elasticsearch.index.VersionType versionType28 = deleteRequest0.versionType();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(versionType28);
    }

    @Test
    public void test05531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05531");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId4 = null;
        deleteRequest0.setParentTask(taskId4);
        long long6 = deleteRequest0.primaryTerm();
        boolean boolean7 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue12 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.timeout(timeValue12);
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest11.remoteAddress(transportAddress14);
        java.lang.String str16 = deleteRequest11.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest11.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest0.timeout(timeValue21);
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest0.shardId();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass24 = shardId23.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(shardId23);
    }

    @Test
    public void test05532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05532");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId4 = null;
        deleteRequest0.setParentTask(taskId4);
        java.lang.String str6 = deleteRequest0.parent();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions11 = deleteRequest8.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        long long18 = deleteRequest15.seqNo();
        java.lang.String str19 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.parent("");
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest15.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest8.createTask((long) (byte) 0, "delete {[null][delete {[null][null][null]}][hi!]}", "delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}", taskId22);
        java.lang.String str24 = deleteRequest8.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest8.index("delete {[][null][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(indicesOptions11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[null][null][null]}" + "'", str19, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[null][null][null]}" + "'", str24, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest26);
    }

    @Test
    public void test05533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05533");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        long long11 = deleteRequest3.version();
        long long12 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest13.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.consistencyLevel(writeConsistencyLevel23);
        java.lang.String str25 = deleteRequest24.routing();
        org.elasticsearch.index.VersionType versionType26 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest16.versionType(versionType26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest16.parent("delete {[][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest29.remoteAddress(transportAddress30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest29.version((-1L));
        org.elasticsearch.common.unit.TimeValue timeValue34 = deleteRequest33.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest3.timeout(timeValue34);
        java.lang.String str36 = deleteRequest35.getDescription();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[][][]}" + "'", str36, "delete {[][][]}");
    }

    @Test
    public void test05534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05534");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest5.setParentTask("hi!", 10L);
        java.lang.String[] strArray9 = deleteRequest5.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions20 = deleteRequest19.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest30.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.timeout(timeValue31);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest25.index("delete {[null][hi!][]}");
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest24.timeout(timeValue36);
        boolean boolean38 = deleteRequest37.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions40 = deleteRequest39.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest39.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.refresh(false);
        org.elasticsearch.index.VersionType versionType46 = deleteRequest43.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest42.versionType(versionType46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest42.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions51 = deleteRequest50.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest50.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.refresh(false);
        org.elasticsearch.index.VersionType versionType57 = deleteRequest54.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest53.versionType(versionType57);
        deleteRequest58.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest58.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest68.refresh(true);
        org.elasticsearch.tasks.TaskId taskId71 = deleteRequest68.getParentTask();
        org.elasticsearch.tasks.Task task72 = deleteRequest58.createTask((long) (short) 10, "", "hi!", taskId71);
        deleteRequest42.setParentTask(taskId71);
        deleteRequest37.setParentTask(taskId71);
        org.elasticsearch.tasks.Task task75 = deleteRequest13.createTask((long) (-1), "delete {[hi!][][delete {[null][null][]}]}", "delete {[delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][][hi!]}", taskId71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest13.parent("delete {[null][null][delete {[delete {[null][delete {[][null][null]}][null]}][delete {[hi!][][delete {[][null][null]}]}][delete {[null][delete {[][null][null]}][null]}]}]}");
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(indicesOptions20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(indicesOptions40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(versionType46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(indicesOptions51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(versionType57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(taskId71);
        org.junit.Assert.assertNotNull(task72);
        org.junit.Assert.assertNotNull(task75);
        org.junit.Assert.assertNotNull(deleteRequest77);
    }

    @Test
    public void test05535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05535");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        java.lang.String[] strArray5 = deleteRequest0.indices();
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest7.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.consistencyLevel(writeConsistencyLevel17);
        java.lang.String str19 = deleteRequest18.routing();
        org.elasticsearch.index.VersionType versionType20 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest10.versionType(versionType20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest0.versionType(versionType20);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest0.setShardId(shardId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.refresh(true);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
    }

    @Test
    public void test05536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05536");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest3.remoteAddress();
        boolean boolean7 = deleteRequest3.getShouldPersistResult();
        java.lang.String str8 = deleteRequest3.id();
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest3.shardId();
        org.elasticsearch.index.shard.ShardId shardId10 = deleteRequest3.shardId();
        org.elasticsearch.action.support.IndicesOptions indicesOptions11 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue16 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.timeout(timeValue16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.index("");
        boolean boolean20 = deleteRequest19.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.version((long) (short) 10);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest3.consistencyLevel(writeConsistencyLevel25);
        java.lang.String str27 = deleteRequest3.routing();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertNotNull(indicesOptions11);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test05537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05537");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "delete {[delete {[null][hi!][]}][null][null]}");
    }

    @Test
    public void test05538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05538");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][null][null]}][hi!][null]}", "delete {[null][delete {[][][hi!]}][null]}", "delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId12);
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest8.getParentTask();
        deleteRequest3.setParentTask(taskId14);
        org.elasticsearch.index.VersionType versionType16 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest3.version(32L);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.timeout("delete {[][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test05539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05539");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.timeout(timeValue8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest7.remoteAddress(transportAddress10);
        java.lang.String str12 = deleteRequest7.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.parent("hi!");
        org.elasticsearch.index.VersionType versionType15 = deleteRequest7.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.versionType(versionType15);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest0.validate();
        java.lang.String str18 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest0.id("delete {[delete {[][null][null]}][hi!][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest0.consistencyLevel();
        deleteRequest0.primaryTerm((long) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest0.setParentTask("", (long) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 0 length nodeIds are reserved for EMPTY_TASK_ID and are otherwise invalid.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test05540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05540");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.index("delete {[delete {[][][hi!]}][][delete {[][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest4.setParentTask("hi!", 10L);
        org.elasticsearch.tasks.TaskId taskId11 = null;
        org.elasticsearch.tasks.Task task12 = deleteRequest4.createTask((long) (short) 100, "", "", taskId11);
        org.elasticsearch.index.VersionType versionType13 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest1.versionType(versionType13);
        java.lang.String str15 = deleteRequest14.toString();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][null][null]}" + "'", str15, "delete {[delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][null][null]}");
    }

    @Test
    public void test05541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05541");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}", "delete {[delete {[null][][null]}][delete {[null][null][]}][hi!]}", "delete {[delete {[delete {[][][]}][null][null]}][][delete {[null][null][delete {[][][hi!]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][null][delete {[delete {[null][null][null]}][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test05542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05542");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        long long11 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.id("delete {[delete {[][null][null]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest14.indicesOptions();
        java.lang.String str16 = deleteRequest14.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest17.setParentTask("hi!", 10L);
        java.lang.String[] strArray21 = deleteRequest17.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.setShardId(shardId24);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.refresh(false);
        java.lang.String str31 = deleteRequest30.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId38 = deleteRequest37.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest37.consistencyLevel(writeConsistencyLevel39);
        long long41 = deleteRequest40.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest42.setParentTask("hi!", 10L);
        java.lang.String[] strArray46 = deleteRequest42.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest47.setParentTask("hi!", 10L);
        java.lang.String[] strArray51 = deleteRequest47.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest47.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest42.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest40.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.setShardId(shardId55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest60.setParentTask("hi!", 10L);
        org.elasticsearch.common.unit.TimeValue timeValue64 = deleteRequest60.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest60.version((long) ' ');
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException67 = deleteRequest60.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest60.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException71 = deleteRequest70.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest70.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue74 = deleteRequest73.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest73.routing("");
        java.lang.String str77 = deleteRequest73.routing();
        org.elasticsearch.tasks.TaskId taskId78 = deleteRequest73.getParentTask();
        deleteRequest60.setParentTask(taskId78);
        org.elasticsearch.tasks.Task task80 = deleteRequest54.createTask((long) 100, "delete {[delete {[null][hi!][]}][delete {[null][hi!][]}][delete {[null][hi!][]}]}", "delete {[delete {[delete {[null][null][null]}][][]}][null][null]}", taskId78);
        org.elasticsearch.tasks.Task task81 = deleteRequest30.createTask(1L, "delete {[delete {[null][null][]}][hi!][null]}", "delete {[delete {[null][null][null]}][delete {[delete {[null][null][null]}][null][null]}][null]}", taskId78);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(actionRequestValidationException28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}" + "'", str31, "delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(shardId38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(timeValue64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(actionRequestValidationException67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(actionRequestValidationException71);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(timeValue74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(taskId78);
        org.junit.Assert.assertNotNull(task80);
        org.junit.Assert.assertNotNull(task81);
    }

    @Test
    public void test05543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05543");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.timeout(timeValue8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest7.remoteAddress(transportAddress10);
        java.lang.String str12 = deleteRequest7.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.parent("hi!");
        org.elasticsearch.index.VersionType versionType15 = deleteRequest7.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.versionType(versionType15);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest0.validate();
        java.lang.String str18 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest0.id("delete {[delete {[][null][null]}][hi!][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest20.writeTo(streamOutput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test05544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05544");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.refresh(false);
        boolean boolean9 = deleteRequest6.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue14 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.timeout(timeValue14);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest13.remoteAddress(transportAddress16);
        java.lang.String str18 = deleteRequest13.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest13.parent("hi!");
        org.elasticsearch.index.VersionType versionType21 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest6.versionType(versionType21);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "hi!", (java.lang.Throwable) actionRequestValidationException23, "delete {[null][null][null]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure27 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[null][null][delete {[null][null][null]}]}", (java.lang.Throwable) actionRequestValidationException23, "delete {[][null][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure29 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][delete {[null][null][null]}]}][][hi!]}", (java.lang.Throwable) actionRequestValidationException23, "");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
    }

    @Test
    public void test05545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05545");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}][delete {[hi!][][delete {[][null][null]}]}]}", "hi!", "delete {[delete {[hi!][][delete {[null][null][]}]}][null][null]}");
    }

    @Test
    public void test05546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05546");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][]}][delete {[null][hi!][delete {[][null][null]}]}][delete {[delete {[null][][null]}][null][null]}]}", "delete {[delete {[delete {[][null][null]}][hi!][null]}][null][null]}", "delete {[hi!][delete {[delete {[null][null][null]}][null][null]}][delete {[delete {[null][null][null]}][null][null]}]}");
    }

    @Test
    public void test05547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05547");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.index("hi!");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest9.writeTo(streamOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test05548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05548");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.index("delete {[][null][null]}");
        deleteRequest6.seqNo((long) 10);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest6.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest6.type("delete {[delete {[null][null][delete {[null][null][null]}]}][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.type("delete {[null][hi!][]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test05549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05549");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.type("");
        java.lang.String str7 = deleteRequest6.routing();
        java.lang.String str8 = deleteRequest6.id();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test05550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05550");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = null;
        deleteRequest1.remoteAddress(transportAddress2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        org.elasticsearch.index.VersionType versionType10 = deleteRequest7.versionType();
        java.lang.String str11 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest1.createTask((long) (byte) 100, "delete {[null][hi!][null]}", "delete {[][][]}", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue27 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.timeout(timeValue27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.timeout(timeValue27);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.setShardId(shardId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest38.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest42.setParentTask("hi!", 10L);
        java.lang.String[] strArray46 = deleteRequest42.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest47.setParentTask("hi!", 10L);
        java.lang.String[] strArray51 = deleteRequest47.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest47.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest42.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest41.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest41.setShardId(shardId55);
        org.elasticsearch.common.transport.TransportAddress transportAddress57 = null;
        deleteRequest41.remoteAddress(transportAddress57);
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task60 = deleteRequest29.createTask((long) 'a', "delete {[][][]}", "hi!", taskId59);
        org.elasticsearch.tasks.Task task61 = deleteRequest1.createTask((long) (-1), "delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}", "delete {[null][hi!][]}", taskId59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest1.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.routing("delete {[delete {[delete {[null][null][]}][hi!][null]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
    }

    @Test
    public void test05551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05551");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        deleteRequest3.primaryTerm((long) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        java.lang.String str9 = deleteRequest3.id();
        java.lang.String str10 = deleteRequest3.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest3.getParentTask();
        java.lang.String str12 = deleteRequest3.routing();
        java.lang.String str13 = deleteRequest3.parent();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test05552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05552");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.index("delete {[delete {[][null][null]}][hi!][null]}");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.setShardId(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test05553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05553");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest0.remoteAddress(transportAddress6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.refresh(true);
        long long10 = deleteRequest9.version();
        long long11 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.parent("delete {[delete {[null][null][null]}][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][null][null]}]}");
        boolean boolean14 = deleteRequest13.getShouldPersistResult();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-3L) + "'", long10 == (-3L));
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test05554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05554");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest5.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.type("delete {[delete {[null][null][null]}][][]}");
        boolean boolean15 = deleteRequest5.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test05555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05555");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][hi!][]}][null][null]}", "delete {[delete {[null][null][]}][delete {[hi!][null][null]}][delete {[null][null][delete {[null][null][null]}]}]}", "delete {[delete {[null][null][null]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest4.timeout(timeValue10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest4.index("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest4.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest4.id("delete {[null][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("delete {[delete {[null][null][null]}][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest19.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest3.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest3.parent("delete {[hi!][delete {[null][delete {[][][delete {[][null][null]}]}][null]}][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test05556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05556");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}", "", "delete {[null][null][hi!]}");
        org.elasticsearch.index.VersionType versionType4 = deleteRequest3.versionType();
        org.junit.Assert.assertNotNull(versionType4);
    }

    @Test
    public void test05557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05557");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.refresh(true);
        java.lang.String str4 = deleteRequest1.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest5.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.refresh(false);
        org.elasticsearch.index.VersionType versionType12 = deleteRequest9.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest15.remoteAddress(transportAddress18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest20.setParentTask("hi!", 10L);
        java.lang.String[] strArray24 = deleteRequest20.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest1.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean32 = deleteRequest31.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest27.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest27.setShardId(shardId37);
        long long39 = deleteRequest38.seqNo();
        org.elasticsearch.index.VersionType versionType40 = deleteRequest38.versionType();
        org.elasticsearch.index.shard.IndexShard indexShard41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult42 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest38, indexShard41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(versionType40);
    }

    @Test
    public void test05558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05558");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(false);
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.versionType(versionType14);
        deleteRequest15.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest15.getParentTask();
        deleteRequest6.setParentTask(taskId18);
        deleteRequest6.setParentTask("hi!", (long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest6.remoteAddress(transportAddress23);
        java.lang.String[] strArray25 = deleteRequest6.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest6.parent("delete {[delete {[null][null][null]}][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress28 = null;
        deleteRequest27.remoteAddress(transportAddress28);
        boolean boolean30 = deleteRequest27.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest41.setParentTask("hi!", 10L);
        org.elasticsearch.common.unit.TimeValue timeValue45 = deleteRequest41.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest41.version((long) ' ');
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest41.routing("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task52 = deleteRequest37.createTask((long) 1, "delete {[null][null][hi!]}", "delete {[][null][null]}", taskId51);
        java.lang.String str53 = deleteRequest37.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.refresh(true);
        org.elasticsearch.tasks.TaskId taskId60 = deleteRequest57.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions65 = deleteRequest64.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest64.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest64.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest64.id("delete {[null][hi!][null]}");
        org.elasticsearch.tasks.TaskId taskId72 = deleteRequest71.getParentTask();
        org.elasticsearch.tasks.Task task73 = deleteRequest57.createTask((-1L), "delete {[null][null][hi!]}", "delete {[null][null][]}", taskId72);
        deleteRequest37.setParentTask(taskId72);
        deleteRequest27.setParentTask(taskId72);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(taskId60);
        org.junit.Assert.assertNotNull(indicesOptions65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(taskId72);
        org.junit.Assert.assertNotNull(task73);
    }

    @Test
    public void test05559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05559");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        deleteRequest8.seqNo((long) (byte) -1);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard indexShard12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete13 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest8, indexShard12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
    }

    @Test
    public void test05560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05560");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.timeout("delete {[delete {[delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[null][][null]}][null][null]}][null]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[null][][null]}][null][null]}][null]}][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test05561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05561");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.getDescription();
        org.elasticsearch.index.shard.ShardId shardId2 = deleteRequest0.shardId();
        boolean boolean3 = deleteRequest0.refresh();
        long long4 = deleteRequest0.primaryTerm();
        java.lang.String str5 = deleteRequest0.toString();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.setShardId(shardId6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest0.remoteAddress(transportAddress8);
        boolean boolean10 = deleteRequest0.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.parent("delete {[delete {[null][null][null]}][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][null][null]}]}");
        boolean boolean13 = deleteRequest12.refresh();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardId2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test05562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05562");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}", "delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}", "delete {[null][delete {[][null][null]}][null]}");
        boolean boolean4 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][]}", "delete {[null][][null]}", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.index("");
        boolean boolean17 = deleteRequest16.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest20.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest22.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.timeout(timeValue26);
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest16.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest8.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId34 = deleteRequest33.shardId();
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = null;
        deleteRequest33.remoteAddress(transportAddress35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest37.setParentTask("hi!", 10L);
        java.lang.String str41 = deleteRequest37.toString();
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest37.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest33.timeout(timeValue42);
        org.elasticsearch.index.VersionType versionType44 = deleteRequest33.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest8.versionType(versionType44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest3.versionType(versionType44);
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = null;
        deleteRequest46.remoteAddress(transportAddress47);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "delete {[null][null][null]}" + "'", str41, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(versionType44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
    }

    @Test
    public void test05563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05563");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        deleteRequest0.primaryTerm(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(true);
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task14 = deleteRequest0.createTask((long) (byte) 1, "", "delete {[null][null][null]}", taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest0.type("delete {[delete {[null][null][null]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest0.parent("delete {[delete {[null][null][null]}][null][null]}");
        deleteRequest0.primaryTerm(100L);
        java.lang.String str23 = deleteRequest0.routing();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(task14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test05564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05564");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.version((long) (byte) 1);
        deleteRequest12.seqNo((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.type("delete {[][][]}");
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test05565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05565");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[delete {[null][null][null]}][][]}");
        java.lang.String str13 = deleteRequest12.id();
        java.lang.String str14 = deleteRequest12.parent();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test05566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05566");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        java.lang.String str10 = shardFailure9.reason;
        java.lang.String str11 = shardFailure9.indexUUID;
        java.lang.String str12 = shardFailure9.reason;
        java.lang.Throwable throwable13 = shardFailure9.cause;
        java.lang.Throwable throwable14 = shardFailure9.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}", throwable14, "delete {[delete {[][][hi!]}][][delete {[][null][null]}]}");
        java.lang.Throwable throwable17 = shardFailure16.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][hi!][]}][null][null]}", throwable17, "delete {[null][null][]}");
        java.lang.Throwable throwable20 = shardFailure19.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable20.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05567");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.getDescription();
        org.elasticsearch.index.shard.ShardId shardId2 = deleteRequest0.shardId();
        long long3 = deleteRequest0.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest0.remoteAddress();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.timeout("delete {[null][null][delete {[null][null][delete {[null][null][null]}]}]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][null][delete {[null][null][delete {[null][null][null]}]}]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardId2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(transportAddress4);
    }

    @Test
    public void test05568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05568");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue7 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.timeout(timeValue7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest2.timeout(timeValue7);
        java.lang.String str10 = deleteRequest9.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.id("delete {[null][null][null]}");
        java.lang.String str13 = deleteRequest12.type();
        java.lang.String str14 = deleteRequest12.toString();
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest12.timeout();
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest12.remoteAddress(transportAddress17);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[null][null][delete {[null][null][null]}]}" + "'", str14, "delete {[null][null][delete {[null][null][null]}]}");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(timeValue16);
    }

    @Test
    public void test05569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05569");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.routing("");
        java.lang.String str7 = deleteRequest3.routing();
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        java.lang.String[] strArray9 = deleteRequest3.indices();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test05570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05570");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest2.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.consistencyLevel(writeConsistencyLevel4);
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest2.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest7.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest14.setParentTask("hi!", 10L);
        java.lang.String[] strArray18 = deleteRequest14.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest19.setParentTask("hi!", 10L);
        java.lang.String[] strArray23 = deleteRequest19.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest14.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest13.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest2.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.id("delete {[][][hi!]}");
        java.lang.String str30 = deleteRequest27.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.routing("delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[null][null][delete {[][][hi!]}]}" + "'", str30, "delete {[null][null][delete {[][][hi!]}]}");
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test05571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05571");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(false);
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        deleteRequest0.setParentTask(taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.id("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest0.setShardId(shardId17);
        java.lang.String str19 = deleteRequest18.routing();
        deleteRequest18.setParentTask("delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}", (long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId26 = deleteRequest25.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.refresh(true);
        org.elasticsearch.index.VersionType versionType29 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest18.versionType(versionType29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest18.parent("delete {[][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test05572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05572");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        deleteRequest3.primaryTerm((long) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        java.lang.String str9 = deleteRequest3.id();
        java.lang.String str10 = deleteRequest3.toString();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.version((long) (byte) 10);
        java.lang.String str14 = deleteRequest13.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.refresh(true);
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue22 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.timeout(timeValue22);
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest21.remoteAddress(transportAddress24);
        java.lang.String str26 = deleteRequest21.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.id("");
        long long29 = deleteRequest21.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest21.id("delete {[delete {[][null][null]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions33 = deleteRequest32.indicesOptions();
        java.lang.String str34 = deleteRequest32.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest35.setParentTask("hi!", 10L);
        java.lang.String[] strArray39 = deleteRequest35.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest32.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.setShardId(shardId42);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest21.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId49 = deleteRequest48.shardId();
        long long50 = deleteRequest48.seqNo();
        org.elasticsearch.index.shard.ShardId shardId51 = deleteRequest48.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId55 = deleteRequest54.shardId();
        deleteRequest54.setParentTask("delete {[][null][null]}", 0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest54.routing("delete {[delete {[][null][null]}][hi!][null]}");
        java.lang.String str61 = deleteRequest60.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel62 = deleteRequest60.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest48.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest45.consistencyLevel(writeConsistencyLevel62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException66 = deleteRequest65.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest65.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue69 = deleteRequest68.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest68.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions73 = deleteRequest72.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest72.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest76.refresh(false);
        org.elasticsearch.index.VersionType versionType79 = deleteRequest76.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest75.versionType(versionType79);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest75.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest82.type("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress85 = null;
        deleteRequest82.remoteAddress(transportAddress85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest87.setParentTask("hi!", 10L);
        java.lang.String[] strArray91 = deleteRequest87.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel92 = deleteRequest87.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest82.consistencyLevel(writeConsistencyLevel92);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest68.consistencyLevel(writeConsistencyLevel92);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest45.consistencyLevel(writeConsistencyLevel92);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest16.consistencyLevel(writeConsistencyLevel92);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + (-3L) + "'", long29 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(indicesOptions33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(shardId49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNull(shardId51);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNull(shardId55);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel62 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel62.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(actionRequestValidationException66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(timeValue69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(indicesOptions73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(versionType79);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel92 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel92.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertNotNull(deleteRequest96);
    }

    @Test
    public void test05573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05573");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[null][][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions7 = deleteRequest0.indicesOptions();
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest0.getParentTask();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions7);
        org.junit.Assert.assertNotNull(taskId8);
    }

    @Test
    public void test05574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05574");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        java.lang.String str9 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(false);
        org.elasticsearch.index.VersionType versionType13 = deleteRequest10.versionType();
        java.lang.String[] strArray14 = deleteRequest10.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.version((long) (short) 0);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.index.VersionType versionType18 = deleteRequest16.versionType();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.version((long) 100);
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
    }

    @Test
    public void test05575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05575");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions3 = deleteRequest2.indicesOptions();
        deleteRequest2.primaryTerm(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.refresh(true);
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest12.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest2.createTask((long) (byte) 1, "", "delete {[null][null][null]}", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest2.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest2.type("delete {[delete {[null][null][null]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest2.parent("delete {[delete {[null][null][null]}][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.routing("delete {[delete {[null][null][delete {[null][null][null]}]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.refresh(false);
        boolean boolean29 = deleteRequest26.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue34 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.timeout(timeValue34);
        org.elasticsearch.common.transport.TransportAddress transportAddress36 = null;
        deleteRequest33.remoteAddress(transportAddress36);
        java.lang.String str38 = deleteRequest33.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest33.parent("hi!");
        org.elasticsearch.index.VersionType versionType41 = deleteRequest33.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest26.versionType(versionType41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest26.id("");
        java.lang.String str45 = deleteRequest44.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest44.routing("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest44.parent("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean54 = deleteRequest53.refresh();
        deleteRequest53.seqNo((long) '#');
        deleteRequest53.primaryTerm((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions60 = deleteRequest59.indicesOptions();
        org.elasticsearch.index.VersionType versionType61 = deleteRequest59.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest53.versionType(versionType61);
        org.elasticsearch.tasks.TaskId taskId63 = deleteRequest53.getParentTask();
        deleteRequest49.setParentTask(taskId63);
        deleteRequest25.setParentTask(taskId63);
        org.elasticsearch.common.transport.TransportAddress transportAddress66 = deleteRequest25.remoteAddress();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[null][null][]}][hi!][null]}][null][null]}", deleteRequest25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions3);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(versionType41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(indicesOptions60);
        org.junit.Assert.assertNotNull(versionType61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(taskId63);
        org.junit.Assert.assertNull(transportAddress66);
    }

    @Test
    public void test05576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05576");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        deleteRequest8.seqNo((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.version(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest13.indicesOptions();
        java.lang.String str15 = deleteRequest13.id();
        long long16 = deleteRequest13.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.setShardId(shardId17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId26 = null;
        org.elasticsearch.tasks.Task task27 = deleteRequest22.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest33.refresh(true);
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest33.getParentTask();
        deleteRequest22.setParentTask(taskId36);
        deleteRequest18.setParentTask(taskId36);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest8.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = deleteRequest8.remoteAddress();
        deleteRequest8.setParentTask("delete {[delete {[][][]}][null][null]}", (long) (short) 10);
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(transportAddress41);
    }

    @Test
    public void test05577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05577");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest8.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.routing();
        org.elasticsearch.index.VersionType versionType13 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.versionType(versionType13);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest14.consistencyLevel();
        java.lang.String str16 = deleteRequest14.id();
        deleteRequest14.seqNo((long) 0);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest14.setShardId(shardId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue25 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.timeout(timeValue25);
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = null;
        deleteRequest24.remoteAddress(transportAddress27);
        java.lang.String str29 = deleteRequest24.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.id("");
        long long32 = deleteRequest24.seqNo();
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest24.timeout();
        boolean boolean34 = deleteRequest24.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue39 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.timeout(timeValue39);
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest38.remoteAddress(transportAddress41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest43.setParentTask("hi!", 10L);
        java.lang.String str47 = deleteRequest43.toString();
        long long48 = deleteRequest43.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue53 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.timeout(timeValue53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest43.timeout(timeValue53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest38.timeout(timeValue53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest24.timeout(timeValue53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest20.timeout(timeValue53);
        java.lang.String str59 = deleteRequest20.id();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest20.timeout("delete {[delete {[null][null][hi!]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[null][null][hi!]}][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "delete {[null][null][null]}" + "'", str47, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-3L) + "'", long48 == (-3L));
        org.junit.Assert.assertNotNull(timeValue53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test05578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05578");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][hi!][]}][delete {[null][hi!][]}][delete {[null][hi!][]}]}", "delete {[null][delete {[null][hi!][null]}][hi!]}", "delete {[][null][null]}");
    }

    @Test
    public void test05579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05579");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException3, "hi!");
        java.lang.String str6 = shardFailure5.reason;
        java.lang.String str7 = shardFailure5.indexUUID;
        java.lang.String str8 = shardFailure5.reason;
        java.lang.Throwable throwable9 = shardFailure5.cause;
        java.lang.String str10 = shardFailure5.reason;
        java.lang.String str11 = shardFailure5.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = shardFailure5.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNull(shardRouting12);
    }

    @Test
    public void test05580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05580");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean4 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.refresh(true);
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId18 = null;
        org.elasticsearch.tasks.Task task19 = deleteRequest14.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.refresh(true);
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest25.getParentTask();
        deleteRequest14.setParentTask(taskId28);
        deleteRequest6.setParentTask(taskId28);
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest6.shardId();
        org.elasticsearch.common.io.stream.StreamInput streamInput32 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest6.readFrom(streamInput32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNull(shardId31);
    }

    @Test
    public void test05581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05581");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.id("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.id("delete {[][null][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest0.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test05582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05582");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        java.lang.String str5 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        long long10 = deleteRequest7.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.refresh(false);
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = deleteRequest7.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest7.version((long) (short) 1);
        java.lang.String str17 = deleteRequest16.index();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(transportAddress13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test05583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05583");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException3, "hi!");
        java.lang.Throwable throwable6 = shardFailure5.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting7 = shardFailure5.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = shardFailure5.routing;
        java.lang.String str9 = shardFailure5.indexUUID;
        java.lang.String str10 = shardFailure5.reason;
        java.lang.String str11 = shardFailure5.indexUUID;
        java.lang.Throwable throwable12 = shardFailure5.cause;
        java.lang.Throwable throwable13 = shardFailure5.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable6.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting7);
        org.junit.Assert.assertNull(shardRouting8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "" + "'", str10, "");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05584");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId4 = null;
        deleteRequest0.setParentTask(taskId4);
        java.lang.String str6 = deleteRequest0.parent();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions11 = deleteRequest8.indicesOptions();
        deleteRequest8.setParentTask("hi!", (long) '#');
        java.lang.String str15 = deleteRequest8.index();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(indicesOptions11);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test05585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05585");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.index("hi!");
        java.lang.String str7 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest10.remoteAddress(transportAddress12);
        java.lang.String str14 = deleteRequest10.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.parent("");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest0.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest0.parent("delete {[hi!][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest0.id("delete {[delete {[delete {[null][null][]}][hi!][null]}][null][null]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput23 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest22.readFrom(streamInput23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
    }

    @Test
    public void test05586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05586");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        java.lang.String str5 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.routing("hi!");
        java.lang.String str8 = deleteRequest7.type();
        java.lang.String str9 = deleteRequest7.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("hi!");
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task19 = deleteRequest7.createTask((long) '#', "delete {[delete {[null][delete {[][null][null]}][null]}][delete {[hi!][][delete {[][null][null]}]}][delete {[null][delete {[][null][null]}][null]}]}", "delete {[null][delete {[][null][null]}][null]}", taskId18);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(task19);
    }

    @Test
    public void test05587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05587");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.timeout(timeValue8);
        java.lang.String str10 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.parent("delete {[delete {[][null][null]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest12.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.index("");
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test05588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05588");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "delete {[delete {[][][hi!]}][null][delete {[null][null][null]}]}");
    }

    @Test
    public void test05589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05589");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException9, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException9, "");
        java.lang.Throwable throwable14 = shardFailure13.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[null][null][null]}][delete {[delete {[null][null][null]}][null][null]}][null]}", throwable14, "delete {[hi!][null][delete {[null][null][delete {[null][null][null]}]}]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][delete {[null][null][]}][null]}", throwable14, "");
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05590");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.routing("");
        boolean boolean5 = deleteRequest4.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.parent("delete {[delete {[][null][null]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest4.parent("delete {[hi!][null][null]}");
        long long10 = deleteRequest4.seqNo();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test05591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05591");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        java.lang.String str5 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        long long10 = deleteRequest7.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.setShardId(shardId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest16.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest16.remoteAddress(transportAddress20);
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest16.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest12.createTask(0L, "", "delete {[null][null][]}", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest12.version((-1L));
        java.lang.String str26 = deleteRequest12.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest12.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue33 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.timeout(timeValue33);
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = null;
        deleteRequest32.remoteAddress(transportAddress35);
        java.lang.String str37 = deleteRequest32.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions41 = deleteRequest40.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.refresh(false);
        org.elasticsearch.index.VersionType versionType47 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest43.versionType(versionType47);
        deleteRequest48.seqNo((long) (byte) -1);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException51 = deleteRequest48.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "", "delete {[][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue56 = deleteRequest55.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = deleteRequest55.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean62 = deleteRequest61.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest61.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue65 = deleteRequest64.timeout();
        long long66 = deleteRequest64.primaryTerm();
        deleteRequest64.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType70 = deleteRequest64.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest55.versionType(versionType70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest72.refresh(false);
        boolean boolean75 = deleteRequest72.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue80 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest79.timeout(timeValue80);
        org.elasticsearch.common.transport.TransportAddress transportAddress82 = null;
        deleteRequest79.remoteAddress(transportAddress82);
        java.lang.String str84 = deleteRequest79.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest79.parent("hi!");
        org.elasticsearch.index.VersionType versionType87 = deleteRequest79.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest72.versionType(versionType87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest71.versionType(versionType87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = deleteRequest48.versionType(versionType87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest39.versionType(versionType87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest28.versionType(versionType87);
        boolean boolean93 = deleteRequest92.refresh();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[null][null][null]}" + "'", str26, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(indicesOptions41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(actionRequestValidationException51);
        org.junit.Assert.assertNotNull(timeValue56);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(timeValue65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertNotNull(versionType70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(timeValue80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(versionType87);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest90);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test05592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05592");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.refresh(false);
        org.elasticsearch.index.VersionType versionType5 = deleteRequest2.versionType();
        java.lang.String str6 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.index("hi!");
        java.lang.String str9 = deleteRequest2.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions11 = deleteRequest10.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.refresh(false);
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest13.versionType(versionType17);
        deleteRequest18.seqNo((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.version(10L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest2.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest24.getParentTask();
        long long26 = deleteRequest24.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest24.version((long) (byte) 100);
        deleteRequest24.setParentTask("delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}", 100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest24.type("delete {[null][delete {[][][delete {[][null][null]}]}][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][][delete {[][null][null]}]}][hi!][null]}", deleteRequest24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest33);
    }

    @Test
    public void test05593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05593");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        long long9 = deleteRequest3.version();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.type("hi!");
        java.lang.String str13 = deleteRequest3.toString();
        java.lang.String str14 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.refresh(false);
        java.lang.String str17 = deleteRequest16.toString();
        org.elasticsearch.common.io.stream.StreamInput streamInput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest16.readFrom(streamInput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-3L) + "'", long9 == (-3L));
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][hi!][null]}" + "'", str13, "delete {[null][hi!][null]}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[null][hi!][null]}" + "'", str17, "delete {[null][hi!][null]}");
    }

    @Test
    public void test05594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05594");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        deleteRequest8.seqNo((long) (byte) -1);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest8.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.version((long) 'a');
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest13.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest16.setParentTask("hi!", 10L);
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest16.version((long) ' ');
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest16.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException27 = deleteRequest26.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue30 = deleteRequest29.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.routing("");
        java.lang.String str33 = deleteRequest29.routing();
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest29.getParentTask();
        deleteRequest16.setParentTask(taskId34);
        deleteRequest13.setParentTask(taskId34);
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest13.timeout();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(actionRequestValidationException27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(timeValue30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(timeValue37);
    }

    @Test
    public void test05595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05595");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        java.lang.String[] strArray6 = deleteRequest3.indices();
        java.lang.String str7 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.refresh(true);
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest3.createTask(100L, "delete {[null][null][null]}", "delete {[null][null][null]}", taskId17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setShardId(shardId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.parent("delete {[][][]}");
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest20.setShardId(shardId23);
        deleteRequest20.seqNo(0L);
        java.lang.String str27 = deleteRequest20.routing();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][null][null]}" + "'", str7, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "hi!" + "'", str27, "hi!");
    }

    @Test
    public void test05596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05596");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "", "delete {[][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean10 = deleteRequest9.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest12.timeout();
        long long14 = deleteRequest12.primaryTerm();
        deleteRequest12.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType18 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.versionType(versionType18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.setShardId(shardId20);
        long long22 = deleteRequest19.primaryTerm();
        java.lang.String str23 = deleteRequest19.parent();
        java.lang.String str24 = deleteRequest19.toString();
        java.lang.String str25 = deleteRequest19.parent();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[delete {[][][hi!]}][][delete {[][null][null]}]}" + "'", str24, "delete {[delete {[][][hi!]}][][delete {[][null][null]}]}");
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test05597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05597");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[null][null][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        long long10 = deleteRequest7.version();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest7.timeout();
        java.lang.String str12 = deleteRequest7.type();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-3L) + "'", long10 == (-3L));
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
    }

    @Test
    public void test05598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05598");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][null][null]}");
        java.lang.String str4 = deleteRequest3.index();
        org.elasticsearch.index.VersionType versionType5 = deleteRequest3.versionType();
        org.elasticsearch.tasks.TaskId taskId6 = null;
        deleteRequest3.setParentTask(taskId6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.parent("delete {[delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][null][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test05599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05599");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.timeout(timeValue8);
        java.lang.String str10 = deleteRequest9.type();
        boolean boolean11 = deleteRequest9.getShouldPersistResult();
        boolean boolean12 = deleteRequest9.refresh();
        deleteRequest9.setParentTask("delete {[hi!][null][null]}", (long) (-1));
        java.lang.String str16 = deleteRequest9.type();
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest9.timeout();
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(timeValue17);
    }

    @Test
    public void test05600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05600");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId16 = null;
        org.elasticsearch.tasks.Task task17 = deleteRequest12.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.refresh(true);
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest23.getParentTask();
        deleteRequest12.setParentTask(taskId26);
        deleteRequest3.setParentTask(taskId26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.routing("delete {[null][delete {[delete {[][null][null]}][null][null]}][null]}");
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(task17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test05601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05601");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest6.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest13.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("hi!");
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest27.getParentTask();
        org.elasticsearch.tasks.Task task29 = deleteRequest19.createTask((-3L), "delete {[delete {[null][null][null]}][][]}", "delete {[null][hi!][]}", taskId28);
        deleteRequest10.setParentTask(taskId28);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException31 = deleteRequest10.validate();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(task29);
        org.junit.Assert.assertNotNull(actionRequestValidationException31);
    }

    @Test
    public void test05602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05602");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        java.lang.Throwable throwable10 = shardFailure9.cause;
        java.lang.Throwable throwable11 = shardFailure9.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable11, "hi!");
        java.lang.String str14 = shardFailure13.indexUUID;
        java.lang.String str15 = shardFailure13.indexUUID;
        java.lang.String str16 = shardFailure13.indexUUID;
        java.lang.Throwable throwable17 = shardFailure13.cause;
        java.lang.Throwable throwable18 = shardFailure13.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[hi!][][delete {[null][null][]}]}", throwable18, "");
        java.lang.String str21 = shardFailure20.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test05603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05603");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "", "delete {[][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.type("delete {[delete {[null][delete {[][null][null]}][null]}][delete {[hi!][][delete {[][null][null]}]}][delete {[null][delete {[][null][null]}][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("delete {[hi!][delete {[delete {[null][null][null]}][null][null]}][null]}");
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test05604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05604");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.index("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest5.setParentTask("hi!", 10L);
        java.lang.String[] strArray9 = deleteRequest5.indices();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest5.validate();
        org.elasticsearch.index.VersionType versionType11 = deleteRequest5.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.versionType(versionType11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue20 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.timeout(timeValue20);
        java.lang.String str23 = deleteRequest22.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest22.remoteAddress(transportAddress24);
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = deleteRequest22.remoteAddress();
        long long27 = deleteRequest22.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest22.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest22.refresh(true);
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest22.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest0.timeout(timeValue31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.parent("delete {[hi!][null][delete {[null][null][delete {[null][null][null]}]}]}");
        java.lang.String str35 = deleteRequest34.id();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(transportAddress26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test05605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05605");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        deleteRequest3.primaryTerm((long) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        java.lang.String str9 = deleteRequest3.id();
        java.lang.String str10 = deleteRequest3.toString();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest3.timeout();
        java.lang.String str12 = deleteRequest3.routing();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.setShardId(shardId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        org.elasticsearch.index.VersionType versionType18 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.index.VersionType versionType25 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId30 = deleteRequest29.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.action.support.IndicesOptions indicesOptions33 = deleteRequest29.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException35 = deleteRequest34.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest37.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest37.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest41.setParentTask("hi!", 10L);
        java.lang.String[] strArray45 = deleteRequest41.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest46.setParentTask("hi!", 10L);
        java.lang.String[] strArray50 = deleteRequest46.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest46.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest41.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest40.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest29.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest26.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest14.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.index.shard.ShardId shardId57 = deleteRequest14.shardId();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(indicesOptions33);
        org.junit.Assert.assertNotNull(actionRequestValidationException35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNull(shardId57);
    }

    @Test
    public void test05606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05606");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        long long9 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest3.version((long) (byte) -1);
        org.elasticsearch.index.shard.ShardId shardId12 = deleteRequest3.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.parent("delete {[null][delete {[null][null][null]}][delete {[null][null][null]}]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest3.validate();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-3L) + "'", long9 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(shardId12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
    }

    @Test
    public void test05607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05607");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(false);
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.versionType(versionType14);
        deleteRequest15.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest15.getParentTask();
        deleteRequest6.setParentTask(taskId18);
        deleteRequest6.setParentTask("hi!", (long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest6.remoteAddress(transportAddress23);
        java.lang.String[] strArray25 = deleteRequest6.indices();
        long long26 = deleteRequest6.version();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-3L) + "'", long26 == (-3L));
    }

    @Test
    public void test05608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05608");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest5.setParentTask("hi!", 10L);
        java.lang.String[] strArray9 = deleteRequest5.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("hi!");
        deleteRequest15.seqNo((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "", "delete {[][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest21.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest15.timeout(timeValue22);
        deleteRequest23.seqNo((long) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest23.type("");
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test05609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05609");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(false);
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        deleteRequest0.setParentTask(taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.id("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest0.setShardId(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.setShardId(shardId19);
        deleteRequest18.primaryTerm(0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test05610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05610");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = null;
        deleteRequest1.remoteAddress(transportAddress2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        org.elasticsearch.index.VersionType versionType10 = deleteRequest7.versionType();
        java.lang.String str11 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest1.createTask((long) (byte) 100, "delete {[null][hi!][null]}", "delete {[][][]}", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue27 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.timeout(timeValue27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.timeout(timeValue27);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.setShardId(shardId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest38.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest42.setParentTask("hi!", 10L);
        java.lang.String[] strArray46 = deleteRequest42.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest47.setParentTask("hi!", 10L);
        java.lang.String[] strArray51 = deleteRequest47.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest47.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest42.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest41.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest41.setShardId(shardId55);
        org.elasticsearch.common.transport.TransportAddress transportAddress57 = null;
        deleteRequest41.remoteAddress(transportAddress57);
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task60 = deleteRequest29.createTask((long) 'a', "delete {[][][]}", "hi!", taskId59);
        org.elasticsearch.tasks.Task task61 = deleteRequest1.createTask((long) (-1), "delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}", "delete {[null][hi!][]}", taskId59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest1.refresh(false);
        deleteRequest63.primaryTerm((long) (-1));
        java.lang.String str66 = deleteRequest63.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest63.id("delete {[null][hi!][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress69 = null;
        deleteRequest63.remoteAddress(transportAddress69);
        long long71 = deleteRequest63.version();
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + (-3L) + "'", long71 == (-3L));
    }

    @Test
    public void test05611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05611");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.index("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.refresh(true);
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test05612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05612");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.refresh(false);
        org.elasticsearch.index.VersionType versionType5 = deleteRequest2.versionType();
        java.lang.String str6 = deleteRequest2.type();
        java.lang.String str7 = deleteRequest2.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest2.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.refresh(false);
        long long12 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.parent("");
        java.lang.String str17 = deleteRequest9.type();
        java.lang.String str18 = deleteRequest9.getDescription();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[][null][null]}][hi!][null]}][null][null]}", deleteRequest9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[null][null][null]}" + "'", str7, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[null][null][null]}" + "'", str18, "delete {[null][null][null]}");
    }

    @Test
    public void test05613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05613");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest5.setParentTask("hi!", 10L);
        java.lang.String[] strArray9 = deleteRequest5.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("hi!");
        deleteRequest15.seqNo((long) (short) 1);
        java.lang.String str18 = deleteRequest15.parent();
        java.lang.String str19 = deleteRequest15.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.parent("delete {[][][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest21.consistencyLevel();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!" + "'", str19, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test05614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05614");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        java.lang.String[] strArray6 = deleteRequest3.indices();
        deleteRequest3.setParentTask("delete {[][null][null]}", (long) (byte) -1);
        org.elasticsearch.index.shard.IndexShard indexShard10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult11 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest3, indexShard10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(strArray6);
    }

    @Test
    public void test05615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05615");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest16.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest20.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.refresh(false);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        deleteRequest16.setParentTask(taskId29);
        org.elasticsearch.tasks.Task task31 = deleteRequest12.createTask(0L, "delete {[][null][null]}", "", taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest12.parent("delete {[delete {[null][null][null]}][][]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions34 = deleteRequest12.indicesOptions();
        boolean boolean35 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest12.index("delete {[delete {[null][][null]}][delete {[null][null][]}][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = deleteRequest37.remoteAddress();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(indicesOptions34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(transportAddress38);
    }

    @Test
    public void test05616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05616");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId4 = null;
        deleteRequest0.setParentTask(taskId4);
        deleteRequest0.seqNo((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.index("delete {[null][null][]}");
        boolean boolean10 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.index("delete {[delete {[][null][null]}][hi!][null]}");
        java.lang.String str13 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest14.indicesOptions();
        java.lang.String str16 = deleteRequest14.id();
        long long17 = deleteRequest14.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.setShardId(shardId18);
        java.lang.String[] strArray20 = deleteRequest19.indices();
        deleteRequest19.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue27 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.timeout(timeValue27);
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest26.remoteAddress();
        boolean boolean30 = deleteRequest26.getShouldPersistResult();
        java.lang.String str31 = deleteRequest26.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.type("delete {[null][null][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue38 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.timeout(timeValue38);
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = null;
        deleteRequest37.remoteAddress(transportAddress40);
        java.lang.String str42 = deleteRequest37.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.index("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException48 = deleteRequest47.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest47.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue51 = deleteRequest50.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest50.routing("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel54 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest44.consistencyLevel(writeConsistencyLevel54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest26.consistencyLevel(writeConsistencyLevel54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest19.consistencyLevel(writeConsistencyLevel54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest0.consistencyLevel(writeConsistencyLevel54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.routing("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest58.routing("delete {[][null][delete {[null][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[delete {[][null][null]}][hi!][null]}][null][null]}" + "'", str13, "delete {[delete {[delete {[][null][null]}][hi!][null]}][null][null]}");
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "hi!" + "'", str31, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(actionRequestValidationException48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(timeValue51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel54 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel54.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
    }

    @Test
    public void test05617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05617");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest2.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest2.index("hi!");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][hi!]}][][delete {[][null][null]}]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}][null][delete {[][null][null]}]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
    }

    @Test
    public void test05618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05618");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(false);
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.versionType(versionType14);
        deleteRequest15.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest15.getParentTask();
        deleteRequest6.setParentTask(taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest6.routing("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.consistencyLevel(writeConsistencyLevel29);
        deleteRequest30.seqNo((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions39 = deleteRequest38.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.refresh(false);
        org.elasticsearch.index.VersionType versionType45 = deleteRequest42.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.versionType(versionType45);
        deleteRequest46.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest46.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest30.createTask((long) (byte) 10, "delete {[null][null][null]}", "delete {[][][hi!]}", taskId49);
        org.elasticsearch.tasks.Task task51 = deleteRequest21.createTask(0L, "delete {[][][hi!]}", "delete {[][][hi!]}", taskId49);
        org.elasticsearch.action.support.IndicesOptions indicesOptions52 = deleteRequest21.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest53.setParentTask("hi!", 10L);
        java.lang.String str57 = deleteRequest53.toString();
        long long58 = deleteRequest53.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue63 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.timeout(timeValue63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest53.timeout(timeValue63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest21.timeout(timeValue63);
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest66.setParentTask("", (long) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: 0 length nodeIds are reserved for EMPTY_TASK_ID and are otherwise invalid.");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(indicesOptions39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(versionType45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(indicesOptions52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "delete {[null][null][null]}" + "'", str57, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + (-3L) + "'", long58 == (-3L));
        org.junit.Assert.assertNotNull(timeValue63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest66);
    }

    @Test
    public void test05619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05619");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "delete {[delete {[delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[null][][null]}][null][null]}][null]}][null][null]}");
    }

    @Test
    public void test05620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05620");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][null][null]}");
        java.lang.String str4 = deleteRequest3.index();
        org.elasticsearch.index.VersionType versionType5 = deleteRequest3.versionType();
        org.elasticsearch.index.VersionType versionType6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.versionType(versionType6);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "hi!" + "'", str4, "hi!");
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test05621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05621");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.refresh(false);
        boolean boolean5 = deleteRequest2.getShouldPersistResult();
        java.lang.String[] strArray6 = deleteRequest2.indices();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest2.validate();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][][null]}", (java.lang.Throwable) actionRequestValidationException8, "delete {[null][null][delete {[][null][null]}]}");
        java.lang.String str11 = shardFailure10.indexUUID;
        java.lang.String str12 = shardFailure10.reason;
        java.lang.String str13 = shardFailure10.indexUUID;
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][delete {[][null][null]}]}" + "'", str11, "delete {[null][null][delete {[][null][null]}]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[null][][null]}" + "'", str12, "delete {[null][][null]}");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][delete {[][null][null]}]}" + "'", str13, "delete {[null][null][delete {[][null][null]}]}");
    }

    @Test
    public void test05622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05622");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][null][null]}][hi!][null]}", "delete {[][null][null]}", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.version(0L);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest3.validate();
        java.lang.String str7 = deleteRequest3.index();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[delete {[][null][null]}][hi!][null]}" + "'", str7, "delete {[delete {[][null][null]}][hi!][null]}");
    }

    @Test
    public void test05623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05623");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.routing("hi!");
        org.elasticsearch.index.shard.ShardId shardId8 = deleteRequest0.shardId();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(false);
        org.elasticsearch.index.VersionType versionType14 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.consistencyLevel(writeConsistencyLevel26);
        deleteRequest27.seqNo((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.refresh(true);
        java.lang.String[] strArray41 = deleteRequest38.indices();
        java.lang.String str42 = deleteRequest38.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.refresh(true);
        org.elasticsearch.tasks.TaskId taskId52 = deleteRequest49.getParentTask();
        org.elasticsearch.tasks.Task task53 = deleteRequest38.createTask(100L, "delete {[null][null][null]}", "delete {[null][null][null]}", taskId52);
        org.elasticsearch.tasks.Task task54 = deleteRequest27.createTask(100L, "", "delete {[null][null][null]}", taskId52);
        org.elasticsearch.tasks.Task task55 = deleteRequest19.createTask(10L, "", "delete {[null][null][hi!]}", taskId52);
        deleteRequest13.setParentTask(taskId52);
        org.elasticsearch.common.unit.TimeValue timeValue57 = deleteRequest13.timeout();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[][null][null]}" + "'", str42, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(taskId52);
        org.junit.Assert.assertNotNull(task53);
        org.junit.Assert.assertNotNull(task54);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(timeValue57);
    }

    @Test
    public void test05624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05624");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(false);
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        deleteRequest0.setParentTask(taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.id("delete {[null][null][null]}");
        java.lang.String str17 = deleteRequest16.parent();
        java.lang.Class<?> wildcardClass18 = deleteRequest16.getClass();
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test05625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05625");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.index("hi!");
        java.lang.String[] strArray10 = deleteRequest0.indices();
        java.lang.String str11 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest14.indicesOptions();
        java.lang.String str16 = deleteRequest14.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest17.setParentTask("hi!", 10L);
        java.lang.String[] strArray21 = deleteRequest17.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.setShardId(shardId24);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest23.consistencyLevel();
        long long27 = deleteRequest23.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.type("");
        org.elasticsearch.action.support.IndicesOptions indicesOptions30 = deleteRequest23.indicesOptions();
        java.lang.String str31 = deleteRequest23.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest23.id("delete {[][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest0.consistencyLevel(writeConsistencyLevel34);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(indicesOptions30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[null][][null]}" + "'", str31, "delete {[null][][null]}");
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test05626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05626");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest2.setParentTask("hi!", 10L);
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest2.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.version((long) ' ');
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest2.consistencyLevel();
        long long10 = deleteRequest2.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest2.type("hi!");
        java.lang.String str13 = deleteRequest12.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.id("delete {[delete {[null][null][null]}][null][null]}");
        java.lang.String str16 = deleteRequest12.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest12.id("delete {[delete {[null][null][null]}][delete {[delete {[null][null][null]}][null][null]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest12.parent("delete {[delete {[null][null][delete {[null][null][null]}]}][][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest20.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure23 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[null][null][delete {[null][null][null]}]}][delete {[hi!][delete {[null][hi!][null]}][]}]}", (java.lang.Throwable) actionRequestValidationException21, "delete {[delete {[null][null][null]}][][delete {[delete {[null][null][null]}][][]}]}");
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[null][hi!][delete {[delete {[null][null][null]}][null][null]}]}" + "'", str16, "delete {[null][hi!][delete {[delete {[null][null][null]}][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
    }

    @Test
    public void test05627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05627");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest2.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.consistencyLevel(writeConsistencyLevel4);
        deleteRequest2.setParentTask("delete {[null][null][null]}", (long) 10);
        deleteRequest2.setParentTask("delete {[][null][null]}", (long) (byte) 10);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertNotNull(deleteRequest5);
    }

    @Test
    public void test05628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05628");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest7.setParentTask("hi!", 10L);
        java.lang.String[] strArray11 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest12.setParentTask("hi!", 10L);
        java.lang.String[] strArray16 = deleteRequest12.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest7.consistencyLevel(writeConsistencyLevel17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest6.consistencyLevel(writeConsistencyLevel17);
        boolean boolean20 = deleteRequest19.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest21.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest28.setParentTask("hi!", 10L);
        java.lang.String[] strArray32 = deleteRequest28.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest33.setParentTask("hi!", 10L);
        java.lang.String[] strArray37 = deleteRequest33.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest28.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest27.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest19.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.support.IndicesOptions indicesOptions42 = deleteRequest19.indicesOptions();
        java.lang.String str43 = deleteRequest19.toString();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(indicesOptions42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "delete {[null][null][null]}" + "'", str43, "delete {[null][null][null]}");
    }

    @Test
    public void test05629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05629");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId7);
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest3.getParentTask();
        org.elasticsearch.tasks.TaskId taskId13 = null;
        org.elasticsearch.tasks.Task task14 = deleteRequest3.createTask(1L, "delete {[delete {[][null][null]}][hi!][null]}", "delete {[null][hi!][]}", taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.id("delete {[delete {[delete {[][null][null]}][hi!][null]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.setShardId(shardId17);
        org.elasticsearch.common.io.stream.StreamInput streamInput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest18.readFrom(streamInput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(task14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test05630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05630");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId4 = null;
        deleteRequest0.setParentTask(taskId4);
        long long6 = deleteRequest0.version();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
    }

    @Test
    public void test05631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05631");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}][delete {[hi!][][delete {[][null][null]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId12 = null;
        org.elasticsearch.tasks.Task task13 = deleteRequest8.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.id("hi!");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest8.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest8.version((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.refresh(true);
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest22.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions30 = deleteRequest29.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress33 = null;
        deleteRequest29.remoteAddress(transportAddress33);
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest29.getParentTask();
        org.elasticsearch.tasks.Task task36 = deleteRequest22.createTask((long) 1, "hi!", "delete {[delete {[][null][null]}][hi!][null]}", taskId35);
        deleteRequest8.setParentTask(taskId35);
        org.elasticsearch.tasks.Task task38 = deleteRequest1.createTask((long) 10, "delete {[null][null][delete {[hi!][delete {[delete {[null][null][null]}][null][null]}][delete {[delete {[null][null][null]}][null][null]}]}]}", "delete {[delete {[delete {[delete {[null][null][]}][hi!][null]}][null][null]}][null][null]}", taskId35);
        org.junit.Assert.assertNotNull(task13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(indicesOptions30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(task36);
        org.junit.Assert.assertNotNull(task38);
    }

    @Test
    public void test05632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05632");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String str4 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("delete {[hi!][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.refresh(true);
        deleteRequest8.primaryTerm((long) 100);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
    }

    @Test
    public void test05633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05633");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.tasks.TaskId taskId3 = deleteRequest2.getParentTask();
        boolean boolean4 = deleteRequest2.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest2.remoteAddress(transportAddress5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest12.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.consistencyLevel(writeConsistencyLevel14);
        java.lang.String str16 = deleteRequest15.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.index("");
        deleteRequest18.seqNo((long) '#');
        boolean boolean21 = deleteRequest18.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        deleteRequest26.seqNo(1L);
        java.lang.String str29 = deleteRequest26.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.version(1L);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest31.getParentTask();
        org.elasticsearch.tasks.Task task33 = deleteRequest18.createTask((long) (byte) 1, "delete {[null][null][delete {[][][hi!]}]}", "delete {[][][hi!]}", taskId32);
        org.elasticsearch.tasks.Task task34 = deleteRequest2.createTask(10L, "delete {[delete {[][null][null]}][][hi!]}", "delete {[delete {[null][null][null]}][null][null]}", taskId32);
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest2.timeout();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(taskId3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[delete {[null][null][null]}][null][null]}" + "'", str29, "delete {[delete {[null][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertNotNull(task33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(timeValue35);
    }

    @Test
    public void test05634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05634");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.timeout(timeValue6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest5.remoteAddress(transportAddress8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.id("delete {[][][hi!]}");
        deleteRequest5.primaryTerm((-3L));
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test05635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05635");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("hi!");
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest4.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.routing("");
        long long10 = deleteRequest9.primaryTerm();
        deleteRequest9.setParentTask("delete {[delete {[delete {[null][null][null]}][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][null][null]}]}][null][null]}", (long) 0);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test05636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05636");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][hi!]}][][delete {[][null][null]}]}");
        org.elasticsearch.common.unit.TimeValue timeValue2 = deleteRequest1.timeout();
        java.lang.String str3 = deleteRequest1.type();
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest1.indicesOptions();
        org.junit.Assert.assertNotNull(timeValue2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(indicesOptions4);
    }

    @Test
    public void test05637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05637");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.refresh(false);
        long long5 = deleteRequest2.seqNo();
        java.lang.String str6 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.parent("");
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest2.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest2.parent("delete {[][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest11.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][null][delete {[null][null][null]}]}", (java.lang.Throwable) actionRequestValidationException12, "delete {[][null][delete {[null][null][null]}]}");
        java.lang.String str15 = shardFailure14.reason;
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[null][null][null]}" + "'", str6, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][null][delete {[null][null][null]}]}" + "'", str15, "delete {[][null][delete {[null][null][null]}]}");
    }

    @Test
    public void test05638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05638");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest6.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.consistencyLevel(writeConsistencyLevel8);
        org.elasticsearch.index.VersionType versionType10 = deleteRequest6.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.versionType(versionType10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean16 = deleteRequest15.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        long long20 = deleteRequest18.primaryTerm();
        deleteRequest18.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType24 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest11.versionType(versionType24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest11.refresh(true);
        java.lang.String str28 = deleteRequest11.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue33 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.timeout(timeValue33);
        org.elasticsearch.common.transport.TransportAddress transportAddress35 = null;
        deleteRequest32.remoteAddress(transportAddress35);
        java.lang.String str37 = deleteRequest32.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.index("delete {[null][null][null]}");
        java.lang.String str42 = deleteRequest39.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest11.consistencyLevel(writeConsistencyLevel43);
        java.lang.String str45 = deleteRequest44.type();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "delete {[null][null][null]}" + "'", str28, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[delete {[null][null][null]}][][]}" + "'", str42, "delete {[delete {[null][null][null]}][][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test05639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05639");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest5.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue20 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.timeout(timeValue20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.timeout(timeValue20);
        java.lang.String str23 = deleteRequest22.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.refresh(false);
        deleteRequest28.setParentTask("hi!", (long) (byte) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException33 = deleteRequest32.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest35.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.routing("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest28.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest25.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest5.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest5.refresh(false);
        org.elasticsearch.index.shard.IndexShard indexShard45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete46 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest5, indexShard45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(actionRequestValidationException33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
    }

    @Test
    public void test05640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05640");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        deleteRequest1.setParentTask("hi!", (long) (short) -1);
        deleteRequest1.setParentTask("hi!", (long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest1.version((long) (short) 1);
        java.lang.String str12 = deleteRequest1.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest1.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.index("");
        java.lang.String str17 = deleteRequest16.id();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test05641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05641");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        boolean boolean8 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.routing("delete {[hi!][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.type("delete {[null][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.parent("delete {[][delete {[delete {[delete {[][null][null]}][hi!][null]}][null][null]}][]}");
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test05642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05642");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[delete {[null][null][null]}][null][null]}", "delete {[delete {[null][null][null]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.setShardId(shardId4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.parent("delete {[null][null][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test05643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05643");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("hi!");
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest4.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest4.id("delete {[][null][null]}");
        java.lang.String str10 = deleteRequest4.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest11.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest13.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest4.timeout(timeValue17);
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest4.timeout();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest4.getParentTask();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(taskId21);
    }

    @Test
    public void test05644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05644");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException3, "hi!");
        java.lang.Throwable throwable6 = shardFailure5.cause;
        java.lang.Throwable throwable7 = shardFailure5.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = shardFailure5.routing;
        java.lang.String str9 = shardFailure5.indexUUID;
        java.lang.Throwable throwable10 = shardFailure5.cause;
        java.lang.String str11 = shardFailure5.indexUUID;
        java.lang.Throwable throwable12 = shardFailure5.cause;
        java.lang.String str13 = shardFailure5.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = shardFailure5.routing;
        java.lang.String str15 = shardFailure5.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable6.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable7.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNull(shardRouting14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
    }

    @Test
    public void test05645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05645");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.type("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest0.remoteAddress(transportAddress8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean14 = deleteRequest13.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest17.setParentTask("hi!", 10L);
        java.lang.String[] strArray21 = deleteRequest17.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest0.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue29 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.timeout(timeValue29);
        org.elasticsearch.common.transport.TransportAddress transportAddress31 = null;
        deleteRequest28.remoteAddress(transportAddress31);
        java.lang.String str33 = deleteRequest28.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest28.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest28.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest28.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest0.timeout(timeValue38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue44 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.timeout(timeValue44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue52 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.timeout(timeValue52);
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = null;
        deleteRequest51.remoteAddress(transportAddress54);
        java.lang.String str56 = deleteRequest51.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest51.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest51.version((long) (byte) 1);
        org.elasticsearch.index.VersionType versionType61 = deleteRequest51.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest45.versionType(versionType61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest39.versionType(versionType61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId70 = deleteRequest69.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel71 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest69.consistencyLevel(writeConsistencyLevel71);
        deleteRequest69.setParentTask("delete {[null][null][null]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest69.type("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId78 = deleteRequest69.getParentTask();
        org.elasticsearch.tasks.Task task79 = deleteRequest39.createTask(0L, "", "delete {[null][hi!][null]}", taskId78);
        org.elasticsearch.common.io.stream.StreamInput streamInput80 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest39.readFrom(streamInput80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(versionType61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNull(shardId70);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(taskId78);
        org.junit.Assert.assertNotNull(task79);
    }

    @Test
    public void test05646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05646");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        java.lang.String[] strArray6 = deleteRequest3.indices();
        java.lang.String str7 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.refresh(true);
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest3.createTask(100L, "delete {[null][null][null]}", "delete {[null][null][null]}", taskId17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setShardId(shardId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.parent("delete {[][][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest24.setParentTask("hi!", 10L);
        java.lang.String[] strArray28 = deleteRequest24.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.type("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress32 = null;
        deleteRequest24.remoteAddress(transportAddress32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean38 = deleteRequest37.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest37.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest41.setParentTask("hi!", 10L);
        java.lang.String[] strArray45 = deleteRequest41.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel46 = deleteRequest41.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest40.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest24.consistencyLevel(writeConsistencyLevel46);
        org.elasticsearch.index.VersionType versionType49 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest20.versionType(versionType49);
        deleteRequest20.seqNo(0L);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][null][null]}" + "'", str7, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel46 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel46.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(versionType49);
        org.junit.Assert.assertNotNull(deleteRequest50);
    }

    @Test
    public void test05647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05647");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("hi!");
        org.elasticsearch.index.VersionType versionType11 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.refresh(true);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest13.writeTo(streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test05648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05648");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String str4 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.refresh(false);
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task12 = deleteRequest0.createTask((long) (-1), "", "hi!", taskId11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest0.setShardId(shardId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.version((long) (short) 10);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest0.consistencyLevel();
        java.lang.String str18 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest19.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.consistencyLevel(writeConsistencyLevel29);
        java.lang.String str31 = deleteRequest30.routing();
        org.elasticsearch.index.VersionType versionType32 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest22.versionType(versionType32);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest33.consistencyLevel();
        java.lang.String str35 = deleteRequest33.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.routing("delete {[][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = deleteRequest33.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean43 = deleteRequest42.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest42.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue46 = deleteRequest45.timeout();
        long long47 = deleteRequest45.primaryTerm();
        deleteRequest45.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType51 = deleteRequest45.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest33.versionType(versionType51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest0.versionType(versionType51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest0.index("delete {[hi!][null][delete {[null][hi!][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest0.type("delete {[][null][null]}");
        org.elasticsearch.index.VersionType versionType58 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest59.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException64 = deleteRequest63.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest63.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue67 = deleteRequest66.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest59.timeout(timeValue67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest69.refresh(false);
        org.elasticsearch.tasks.TaskId taskId72 = deleteRequest71.getParentTask();
        deleteRequest59.setParentTask(taskId72);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel74 = deleteRequest59.consistencyLevel();
        org.elasticsearch.common.unit.TimeValue timeValue75 = deleteRequest59.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest0.timeout(timeValue75);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(actionRequestValidationException20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(transportAddress38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(versionType51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(versionType58);
        org.junit.Assert.assertNotNull(actionRequestValidationException64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(timeValue67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(taskId72);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel74 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel74.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue75);
        org.junit.Assert.assertNotNull(deleteRequest76);
    }

    @Test
    public void test05649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05649");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean11 = deleteRequest10.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest17.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest21.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest17.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.refresh(false);
        org.elasticsearch.tasks.TaskId taskId30 = deleteRequest29.getParentTask();
        deleteRequest17.setParentTask(taskId30);
        org.elasticsearch.tasks.Task task32 = deleteRequest13.createTask((-1L), "delete {[][][hi!]}", "delete {[][][]}", taskId30);
        deleteRequest3.setParentTask(taskId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest3.parent("delete {[delete {[delete {[][null][null]}][hi!][null]}][delete {[hi!][delete {[null][hi!][null]}][]}][delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(taskId30);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test05650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05650");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("delete {[null][null][null]}");
        org.elasticsearch.index.VersionType versionType8 = deleteRequest5.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest5.consistencyLevel();
        boolean boolean10 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.version((long) '4');
        long long13 = deleteRequest5.version();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 52L + "'", long13 == 52L);
    }

    @Test
    public void test05651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05651");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest0.createTask((long) (short) 100, "", "", taskId7);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.parent("delete {[][delete {[null][null][]}][delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}]}");
        java.lang.String[] strArray12 = deleteRequest11.indices();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test05652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05652");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.timeout(timeValue6);
        java.lang.String str8 = deleteRequest0.parent();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest0.remoteAddress();
        deleteRequest0.setParentTask("delete {[delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][][hi!]}", (long) '4');
        boolean boolean13 = deleteRequest0.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.refresh(false);
        long long17 = deleteRequest14.seqNo();
        java.lang.String str18 = deleteRequest14.toString();
        java.lang.String str19 = deleteRequest14.routing();
        org.elasticsearch.index.VersionType versionType20 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest0.versionType(versionType20);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "delete {[null][null][null]}" + "'", str18, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test05653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05653");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.refresh(true);
        deleteRequest3.primaryTerm((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest16.setParentTask("hi!", 10L);
        org.elasticsearch.common.unit.TimeValue timeValue20 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest16.version((long) ' ');
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest16.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.routing("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest16.getParentTask();
        org.elasticsearch.tasks.Task task27 = deleteRequest12.createTask((long) 1, "delete {[null][null][hi!]}", "delete {[][null][null]}", taskId26);
        deleteRequest12.setParentTask("delete {[null][hi!][]}", 1L);
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest12.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest3.timeout(timeValue31);
        org.elasticsearch.index.shard.IndexShard indexShard33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult34 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest32, indexShard33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test05654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05654");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("");
        boolean boolean8 = deleteRequest7.refresh();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.setShardId(shardId9);
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest7.id("delete {[delete {[][][hi!]}][][delete {[][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.version((long) (byte) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.parent("delete {[delete {[null][][null]}][hi!][null]}");
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test05655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05655");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(false);
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.versionType(versionType14);
        deleteRequest15.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest15.getParentTask();
        deleteRequest6.setParentTask(taskId18);
        deleteRequest6.setParentTask("hi!", (long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest6.remoteAddress(transportAddress23);
        java.lang.String[] strArray25 = deleteRequest6.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest6.parent("delete {[delete {[null][null][null]}][][]}");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest6.type("delete {[hi!][][delete {[null][null][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest6.version(0L);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test05656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05656");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        java.lang.String[] strArray6 = deleteRequest5.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[][null][null]}");
        java.lang.String str9 = deleteRequest5.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(false);
        org.elasticsearch.index.VersionType versionType13 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.consistencyLevel(writeConsistencyLevel18);
        org.elasticsearch.index.VersionType versionType20 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest10.versionType(versionType20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest5.versionType(versionType20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.type("hi!");
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest27.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest27.id("delete {[][null][null]}");
        java.lang.String str33 = deleteRequest27.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException35 = deleteRequest34.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException37 = deleteRequest36.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest34.timeout(timeValue40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest27.timeout(timeValue40);
        java.lang.String[] strArray43 = deleteRequest27.indices();
        deleteRequest27.setParentTask("delete {[null][hi!][]}", 0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId50 = deleteRequest49.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest49.consistencyLevel(writeConsistencyLevel51);
        org.elasticsearch.index.VersionType versionType53 = deleteRequest49.versionType();
        org.elasticsearch.index.VersionType versionType54 = deleteRequest49.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest49.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.refresh(false);
        boolean boolean60 = deleteRequest57.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId61 = null;
        deleteRequest57.setParentTask(taskId61);
        java.lang.String str63 = deleteRequest57.parent();
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest57.setShardId(shardId64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue68 = deleteRequest65.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest56.timeout(timeValue68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest27.timeout(timeValue68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest22.timeout(timeValue68);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "hi!" + "'", str33, "hi!");
        org.junit.Assert.assertNotNull(actionRequestValidationException35);
        org.junit.Assert.assertNotNull(actionRequestValidationException37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(versionType53);
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
    }

    @Test
    public void test05657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05657");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[null][null][null]}][hi!]}", "delete {[][][hi!]}", "delete {[delete {[null][null][null]}][delete {[null][null][null]}][]}");
    }

    @Test
    public void test05658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05658");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(false);
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        deleteRequest0.setParentTask(taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.id("delete {[null][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest0.setShardId(shardId17);
        java.lang.String str19 = deleteRequest18.routing();
        deleteRequest18.setParentTask("delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}", (long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest18.routing("delete {[hi!][delete {[delete {[null][null][null]}][null][null]}][delete {[delete {[null][null][null]}][null][null]}]}");
        deleteRequest24.seqNo(0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest24);
    }

    @Test
    public void test05659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05659");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        deleteRequest8.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest8.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.refresh(true);
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest8.createTask((long) (short) 10, "", "hi!", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest23.setParentTask("hi!", 10L);
        java.lang.String[] strArray27 = deleteRequest23.indices();
        java.lang.String[] strArray28 = deleteRequest23.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress29 = deleteRequest23.remoteAddress();
        boolean boolean30 = deleteRequest23.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions32 = deleteRequest31.indicesOptions();
        java.lang.String str33 = deleteRequest31.id();
        long long34 = deleteRequest31.primaryTerm();
        java.lang.String str35 = deleteRequest31.routing();
        java.lang.String str36 = deleteRequest31.toString();
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest31.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest23.timeout(timeValue37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest8.timeout(timeValue37);
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = deleteRequest39.remoteAddress();
        org.elasticsearch.common.io.stream.StreamInput streamInput41 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest39.readFrom(streamInput41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNull(transportAddress29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(indicesOptions32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[null][null][null]}" + "'", str36, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(transportAddress40);
    }

    @Test
    public void test05660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05660");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest2.shardId();
        deleteRequest2.setParentTask("delete {[][null][null]}", 0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.version((-3L));
        java.lang.String str9 = deleteRequest8.type();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.setShardId(shardId10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest15.setParentTask("hi!", 10L);
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.version((long) ' ');
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest15.routing("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest15.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest15.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.refresh(false);
        org.elasticsearch.index.VersionType versionType34 = deleteRequest31.versionType();
        java.lang.String[] strArray35 = deleteRequest31.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest31.version((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest31.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException44 = deleteRequest43.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException46 = deleteRequest45.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest45.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue49 = deleteRequest48.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest43.timeout(timeValue49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest43.index("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress53 = null;
        deleteRequest43.remoteAddress(transportAddress53);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest43.setShardId(shardId55);
        org.elasticsearch.tasks.TaskId taskId57 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task58 = deleteRequest39.createTask((long) (byte) 0, "", "", taskId57);
        org.elasticsearch.tasks.Task task59 = deleteRequest27.createTask((long) (byte) 1, "delete {[delete {[][null][null]}][hi!][null]}", "delete {[null][null][delete {[][][hi!]}]}", taskId57);
        org.elasticsearch.tasks.Task task60 = deleteRequest11.createTask(52L, "delete {[null][delete {[null][hi!][null]}][hi!]}", "delete {[][delete {[null][null][]}][delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}]}", taskId57);
        org.elasticsearch.common.unit.TimeValue timeValue61 = deleteRequest11.timeout();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(actionRequestValidationException44);
        org.junit.Assert.assertNotNull(actionRequestValidationException46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(timeValue49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId57);
        org.junit.Assert.assertNotNull(task58);
        org.junit.Assert.assertNotNull(task59);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(timeValue61);
    }

    @Test
    public void test05661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05661");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("hi!");
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest4.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest4.id("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest4.routing("delete {[delete {[delete {[null][null][null]}][][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.refresh(false);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue20 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.timeout(timeValue20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest19.remoteAddress(transportAddress22);
        java.lang.String str24 = deleteRequest19.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.parent("hi!");
        org.elasticsearch.index.VersionType versionType27 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest12.versionType(versionType27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest32.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException37 = deleteRequest36.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest39.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest32.timeout(timeValue40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.refresh(false);
        org.elasticsearch.tasks.TaskId taskId45 = deleteRequest44.getParentTask();
        deleteRequest32.setParentTask(taskId45);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel47 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions49 = deleteRequest48.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.refresh(false);
        org.elasticsearch.index.VersionType versionType55 = deleteRequest52.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest51.versionType(versionType55);
        java.lang.String str57 = deleteRequest56.type();
        org.elasticsearch.index.VersionType versionType58 = deleteRequest56.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest32.versionType(versionType58);
        java.lang.String str60 = deleteRequest59.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest65.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.refresh(true);
        org.elasticsearch.tasks.TaskId taskId70 = deleteRequest67.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions75 = deleteRequest74.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest74.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress78 = null;
        deleteRequest74.remoteAddress(transportAddress78);
        org.elasticsearch.tasks.TaskId taskId80 = deleteRequest74.getParentTask();
        org.elasticsearch.tasks.Task task81 = deleteRequest67.createTask((long) 1, "hi!", "delete {[delete {[][null][null]}][hi!][null]}", taskId80);
        org.elasticsearch.tasks.Task task82 = deleteRequest59.createTask((long) (-1), "delete {[null][][null]}", "delete {[null][][null]}", taskId80);
        org.elasticsearch.tasks.Task task83 = deleteRequest28.createTask((long) (short) 1, "delete {[][null][null]}", "delete {[hi!][null][hi!]}", taskId80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest28.id("delete {[delete {[null][null][null]}][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue86 = deleteRequest28.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest11.timeout(timeValue86);
        java.lang.String str88 = deleteRequest87.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(actionRequestValidationException37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(taskId45);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel47 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel47.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(versionType58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(taskId70);
        org.junit.Assert.assertNotNull(indicesOptions75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(taskId80);
        org.junit.Assert.assertNotNull(task81);
        org.junit.Assert.assertNotNull(task82);
        org.junit.Assert.assertNotNull(task83);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(timeValue86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "delete {[null][hi!][delete {[][null][null]}]}" + "'", str88, "delete {[null][hi!][delete {[][null][null]}]}");
    }

    @Test
    public void test05662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05662");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "delete {[][delete {[null][null][delete {[null][null][null]}]}][delete {[hi!][delete {[null][hi!][null]}][]}]}");
    }

    @Test
    public void test05663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05663");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.routing("hi!");
        org.elasticsearch.index.shard.ShardId shardId8 = deleteRequest0.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest0.consistencyLevel();
        java.lang.String str10 = deleteRequest0.toString();
        deleteRequest0.primaryTerm((long) 1);
        java.lang.String str13 = deleteRequest0.type();
        long long14 = deleteRequest0.seqNo();
        deleteRequest0.primaryTerm((long) 100);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][null]}" + "'", str10, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test05664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05664");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest2.setParentTask("hi!", 10L);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure8 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException6, "delete {[][][hi!]}");
        java.lang.String str9 = shardFailure8.reason;
        java.lang.String str10 = shardFailure8.indexUUID;
        java.lang.String str11 = shardFailure8.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = shardFailure8.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][][hi!]}" + "'", str10, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][hi!]}" + "'", str11, "delete {[][][hi!]}");
        org.junit.Assert.assertNull(shardRouting12);
    }

    @Test
    public void test05665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05665");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = null;
        deleteRequest1.remoteAddress(transportAddress2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        org.elasticsearch.index.VersionType versionType10 = deleteRequest7.versionType();
        java.lang.String str11 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest1.createTask((long) (byte) 100, "delete {[null][hi!][null]}", "delete {[][][]}", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue27 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.timeout(timeValue27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.timeout(timeValue27);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.setShardId(shardId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest38.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest42.setParentTask("hi!", 10L);
        java.lang.String[] strArray46 = deleteRequest42.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest47.setParentTask("hi!", 10L);
        java.lang.String[] strArray51 = deleteRequest47.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest47.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest42.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest41.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest41.setShardId(shardId55);
        org.elasticsearch.common.transport.TransportAddress transportAddress57 = null;
        deleteRequest41.remoteAddress(transportAddress57);
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task60 = deleteRequest29.createTask((long) 'a', "delete {[][][]}", "hi!", taskId59);
        org.elasticsearch.tasks.Task task61 = deleteRequest1.createTask((long) (-1), "delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}", "delete {[null][hi!][]}", taskId59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest1.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.type("delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest63.parent("delete {[delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][null][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest67);
    }

    @Test
    public void test05666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05666");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[][][hi!]}][null]}", "delete {[delete {[delete {[null][null][]}][hi!][null]}][null][null]}", "delete {[delete {[][][delete {[][null][null]}]}][delete {[null][delete {[][][hi!]}][null]}][delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}]}");
    }

    @Test
    public void test05667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05667");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(false);
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        java.lang.String str15 = deleteRequest11.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest18.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.refresh(false);
        org.elasticsearch.index.VersionType versionType25 = deleteRequest22.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.versionType(versionType25);
        deleteRequest26.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest26.getParentTask();
        deleteRequest17.setParentTask(taskId29);
        deleteRequest17.setParentTask("hi!", (long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = null;
        deleteRequest17.remoteAddress(transportAddress34);
        java.lang.String[] strArray36 = deleteRequest17.indices();
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest3.timeout(timeValue37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.version((long) 0);
        long long41 = deleteRequest40.primaryTerm();
        java.lang.String str42 = deleteRequest40.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest40.parent("delete {[delete {[null][null][delete {[null][null][null]}]}][hi!][null]}");
        java.lang.String str45 = deleteRequest44.routing();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[null][null][null]}" + "'", str42, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test05668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05668");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException3, "hi!");
        java.lang.String str6 = shardFailure5.reason;
        java.lang.String str7 = shardFailure5.reason;
        java.lang.String str8 = shardFailure5.reason;
        java.lang.Throwable throwable9 = shardFailure5.cause;
        java.lang.Throwable throwable10 = shardFailure5.cause;
        java.lang.Throwable throwable11 = shardFailure5.cause;
        java.lang.Throwable throwable12 = shardFailure5.cause;
        java.lang.String str13 = shardFailure5.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
    }

    @Test
    public void test05669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05669");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean4 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        deleteRequest6.primaryTerm((long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest9.indicesOptions();
        java.lang.String str11 = deleteRequest9.id();
        long long12 = deleteRequest9.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.setShardId(shardId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.refresh(true);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest29.getParentTask();
        deleteRequest18.setParentTask(taskId32);
        deleteRequest14.setParentTask(taskId32);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest6.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.parent("delete {[][][delete {[][null][null]}]}");
        java.lang.String str39 = deleteRequest38.routing();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test05670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05670");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[null][null][hi!]}][hi!]}", "delete {[delete {[null][null][null]}][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][null][null]}]}", "delete {[delete {[delete {[][][]}][null][null]}][][delete {[null][null][delete {[][][hi!]}]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout("delete {[delete {[delete {[][null][null]}][hi!][null]}][null][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[delete {[][null][null]}][hi!][null]}][null][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05671");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[null][null][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        long long10 = deleteRequest7.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest13.shardId();
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest13.remoteAddress(transportAddress15);
        java.lang.String str17 = deleteRequest13.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = deleteRequest21.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId23 = deleteRequest21.shardId();
        org.elasticsearch.index.VersionType versionType24 = deleteRequest21.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest13.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest7.consistencyLevel(writeConsistencyLevel25);
        long long28 = deleteRequest7.version();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-3L) + "'", long10 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(indicesOptions22);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-3L) + "'", long28 == (-3L));
    }

    @Test
    public void test05672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05672");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        java.lang.Throwable throwable10 = shardFailure9.cause;
        java.lang.Throwable throwable11 = shardFailure9.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable11, "hi!");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting14 = shardFailure13.routing;
        java.lang.Throwable throwable15 = shardFailure13.cause;
        java.lang.String str16 = shardFailure13.indexUUID;
        java.lang.Throwable throwable17 = shardFailure13.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}][null][delete {[][null][null]}]}", throwable17, "delete {[][delete {[delete {[null][null][delete {[null][null][null]}]}][hi!][null]}][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05673");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest2.setParentTask("hi!", 10L);
        java.lang.String[] strArray6 = deleteRequest2.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest7.setParentTask("hi!", 10L);
        java.lang.String[] strArray11 = deleteRequest7.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest2.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest2.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.index("hi!");
        deleteRequest17.seqNo((long) (short) 1);
        java.lang.String str20 = deleteRequest17.parent();
        java.lang.String str21 = deleteRequest17.id();
        java.lang.String str22 = deleteRequest17.routing();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest17.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure25 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][delete {[][][delete {[][][hi!]}]}][null]}", (java.lang.Throwable) actionRequestValidationException23, "delete {[null][hi!][delete {[][null][null]}]}");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
    }

    @Test
    public void test05674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05674");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest6.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest6.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.id("delete {[delete {[delete {[][null][null]}][hi!][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.consistencyLevel(writeConsistencyLevel19);
        deleteRequest17.setParentTask("delete {[null][null][null]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest17.type("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest17.getParentTask();
        deleteRequest14.setParentTask(taskId26);
        org.elasticsearch.action.support.IndicesOptions indicesOptions28 = deleteRequest14.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(indicesOptions28);
    }

    @Test
    public void test05675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05675");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        java.lang.String str2 = deleteRequest0.id();
        long long3 = deleteRequest0.primaryTerm();
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest9.setParentTask("hi!", 10L);
        java.lang.String[] strArray13 = deleteRequest9.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.type("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest9.remoteAddress(transportAddress17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean23 = deleteRequest22.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest26.setParentTask("hi!", 10L);
        java.lang.String[] strArray30 = deleteRequest26.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest9.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue38 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.timeout(timeValue38);
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = null;
        deleteRequest37.remoteAddress(transportAddress40);
        java.lang.String str42 = deleteRequest37.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest37.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest37.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest9.timeout(timeValue47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest6.timeout(timeValue47);
        java.lang.String str50 = deleteRequest6.getDescription();
        java.lang.String str51 = deleteRequest6.toString();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "delete {[null][null][hi!]}" + "'", str50, "delete {[null][null][hi!]}");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "delete {[null][null][hi!]}" + "'", str51, "delete {[null][null][hi!]}");
    }

    @Test
    public void test05676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05676");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        java.lang.String str5 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        long long10 = deleteRequest7.primaryTerm();
        java.lang.String str11 = deleteRequest7.toString();
        java.lang.String str12 = deleteRequest7.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue17 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.timeout(timeValue17);
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest16.remoteAddress(transportAddress19);
        java.lang.String str21 = deleteRequest16.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.parent("hi!");
        org.elasticsearch.index.VersionType versionType24 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest7.versionType(versionType24);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException26 = deleteRequest25.validate();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(actionRequestValidationException26);
    }

    @Test
    public void test05677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05677");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions3 = deleteRequest2.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.timeout(timeValue14);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest8.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest8.index("delete {[null][hi!][]}");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest7.timeout(timeValue19);
        boolean boolean21 = deleteRequest20.refresh();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][null][null]}][hi!][null]}", deleteRequest20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test05678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05678");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        java.lang.String str5 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.index("");
        java.lang.String str8 = deleteRequest7.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.refresh(false);
        org.elasticsearch.index.VersionType versionType12 = deleteRequest9.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.consistencyLevel(writeConsistencyLevel17);
        org.elasticsearch.index.VersionType versionType19 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest9.versionType(versionType19);
        boolean boolean21 = deleteRequest20.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.refresh(true);
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest25.getParentTask();
        deleteRequest20.setParentTask(taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.consistencyLevel(writeConsistencyLevel33);
        deleteRequest34.seqNo((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest34.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.refresh(true);
        java.lang.String[] strArray48 = deleteRequest45.indices();
        java.lang.String str49 = deleteRequest45.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest56.refresh(true);
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest56.getParentTask();
        org.elasticsearch.tasks.Task task60 = deleteRequest45.createTask(100L, "delete {[null][null][null]}", "delete {[null][null][null]}", taskId59);
        org.elasticsearch.tasks.Task task61 = deleteRequest34.createTask(100L, "", "delete {[null][null][null]}", taskId59);
        deleteRequest20.setParentTask(taskId59);
        deleteRequest7.setParentTask(taskId59);
        boolean boolean64 = deleteRequest7.getShouldPersistResult();
        java.lang.String str65 = deleteRequest7.routing();
        deleteRequest7.seqNo((long) 1);
        org.elasticsearch.index.VersionType versionType68 = deleteRequest7.versionType();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "delete {[][null][null]}" + "'", str49, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(versionType68);
    }

    @Test
    public void test05679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05679");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        deleteRequest8.seqNo((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.version(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.refresh(true);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest8.setShardId(shardId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest20.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest22.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.timeout(timeValue26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest20.index("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest20.remoteAddress(transportAddress30);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest20.setShardId(shardId32);
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task35 = deleteRequest16.createTask((long) (byte) 1, "delete {[delete {[delete {[delete {[null][null][]}][hi!][null]}][null][null]}][null][null]}", "delete {[hi!][null][delete {[null][null][hi!]}]}", taskId34);
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(task35);
    }

    @Test
    public void test05680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05680");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.index("delete {[delete {[][][hi!]}][][delete {[][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[delete {[][][hi!]}][][delete {[][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.type("delete {[null][null][hi!]}");
        boolean boolean8 = deleteRequest7.refresh();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test05681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05681");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest0.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest0.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest7.setParentTask("hi!", 10L);
        java.lang.String str11 = deleteRequest7.toString();
        long long12 = deleteRequest7.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue17 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest7.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest0.timeout(timeValue17);
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        java.lang.String str22 = deleteRequest20.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest23.indicesOptions();
        java.lang.String str25 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest26.setParentTask("hi!", 10L);
        java.lang.String[] strArray30 = deleteRequest26.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest23.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.setShardId(shardId33);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest32.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest32.getParentTask();
        deleteRequest20.setParentTask(taskId36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException39 = deleteRequest38.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId47 = deleteRequest46.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest46.consistencyLevel(writeConsistencyLevel48);
        java.lang.String str50 = deleteRequest49.routing();
        org.elasticsearch.index.VersionType versionType51 = deleteRequest49.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest41.versionType(versionType51);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = deleteRequest52.consistencyLevel();
        java.lang.String str54 = deleteRequest52.id();
        deleteRequest52.seqNo((long) 0);
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest52.setShardId(shardId57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue63 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.timeout(timeValue63);
        org.elasticsearch.common.transport.TransportAddress transportAddress65 = null;
        deleteRequest62.remoteAddress(transportAddress65);
        java.lang.String str67 = deleteRequest62.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest62.id("");
        long long70 = deleteRequest62.seqNo();
        org.elasticsearch.common.unit.TimeValue timeValue71 = deleteRequest62.timeout();
        boolean boolean72 = deleteRequest62.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue77 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest76.timeout(timeValue77);
        org.elasticsearch.common.transport.TransportAddress transportAddress79 = null;
        deleteRequest76.remoteAddress(transportAddress79);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest81.setParentTask("hi!", 10L);
        java.lang.String str85 = deleteRequest81.toString();
        long long86 = deleteRequest81.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest90 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue91 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest90.timeout(timeValue91);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest93 = deleteRequest81.timeout(timeValue91);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest94 = deleteRequest76.timeout(timeValue91);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest95 = deleteRequest62.timeout(timeValue91);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest58.timeout(timeValue91);
        boolean boolean97 = deleteRequest58.refresh();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel98 = deleteRequest58.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest99 = deleteRequest20.consistencyLevel(writeConsistencyLevel98);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-3L) + "'", long12 == (-3L));
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[null][null][null]}" + "'", str22, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(actionRequestValidationException39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(versionType51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel53 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel53.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(timeValue63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertNotNull(timeValue71);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(timeValue77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "delete {[null][null][null]}" + "'", str85, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + (-3L) + "'", long86 == (-3L));
        org.junit.Assert.assertNotNull(timeValue91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(deleteRequest93);
        org.junit.Assert.assertNotNull(deleteRequest94);
        org.junit.Assert.assertNotNull(deleteRequest95);
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel98 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel98.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest99);
    }

    @Test
    public void test05682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05682");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "delete {[][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        long long5 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.parent("delete {[hi!][null][hi!]}");
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(taskId8);
    }

    @Test
    public void test05683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05683");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId5 = deleteRequest4.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.consistencyLevel(writeConsistencyLevel6);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[][][delete {[][null][null]}]}", deleteRequest7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test05684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05684");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest7.setParentTask("hi!", 10L);
        java.lang.String[] strArray11 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest12.setParentTask("hi!", 10L);
        java.lang.String[] strArray16 = deleteRequest12.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest7.consistencyLevel(writeConsistencyLevel17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest6.consistencyLevel(writeConsistencyLevel17);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest6.setShardId(shardId20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest6.remoteAddress(transportAddress22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest6.type("delete {[null][delete {[null][hi!][null]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.version((long) 1);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
    }

    @Test
    public void test05685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05685");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[null][null][null]}");
        java.lang.String str13 = deleteRequest12.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest15.indicesOptions();
        long long18 = deleteRequest15.seqNo();
        boolean boolean19 = deleteRequest15.refresh();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.setShardId(shardId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest15.routing("delete {[delete {[][][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest15.routing("delete {[delete {[null][null][null]}][null][null]}");
        deleteRequest15.seqNo((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.index("delete {[hi!][null][delete {[null][hi!][null]}]}");
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test05686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05686");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        java.lang.String str5 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        long long10 = deleteRequest7.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.version((long) (short) 0);
        java.lang.String str13 = deleteRequest7.routing();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
    }

    @Test
    public void test05687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05687");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        long long3 = deleteRequest0.seqNo();
        java.lang.String str4 = deleteRequest0.toString();
        java.lang.String str5 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][]}][null][null]}", "delete {[null][delete {[][null][null]}][null]}", "delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.version((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        org.elasticsearch.index.VersionType versionType18 = deleteRequest15.versionType();
        java.lang.String str19 = deleteRequest15.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = deleteRequest22.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.refresh(false);
        org.elasticsearch.index.VersionType versionType29 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.versionType(versionType29);
        deleteRequest30.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest30.getParentTask();
        deleteRequest21.setParentTask(taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest21.routing("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.consistencyLevel(writeConsistencyLevel44);
        deleteRequest45.seqNo((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest45.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions54 = deleteRequest53.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest53.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.refresh(false);
        org.elasticsearch.index.VersionType versionType60 = deleteRequest57.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest56.versionType(versionType60);
        deleteRequest61.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId64 = deleteRequest61.getParentTask();
        org.elasticsearch.tasks.Task task65 = deleteRequest45.createTask((long) (byte) 10, "delete {[null][null][null]}", "delete {[][][hi!]}", taskId64);
        org.elasticsearch.tasks.Task task66 = deleteRequest36.createTask(0L, "delete {[][][hi!]}", "delete {[][][hi!]}", taskId64);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId74 = deleteRequest73.getParentTask();
        org.elasticsearch.tasks.Task task75 = deleteRequest36.createTask(100L, "delete {[delete {[delete {[null][null][null]}][][]}][null][null]}", "delete {[delete {[][null][null]}][null][null]}", taskId74);
        org.elasticsearch.tasks.Task task76 = deleteRequest9.createTask(0L, "delete {[null][delete {[][][hi!]}][null]}", "delete {[][null][delete {[null][null][null]}]}", taskId74);
        deleteRequest0.setParentTask(taskId74);
        java.lang.String str78 = deleteRequest0.getDescription();
        boolean boolean79 = deleteRequest0.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(indicesOptions54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(versionType60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(taskId64);
        org.junit.Assert.assertNotNull(task65);
        org.junit.Assert.assertNotNull(task66);
        org.junit.Assert.assertNotNull(taskId74);
        org.junit.Assert.assertNotNull(task75);
        org.junit.Assert.assertNotNull(task76);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "delete {[null][null][null]}" + "'", str78, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test05688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05688");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("");
        boolean boolean8 = deleteRequest7.refresh();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.parent("delete {[delete {[null][null][null]}][][]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest7.writeTo(streamOutput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test05689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05689");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("");
        boolean boolean8 = deleteRequest7.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest11.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest13.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.timeout(timeValue17);
        org.elasticsearch.index.VersionType versionType19 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest7.versionType(versionType19);
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest20.timeout();
        java.lang.String str22 = deleteRequest20.id();
        long long23 = deleteRequest20.version();
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest20.remoteAddress(transportAddress24);
        org.elasticsearch.action.support.IndicesOptions indicesOptions26 = deleteRequest20.indicesOptions();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "hi!" + "'", str22, "hi!");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + (-3L) + "'", long23 == (-3L));
        org.junit.Assert.assertNotNull(indicesOptions26);
    }

    @Test
    public void test05690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05690");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("delete {[null][null][null]}");
        java.lang.String str8 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.routing("delete {[delete {[][null][null]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("delete {[delete {[null][null][null]}][null][null]}");
        java.lang.String str13 = deleteRequest12.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.refresh(false);
        org.elasticsearch.index.VersionType versionType20 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.index.VersionType versionType27 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest17.versionType(versionType27);
        boolean boolean29 = deleteRequest28.getShouldPersistResult();
        java.lang.String str30 = deleteRequest28.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest28.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest28.consistencyLevel();
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task36 = deleteRequest12.createTask(0L, "delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}", "delete {[hi!][delete {[delete {[null][null][null]}][null][null]}][null]}", taskId35);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[null][null][null]}][null][null]}" + "'", str13, "delete {[delete {[null][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertNotNull(task36);
    }

    @Test
    public void test05691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05691");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[delete {[null][null][null]}][delete {[delete {[null][null][null]}][null][null]}][null]}][null]}");
    }

    @Test
    public void test05692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05692");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        long long3 = deleteRequest0.seqNo();
        java.lang.String str4 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest0.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.parent("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest9.id("delete {[null][delete {[null][hi!][null]}][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest13.validate();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
    }

    @Test
    public void test05693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05693");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("delete {[null][null][null]}");
        boolean boolean8 = deleteRequest5.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest9.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.refresh(false);
        org.elasticsearch.index.VersionType versionType16 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.versionType(versionType16);
        long long18 = deleteRequest12.version();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest12.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest5.consistencyLevel(writeConsistencyLevel20);
        java.lang.Class<?> wildcardClass22 = writeConsistencyLevel20.getClass();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + (-3L) + "'", long18 == (-3L));
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test05694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05694");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId5 = deleteRequest3.shardId();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest9.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest13.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest9.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest19.setParentTask("hi!", 10L);
        java.lang.String[] strArray23 = deleteRequest19.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.type("hi!");
        org.elasticsearch.index.VersionType versionType27 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest9.versionType(versionType27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.versionType(versionType27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.version(97L);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test05695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05695");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.refresh(true);
        java.lang.String str4 = deleteRequest3.type();
        java.lang.String str5 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.id("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.version((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest14.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest14.id("delete {[null][null][null]}");
        long long20 = deleteRequest14.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(false);
        org.elasticsearch.index.VersionType versionType24 = deleteRequest21.versionType();
        java.lang.String str25 = deleteRequest21.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest21.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest14.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest11.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.timeout(timeValue28);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest3.getParentTask();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-3L) + "'", long20 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
    }

    @Test
    public void test05696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05696");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        deleteRequest3.primaryTerm((long) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        java.lang.String str9 = deleteRequest3.id();
        java.lang.String str10 = deleteRequest3.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.index("delete {[delete {[][null][null]}][hi!][null]}");
        long long14 = deleteRequest13.version();
        java.lang.String str15 = deleteRequest13.parent();
        java.lang.String str16 = deleteRequest13.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[delete {[delete {[][null][null]}][hi!][null]}][null][null]}" + "'", str16, "delete {[delete {[delete {[][null][null]}][hi!][null]}][null][null]}");
    }

    @Test
    public void test05697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05697");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(false);
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.versionType(versionType14);
        deleteRequest15.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest15.getParentTask();
        deleteRequest6.setParentTask(taskId18);
        deleteRequest6.setParentTask("hi!", (long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest6.remoteAddress(transportAddress23);
        java.lang.String[] strArray25 = deleteRequest6.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest6.parent("delete {[delete {[null][null][null]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest6.parent("delete {[delete {[delete {[null][null][null]}][][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest6.id("delete {[delete {[null][][null]}][null][null]}");
        java.lang.String str32 = deleteRequest6.type();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test05698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05698");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest2.setParentTask("hi!", 10L);
        java.lang.String[] strArray6 = deleteRequest2.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest2.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest2.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest2.type("delete {[null][null][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions13 = deleteRequest12.indicesOptions();
        java.lang.String str14 = deleteRequest12.id();
        long long15 = deleteRequest12.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.setShardId(shardId16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId25 = null;
        org.elasticsearch.tasks.Task task26 = deleteRequest21.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.refresh(true);
        org.elasticsearch.tasks.TaskId taskId35 = deleteRequest32.getParentTask();
        deleteRequest21.setParentTask(taskId35);
        deleteRequest17.setParentTask(taskId35);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest11.consistencyLevel(writeConsistencyLevel38);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[null][null][delete {[][null][null]}]}", deleteRequest11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(indicesOptions13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(task26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(taskId35);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
    }

    @Test
    public void test05699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05699");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.index("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest0.remoteAddress(transportAddress10);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.setShardId(shardId12);
        org.elasticsearch.tasks.TaskId taskId14 = deleteRequest13.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.parent("delete {[delete {[null][null][null]}][delete {[null][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.refresh(false);
        boolean boolean26 = deleteRequest25.getShouldPersistResult();
        org.elasticsearch.index.VersionType versionType27 = deleteRequest25.versionType();
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest16.timeout(timeValue28);
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest16.shardId();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(taskId14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(shardId31);
    }

    @Test
    public void test05700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05700");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(false);
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.versionType(versionType14);
        deleteRequest15.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest15.getParentTask();
        deleteRequest6.setParentTask(taskId18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest6.routing("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.consistencyLevel(writeConsistencyLevel29);
        deleteRequest30.seqNo((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions39 = deleteRequest38.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.refresh(false);
        org.elasticsearch.index.VersionType versionType45 = deleteRequest42.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest41.versionType(versionType45);
        deleteRequest46.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest46.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest30.createTask((long) (byte) 10, "delete {[null][null][null]}", "delete {[][][hi!]}", taskId49);
        org.elasticsearch.tasks.Task task51 = deleteRequest21.createTask(0L, "delete {[][][hi!]}", "delete {[][][hi!]}", taskId49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest58.getParentTask();
        org.elasticsearch.tasks.Task task60 = deleteRequest21.createTask(100L, "delete {[delete {[delete {[null][null][null]}][][]}][null][null]}", "delete {[delete {[][null][null]}][null][null]}", taskId59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest21.version(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.index("");
        deleteRequest64.primaryTerm((long) (short) 0);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(indicesOptions39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(versionType45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
    }

    @Test
    public void test05701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05701");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(false);
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.versionType(versionType14);
        deleteRequest15.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest15.getParentTask();
        deleteRequest6.setParentTask(taskId18);
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest6.remoteAddress(transportAddress20);
        long long22 = deleteRequest6.version();
        deleteRequest6.primaryTerm((long) 0);
        deleteRequest6.seqNo((long) (short) 1);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest6.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-3L) + "'", long22 == (-3L));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test05702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05702");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        java.lang.Throwable throwable8 = shardFailure7.cause;
        java.lang.Throwable throwable9 = shardFailure7.cause;
        java.lang.Throwable throwable10 = shardFailure7.cause;
        java.lang.Throwable throwable11 = shardFailure7.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][][null]}", throwable11, "delete {[hi!][null][hi!]}");
        java.lang.String str14 = shardFailure13.indexUUID;
        java.lang.Throwable throwable15 = shardFailure13.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[hi!][null][hi!]}" + "'", str14, "delete {[hi!][null][hi!]}");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable15.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05703");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[null][null][]}][null]}");
    }

    @Test
    public void test05704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05704");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[null][null][null]}");
        org.elasticsearch.tasks.TaskId taskId4 = null;
        deleteRequest3.setParentTask(taskId4);
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.junit.Assert.assertNotNull(versionType6);
    }

    @Test
    public void test05705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05705");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions3 = deleteRequest2.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.parent("");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest5.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException7, "delete {[null][null][hi!]}");
        java.lang.String str10 = shardFailure9.indexUUID;
        java.lang.String str11 = shardFailure9.reason;
        java.lang.Throwable throwable12 = shardFailure9.cause;
        java.lang.String str13 = shardFailure9.indexUUID;
        org.junit.Assert.assertNotNull(indicesOptions3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][hi!]}" + "'", str10, "delete {[null][null][hi!]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][hi!]}" + "'", str13, "delete {[null][null][hi!]}");
    }

    @Test
    public void test05706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05706");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException3, "hi!");
        java.lang.String str6 = shardFailure5.reason;
        java.lang.String str7 = shardFailure5.reason;
        java.lang.String str8 = shardFailure5.reason;
        java.lang.String str9 = shardFailure5.reason;
        java.lang.Throwable throwable10 = shardFailure5.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = shardFailure5.routing;
        java.lang.Throwable throwable12 = shardFailure5.cause;
        java.lang.Throwable throwable13 = shardFailure5.cause;
        java.lang.Throwable throwable14 = shardFailure5.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting11);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05707");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        java.lang.String str2 = deleteRequest0.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest3.setParentTask("hi!", 10L);
        java.lang.String[] strArray7 = deleteRequest3.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.consistencyLevel(writeConsistencyLevel8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.setShardId(shardId10);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest9.consistencyLevel();
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest9.remoteAddress(transportAddress13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean19 = deleteRequest18.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest21.timeout();
        long long23 = deleteRequest21.primaryTerm();
        deleteRequest21.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType27 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest9.versionType(versionType27);
        deleteRequest9.setParentTask("delete {[][hi!][delete {[null][null][null]}]}", (long) (short) 10);
        org.elasticsearch.action.support.IndicesOptions indicesOptions32 = deleteRequest9.indicesOptions();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(indicesOptions32);
    }

    @Test
    public void test05708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05708");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.refresh(false);
        org.elasticsearch.index.VersionType versionType5 = deleteRequest2.versionType();
        java.lang.String str6 = deleteRequest2.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest9.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.refresh(false);
        org.elasticsearch.index.VersionType versionType16 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest12.versionType(versionType16);
        deleteRequest17.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest17.getParentTask();
        deleteRequest8.setParentTask(taskId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest8.routing("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest23.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.consistencyLevel(writeConsistencyLevel31);
        deleteRequest32.seqNo((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest32.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions41 = deleteRequest40.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.refresh(false);
        org.elasticsearch.index.VersionType versionType47 = deleteRequest44.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest43.versionType(versionType47);
        deleteRequest48.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId51 = deleteRequest48.getParentTask();
        org.elasticsearch.tasks.Task task52 = deleteRequest32.createTask((long) (byte) 10, "delete {[null][null][null]}", "delete {[][][hi!]}", taskId51);
        org.elasticsearch.tasks.Task task53 = deleteRequest23.createTask(0L, "delete {[][][hi!]}", "delete {[][][hi!]}", taskId51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId61 = deleteRequest60.getParentTask();
        org.elasticsearch.tasks.Task task62 = deleteRequest23.createTask(100L, "delete {[delete {[delete {[null][null][null]}][][]}][null][null]}", "delete {[delete {[][null][null]}][null][null]}", taskId61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest23.version(10L);
        java.lang.String str65 = deleteRequest64.type();
        java.lang.String str66 = deleteRequest64.getDescription();
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest64.setShardId(shardId67);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException69 = deleteRequest68.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure71 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[][][]}][null][null]}][null][null]}", (java.lang.Throwable) actionRequestValidationException69, "delete {[delete {[null][null][null]}][delete {[null][null][null]}][]}");
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(versionType5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(indicesOptions41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(taskId51);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNotNull(task53);
        org.junit.Assert.assertNotNull(taskId61);
        org.junit.Assert.assertNotNull(task62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "delete {[hi!][null][null]}" + "'", str66, "delete {[hi!][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(actionRequestValidationException69);
    }

    @Test
    public void test05709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05709");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.type("delete {[delete {[][null][null]}][hi!][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.routing("delete {[][null][null]}");
        boolean boolean10 = deleteRequest6.refresh();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test05710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05710");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean4 = deleteRequest3.refresh();
        deleteRequest3.seqNo((long) '#');
        deleteRequest3.primaryTerm((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest9.indicesOptions();
        org.elasticsearch.index.VersionType versionType11 = deleteRequest9.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.versionType(versionType11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.parent("delete {[delete {[][null][null]}][null][null]}");
        deleteRequest12.primaryTerm(100L);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test05711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05711");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(false);
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        deleteRequest0.setParentTask(taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.id("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest0.type("delete {[null][null][null]}");
        boolean boolean20 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest24.setParentTask("hi!", 10L);
        java.lang.String[] strArray28 = deleteRequest24.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest29.setParentTask("hi!", 10L);
        java.lang.String[] strArray33 = deleteRequest29.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest29.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest24.consistencyLevel(writeConsistencyLevel34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest24.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.index("hi!");
        deleteRequest39.seqNo((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "", "delete {[][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue46 = deleteRequest45.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest39.timeout(timeValue46);
        long long48 = deleteRequest47.version();
        org.elasticsearch.action.support.IndicesOptions indicesOptions49 = deleteRequest47.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.refresh(false);
        boolean boolean53 = deleteRequest50.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId54 = null;
        deleteRequest50.setParentTask(taskId54);
        java.lang.String str56 = deleteRequest50.parent();
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest50.setShardId(shardId57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest59.setParentTask("hi!", 10L);
        java.lang.String str63 = deleteRequest59.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest67.refresh(false);
        org.elasticsearch.tasks.TaskId taskId70 = deleteRequest69.getParentTask();
        org.elasticsearch.tasks.Task task71 = deleteRequest59.createTask((long) (-1), "", "hi!", taskId70);
        org.elasticsearch.tasks.TaskId taskId72 = deleteRequest59.getParentTask();
        deleteRequest58.setParentTask(taskId72);
        deleteRequest47.setParentTask(taskId72);
        org.elasticsearch.tasks.Task task75 = deleteRequest0.createTask((long) 100, "delete {[null][][null]}", "delete {[delete {[null][][null]}][delete {[null][null][]}][hi!]}", taskId72);
        java.lang.String str76 = deleteRequest0.routing();
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-3L) + "'", long48 == (-3L));
        org.junit.Assert.assertNotNull(indicesOptions49);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "delete {[null][null][null]}" + "'", str63, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(taskId70);
        org.junit.Assert.assertNotNull(task71);
        org.junit.Assert.assertNotNull(taskId72);
        org.junit.Assert.assertNotNull(task75);
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test05712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05712");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest6.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.consistencyLevel(writeConsistencyLevel8);
        org.elasticsearch.index.VersionType versionType10 = deleteRequest6.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.versionType(versionType10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean16 = deleteRequest15.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        long long20 = deleteRequest18.primaryTerm();
        deleteRequest18.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType24 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest11.versionType(versionType24);
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest11.remoteAddress(transportAddress26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean32 = deleteRequest31.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        long long36 = deleteRequest34.primaryTerm();
        deleteRequest34.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType40 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest11.versionType(versionType40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException43 = deleteRequest42.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException45 = deleteRequest44.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest44.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest47.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest42.timeout(timeValue48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest42.index("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress52 = null;
        deleteRequest42.remoteAddress(transportAddress52);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest42.setShardId(shardId54);
        org.elasticsearch.tasks.TaskId taskId56 = deleteRequest55.getParentTask();
        deleteRequest41.setParentTask(taskId56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "", "delete {[][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue62 = deleteRequest61.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel63 = deleteRequest61.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest41.consistencyLevel(writeConsistencyLevel63);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest41.setShardId(shardId65);
        org.elasticsearch.common.transport.TransportAddress transportAddress67 = null;
        deleteRequest66.remoteAddress(transportAddress67);
        org.elasticsearch.common.unit.TimeValue timeValue69 = deleteRequest66.timeout();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(versionType40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(actionRequestValidationException43);
        org.junit.Assert.assertNotNull(actionRequestValidationException45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(taskId56);
        org.junit.Assert.assertNotNull(timeValue62);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel63 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel63.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(timeValue69);
    }

    @Test
    public void test05713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05713");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        java.lang.Throwable throwable8 = shardFailure7.cause;
        java.lang.Throwable throwable9 = shardFailure7.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure7.routing;
        java.lang.String str11 = shardFailure7.indexUUID;
        java.lang.Throwable throwable12 = shardFailure7.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][null][null]}", throwable12, "delete {[][][]}");
        java.lang.String str15 = shardFailure14.reason;
        java.lang.String str16 = shardFailure14.reason;
        java.lang.String str17 = shardFailure14.reason;
        java.lang.Throwable throwable18 = shardFailure14.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][null][null]}" + "'", str15, "delete {[][null][null]}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][null][null]}" + "'", str16, "delete {[][null][null]}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][null][null]}" + "'", str17, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05714");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        java.lang.Throwable throwable10 = shardFailure9.cause;
        java.lang.Throwable throwable11 = shardFailure9.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable11, "hi!");
        java.lang.String str14 = shardFailure13.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = shardFailure13.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = shardFailure13.routing;
        java.lang.Throwable throwable17 = shardFailure13.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][delete {[null][null][]}][delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}]}", throwable17, "delete {[delete {[][][]}][null][null]}");
        java.lang.String str20 = shardFailure19.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNull(shardRouting15);
        org.junit.Assert.assertNull(shardRouting16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[][delete {[null][null][]}][delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}]}" + "'", str20, "delete {[][delete {[null][null][]}][delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}]}");
    }

    @Test
    public void test05715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05715");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.setShardId(shardId6);
        boolean boolean8 = deleteRequest3.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.routing("delete {[hi!][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.type("delete {[null][][null]}");
        java.lang.String str13 = deleteRequest12.toString();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][delete {[null][][null]}][hi!]}" + "'", str13, "delete {[][delete {[null][][null]}][hi!]}");
    }

    @Test
    public void test05716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05716");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("");
        boolean boolean8 = deleteRequest7.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest11.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest13.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.timeout(timeValue17);
        org.elasticsearch.index.VersionType versionType19 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest7.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue28 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.timeout(timeValue28);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.setShardId(shardId31);
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest30.getParentTask();
        deleteRequest7.setParentTask(taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}");
        deleteRequest36.seqNo(1L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest36.id("delete {[null][][null]}");
        long long41 = deleteRequest36.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest36.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.version((long) (byte) -1);
        deleteRequest45.seqNo(0L);
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest45.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest7.timeout(timeValue48);
        long long50 = deleteRequest7.seqNo();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 1L + "'", long41 == 1L);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
    }

    @Test
    public void test05717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05717");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[null][null][null]}");
        java.lang.String str13 = deleteRequest12.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.refresh(false);
        org.elasticsearch.index.VersionType versionType20 = deleteRequest17.versionType();
        java.lang.String str21 = deleteRequest17.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest17.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.tasks.TaskId taskId25 = deleteRequest23.getParentTask();
        deleteRequest15.setParentTask(taskId25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest15.index("delete {[delete {[null][null][]}][null][null]}");
        java.lang.String str29 = deleteRequest15.id();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest15.validate();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(taskId25);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "" + "'", str29, "");
        org.junit.Assert.assertNull(actionRequestValidationException30);
    }

    @Test
    public void test05718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05718");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        java.lang.String[] strArray6 = deleteRequest3.indices();
        java.lang.String str7 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.refresh(true);
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest3.createTask(100L, "delete {[null][null][null]}", "delete {[null][null][null]}", taskId17);
        java.lang.String str19 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.refresh(false);
        org.elasticsearch.index.VersionType versionType23 = deleteRequest20.versionType();
        java.lang.String str24 = deleteRequest20.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest20.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.timeout(timeValue27);
        org.elasticsearch.action.support.IndicesOptions indicesOptions29 = deleteRequest28.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.consistencyLevel(writeConsistencyLevel41);
        deleteRequest42.seqNo((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest42.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.refresh(true);
        java.lang.String[] strArray56 = deleteRequest53.indices();
        java.lang.String str57 = deleteRequest53.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest64.refresh(true);
        org.elasticsearch.tasks.TaskId taskId67 = deleteRequest64.getParentTask();
        org.elasticsearch.tasks.Task task68 = deleteRequest53.createTask(100L, "delete {[null][null][null]}", "delete {[null][null][null]}", taskId67);
        org.elasticsearch.tasks.Task task69 = deleteRequest42.createTask(100L, "", "delete {[null][null][null]}", taskId67);
        org.elasticsearch.tasks.Task task70 = deleteRequest34.createTask(10L, "", "delete {[null][null][hi!]}", taskId67);
        deleteRequest28.setParentTask(taskId67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest28.index("delete {[delete {[null][][null]}][][delete {[null][null][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest73.routing("delete {[hi!][delete {[delete {[null][null][null]}][null][null]}][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][null][null]}" + "'", str7, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(indicesOptions29);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "delete {[][null][null]}" + "'", str57, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(taskId67);
        org.junit.Assert.assertNotNull(task68);
        org.junit.Assert.assertNotNull(task69);
        org.junit.Assert.assertNotNull(task70);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest75);
    }

    @Test
    public void test05719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05719");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "delete {[delete {[hi!][null][null]}][delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}][delete {[hi!][][delete {[][null][null]}]}]}");
    }

    @Test
    public void test05720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05720");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.index("delete {[][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest2.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.id("delete {[null][null][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("");
        org.elasticsearch.index.VersionType versionType16 = deleteRequest13.versionType();
        deleteRequest13.primaryTerm((long) (byte) -1);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest2.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.refresh(true);
        java.lang.String[] strArray29 = deleteRequest26.indices();
        java.lang.String str30 = deleteRequest26.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.refresh(true);
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest37.getParentTask();
        org.elasticsearch.tasks.Task task41 = deleteRequest26.createTask(100L, "delete {[null][null][null]}", "delete {[null][null][null]}", taskId40);
        java.lang.String str42 = deleteRequest26.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.refresh(false);
        org.elasticsearch.index.VersionType versionType46 = deleteRequest43.versionType();
        java.lang.String str47 = deleteRequest43.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest43.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue50 = deleteRequest49.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest26.timeout(timeValue50);
        org.elasticsearch.action.support.IndicesOptions indicesOptions52 = deleteRequest51.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel64 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.consistencyLevel(writeConsistencyLevel64);
        deleteRequest65.seqNo((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest65.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest74.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest76.refresh(true);
        java.lang.String[] strArray79 = deleteRequest76.indices();
        java.lang.String str80 = deleteRequest76.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest85.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.refresh(true);
        org.elasticsearch.tasks.TaskId taskId90 = deleteRequest87.getParentTask();
        org.elasticsearch.tasks.Task task91 = deleteRequest76.createTask(100L, "delete {[null][null][null]}", "delete {[null][null][null]}", taskId90);
        org.elasticsearch.tasks.Task task92 = deleteRequest65.createTask(100L, "", "delete {[null][null][null]}", taskId90);
        org.elasticsearch.tasks.Task task93 = deleteRequest57.createTask(10L, "", "delete {[null][null][hi!]}", taskId90);
        deleteRequest51.setParentTask(taskId90);
        deleteRequest20.setParentTask(taskId90);
        java.lang.Class<?> wildcardClass96 = taskId90.getClass();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(versionType16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[][null][null]}" + "'", str30, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(versionType46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(indicesOptions52);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "delete {[][null][null]}" + "'", str80, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(taskId90);
        org.junit.Assert.assertNotNull(task91);
        org.junit.Assert.assertNotNull(task92);
        org.junit.Assert.assertNotNull(task93);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test05721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05721");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[][][delete {[][null][null]}]}", "delete {[null][delete {[delete {[][null][null]}][hi!][null]}][null]}");
        java.lang.String str4 = deleteRequest3.parent();
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test05722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05722");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest0.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest0.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest7.setParentTask("hi!", 10L);
        java.lang.String str11 = deleteRequest7.toString();
        long long12 = deleteRequest7.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue17 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest7.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest0.timeout(timeValue17);
        deleteRequest0.setParentTask("delete {[delete {[null][null][null]}][delete {[delete {[null][null][null]}][null][null]}][null]}", (long) (byte) 100);
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest0.getParentTask();
        java.lang.String[] strArray25 = deleteRequest0.indices();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-3L) + "'", long12 == (-3L));
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(strArray25);
    }

    @Test
    public void test05723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05723");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest0.remoteAddress(transportAddress4);
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest0.getParentTask();
        deleteRequest0.primaryTerm((long) (byte) 1);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel9 = deleteRequest0.consistencyLevel();
        boolean boolean10 = deleteRequest0.getShouldPersistResult();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel9 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel9.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test05724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05724");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String str4 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.refresh(false);
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task12 = deleteRequest0.createTask((long) (-1), "", "hi!", taskId11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest0.setShardId(shardId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.version((long) (short) 10);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest0.consistencyLevel();
        java.lang.String str18 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest19.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId28 = deleteRequest27.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.consistencyLevel(writeConsistencyLevel29);
        java.lang.String str31 = deleteRequest30.routing();
        org.elasticsearch.index.VersionType versionType32 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest22.versionType(versionType32);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest33.consistencyLevel();
        java.lang.String str35 = deleteRequest33.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest33.routing("delete {[][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = deleteRequest33.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean43 = deleteRequest42.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest42.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue46 = deleteRequest45.timeout();
        long long47 = deleteRequest45.primaryTerm();
        deleteRequest45.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType51 = deleteRequest45.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest33.versionType(versionType51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest0.versionType(versionType51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest0.index("delete {[hi!][null][delete {[null][hi!][null]}]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions56 = deleteRequest55.indicesOptions();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(actionRequestValidationException20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(transportAddress38);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(timeValue46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(versionType51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(indicesOptions56);
    }

    @Test
    public void test05725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05725");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][hi!][null]}", "delete {[delete {[null][][null]}][null][null]}", "delete {[delete {[][null][null]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue11 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.timeout(timeValue11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest6.timeout(timeValue11);
        java.lang.String str14 = deleteRequest13.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest17.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest17.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.action.support.IndicesOptions indicesOptions21 = deleteRequest17.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest22.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest25.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest29.setParentTask("hi!", 10L);
        java.lang.String[] strArray33 = deleteRequest29.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest34.setParentTask("hi!", 10L);
        java.lang.String[] strArray38 = deleteRequest34.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel39 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest29.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest28.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest17.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest13.consistencyLevel(writeConsistencyLevel39);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest44.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest44.routing("");
        boolean boolean49 = deleteRequest48.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.parent("delete {[delete {[][null][null]}][hi!][null]}");
        java.lang.String str52 = deleteRequest48.type();
        org.elasticsearch.index.VersionType versionType53 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest13.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest3.versionType(versionType53);
        java.lang.String str56 = deleteRequest3.parent();
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(indicesOptions21);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel39 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel39.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(versionType53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test05726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05726");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        java.lang.String str2 = deleteRequest0.id();
        long long3 = deleteRequest0.primaryTerm();
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest9.setParentTask("hi!", 10L);
        java.lang.String[] strArray13 = deleteRequest9.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.type("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress17 = null;
        deleteRequest9.remoteAddress(transportAddress17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean23 = deleteRequest22.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest26.setParentTask("hi!", 10L);
        java.lang.String[] strArray30 = deleteRequest26.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = deleteRequest26.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest9.consistencyLevel(writeConsistencyLevel31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue38 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.timeout(timeValue38);
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = null;
        deleteRequest37.remoteAddress(transportAddress40);
        java.lang.String str42 = deleteRequest37.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest37.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest37.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue47 = deleteRequest37.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest9.timeout(timeValue47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest6.timeout(timeValue47);
        long long50 = deleteRequest6.primaryTerm();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest6.parent("delete {[delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][null][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}]}");
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel31 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel31.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel51 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel51.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
    }

    @Test
    public void test05727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05727");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException3, "hi!");
        java.lang.String str6 = shardFailure5.reason;
        java.lang.String str7 = shardFailure5.indexUUID;
        java.lang.String str8 = shardFailure5.reason;
        java.lang.Throwable throwable9 = shardFailure5.cause;
        java.lang.Throwable throwable10 = shardFailure5.cause;
        java.lang.String str11 = shardFailure5.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = shardFailure5.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "" + "'", str8, "");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertNull(shardRouting12);
    }

    @Test
    public void test05728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05728");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.refresh(true);
        java.lang.String str4 = deleteRequest1.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions6 = deleteRequest5.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.refresh(false);
        org.elasticsearch.index.VersionType versionType12 = deleteRequest9.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.versionType(versionType12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.type("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest15.remoteAddress(transportAddress18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest20.setParentTask("hi!", 10L);
        java.lang.String[] strArray24 = deleteRequest20.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest20.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest1.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean32 = deleteRequest31.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.type("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest34.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest27.consistencyLevel(writeConsistencyLevel35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.parent("delete {[null][hi!][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions39 = deleteRequest36.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(indicesOptions6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(indicesOptions39);
    }

    @Test
    public void test05729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05729");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        java.lang.Throwable throwable8 = shardFailure7.cause;
        java.lang.Throwable throwable9 = shardFailure7.cause;
        java.lang.Throwable throwable10 = shardFailure7.cause;
        java.lang.Throwable throwable11 = shardFailure7.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][null]}][][]}", throwable11, "delete {[null][null][delete {[null][null][null]}]}");
        java.lang.String str14 = shardFailure13.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = shardFailure13.routing;
        java.lang.String str16 = shardFailure13.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[delete {[null][null][null]}][][]}" + "'", str14, "delete {[delete {[null][null][null]}][][]}");
        org.junit.Assert.assertNull(shardRouting15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[delete {[null][null][null]}][][]}" + "'", str16, "delete {[delete {[null][null][null]}][][]}");
    }

    @Test
    public void test05730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05730");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.routing("");
        java.lang.String str7 = deleteRequest3.routing();
        org.elasticsearch.tasks.TaskId taskId8 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.index("delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest12.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest19.setParentTask("hi!", 10L);
        java.lang.String[] strArray23 = deleteRequest19.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest24.setParentTask("hi!", 10L);
        java.lang.String[] strArray28 = deleteRequest24.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest19.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest18.consistencyLevel(writeConsistencyLevel29);
        boolean boolean32 = deleteRequest31.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest36.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest40.setParentTask("hi!", 10L);
        java.lang.String[] strArray44 = deleteRequest40.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest45.setParentTask("hi!", 10L);
        java.lang.String[] strArray49 = deleteRequest45.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel50 = deleteRequest45.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest40.consistencyLevel(writeConsistencyLevel50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest39.consistencyLevel(writeConsistencyLevel50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest31.consistencyLevel(writeConsistencyLevel50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException55 = deleteRequest54.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException57 = deleteRequest56.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest56.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue60 = deleteRequest59.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest54.timeout(timeValue60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest54.index("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress64 = null;
        deleteRequest54.remoteAddress(transportAddress64);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest54.setShardId(shardId66);
        org.elasticsearch.tasks.TaskId taskId68 = deleteRequest54.getParentTask();
        deleteRequest31.setParentTask(taskId68);
        deleteRequest10.setParentTask(taskId68);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(taskId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel50 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel50.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(actionRequestValidationException55);
        org.junit.Assert.assertNotNull(actionRequestValidationException57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(taskId68);
    }

    @Test
    public void test05731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05731");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        java.lang.String str4 = deleteRequest3.toString();
        java.lang.String str5 = deleteRequest3.routing();
        java.lang.String str6 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest7.setParentTask("hi!", 10L);
        java.lang.String[] strArray11 = deleteRequest7.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest7.remoteAddress(transportAddress12);
        deleteRequest7.primaryTerm((long) '4');
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.timeout(timeValue16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("delete {[null][hi!][null]}");
        java.lang.String str20 = deleteRequest19.routing();
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest19.getParentTask();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[null][hi!][null]}" + "'", str20, "delete {[null][hi!][null]}");
        org.junit.Assert.assertNotNull(taskId21);
    }

    @Test
    public void test05732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05732");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.getDescription();
        org.elasticsearch.index.shard.ShardId shardId2 = deleteRequest0.shardId();
        boolean boolean3 = deleteRequest0.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest4.setParentTask("hi!", 10L);
        java.lang.String[] strArray8 = deleteRequest4.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest9.setParentTask("hi!", 10L);
        java.lang.String[] strArray13 = deleteRequest9.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest4.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest4.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.refresh(true);
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest17.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest21.setParentTask("hi!", 10L);
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest21.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest21.version((long) ' ');
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest17.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest0.consistencyLevel(writeConsistencyLevel28);
        deleteRequest0.setParentTask("delete {[delete {[null][null][null]}][delete {[null][null][null]}][]}", (-3L));
        org.elasticsearch.index.shard.IndexShard indexShard34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete35 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest0, indexShard34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardId2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test05733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05733");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.refresh(true);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest5.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest5.type();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test05734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05734");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("delete {[null][null][null]}");
        java.lang.String str8 = deleteRequest5.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.routing("delete {[delete {[][null][null]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("delete {[delete {[null][null][null]}][null][null]}");
        java.lang.String str13 = deleteRequest12.type();
        java.lang.String str14 = deleteRequest12.type();
        java.lang.String[] strArray15 = deleteRequest12.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = deleteRequest22.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest22.shardId();
        org.elasticsearch.index.VersionType versionType25 = deleteRequest22.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.id("");
        java.lang.String str28 = deleteRequest27.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.id("delete {[delete {[null][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.id("delete {[delete {[null][null][null]}][null][null]}");
        org.elasticsearch.index.VersionType versionType33 = deleteRequest30.versionType();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest30.setShardId(shardId34);
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest30.getParentTask();
        org.elasticsearch.tasks.Task task37 = deleteRequest12.createTask((long) (short) -1, "delete {[][delete {[hi!][delete {[delete {[null][null][null]}][null][null]}][delete {[delete {[null][null][null]}][null][null]}]}][]}", "delete {[delete {[delete {[][null][null]}][hi!][null]}][null][null]}", taskId36);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[null][null][null]}][null][null]}" + "'", str13, "delete {[delete {[null][null][null]}][null][null]}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[delete {[null][null][null]}][null][null]}" + "'", str14, "delete {[delete {[null][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "" + "'", str28, "");
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(task37);
    }

    @Test
    public void test05735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05735");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.getDescription();
        org.elasticsearch.index.shard.ShardId shardId2 = deleteRequest0.shardId();
        boolean boolean3 = deleteRequest0.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest4.setParentTask("hi!", 10L);
        java.lang.String[] strArray8 = deleteRequest4.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest9.setParentTask("hi!", 10L);
        java.lang.String[] strArray13 = deleteRequest9.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel14 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest4.consistencyLevel(writeConsistencyLevel14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest4.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.refresh(true);
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest17.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest21.setParentTask("hi!", 10L);
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest21.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest21.version((long) ' ');
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest21.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest17.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest0.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions32 = deleteRequest31.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.refresh(false);
        org.elasticsearch.index.VersionType versionType38 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest34.versionType(versionType38);
        deleteRequest39.seqNo((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest39.version(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest44.setParentTask("hi!", 10L);
        java.lang.String[] strArray48 = deleteRequest44.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest49.setParentTask("hi!", 10L);
        java.lang.String[] strArray53 = deleteRequest49.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel54 = deleteRequest49.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest44.consistencyLevel(writeConsistencyLevel54);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel56 = deleteRequest44.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions58 = deleteRequest57.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest57.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.refresh(false);
        org.elasticsearch.index.VersionType versionType64 = deleteRequest61.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest60.versionType(versionType64);
        deleteRequest65.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId68 = deleteRequest65.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest73.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest75.refresh(true);
        org.elasticsearch.tasks.TaskId taskId78 = deleteRequest75.getParentTask();
        org.elasticsearch.tasks.Task task79 = deleteRequest65.createTask((long) (short) 10, "", "hi!", taskId78);
        deleteRequest44.setParentTask(taskId78);
        deleteRequest43.setParentTask(taskId78);
        deleteRequest0.setParentTask(taskId78);
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardId2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel14 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel14.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(indicesOptions32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel54 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel54.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel56 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel56.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(versionType64);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(taskId68);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(taskId78);
        org.junit.Assert.assertNotNull(task79);
    }

    @Test
    public void test05736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05736");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        long long3 = deleteRequest0.seqNo();
        java.lang.String str4 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.version((long) (short) 0);
        boolean boolean11 = deleteRequest10.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("hi!");
        deleteRequest13.setParentTask("hi!", (long) (short) -1);
        deleteRequest13.setParentTask("hi!", (long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest13.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions27 = deleteRequest26.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.refresh(false);
        org.elasticsearch.index.VersionType versionType33 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest29.versionType(versionType33);
        java.lang.String str35 = deleteRequest34.type();
        org.elasticsearch.index.VersionType versionType36 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest25.versionType(versionType36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest10.versionType(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(indicesOptions27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
    }

    @Test
    public void test05737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05737");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[null][null][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("");
        java.lang.String str8 = deleteRequest5.id();
        boolean boolean9 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.parent("delete {[null][delete {[null][hi!][null]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][]}" + "'", str8, "delete {[null][null][]}");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(deleteRequest11);
    }

    @Test
    public void test05738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05738");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        java.lang.String str2 = deleteRequest0.id();
        long long3 = deleteRequest0.primaryTerm();
        java.lang.String str4 = deleteRequest0.routing();
        java.lang.String str5 = deleteRequest0.toString();
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest0.timeout();
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest0.timeout();
        java.lang.String[] strArray8 = deleteRequest0.indices();
        java.lang.String str9 = deleteRequest0.index();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest0.consistencyLevel();
        deleteRequest0.setParentTask("delete {[delete {[][][delete {[][null][null]}]}][hi!][null]}", (long) ' ');
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test05739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05739");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(false);
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        deleteRequest0.setParentTask(taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.id("delete {[null][null][null]}");
        boolean boolean17 = deleteRequest16.getShouldPersistResult();
        deleteRequest16.seqNo((long) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.id("delete {[null][delete {[][null][null]}][null]}");
        org.elasticsearch.index.VersionType versionType22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.versionType(versionType22);
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test05740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05740");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest0.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest0.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest7.setParentTask("hi!", 10L);
        java.lang.String str11 = deleteRequest7.toString();
        long long12 = deleteRequest7.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue17 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest7.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest0.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.refresh(false);
        org.elasticsearch.index.VersionType versionType27 = deleteRequest24.versionType();
        java.lang.String str28 = deleteRequest24.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest24.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions32 = deleteRequest31.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.refresh(false);
        org.elasticsearch.index.VersionType versionType38 = deleteRequest35.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest34.versionType(versionType38);
        deleteRequest39.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest39.getParentTask();
        deleteRequest30.setParentTask(taskId42);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest30.routing("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId46 = deleteRequest45.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.refresh(false);
        org.elasticsearch.index.VersionType versionType50 = deleteRequest47.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId54 = deleteRequest53.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest53.consistencyLevel(writeConsistencyLevel55);
        org.elasticsearch.index.VersionType versionType57 = deleteRequest53.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest47.versionType(versionType57);
        boolean boolean59 = deleteRequest58.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.refresh(true);
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest63.getParentTask();
        deleteRequest58.setParentTask(taskId66);
        deleteRequest45.setParentTask(taskId66);
        org.elasticsearch.tasks.Task task69 = deleteRequest20.createTask((long) (short) 10, "delete {[null][][null]}", "hi!", taskId66);
        org.elasticsearch.action.support.IndicesOptions indicesOptions70 = deleteRequest20.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress71 = null;
        deleteRequest20.remoteAddress(transportAddress71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest20.id("delete {[delete {[][null][null]}][hi!][null]}");
        boolean boolean75 = deleteRequest74.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest74.version((long) (short) 100);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-3L) + "'", long12 == (-3L));
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(indicesOptions32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNull(shardId46);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(versionType50);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNull(shardId54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(versionType57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(task69);
        org.junit.Assert.assertNotNull(indicesOptions70);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNotNull(deleteRequest77);
    }

    @Test
    public void test05741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05741");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId4 = null;
        deleteRequest0.setParentTask(taskId4);
        java.lang.String str6 = deleteRequest0.parent();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions13 = deleteRequest12.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest12.remoteAddress(transportAddress16);
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest12.getParentTask();
        deleteRequest12.primaryTerm((long) (byte) 1);
        org.elasticsearch.index.VersionType versionType21 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest8.versionType(versionType21);
        long long23 = deleteRequest8.primaryTerm();
        java.lang.String str24 = deleteRequest8.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.refresh(false);
        org.elasticsearch.index.VersionType versionType28 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId32 = deleteRequest31.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.index.VersionType versionType35 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest25.versionType(versionType35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean41 = deleteRequest40.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest40.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue44 = deleteRequest43.timeout();
        long long45 = deleteRequest43.primaryTerm();
        deleteRequest43.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType49 = deleteRequest43.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest36.versionType(versionType49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest36.refresh(true);
        java.lang.String str53 = deleteRequest36.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue58 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.timeout(timeValue58);
        org.elasticsearch.common.transport.TransportAddress transportAddress60 = null;
        deleteRequest57.remoteAddress(transportAddress60);
        java.lang.String str62 = deleteRequest57.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest57.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest64.index("delete {[null][null][null]}");
        java.lang.String str67 = deleteRequest64.toString();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel68 = deleteRequest64.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest36.consistencyLevel(writeConsistencyLevel68);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest8.consistencyLevel(writeConsistencyLevel68);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(indicesOptions13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(timeValue44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNotNull(versionType49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "delete {[null][null][null]}" + "'", str53, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(timeValue58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "delete {[delete {[null][null][null]}][][]}" + "'", str67, "delete {[delete {[null][null][null]}][][]}");
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel68 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel68.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
    }

    @Test
    public void test05742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05742");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("hi!");
        java.lang.String str11 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest12.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean22 = deleteRequest21.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest17.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.parent("delete {[null][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.version((long) 1);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][hi!]}" + "'", str11, "delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
    }

    @Test
    public void test05743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05743");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId2 = deleteRequest0.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest8.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.index.VersionType versionType12 = deleteRequest8.versionType();
        boolean boolean13 = deleteRequest8.getShouldPersistResult();
        java.lang.String str14 = deleteRequest8.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.refresh(false);
        org.elasticsearch.index.VersionType versionType21 = deleteRequest18.versionType();
        java.lang.String str22 = deleteRequest18.type();
        java.lang.String str23 = deleteRequest18.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.refresh(false);
        long long28 = deleteRequest25.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.setShardId(shardId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions35 = deleteRequest34.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = null;
        deleteRequest34.remoteAddress(transportAddress38);
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest34.getParentTask();
        org.elasticsearch.tasks.Task task41 = deleteRequest30.createTask(0L, "", "delete {[null][null][]}", taskId40);
        org.elasticsearch.tasks.Task task42 = deleteRequest8.createTask(97L, "delete {[delete {[null][null][null]}][][]}", "", taskId40);
        org.elasticsearch.tasks.Task task43 = deleteRequest0.createTask(1L, "delete {[null][null][delete {[][null][null]}]}", "delete {[null][delete {[null][null][null]}][hi!]}", taskId40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest0.routing("delete {[delete {[null][][null]}][][delete {[null][null][]}]}");
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNull(shardId2);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "delete {[null][null][null]}" + "'", str23, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(indicesOptions35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task41);
        org.junit.Assert.assertNotNull(task42);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNotNull(deleteRequest45);
    }

    @Test
    public void test05744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05744");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.timeout(timeValue6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest5.remoteAddress(transportAddress8);
        java.lang.String str10 = deleteRequest5.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.id("");
        java.lang.String str13 = deleteRequest12.routing();
        java.lang.String str14 = deleteRequest12.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest12.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest12.parent("delete {[null][null][hi!]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][null][null]}][hi!][null]}", deleteRequest18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test05745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05745");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest5.setParentTask("hi!", 10L);
        java.lang.String[] strArray9 = deleteRequest5.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("hi!");
        deleteRequest15.seqNo((long) (short) 1);
        java.lang.String str18 = deleteRequest15.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue24 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.timeout(timeValue24);
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest23.remoteAddress(transportAddress26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest23.id("delete {[][][hi!]}");
        deleteRequest23.primaryTerm((-3L));
        java.lang.String str32 = deleteRequest23.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest33.setParentTask("hi!", 10L);
        java.lang.String str37 = deleteRequest33.toString();
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest33.timeout();
        java.lang.String str39 = deleteRequest33.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.refresh(false);
        org.elasticsearch.index.VersionType versionType43 = deleteRequest40.versionType();
        java.lang.String str44 = deleteRequest40.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest40.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions48 = deleteRequest47.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest47.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.refresh(false);
        org.elasticsearch.index.VersionType versionType54 = deleteRequest51.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest50.versionType(versionType54);
        deleteRequest55.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId58 = deleteRequest55.getParentTask();
        deleteRequest46.setParentTask(taskId58);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest46.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest64.type("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue67 = deleteRequest64.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest61.timeout(timeValue67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest33.timeout(timeValue67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest23.timeout(timeValue67);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest15.timeout(timeValue67);
        org.elasticsearch.index.VersionType versionType72 = deleteRequest71.versionType();
        long long73 = deleteRequest71.primaryTerm();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[][][hi!]}" + "'", str32, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[null][null][null]}" + "'", str37, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(versionType43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(indicesOptions48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(taskId58);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(timeValue67);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(versionType72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
    }

    @Test
    public void test05746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05746");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.type("hi!");
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest6.createTask((-3L), "delete {[delete {[null][null][null]}][][]}", "delete {[null][hi!][]}", taskId15);
        java.lang.String[] strArray17 = deleteRequest6.indices();
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest6.getParentTask();
        deleteRequest6.seqNo((long) (short) 100);
        java.lang.String str21 = deleteRequest6.type();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test05747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05747");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        java.lang.String[] strArray5 = deleteRequest0.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.id("delete {[][null][null]}");
        java.lang.String str9 = deleteRequest0.id();
        deleteRequest0.primaryTerm((long) '#');
        deleteRequest0.primaryTerm(10L);
        deleteRequest0.setParentTask("delete {[][delete {[delete {[null][null][delete {[null][null][null]}]}][hi!][null]}][null]}", (long) ' ');
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[][null][null]}" + "'", str9, "delete {[][null][null]}");
    }

    @Test
    public void test05748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05748");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.timeout(timeValue8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest7.remoteAddress(transportAddress10);
        java.lang.String str12 = deleteRequest7.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.parent("hi!");
        org.elasticsearch.index.VersionType versionType15 = deleteRequest7.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.versionType(versionType15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest0.id("");
        java.lang.String str19 = deleteRequest18.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.routing("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.parent("delete {[][][hi!]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException24 = deleteRequest18.validate();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(actionRequestValidationException24);
    }

    @Test
    public void test05749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05749");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions3 = deleteRequest2.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest2.remoteAddress(transportAddress8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest2.refresh(true);
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest2.timeout();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[][][hi!]}][null][delete {[null][null][null]}]}", deleteRequest2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(timeValue12);
    }

    @Test
    public void test05750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05750");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}", "delete {[delete {[][null][null]}][][hi!]}", "delete {[delete {[][null][null]}][hi!][null]}");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}][delete {[delete {[][null][null]}][][hi!]}][delete {[delete {[][null][null]}][hi!][null]}]}" + "'", str4, "delete {[delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}][delete {[delete {[][null][null]}][][hi!]}][delete {[delete {[][null][null]}][hi!][null]}]}");
    }

    @Test
    public void test05751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05751");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest3.remoteAddress();
        boolean boolean7 = deleteRequest3.getShouldPersistResult();
        java.lang.String str8 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.refresh(false);
        org.elasticsearch.action.support.IndicesOptions indicesOptions11 = deleteRequest10.indicesOptions();
        org.elasticsearch.index.shard.IndexShard indexShard12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult13 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest10, indexShard12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "hi!" + "'", str8, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(indicesOptions11);
    }

    @Test
    public void test05752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05752");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "");
        long long4 = deleteRequest3.seqNo();
        long long5 = deleteRequest3.version();
        java.lang.String str6 = deleteRequest3.id();
        long long7 = deleteRequest3.seqNo();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test05753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05753");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest6.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.consistencyLevel(writeConsistencyLevel8);
        org.elasticsearch.index.VersionType versionType10 = deleteRequest6.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.versionType(versionType10);
        boolean boolean12 = deleteRequest11.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.refresh(true);
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest16.getParentTask();
        deleteRequest11.setParentTask(taskId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.consistencyLevel(writeConsistencyLevel24);
        deleteRequest25.seqNo((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.refresh(true);
        java.lang.String[] strArray39 = deleteRequest36.indices();
        java.lang.String str40 = deleteRequest36.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.refresh(true);
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest47.getParentTask();
        org.elasticsearch.tasks.Task task51 = deleteRequest36.createTask(100L, "delete {[null][null][null]}", "delete {[null][null][null]}", taskId50);
        org.elasticsearch.tasks.Task task52 = deleteRequest25.createTask(100L, "", "delete {[null][null][null]}", taskId50);
        deleteRequest11.setParentTask(taskId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue61 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.timeout(timeValue61);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.index("");
        boolean boolean65 = deleteRequest64.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest64.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException69 = deleteRequest68.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException71 = deleteRequest70.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest70.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue74 = deleteRequest73.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest68.timeout(timeValue74);
        org.elasticsearch.index.VersionType versionType76 = deleteRequest75.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest64.versionType(versionType76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest78.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue85 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest84.timeout(timeValue85);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest80.timeout(timeValue85);
        org.elasticsearch.index.shard.ShardId shardId88 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest87.setShardId(shardId88);
        org.elasticsearch.tasks.TaskId taskId90 = deleteRequest87.getParentTask();
        deleteRequest64.setParentTask(taskId90);
        org.elasticsearch.tasks.Task task92 = deleteRequest11.createTask((long) 100, "delete {[null][hi!][delete {[delete {[null][null][null]}][null][null]}]}", "delete {[delete {[null][null][null]}][][]}", taskId90);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput93 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest11.writeTo(streamOutput93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "delete {[][null][null]}" + "'", str40, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task51);
        org.junit.Assert.assertNotNull(task52);
        org.junit.Assert.assertNotNull(timeValue61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(actionRequestValidationException69);
        org.junit.Assert.assertNotNull(actionRequestValidationException71);
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(timeValue74);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(versionType76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(timeValue85);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(taskId90);
        org.junit.Assert.assertNotNull(task92);
    }

    @Test
    public void test05754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05754");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.getDescription();
        org.elasticsearch.index.shard.ShardId shardId2 = deleteRequest0.shardId();
        boolean boolean3 = deleteRequest0.refresh();
        deleteRequest0.primaryTerm((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.id("delete {[delete {[][][hi!]}][][delete {[][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId8 = deleteRequest7.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.routing("delete {[delete {[null][null][null]}][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][null][null]}]}");
        java.lang.String str11 = deleteRequest10.toString();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardId2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}]}" + "'", str11, "delete {[null][null][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}]}");
    }

    @Test
    public void test05755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05755");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.tasks.TaskId taskId3 = deleteRequest2.getParentTask();
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest2.remoteAddress();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest2.remoteAddress(transportAddress5);
        long long7 = deleteRequest2.seqNo();
        java.lang.String str8 = deleteRequest2.type();
        deleteRequest2.setParentTask("delete {[delete {[null][null][null]}][][delete {[delete {[null][null][null]}][][]}]}", (long) (byte) 0);
        long long12 = deleteRequest2.version();
        java.lang.String str13 = deleteRequest2.routing();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(taskId3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + (-3L) + "'", long12 == (-3L));
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test05756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05756");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel6 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[null][hi!][]}");
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest8.shardId();
        org.elasticsearch.index.shard.IndexShard indexShard10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete11 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest8, indexShard10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel6 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel6.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId9);
    }

    @Test
    public void test05757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05757");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "delete {[delete {[][][]}][delete {[null][hi!][delete {[][null][null]}]}][delete {[delete {[null][][null]}][null][null]}]}");
    }

    @Test
    public void test05758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05758");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("delete {[null][null][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions11 = deleteRequest10.indicesOptions();
        java.lang.String str12 = deleteRequest10.id();
        long long13 = deleteRequest10.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.setShardId(shardId14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId23 = null;
        org.elasticsearch.tasks.Task task24 = deleteRequest19.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.refresh(true);
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest30.getParentTask();
        deleteRequest19.setParentTask(taskId33);
        deleteRequest15.setParentTask(taskId33);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest9.consistencyLevel(writeConsistencyLevel36);
        java.lang.String str38 = deleteRequest9.id();
        deleteRequest9.setParentTask("delete {[delete {[null][null][null]}][null][null]}", (long) '#');
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(indicesOptions11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(task24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test05759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05759");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = null;
        deleteRequest1.remoteAddress(transportAddress2);
        boolean boolean4 = deleteRequest1.getShouldPersistResult();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest1.remoteAddress();
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(transportAddress5);
    }

    @Test
    public void test05760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05760");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest5.setParentTask("hi!", 10L);
        java.lang.String[] strArray9 = deleteRequest5.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("hi!");
        deleteRequest15.seqNo((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId20 = deleteRequest19.shardId();
        deleteRequest19.primaryTerm((long) '#');
        java.lang.String str23 = deleteRequest19.index();
        java.lang.String str24 = deleteRequest19.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.id("delete {[null][null][delete {[null][null][delete {[null][null][null]}]}]}");
        deleteRequest19.primaryTerm((long) (short) 100);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
    }

    @Test
    public void test05761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05761");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("hi!");
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest4.getParentTask();
        org.elasticsearch.index.shard.ShardId shardId6 = deleteRequest4.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.refresh(true);
        java.lang.String str11 = deleteRequest10.type();
        java.lang.String str12 = deleteRequest10.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest14.id("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.version((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest21.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.id("delete {[null][null][null]}");
        long long27 = deleteRequest21.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.refresh(false);
        org.elasticsearch.index.VersionType versionType31 = deleteRequest28.versionType();
        java.lang.String str32 = deleteRequest28.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest28.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest21.timeout(timeValue35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest18.timeout(timeValue35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest10.timeout(timeValue35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest4.timeout(timeValue35);
        org.elasticsearch.action.support.IndicesOptions indicesOptions40 = deleteRequest4.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + (-3L) + "'", long27 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(versionType31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(indicesOptions40);
    }

    @Test
    public void test05762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05762");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[null][null][null]}");
        java.lang.String str13 = deleteRequest10.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.id("");
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[delete {[null][null][null]}][][]}" + "'", str13, "delete {[delete {[null][null][null]}][][]}");
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test05763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05763");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest2.timeout();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest2.setShardId(shardId6);
        long long8 = deleteRequest2.primaryTerm();
        java.lang.String str9 = deleteRequest2.routing();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test05764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05764");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest9.setParentTask("hi!", 10L);
        java.lang.String[] strArray13 = deleteRequest9.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest14.setParentTask("hi!", 10L);
        java.lang.String[] strArray18 = deleteRequest14.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest9.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest8.consistencyLevel(writeConsistencyLevel19);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest8.setShardId(shardId22);
        boolean boolean24 = deleteRequest23.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue25 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.id("delete {[null][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest28.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure31 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][hi!][]}][delete {[null][null][hi!]}][hi!]}", (java.lang.Throwable) actionRequestValidationException29, "delete {[hi!][delete {[null][hi!][null]}][]}");
        java.lang.String str32 = shardFailure31.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(actionRequestValidationException29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "delete {[delete {[null][hi!][]}][delete {[null][null][hi!]}][hi!]}" + "'", str32, "delete {[delete {[null][hi!][]}][delete {[null][null][hi!]}][hi!]}");
    }

    @Test
    public void test05765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05765");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = null;
        deleteRequest1.remoteAddress(transportAddress2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        org.elasticsearch.index.VersionType versionType10 = deleteRequest7.versionType();
        java.lang.String str11 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest1.createTask((long) (byte) 100, "delete {[null][hi!][null]}", "delete {[][][]}", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue27 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.timeout(timeValue27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.timeout(timeValue27);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.setShardId(shardId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest38.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest42.setParentTask("hi!", 10L);
        java.lang.String[] strArray46 = deleteRequest42.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest47.setParentTask("hi!", 10L);
        java.lang.String[] strArray51 = deleteRequest47.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest47.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest42.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest41.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest41.setShardId(shardId55);
        org.elasticsearch.common.transport.TransportAddress transportAddress57 = null;
        deleteRequest41.remoteAddress(transportAddress57);
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task60 = deleteRequest29.createTask((long) 'a', "delete {[][][]}", "hi!", taskId59);
        org.elasticsearch.tasks.Task task61 = deleteRequest1.createTask((long) (-1), "delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}", "delete {[null][hi!][]}", taskId59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest1.refresh(false);
        deleteRequest63.primaryTerm((long) (-1));
        java.lang.String str66 = deleteRequest63.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest63.index("delete {[delete {[null][null][null]}][delete {[null][null][null]}][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue73 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest72.timeout(timeValue73);
        org.elasticsearch.common.transport.TransportAddress transportAddress75 = null;
        deleteRequest72.remoteAddress(transportAddress75);
        java.lang.String str77 = deleteRequest72.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest72.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest79.index("delete {[null][null][null]}");
        java.lang.String str82 = deleteRequest81.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest81.routing("");
        org.elasticsearch.index.shard.ShardId shardId85 = deleteRequest81.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[null][null][]}", "delete {[][null][null]}");
        org.elasticsearch.index.VersionType versionType90 = deleteRequest89.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest81.versionType(versionType90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest63.versionType(versionType90);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNotNull(timeValue73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "" + "'", str82, "");
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNull(shardId85);
        org.junit.Assert.assertNotNull(versionType90);
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest92);
    }

    @Test
    public void test05766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05766");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest5.setParentTask("hi!", 10L);
        java.lang.String[] strArray9 = deleteRequest5.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest13.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.refresh(false);
        org.elasticsearch.index.VersionType versionType20 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.versionType(versionType20);
        deleteRequest21.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId24 = deleteRequest21.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.refresh(true);
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest31.getParentTask();
        org.elasticsearch.tasks.Task task35 = deleteRequest21.createTask((long) (short) 10, "", "hi!", taskId34);
        deleteRequest0.setParentTask(taskId34);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest0.version((long) (short) 10);
        long long39 = deleteRequest0.seqNo();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId24);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(task35);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
    }

    @Test
    public void test05767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05767");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][hi!][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest11.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.timeout(timeValue12);
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue22 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest21.timeout(timeValue22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest17.timeout(timeValue22);
        java.lang.String str25 = deleteRequest24.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.refresh(false);
        deleteRequest30.setParentTask("hi!", (long) (byte) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException35 = deleteRequest34.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue38 = deleteRequest37.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest37.routing("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest37.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest30.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest27.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest7.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest1.consistencyLevel(writeConsistencyLevel41);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(actionRequestValidationException35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(timeValue38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
    }

    @Test
    public void test05768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05768");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.index("delete {[delete {[][][hi!]}][][delete {[][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.type("delete {[delete {[null][][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest9.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest9.shardId();
        org.elasticsearch.index.VersionType versionType12 = deleteRequest9.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        long long17 = deleteRequest15.seqNo();
        long long18 = deleteRequest15.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions20 = deleteRequest19.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.parent("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest15.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel25 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest9.consistencyLevel(writeConsistencyLevel25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest27.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.type("hi!");
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task43 = deleteRequest33.createTask((-3L), "delete {[delete {[null][null][null]}][][]}", "delete {[null][hi!][]}", taskId42);
        java.lang.String[] strArray44 = deleteRequest33.indices();
        org.elasticsearch.common.unit.TimeValue timeValue45 = deleteRequest33.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest9.timeout(timeValue45);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest5.timeout(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel25 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel25.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertNotNull(task43);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(timeValue45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(deleteRequest47);
    }

    @Test
    public void test05769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05769");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("hi!");
        java.lang.String str11 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.index("delete {[][null][null]}");
        java.lang.String str14 = deleteRequest13.parent();
        org.elasticsearch.index.VersionType versionType15 = deleteRequest13.versionType();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][hi!]}" + "'", str11, "delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(versionType15);
    }

    @Test
    public void test05770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05770");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean4 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        deleteRequest6.primaryTerm((long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest9.indicesOptions();
        java.lang.String str11 = deleteRequest9.id();
        long long12 = deleteRequest9.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.setShardId(shardId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId22 = null;
        org.elasticsearch.tasks.Task task23 = deleteRequest18.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.refresh(true);
        org.elasticsearch.tasks.TaskId taskId32 = deleteRequest29.getParentTask();
        deleteRequest18.setParentTask(taskId32);
        deleteRequest14.setParentTask(taskId32);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel35 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest6.consistencyLevel(writeConsistencyLevel35);
        java.lang.String str37 = deleteRequest36.parent();
        org.elasticsearch.common.io.stream.StreamInput streamInput38 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest36.readFrom(streamInput38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(taskId32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel35 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel35.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test05771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05771");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("delete {[null][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.type("delete {[][hi!][delete {[null][null][null]}]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.type("delete {[null][null][delete {[null][null][null]}]}");
        long long9 = deleteRequest8.primaryTerm();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test05772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05772");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        long long3 = deleteRequest0.seqNo();
        java.lang.String str4 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.parent("delete {[delete {[null][null][null]}][][delete {[delete {[null][null][null]}][][]}]}");
        java.lang.String str9 = deleteRequest8.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
    }

    @Test
    public void test05773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05773");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "", "delete {[][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean10 = deleteRequest9.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest12.timeout();
        long long14 = deleteRequest12.primaryTerm();
        deleteRequest12.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType18 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.versionType(versionType18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.refresh(false);
        boolean boolean23 = deleteRequest20.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue28 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.timeout(timeValue28);
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest27.remoteAddress(transportAddress30);
        java.lang.String str32 = deleteRequest27.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.parent("hi!");
        org.elasticsearch.index.VersionType versionType35 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest20.versionType(versionType35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest19.versionType(versionType35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.parent("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest40.setParentTask("hi!", 10L);
        java.lang.String[] strArray44 = deleteRequest40.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel45 = deleteRequest40.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId46 = deleteRequest40.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest47.setParentTask("hi!", 10L);
        java.lang.String str51 = deleteRequest47.toString();
        long long52 = deleteRequest47.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue57 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest56.timeout(timeValue57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest47.timeout(timeValue57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest40.timeout(timeValue57);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest39.timeout(timeValue57);
        long long62 = deleteRequest39.version();
        deleteRequest39.seqNo((long) ' ');
        org.elasticsearch.common.io.stream.StreamInput streamInput65 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest39.readFrom(streamInput65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel45 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel45.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId46);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "delete {[null][null][null]}" + "'", str51, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + (-3L) + "'", long52 == (-3L));
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + (-3L) + "'", long62 == (-3L));
    }

    @Test
    public void test05774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05774");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        deleteRequest3.primaryTerm((long) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        java.lang.String str9 = deleteRequest3.id();
        java.lang.String str10 = deleteRequest3.toString();
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest3.getParentTask();
        java.lang.String str12 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest13.indicesOptions();
        java.lang.String str15 = deleteRequest13.id();
        long long16 = deleteRequest13.primaryTerm();
        java.lang.String str17 = deleteRequest13.routing();
        org.elasticsearch.index.VersionType versionType18 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.versionType(versionType18);
        boolean boolean20 = deleteRequest19.getShouldPersistResult();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test05775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05775");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        java.lang.String str11 = deleteRequest3.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest12.setParentTask("hi!", 10L);
        java.lang.String[] strArray16 = deleteRequest12.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest17.setParentTask("hi!", 10L);
        java.lang.String[] strArray21 = deleteRequest17.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest12.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions26 = deleteRequest25.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.refresh(false);
        org.elasticsearch.index.VersionType versionType32 = deleteRequest29.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.versionType(versionType32);
        deleteRequest33.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId36 = deleteRequest33.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.refresh(true);
        org.elasticsearch.tasks.TaskId taskId46 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task47 = deleteRequest33.createTask((long) (short) 10, "", "hi!", taskId46);
        deleteRequest12.setParentTask(taskId46);
        deleteRequest3.setParentTask(taskId46);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException50 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest3.parent("delete {[null][delete {[null][null][null]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest52.version((-3L));
        org.elasticsearch.index.shard.ShardId shardId55 = deleteRequest54.shardId();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(taskId36);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(taskId46);
        org.junit.Assert.assertNotNull(task47);
        org.junit.Assert.assertNull(actionRequestValidationException50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNull(shardId55);
    }

    @Test
    public void test05776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05776");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        java.lang.String str5 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.index("");
        java.lang.String str8 = deleteRequest7.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.refresh(false);
        org.elasticsearch.index.VersionType versionType12 = deleteRequest9.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.consistencyLevel(writeConsistencyLevel17);
        org.elasticsearch.index.VersionType versionType19 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest9.versionType(versionType19);
        boolean boolean21 = deleteRequest20.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.refresh(true);
        org.elasticsearch.tasks.TaskId taskId28 = deleteRequest25.getParentTask();
        deleteRequest20.setParentTask(taskId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.consistencyLevel(writeConsistencyLevel33);
        deleteRequest34.seqNo((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest34.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.refresh(true);
        java.lang.String[] strArray48 = deleteRequest45.indices();
        java.lang.String str49 = deleteRequest45.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest54.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest56.refresh(true);
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest56.getParentTask();
        org.elasticsearch.tasks.Task task60 = deleteRequest45.createTask(100L, "delete {[null][null][null]}", "delete {[null][null][null]}", taskId59);
        org.elasticsearch.tasks.Task task61 = deleteRequest34.createTask(100L, "", "delete {[null][null][null]}", taskId59);
        deleteRequest20.setParentTask(taskId59);
        deleteRequest7.setParentTask(taskId59);
        boolean boolean64 = deleteRequest7.getShouldPersistResult();
        java.lang.String str65 = deleteRequest7.routing();
        deleteRequest7.seqNo((long) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest7.type("delete {[delete {[null][null][null]}][delete {[delete {[null][null][null]}][null][null]}][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue70 = deleteRequest7.timeout();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(taskId28);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "delete {[][null][null]}" + "'", str49, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(timeValue70);
    }

    @Test
    public void test05777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05777");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        java.lang.String str4 = deleteRequest0.parent();
        long long5 = deleteRequest0.seqNo();
        long long6 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.refresh(false);
        java.lang.Class<?> wildcardClass9 = deleteRequest8.getClass();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "" + "'", str4, "");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test05778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05778");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId4 = null;
        deleteRequest0.setParentTask(taskId4);
        deleteRequest0.seqNo((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest11.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest11.shardId();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[null][hi!][]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest18.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.type("delete {[null][delete {[][null][null]}][null]}");
        java.lang.String str22 = deleteRequest21.parent();
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = deleteRequest21.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(indicesOptions23);
    }

    @Test
    public void test05779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05779");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][delete {[null][null][null]}]}", "", "delete {[null][delete {[][][hi!]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        long long7 = deleteRequest4.seqNo();
        java.lang.String str8 = deleteRequest4.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest4.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.parent("delete {[delete {[null][null][null]}][][delete {[delete {[null][null][null]}][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.version((long) '#');
        org.elasticsearch.index.VersionType versionType15 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest3.versionType(versionType15);
        org.elasticsearch.index.VersionType versionType17 = deleteRequest16.versionType();
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
    }

    @Test
    public void test05780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05780");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId4 = null;
        deleteRequest0.setParentTask(taskId4);
        java.lang.String str6 = deleteRequest0.parent();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest0.setShardId(shardId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest8.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions13 = deleteRequest12.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest12.remoteAddress(transportAddress16);
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest12.getParentTask();
        deleteRequest12.primaryTerm((long) (byte) 1);
        org.elasticsearch.index.VersionType versionType21 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest8.versionType(versionType21);
        deleteRequest8.setParentTask("delete {[null][null][delete {[][null][null]}]}", 0L);
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest8.timeout();
        deleteRequest8.setParentTask("delete {[delete {[][][hi!]}][][delete {[][null][null]}]}", (long) (short) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest8.timeout("delete {[null][][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(indicesOptions13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue26);
    }

    @Test
    public void test05781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05781");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId7);
        org.elasticsearch.tasks.TaskId taskId9 = deleteRequest3.getParentTask();
        deleteRequest3.setParentTask("delete {[][null][null]}", (long) (byte) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest13.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.consistencyLevel(writeConsistencyLevel23);
        java.lang.String str25 = deleteRequest24.routing();
        org.elasticsearch.index.VersionType versionType26 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest16.versionType(versionType26);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = deleteRequest27.consistencyLevel();
        java.lang.String str29 = deleteRequest27.id();
        deleteRequest27.seqNo((long) 0);
        java.lang.String str32 = deleteRequest27.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.type("");
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest3.timeout(timeValue35);
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest3.shardId();
        org.elasticsearch.index.shard.IndexShard indexShard38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete39 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(taskId9);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(versionType26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel28 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel28.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(shardId37);
    }

    @Test
    public void test05782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05782");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId5 = deleteRequest3.shardId();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.common.transport.TransportAddress transportAddress7 = deleteRequest3.remoteAddress();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNull(transportAddress7);
    }

    @Test
    public void test05783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05783");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        java.lang.String[] strArray6 = deleteRequest3.indices();
        java.lang.String str7 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.refresh(true);
        deleteRequest9.setParentTask("delete {[delete {[null][null][null]}][null][null]}", (long) 1);
        org.elasticsearch.index.VersionType versionType13 = deleteRequest9.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.routing("");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][null][null]}" + "'", str7, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest15);
    }

    @Test
    public void test05784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05784");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest0.indicesOptions();
        java.lang.String str9 = deleteRequest0.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest0.consistencyLevel();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test05785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05785");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException7, "");
        java.lang.Throwable throwable12 = shardFailure11.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][][hi!]}", throwable12, "delete {[][][hi!]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting15 = shardFailure14.routing;
        java.lang.String str16 = shardFailure14.indexUUID;
        java.lang.String str17 = shardFailure14.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][][hi!]}" + "'", str16, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[][][hi!]}" + "'", str17, "delete {[][][hi!]}");
    }

    @Test
    public void test05786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05786");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        deleteRequest3.primaryTerm((long) 10);
        java.lang.String str8 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue16 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.timeout(timeValue16);
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest15.remoteAddress(transportAddress18);
        java.lang.String str20 = deleteRequest15.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest15.version((long) (byte) 1);
        org.elasticsearch.index.VersionType versionType25 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.refresh(false);
        org.elasticsearch.index.VersionType versionType32 = deleteRequest29.versionType();
        java.lang.String str33 = deleteRequest29.type();
        java.lang.String str34 = deleteRequest29.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest29.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.refresh(false);
        long long39 = deleteRequest36.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest36.refresh(false);
        org.elasticsearch.common.transport.TransportAddress transportAddress42 = deleteRequest36.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest36.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest15.createTask((long) (byte) 0, "delete {[null][hi!][null]}", "delete {[delete {[null][null][null]}][][]}", taskId43);
        org.elasticsearch.tasks.Task task45 = deleteRequest3.createTask((long) 0, "delete {[null][null][delete {[null][null][null]}]}", "delete {[][][]}", taskId43);
        deleteRequest3.primaryTerm((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest3.id("delete {[delete {[][][delete {[][null][null]}]}][delete {[null][delete {[][][hi!]}][null]}][delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[][null][null]}" + "'", str8, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[null][null][null]}" + "'", str34, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNull(transportAddress42);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
        org.junit.Assert.assertNotNull(task45);
        org.junit.Assert.assertNotNull(deleteRequest49);
    }

    @Test
    public void test05787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05787");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][hi!][]}", "delete {[null][hi!][]}", "delete {[null][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.refresh(false);
        org.elasticsearch.index.VersionType versionType9 = deleteRequest6.versionType();
        java.lang.String str10 = deleteRequest6.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest6.index("hi!");
        java.lang.String str13 = deleteRequest6.index();
        long long14 = deleteRequest6.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest5.consistencyLevel(writeConsistencyLevel17);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[delete {[][null][null]}][hi!][null]}][delete {[hi!][delete {[null][hi!][null]}][]}][delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}]}", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test05788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05788");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest2.setParentTask("hi!", 10L);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure8 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException6, "delete {[][][hi!]}");
        java.lang.String str9 = shardFailure8.reason;
        java.lang.Throwable throwable10 = shardFailure8.cause;
        java.lang.Throwable throwable11 = shardFailure8.cause;
        java.lang.String str12 = shardFailure8.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][][hi!]}" + "'", str12, "delete {[][][hi!]}");
    }

    @Test
    public void test05789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05789");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest2.setParentTask("hi!", 10L);
        java.lang.String[] strArray6 = deleteRequest2.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest2.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest2.routing("hi!");
        org.elasticsearch.index.shard.ShardId shardId10 = deleteRequest2.shardId();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest2.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.refresh(false);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException16 = deleteRequest13.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][hi!][delete {[delete {[null][null][null]}][null][null]}]}", (java.lang.Throwable) actionRequestValidationException16, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(actionRequestValidationException16);
    }

    @Test
    public void test05790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05790");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][][hi!]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput2 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest1.writeTo(streamOutput2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05791");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("delete {[null][null][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest13.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.refresh(false);
        org.elasticsearch.index.VersionType versionType20 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.versionType(versionType20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest23.remoteAddress(transportAddress26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest28.setParentTask("hi!", 10L);
        java.lang.String[] strArray32 = deleteRequest28.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel33 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest23.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest9.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest3.consistencyLevel(writeConsistencyLevel33);
        org.elasticsearch.index.VersionType versionType37 = deleteRequest36.versionType();
        deleteRequest36.setParentTask("delete {[delete {[][][]}][null][null]}", 1L);
        org.elasticsearch.index.shard.ShardId shardId41 = deleteRequest36.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest45.id("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest50.setParentTask("hi!", 10L);
        org.elasticsearch.common.unit.TimeValue timeValue54 = deleteRequest50.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest50.version((long) ' ');
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel57 = deleteRequest50.consistencyLevel();
        long long58 = deleteRequest50.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest50.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest64.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel67 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest66.consistencyLevel(writeConsistencyLevel67);
        deleteRequest68.seqNo((long) (byte) 0);
        java.lang.String str71 = deleteRequest68.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest72.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException77 = deleteRequest76.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest76.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue80 = deleteRequest79.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest72.timeout(timeValue80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest82.refresh(false);
        org.elasticsearch.tasks.TaskId taskId85 = deleteRequest84.getParentTask();
        deleteRequest72.setParentTask(taskId85);
        deleteRequest68.setParentTask(taskId85);
        org.elasticsearch.tasks.Task task88 = deleteRequest50.createTask((long) (-1), "delete {[null][null][]}", "", taskId85);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException89 = deleteRequest50.validate();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel90 = deleteRequest50.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest49.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest36.consistencyLevel(writeConsistencyLevel90);
        org.elasticsearch.action.support.IndicesOptions indicesOptions93 = deleteRequest36.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel33 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel33.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(versionType37);
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(timeValue54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel57 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel57.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest68);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(actionRequestValidationException77);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(timeValue80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(taskId85);
        org.junit.Assert.assertNotNull(task88);
        org.junit.Assert.assertNotNull(actionRequestValidationException89);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel90 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel90.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest91);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertNotNull(indicesOptions93);
    }

    @Test
    public void test05792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05792");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        java.lang.Throwable throwable10 = shardFailure9.cause;
        java.lang.Throwable throwable11 = shardFailure9.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", throwable11, "hi!");
        java.lang.String str14 = shardFailure13.indexUUID;
        java.lang.String str15 = shardFailure13.indexUUID;
        java.lang.String str16 = shardFailure13.reason;
        java.lang.Throwable throwable17 = shardFailure13.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure19 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][][hi!]}", throwable17, "");
        java.lang.Throwable throwable20 = shardFailure19.cause;
        java.lang.String str21 = shardFailure19.indexUUID;
        java.lang.String str22 = shardFailure19.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable10.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable20.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "" + "'", str22, "");
    }

    @Test
    public void test05793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05793");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.id("delete {[null][null][null]}");
        long long6 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        org.elasticsearch.index.VersionType versionType10 = deleteRequest7.versionType();
        java.lang.String str11 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest0.timeout(timeValue14);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.consistencyLevel(writeConsistencyLevel16);
        java.lang.String str18 = deleteRequest15.index();
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest15.timeout();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(timeValue19);
    }

    @Test
    public void test05794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05794");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("hi!");
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest4.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest4.id("delete {[][null][null]}");
        java.lang.String str10 = deleteRequest4.type();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest4.timeout();
        java.lang.String str12 = deleteRequest4.toString();
        long long13 = deleteRequest4.seqNo();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "hi!" + "'", str10, "hi!");
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[null][hi!][delete {[][null][null]}]}" + "'", str12, "delete {[null][hi!][delete {[][null][null]}]}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test05795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05795");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(false);
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.versionType(versionType14);
        deleteRequest15.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest15.getParentTask();
        deleteRequest6.setParentTask(taskId18);
        deleteRequest6.setParentTask("hi!", (long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest6.remoteAddress(transportAddress23);
        java.lang.String[] strArray25 = deleteRequest6.indices();
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest6.type("delete {[delete {[null][null][null]}][null][null]}");
        java.lang.String str29 = deleteRequest28.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest28.version((long) (short) -1);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(timeValue26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[hi!][delete {[delete {[null][null][null]}][null][null]}][null]}" + "'", str29, "delete {[hi!][delete {[delete {[null][null][null]}][null][null]}][null]}");
        org.junit.Assert.assertNotNull(deleteRequest31);
    }

    @Test
    public void test05796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05796");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.type("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest10.remoteAddress(transportAddress13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest15.setParentTask("hi!", 10L);
        java.lang.String[] strArray19 = deleteRequest15.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel20 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest10.consistencyLevel(writeConsistencyLevel20);
        java.lang.String str22 = deleteRequest21.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.routing("hi!");
        long long25 = deleteRequest21.seqNo();
        java.lang.String[] strArray26 = deleteRequest21.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest21.id("delete {[][delete {[null][null][]}][delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue33 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.timeout(timeValue33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.index("");
        boolean boolean37 = deleteRequest36.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest36.version((long) (short) 10);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel42 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest21.consistencyLevel(writeConsistencyLevel42);
        org.elasticsearch.common.io.stream.StreamInput streamInput44 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest21.readFrom(streamInput44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel20 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel20.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel42 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel42.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest43);
    }

    @Test
    public void test05797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05797");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        java.lang.String str2 = deleteRequest0.id();
        long long3 = deleteRequest0.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setShardId(shardId4);
        java.lang.String str6 = deleteRequest5.id();
        org.elasticsearch.action.support.IndicesOptions indicesOptions7 = deleteRequest5.indicesOptions();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(indicesOptions7);
    }

    @Test
    public void test05798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05798");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest3.timeout();
        long long14 = deleteRequest3.primaryTerm();
        java.lang.String str15 = deleteRequest3.type();
        java.lang.String str16 = deleteRequest3.index();
        java.lang.String str17 = deleteRequest3.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.version((long) (byte) -1);
        org.elasticsearch.index.shard.IndexShard indexShard20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult21 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest19, indexShard20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test05799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05799");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest4.setParentTask("hi!", 10L);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException8, "delete {[null][null][null]}");
        java.lang.Throwable throwable11 = shardFailure10.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][null]}][][]}", throwable11, "delete {[null][null][hi!]}");
        java.lang.String str14 = shardFailure13.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable11.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[delete {[null][null][null]}][][]}" + "'", str14, "delete {[delete {[null][null][null]}][][]}");
    }

    @Test
    public void test05800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05800");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        long long3 = deleteRequest0.seqNo();
        java.lang.String str4 = deleteRequest0.toString();
        java.lang.String str5 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("hi!");
        deleteRequest0.seqNo((long) 100);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test05801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05801");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (byte) 100);
        org.elasticsearch.index.shard.ShardId shardId10 = deleteRequest9.shardId();
        org.elasticsearch.action.support.IndicesOptions indicesOptions11 = deleteRequest9.indicesOptions();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertNotNull(indicesOptions11);
    }

    @Test
    public void test05802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05802");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest8.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.routing();
        org.elasticsearch.index.VersionType versionType13 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.versionType(versionType13);
        long long15 = deleteRequest3.seqNo();
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest3.getParentTask();
        java.lang.String str17 = deleteRequest3.id();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test05803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05803");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        java.lang.String str5 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        long long10 = deleteRequest7.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.setShardId(shardId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest16.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest16.remoteAddress(transportAddress20);
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest16.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest12.createTask(0L, "", "delete {[null][null][]}", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest12.version((-1L));
        java.lang.String str26 = deleteRequest25.id();
        org.elasticsearch.index.VersionType versionType27 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest25.routing("delete {[][delete {[null][null][]}][delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest29);
    }

    @Test
    public void test05804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05804");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest2.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.consistencyLevel(writeConsistencyLevel4);
        deleteRequest2.setParentTask("delete {[null][null][null]}", (long) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest2.remoteAddress();
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest2.getParentTask();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(taskId10);
    }

    @Test
    public void test05805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05805");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest5.indicesOptions();
        org.elasticsearch.common.unit.TimeValue timeValue13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.timeout(timeValue13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest5.index("delete {[][null][null]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest5.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue25 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException28 = deleteRequest27.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException30 = deleteRequest29.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue33 = deleteRequest32.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.timeout(timeValue33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest27.index("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress37 = null;
        deleteRequest27.remoteAddress(transportAddress37);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest27.setShardId(shardId39);
        org.elasticsearch.tasks.TaskId taskId41 = deleteRequest40.getParentTask();
        deleteRequest26.setParentTask(taskId41);
        java.lang.String str43 = deleteRequest26.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions48 = deleteRequest47.indicesOptions();
        java.lang.String str49 = deleteRequest47.id();
        long long50 = deleteRequest47.primaryTerm();
        java.lang.String str51 = deleteRequest47.routing();
        java.lang.String str52 = deleteRequest47.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException57 = deleteRequest56.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException59 = deleteRequest58.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest58.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue62 = deleteRequest61.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest56.timeout(timeValue62);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId74 = null;
        org.elasticsearch.tasks.Task task75 = deleteRequest70.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId74);
        org.elasticsearch.tasks.TaskId taskId76 = deleteRequest70.getParentTask();
        org.elasticsearch.tasks.Task task77 = deleteRequest63.createTask((long) 1, "delete {[][null][null]}", "delete {[delete {[][null][null]}][hi!][null]}", taskId76);
        org.elasticsearch.tasks.Task task78 = deleteRequest47.createTask((long) ' ', "delete {[null][null][null]}", "", taskId76);
        org.elasticsearch.tasks.Task task79 = deleteRequest26.createTask((long) '4', "delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}", "delete {[][null][null]}", taskId76);
        org.elasticsearch.tasks.Task task80 = deleteRequest5.createTask((long) (short) -1, "delete {[delete {[null][null][null]}][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][null][null]}]}", "delete {[delete {[][][hi!]}][][delete {[][null][null]}]}", taskId76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest81.refresh(false);
        long long84 = deleteRequest81.seqNo();
        java.lang.String str85 = deleteRequest81.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest81.parent("");
        org.elasticsearch.tasks.TaskId taskId88 = deleteRequest81.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions90 = deleteRequest89.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest92 = deleteRequest89.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress93 = null;
        deleteRequest89.remoteAddress(transportAddress93);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel95 = deleteRequest89.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest96 = deleteRequest81.consistencyLevel(writeConsistencyLevel95);
        org.elasticsearch.common.unit.TimeValue timeValue97 = deleteRequest96.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest98 = deleteRequest5.timeout(timeValue97);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(actionRequestValidationException28);
        org.junit.Assert.assertNotNull(actionRequestValidationException30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(timeValue33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(taskId41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertNotNull(indicesOptions48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "delete {[null][null][null]}" + "'", str52, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException57);
        org.junit.Assert.assertNotNull(actionRequestValidationException59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(timeValue62);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(task75);
        org.junit.Assert.assertNotNull(taskId76);
        org.junit.Assert.assertNotNull(task77);
        org.junit.Assert.assertNotNull(task78);
        org.junit.Assert.assertNotNull(task79);
        org.junit.Assert.assertNotNull(task80);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertTrue("'" + long84 + "' != '" + 0L + "'", long84 == 0L);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "delete {[null][null][null]}" + "'", str85, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(taskId88);
        org.junit.Assert.assertNotNull(indicesOptions90);
        org.junit.Assert.assertNotNull(deleteRequest92);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel95 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel95.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest96);
        org.junit.Assert.assertNotNull(timeValue97);
        org.junit.Assert.assertNotNull(deleteRequest98);
    }

    @Test
    public void test05806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05806");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.version((long) (byte) 100);
        java.lang.Class<?> wildcardClass10 = deleteRequest3.getClass();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test05807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05807");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue5 = deleteRequest2.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest9.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress13 = null;
        deleteRequest9.remoteAddress(transportAddress13);
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest9.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest2.createTask((long) (short) 1, "delete {[null][hi!][]}", "delete {[delete {[][][hi!]}][][delete {[][null][null]}]}", taskId15);
        java.lang.String str17 = deleteRequest2.getDescription();
        org.elasticsearch.index.shard.ShardId shardId18 = deleteRequest2.shardId();
        deleteRequest2.primaryTerm(0L);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(timeValue5);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[null][hi!][null]}" + "'", str17, "delete {[null][hi!][null]}");
        org.junit.Assert.assertNull(shardId18);
    }

    @Test
    public void test05808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05808");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.version((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.index("delete {[delete {[][][]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest6.shardId();
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest6.timeout();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(timeValue10);
    }

    @Test
    public void test05809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05809");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        long long3 = deleteRequest0.seqNo();
        java.lang.String str4 = deleteRequest0.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.refresh(true);
        java.lang.String[] strArray8 = deleteRequest0.indices();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(transportAddress5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test05810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05810");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest1.id("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.version((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest8.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.id("delete {[null][null][null]}");
        long long14 = deleteRequest8.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        org.elasticsearch.index.VersionType versionType18 = deleteRequest15.versionType();
        java.lang.String str19 = deleteRequest15.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest21.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest8.timeout(timeValue22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest5.timeout(timeValue22);
        java.lang.Class<?> wildcardClass25 = deleteRequest5.getClass();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test05811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05811");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest2.shardId();
        deleteRequest2.setParentTask("delete {[][null][null]}", 0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.routing("delete {[delete {[][null][null]}][hi!][null]}");
        java.lang.String str9 = deleteRequest8.routing();
        java.lang.Class<?> wildcardClass10 = deleteRequest8.getClass();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[delete {[][null][null]}][hi!][null]}" + "'", str9, "delete {[delete {[][null][null]}][hi!][null]}");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test05812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05812");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest3.timeout();
        long long14 = deleteRequest3.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest15.setParentTask("hi!", 10L);
        java.lang.String str19 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.refresh(false);
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest25.getParentTask();
        org.elasticsearch.tasks.Task task27 = deleteRequest15.createTask((long) (-1), "", "hi!", taskId26);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest15.setShardId(shardId28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest15.version((long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.type("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest33.getParentTask();
        deleteRequest3.setParentTask(taskId34);
        java.lang.String str36 = deleteRequest3.id();
        long long37 = deleteRequest3.seqNo();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "delete {[null][null][null]}" + "'", str19, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(task27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
    }

    @Test
    public void test05813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05813");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][null][null]}", "delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}", "delete {[delete {[hi!][][delete {[null][null][]}]}][null][null]}");
        java.lang.String[] strArray4 = deleteRequest3.indices();
        org.junit.Assert.assertNotNull(strArray4);
    }

    @Test
    public void test05814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05814");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest5.setParentTask("hi!", 10L);
        java.lang.String[] strArray9 = deleteRequest5.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("hi!");
        deleteRequest15.seqNo((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.setShardId(shardId20);
        org.elasticsearch.index.shard.IndexShard indexShard22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete23 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest15, indexShard22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
    }

    @Test
    public void test05815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05815");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        java.lang.String str2 = deleteRequest0.id();
        long long3 = deleteRequest0.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setShardId(shardId4);
        java.lang.String str6 = deleteRequest5.type();
        java.lang.String str7 = deleteRequest5.id();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test05816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05816");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        java.lang.String str5 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        long long10 = deleteRequest7.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest7.validate();
        java.lang.String str16 = deleteRequest7.parent();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
    }

    @Test
    public void test05817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05817");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest0.indicesOptions();
        long long5 = deleteRequest0.seqNo();
        java.lang.String str6 = deleteRequest0.parent();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest0.validate();
        long long8 = deleteRequest0.version();
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}", "delete {[null][][null]}", "delete {[delete {[delete {[null][null][null]}][][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][hi!][]}", "delete {[null][hi!][]}", "delete {[null][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.refresh(false);
        org.elasticsearch.index.VersionType versionType21 = deleteRequest18.versionType();
        java.lang.String str22 = deleteRequest18.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest18.index("hi!");
        java.lang.String str25 = deleteRequest18.index();
        long long26 = deleteRequest18.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest17.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest13.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = deleteRequest29.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.id("delete {[null][null][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.type("");
        org.elasticsearch.index.VersionType versionType39 = deleteRequest36.versionType();
        deleteRequest36.primaryTerm((long) (byte) -1);
        deleteRequest36.setParentTask("delete {[null][][null]}", (long) (byte) 0);
        java.lang.String[] strArray45 = deleteRequest36.indices();
        long long46 = deleteRequest36.version();
        org.elasticsearch.tasks.TaskId taskId47 = deleteRequest36.getParentTask();
        deleteRequest29.setParentTask(taskId47);
        deleteRequest0.setParentTask(taskId47);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + (-3L) + "'", long8 == (-3L));
        org.junit.Assert.assertNotNull(indicesOptions9);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "hi!" + "'", str25, "hi!");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + (-3L) + "'", long26 == (-3L));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(transportAddress30);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + (-3L) + "'", long46 == (-3L));
        org.junit.Assert.assertNotNull(taskId47);
    }

    @Test
    public void test05818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05818");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = null;
        deleteRequest1.remoteAddress(transportAddress2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        org.elasticsearch.index.VersionType versionType10 = deleteRequest7.versionType();
        java.lang.String str11 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest1.createTask((long) (byte) 100, "delete {[null][hi!][null]}", "delete {[][][]}", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue27 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.timeout(timeValue27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.timeout(timeValue27);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.setShardId(shardId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest38.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest42.setParentTask("hi!", 10L);
        java.lang.String[] strArray46 = deleteRequest42.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest47.setParentTask("hi!", 10L);
        java.lang.String[] strArray51 = deleteRequest47.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest47.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest42.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest41.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest41.setShardId(shardId55);
        org.elasticsearch.common.transport.TransportAddress transportAddress57 = null;
        deleteRequest41.remoteAddress(transportAddress57);
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task60 = deleteRequest29.createTask((long) 'a', "delete {[][][]}", "hi!", taskId59);
        org.elasticsearch.tasks.Task task61 = deleteRequest1.createTask((long) (-1), "delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}", "delete {[null][hi!][]}", taskId59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest1.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest1.id("delete {[delete {[null][null][null]}][][delete {[delete {[null][null][null]}][][]}]}");
        java.lang.String str66 = deleteRequest1.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest1.type("delete {[][][delete {[][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "delete {[delete {[null][null][null]}][][delete {[delete {[null][null][null]}][][]}]}" + "'", str66, "delete {[delete {[null][null][null]}][][delete {[delete {[null][null][null]}][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest68);
    }

    @Test
    public void test05819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05819");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.version((long) (short) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.index("delete {[delete {[][][]}][null][null]}");
        long long9 = deleteRequest8.seqNo();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test05820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05820");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        long long3 = deleteRequest0.seqNo();
        java.lang.String str4 = deleteRequest0.toString();
        java.lang.String str5 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest9.indicesOptions();
        java.lang.String str11 = deleteRequest9.getDescription();
        long long12 = deleteRequest9.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.routing("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}", "delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}", "delete {[null][delete {[][null][null]}][null]}");
        boolean boolean19 = deleteRequest18.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][]}", "delete {[null][][null]}", "delete {[][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue28 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.timeout(timeValue28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.index("");
        boolean boolean32 = deleteRequest31.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = deleteRequest37.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest37.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest35.timeout(timeValue41);
        org.elasticsearch.index.VersionType versionType43 = deleteRequest42.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest31.versionType(versionType43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest23.versionType(versionType43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId49 = deleteRequest48.shardId();
        org.elasticsearch.common.transport.TransportAddress transportAddress50 = null;
        deleteRequest48.remoteAddress(transportAddress50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest52.setParentTask("hi!", 10L);
        java.lang.String str56 = deleteRequest52.toString();
        org.elasticsearch.common.unit.TimeValue timeValue57 = deleteRequest52.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest48.timeout(timeValue57);
        org.elasticsearch.index.VersionType versionType59 = deleteRequest48.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest23.versionType(versionType59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest18.versionType(versionType59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest9.versionType(versionType59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.routing("delete {[delete {[null][null][null]}][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][null][null]}]}");
        deleteRequest64.primaryTerm((long) '#');
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][hi!][]}" + "'", str11, "delete {[null][hi!][]}");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertNotNull(actionRequestValidationException38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(versionType43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(shardId49);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "delete {[null][null][null]}" + "'", str56, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(timeValue57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(versionType59);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
    }

    @Test
    public void test05821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05821");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.id("delete {[null][null][null]}");
        long long6 = deleteRequest0.version();
        long long7 = deleteRequest0.version();
        long long8 = deleteRequest0.primaryTerm();
        java.lang.String str9 = deleteRequest0.parent();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + (-3L) + "'", long6 == (-3L));
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test05822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05822");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest2.shardId();
        java.lang.String str4 = deleteRequest2.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.version((long) (short) 100);
        long long7 = deleteRequest6.version();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 100L + "'", long7 == 100L);
    }

    @Test
    public void test05823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05823");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        java.lang.String[] strArray6 = deleteRequest5.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("delete {[][null][null]}");
        java.lang.String str9 = deleteRequest5.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(false);
        org.elasticsearch.index.VersionType versionType13 = deleteRequest10.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId17 = deleteRequest16.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.consistencyLevel(writeConsistencyLevel18);
        org.elasticsearch.index.VersionType versionType20 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest10.versionType(versionType20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest5.versionType(versionType20);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest5.consistencyLevel();
        long long24 = deleteRequest5.primaryTerm();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "" + "'", str9, "");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test05824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05824");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest2.index("delete {[][null][null]}");
        java.lang.String str7 = deleteRequest6.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue12 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.timeout(timeValue12);
        org.elasticsearch.common.transport.TransportAddress transportAddress14 = null;
        deleteRequest11.remoteAddress(transportAddress14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest18.indicesOptions();
        deleteRequest18.primaryTerm(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.refresh(true);
        org.elasticsearch.tasks.TaskId taskId31 = deleteRequest28.getParentTask();
        org.elasticsearch.tasks.Task task32 = deleteRequest18.createTask((long) (byte) 1, "", "delete {[null][null][null]}", taskId31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest33.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException38 = deleteRequest37.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest37.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue41 = deleteRequest40.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest33.timeout(timeValue41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest43.setParentTask("hi!", 10L);
        java.lang.String[] strArray47 = deleteRequest43.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest43.type("hi!");
        org.elasticsearch.index.VersionType versionType51 = deleteRequest50.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest33.versionType(versionType51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest18.versionType(versionType51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest11.versionType(versionType51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest6.versionType(versionType51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest6.id("delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput58 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest6.writeTo(streamOutput58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[delete {[][null][null]}][hi!][null]}" + "'", str7, "delete {[delete {[][null][null]}][hi!][null]}");
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(taskId31);
        org.junit.Assert.assertNotNull(task32);
        org.junit.Assert.assertNotNull(actionRequestValidationException38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(timeValue41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(versionType51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest57);
    }

    @Test
    public void test05825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05825");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest2.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.consistencyLevel(writeConsistencyLevel4);
        deleteRequest2.setParentTask("delete {[null][null][null]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest2.type("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest2.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest2.parent("delete {[null][null][]}");
        long long14 = deleteRequest2.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest2.routing("delete {[null][null][delete {[][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.index("delete {[delete {[delete {[null][null][null]}][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][null][null]}]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test05826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05826");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][]}][null][null]}", "delete {[delete {[null][null][null]}][delete {[null][null][null]}][]}", "delete {[delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][null][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput4 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05827");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        java.lang.String str2 = deleteRequest0.id();
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest0.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.routing("delete {[][null][null]}");
        java.lang.String str6 = deleteRequest0.getDescription();
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest0.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("delete {[null][delete {[delete {[][null][null]}][null][null]}][null]}");
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[null][null][null]}" + "'", str6, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
    }

    @Test
    public void test05828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05828");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(false);
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        java.lang.String str15 = deleteRequest11.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest18.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.refresh(false);
        org.elasticsearch.index.VersionType versionType25 = deleteRequest22.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.versionType(versionType25);
        deleteRequest26.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest26.getParentTask();
        deleteRequest17.setParentTask(taskId29);
        deleteRequest17.setParentTask("hi!", (long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = null;
        deleteRequest17.remoteAddress(transportAddress34);
        java.lang.String[] strArray36 = deleteRequest17.indices();
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest3.timeout(timeValue37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.version((long) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.refresh(false);
        org.elasticsearch.index.shard.IndexShard indexShard43 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete44 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest42, indexShard43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
    }

    @Test
    public void test05829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05829");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest0.remoteAddress(transportAddress5);
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest0.timeout();
        java.lang.String str8 = deleteRequest0.toString();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
    }

    @Test
    public void test05830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05830");
        org.elasticsearch.action.support.replication.ReplicationTask replicationTask0 = null;
        org.elasticsearch.action.support.replication.TransportReplicationAction.setPhase(replicationTask0, "delete {[delete {[null][null][hi!]}][null][null]}");
    }

    @Test
    public void test05831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05831");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        java.lang.String str2 = deleteRequest0.id();
        long long3 = deleteRequest0.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setShardId(shardId4);
        long long6 = deleteRequest5.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.version((long) 10);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.setShardId(shardId9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId14 = deleteRequest13.shardId();
        long long15 = deleteRequest13.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest16.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.refresh(false);
        org.elasticsearch.index.VersionType versionType23 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest19.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest13.versionType(versionType23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest5.versionType(versionType23);
        java.lang.String str27 = deleteRequest26.routing();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test05832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05832");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting8, "", (java.lang.Throwable) actionRequestValidationException11, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure15 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException11, "");
        java.lang.Throwable throwable16 = shardFailure15.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure18 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[][][hi!]}", throwable16, "delete {[][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[null][null][null]}][null][null]}", throwable16, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][null][null]}", throwable16, "delete {[delete {[null][null][null]}][][]}");
        java.lang.Throwable throwable23 = shardFailure22.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable16.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable23.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05833");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest7.setParentTask("hi!", 10L);
        java.lang.String[] strArray11 = deleteRequest7.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest12.setParentTask("hi!", 10L);
        java.lang.String[] strArray16 = deleteRequest12.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest12.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest7.consistencyLevel(writeConsistencyLevel17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest6.consistencyLevel(writeConsistencyLevel17);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest6.setShardId(shardId20);
        boolean boolean22 = deleteRequest21.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue23 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.timeout(timeValue23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.id("delete {[null][null][null]}");
        deleteRequest26.primaryTerm((long) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest26.parent("delete {[delete {[][null][null]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("delete {[][delete {[null][null][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
    }

    @Test
    public void test05834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05834");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.index("delete {[delete {[][][hi!]}][][delete {[][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[delete {[][][hi!]}][][delete {[][null][null]}]}");
        deleteRequest3.setParentTask("delete {[null][null][]}", (long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.timeout(timeValue13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest12.remoteAddress();
        java.lang.String str16 = deleteRequest12.index();
        java.lang.String str17 = deleteRequest12.type();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException18 = deleteRequest12.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue23 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.timeout(timeValue23);
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = null;
        deleteRequest22.remoteAddress(transportAddress25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest27.setParentTask("hi!", 10L);
        java.lang.String str31 = deleteRequest27.toString();
        long long32 = deleteRequest27.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue37 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.timeout(timeValue37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest27.timeout(timeValue37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest22.timeout(timeValue37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest12.timeout(timeValue37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest3.timeout(timeValue37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions47 = deleteRequest46.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId48 = deleteRequest46.shardId();
        org.elasticsearch.index.VersionType versionType49 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest46.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest52.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException57 = deleteRequest56.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest56.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue60 = deleteRequest59.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest52.timeout(timeValue60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest62.setParentTask("hi!", 10L);
        java.lang.String[] strArray66 = deleteRequest62.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel67 = deleteRequest62.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest62.type("hi!");
        org.elasticsearch.index.VersionType versionType70 = deleteRequest69.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest52.versionType(versionType70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest46.versionType(versionType70);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest42.versionType(versionType70);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "" + "'", str17, "");
        org.junit.Assert.assertNull(actionRequestValidationException18);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[null][null][null]}" + "'", str31, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + (-3L) + "'", long32 == (-3L));
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(indicesOptions47);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertNotNull(versionType49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(actionRequestValidationException57);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(timeValue60);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel67 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel67.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(versionType70);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(deleteRequest73);
    }

    @Test
    public void test05835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05835");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId4 = null;
        deleteRequest0.setParentTask(taskId4);
        deleteRequest0.seqNo((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest11.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest11.shardId();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.id("delete {[null][hi!][]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest18.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.type("delete {[null][delete {[][null][null]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest18.id("delete {[delete {[null][null][null]}][delete {[null][null][null]}][delete {[delete {[null][null][null]}][][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
    }

    @Test
    public void test05836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05836");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][delete {[hi!][delete {[delete {[null][null][null]}][null][null]}][delete {[delete {[null][null][null]}][null][null]}]}][]}");
    }

    @Test
    public void test05837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05837");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest2.shardId();
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = null;
        deleteRequest2.remoteAddress(transportAddress4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest6.setParentTask("hi!", 10L);
        java.lang.String str10 = deleteRequest6.toString();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest2.timeout(timeValue11);
        java.lang.String str13 = deleteRequest2.getDescription();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][null]}" + "'", str10, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
    }

    @Test
    public void test05838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05838");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = null;
        deleteRequest8.remoteAddress(transportAddress9);
        long long11 = deleteRequest8.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest8.version(32L);
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest8.indicesOptions();
        org.elasticsearch.common.io.stream.StreamInput streamInput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest8.readFrom(streamInput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(indicesOptions14);
    }

    @Test
    public void test05839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05839");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.version((long) ' ');
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.routing("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("delete {[null][null][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest12.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.consistencyLevel(writeConsistencyLevel22);
        java.lang.String str24 = deleteRequest23.routing();
        org.elasticsearch.index.VersionType versionType25 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest15.parent("delete {[][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest9.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.routing("delete {[hi!][delete {[delete {[null][null][null]}][null][null]}][delete {[delete {[null][null][null]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest30.routing("delete {[delete {[][null][null]}][][hi!]}");
        org.elasticsearch.index.shard.IndexShard indexShard35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete36 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest34, indexShard35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
    }

    @Test
    public void test05840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05840");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        deleteRequest3.primaryTerm((long) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        deleteRequest3.seqNo((-3L));
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest3.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress8);
    }

    @Test
    public void test05841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05841");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        java.lang.String str5 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest9.indicesOptions();
        java.lang.String str11 = deleteRequest9.routing();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
    }

    @Test
    public void test05842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05842");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(false);
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.versionType(versionType14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.type("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest17.remoteAddress(transportAddress20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest22.setParentTask("hi!", 10L);
        java.lang.String[] strArray26 = deleteRequest22.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest17.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest3.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest3.version((long) 10);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest3.setShardId(shardId32);
        java.lang.String[] strArray34 = deleteRequest3.indices();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(strArray34);
    }

    @Test
    public void test05843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05843");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.refresh(true);
        java.lang.String[] strArray11 = deleteRequest8.indices();
        java.lang.String str12 = deleteRequest8.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.refresh(true);
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest19.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest8.createTask(100L, "delete {[null][null][null]}", "delete {[null][null][null]}", taskId22);
        java.lang.String str24 = deleteRequest8.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.refresh(false);
        org.elasticsearch.index.VersionType versionType28 = deleteRequest25.versionType();
        java.lang.String str29 = deleteRequest25.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest25.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue32 = deleteRequest31.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest8.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest0.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest0.type("delete {[][delete {[null][null][]}][delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput37 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest36.writeTo(streamOutput37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "delete {[][null][null]}" + "'", str12, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
    }

    @Test
    public void test05844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05844");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest5.setParentTask("hi!", 10L);
        java.lang.String[] strArray9 = deleteRequest5.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("hi!");
        deleteRequest15.seqNo((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "", "delete {[][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest21.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest15.timeout(timeValue22);
        long long24 = deleteRequest23.seqNo();
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest23.timeout();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 1L + "'", long24 == 1L);
        org.junit.Assert.assertNotNull(timeValue25);
    }

    @Test
    public void test05845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05845");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        java.lang.String[] strArray6 = deleteRequest3.indices();
        java.lang.String str7 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.refresh(true);
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest3.createTask(100L, "delete {[null][null][null]}", "delete {[null][null][null]}", taskId17);
        java.lang.String str19 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.refresh(false);
        org.elasticsearch.index.VersionType versionType23 = deleteRequest20.versionType();
        java.lang.String str24 = deleteRequest20.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest20.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.timeout(timeValue27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest3.version(0L);
        java.lang.String str31 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions33 = deleteRequest32.indicesOptions();
        java.lang.String str34 = deleteRequest32.id();
        long long35 = deleteRequest32.primaryTerm();
        java.lang.String str36 = deleteRequest32.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest32.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.routing("delete {[][][hi!]}");
        deleteRequest40.setParentTask("delete {[null][null][hi!]}", (long) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest40.type("delete {[delete {[null][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest46.setParentTask("hi!", 10L);
        java.lang.String[] strArray50 = deleteRequest46.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress51 = null;
        deleteRequest46.remoteAddress(transportAddress51);
        org.elasticsearch.common.unit.TimeValue timeValue53 = deleteRequest46.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest40.timeout(timeValue53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest3.timeout(timeValue53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest3.refresh(false);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][null][null]}" + "'", str7, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[][null][null]}" + "'", str31, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(indicesOptions33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(timeValue53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest57);
    }

    @Test
    public void test05846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05846");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException9 = deleteRequest8.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting6, "", (java.lang.Throwable) actionRequestValidationException9, "hi!");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = shardFailure11.routing;
        java.lang.String str13 = shardFailure11.reason;
        java.lang.Throwable throwable14 = shardFailure11.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure16 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "delete {[delete {[][null][null]}][hi!][null]}", throwable14, "delete {[][][hi!]}");
        java.lang.Throwable throwable17 = shardFailure16.cause;
        java.lang.Throwable throwable18 = shardFailure16.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure20 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[delete {[null][null][null]}][][delete {[delete {[null][null][null]}][][]}]}", throwable18, "delete {[delete {[null][null][delete {[null][null][null]}]}][][hi!]}");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure22 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][delete {[][][delete {[][null][null]}]}][null]}", throwable18, "delete {[null][delete {[][][delete {[][][hi!]}]}][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException9);
        org.junit.Assert.assertNull(shardRouting12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable18.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05847");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.routing("delete {[null][null][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.routing("");
        java.lang.String[] strArray12 = deleteRequest11.indices();
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest11.timeout();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(timeValue13);
    }

    @Test
    public void test05848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05848");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String str4 = deleteRequest0.toString();
        long long5 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue10 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.timeout(timeValue10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.timeout(timeValue10);
        org.elasticsearch.index.VersionType versionType13 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.refresh(false);
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        java.lang.String str20 = deleteRequest16.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest16.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest22.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest12.timeout(timeValue23);
        boolean boolean25 = deleteRequest24.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue26 = deleteRequest24.timeout();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(timeValue26);
    }

    @Test
    public void test05849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05849");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        java.lang.String[] strArray6 = deleteRequest3.indices();
        java.lang.String str7 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.refresh(true);
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest3.createTask(100L, "delete {[null][null][null]}", "delete {[null][null][null]}", taskId17);
        java.lang.String str19 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.refresh(false);
        org.elasticsearch.index.VersionType versionType23 = deleteRequest20.versionType();
        java.lang.String str24 = deleteRequest20.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest20.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.timeout(timeValue27);
        org.elasticsearch.action.support.IndicesOptions indicesOptions29 = deleteRequest28.indicesOptions();
        org.elasticsearch.index.VersionType versionType30 = deleteRequest28.versionType();
        java.lang.String str31 = deleteRequest28.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest28.version((long) '4');
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = null;
        deleteRequest28.remoteAddress(transportAddress34);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][null][null]}" + "'", str7, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(indicesOptions29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest33);
    }

    @Test
    public void test05850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05850");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue6 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.timeout(timeValue6);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = null;
        deleteRequest5.remoteAddress(transportAddress8);
        java.lang.String str10 = deleteRequest5.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest5.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest5.timeout();
        java.lang.String str16 = deleteRequest5.routing();
        deleteRequest5.setParentTask("delete {[null][null][null]}", (long) (byte) 1);
        boolean boolean20 = deleteRequest5.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions22 = deleteRequest21.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.refresh(false);
        org.elasticsearch.index.VersionType versionType28 = deleteRequest25.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest24.versionType(versionType28);
        deleteRequest29.seqNo((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest29.version(10L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel34 = deleteRequest33.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest5.consistencyLevel(writeConsistencyLevel34);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "hi!", deleteRequest5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(indicesOptions22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel34 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel34.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest35);
    }

    @Test
    public void test05851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05851");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.refresh(true);
        long long7 = deleteRequest0.version();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.setShardId(shardId8);
        java.lang.String str10 = deleteRequest9.routing();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + (-3L) + "'", long7 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test05852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05852");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest2.setParentTask("hi!", 10L);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure8 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException6, "delete {[null][null][null]}");
        java.lang.String str9 = shardFailure8.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure8.routing;
        java.lang.String str11 = shardFailure8.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting12 = shardFailure8.routing;
        java.lang.String str13 = shardFailure8.reason;
        java.lang.Throwable throwable14 = shardFailure8.cause;
        java.lang.String str15 = shardFailure8.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting16 = shardFailure8.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardRouting10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(shardRouting12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[][null][null]}" + "'", str13, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable14.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][null][null]}" + "'", str15, "delete {[][null][null]}");
        org.junit.Assert.assertNull(shardRouting16);
    }

    @Test
    public void test05853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05853");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(false);
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        java.lang.String str15 = deleteRequest11.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest18.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.refresh(false);
        org.elasticsearch.index.VersionType versionType25 = deleteRequest22.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.versionType(versionType25);
        deleteRequest26.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest26.getParentTask();
        deleteRequest17.setParentTask(taskId29);
        deleteRequest17.setParentTask("hi!", (long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = null;
        deleteRequest17.remoteAddress(transportAddress34);
        java.lang.String[] strArray36 = deleteRequest17.indices();
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest3.timeout(timeValue37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.version((long) 0);
        java.lang.String str41 = deleteRequest38.index();
        deleteRequest38.primaryTerm((long) '#');
        java.lang.String str44 = deleteRequest38.id();
        java.lang.String str45 = deleteRequest38.type();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test05854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05854");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest6.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException11 = deleteRequest10.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest6.timeout(timeValue14);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.refresh(false);
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest18.getParentTask();
        deleteRequest6.setParentTask(taskId19);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel21 = deleteRequest6.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = deleteRequest22.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest22.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.refresh(false);
        org.elasticsearch.index.VersionType versionType29 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest25.versionType(versionType29);
        java.lang.String str31 = deleteRequest30.type();
        org.elasticsearch.index.VersionType versionType32 = deleteRequest30.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest6.versionType(versionType32);
        java.lang.String str34 = deleteRequest33.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest41.refresh(true);
        org.elasticsearch.tasks.TaskId taskId44 = deleteRequest41.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions49 = deleteRequest48.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress52 = null;
        deleteRequest48.remoteAddress(transportAddress52);
        org.elasticsearch.tasks.TaskId taskId54 = deleteRequest48.getParentTask();
        org.elasticsearch.tasks.Task task55 = deleteRequest41.createTask((long) 1, "hi!", "delete {[delete {[][null][null]}][hi!][null]}", taskId54);
        org.elasticsearch.tasks.Task task56 = deleteRequest33.createTask((long) (-1), "delete {[null][][null]}", "delete {[null][][null]}", taskId54);
        org.elasticsearch.tasks.Task task57 = deleteRequest2.createTask(0L, "delete {[delete {[null][null][]}][delete {[hi!][null][null]}][delete {[null][null][delete {[null][null][null]}]}]}", "delete {[null][hi!][null]}", taskId54);
        java.lang.Class<?> wildcardClass58 = deleteRequest2.getClass();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(actionRequestValidationException11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel21 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel21.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(taskId44);
        org.junit.Assert.assertNotNull(indicesOptions49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(taskId54);
        org.junit.Assert.assertNotNull(task55);
        org.junit.Assert.assertNotNull(task56);
        org.junit.Assert.assertNotNull(task57);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test05855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05855");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][][delete {[][null][null]}]}][hi!][null]}", "delete {[null][null][delete {[null][null][delete {[null][null][null]}]}]}", "delete {[hi!][delete {[delete {[null][null][null]}][null][null]}][delete {[delete {[null][null][null]}][null][null]}]}");
    }

    @Test
    public void test05856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05856");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[delete {[null][hi!][]}][null][null]}", "");
    }

    @Test
    public void test05857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05857");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest0.remoteAddress(transportAddress6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.refresh(true);
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest0.indicesOptions();
        long long11 = deleteRequest0.seqNo();
        org.elasticsearch.index.shard.ShardId shardId12 = deleteRequest0.shardId();
        java.lang.String str13 = deleteRequest0.type();
        java.lang.String str14 = deleteRequest0.parent();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(shardId12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test05858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05858");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.version((long) ' ');
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.routing("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.parent("delete {[null][null][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest12.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId21 = deleteRequest20.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.consistencyLevel(writeConsistencyLevel22);
        java.lang.String str24 = deleteRequest23.routing();
        org.elasticsearch.index.VersionType versionType25 = deleteRequest23.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest15.parent("delete {[][null][null]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest15.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest9.consistencyLevel(writeConsistencyLevel29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.refresh(false);
        deleteRequest33.setParentTask("hi!", (long) (byte) 100);
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest33.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest30.timeout(timeValue37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest30.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest30.version(100L);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
    }

    @Test
    public void test05859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05859");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = deleteRequest3.consistencyLevel();
        java.lang.String str5 = deleteRequest3.parent();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel4 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel4.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "" + "'", str5, "");
    }

    @Test
    public void test05860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05860");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.refresh(false);
        boolean boolean5 = deleteRequest2.getShouldPersistResult();
        java.lang.String[] strArray6 = deleteRequest2.indices();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[null][null][]}][delete {[hi!][null][null]}][delete {[null][null][delete {[null][null][null]}]}]}", (java.lang.Throwable) actionRequestValidationException7, "delete {[null][hi!][null]}");
        java.lang.String str10 = shardFailure9.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = shardFailure9.routing;
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[delete {[null][null][]}][delete {[hi!][null][null]}][delete {[null][null][delete {[null][null][null]}]}]}" + "'", str10, "delete {[delete {[null][null][]}][delete {[hi!][null][null]}][delete {[null][null][delete {[null][null][null]}]}]}");
        org.junit.Assert.assertNull(shardRouting11);
    }

    @Test
    public void test05861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05861");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        java.lang.String[] strArray6 = deleteRequest3.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.version((-1L));
        long long9 = deleteRequest8.primaryTerm();
        deleteRequest8.setParentTask("delete {[hi!][][delete {[][null][null]}]}", 100L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.type("delete {[delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[null][][null]}][null][null]}][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test05862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05862");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId4 = null;
        deleteRequest0.setParentTask(taskId4);
        deleteRequest0.seqNo((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.index("delete {[null][null][]}");
        boolean boolean10 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.index("delete {[delete {[][null][null]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = null;
        deleteRequest14.remoteAddress(transportAddress15);
        java.lang.String str17 = deleteRequest14.getDescription();
        org.elasticsearch.index.VersionType versionType18 = deleteRequest14.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest0.versionType(versionType18);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean24 = deleteRequest23.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest26.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.version((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.refresh(false);
        org.elasticsearch.index.VersionType versionType35 = deleteRequest32.versionType();
        java.lang.String str36 = deleteRequest32.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest32.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest38.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest38.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest38.version(0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest38.id("delete {[delete {[null][][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue52 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.timeout(timeValue52);
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = null;
        deleteRequest51.remoteAddress(transportAddress54);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest51.id("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.routing("hi!");
        deleteRequest59.setParentTask("hi!", (long) (short) -1);
        deleteRequest59.setParentTask("hi!", (long) 'a');
        deleteRequest59.setParentTask("delete {[][][hi!]}", (long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException75 = deleteRequest74.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException77 = deleteRequest76.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest76.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue80 = deleteRequest79.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest74.timeout(timeValue80);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest74.index("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress84 = null;
        deleteRequest74.remoteAddress(transportAddress84);
        org.elasticsearch.index.shard.ShardId shardId86 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest74.setShardId(shardId86);
        org.elasticsearch.tasks.TaskId taskId88 = deleteRequest74.getParentTask();
        org.elasticsearch.tasks.Task task89 = deleteRequest59.createTask((long) '#', "", "", taskId88);
        deleteRequest51.setParentTask(taskId88);
        org.elasticsearch.tasks.Task task91 = deleteRequest38.createTask((long) (short) 100, "delete {[][][]}", "delete {[delete {[null][null][null]}][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][null][null]}]}", taskId88);
        deleteRequest31.setParentTask(taskId88);
        deleteRequest19.setParentTask(taskId88);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "delete {[delete {[][][]}][null][null]}" + "'", str17, "delete {[delete {[][][]}][null][null]}");
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(actionRequestValidationException75);
        org.junit.Assert.assertNotNull(actionRequestValidationException77);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(timeValue80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(taskId88);
        org.junit.Assert.assertNotNull(task89);
        org.junit.Assert.assertNotNull(task91);
    }

    @Test
    public void test05863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05863");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean6 = deleteRequest5.refresh();
        deleteRequest5.seqNo((long) '#');
        deleteRequest5.primaryTerm((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest11.indicesOptions();
        org.elasticsearch.index.VersionType versionType13 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest5.versionType(versionType13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.index("delete {[null][hi!][]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[delete {[null][null][null]}][][delete {[delete {[null][null][null]}][][]}]}", deleteRequest18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
    }

    @Test
    public void test05864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05864");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest4.index("delete {[][null][null]}");
        deleteRequest8.seqNo((long) 10);
        org.elasticsearch.index.VersionType versionType11 = deleteRequest8.versionType();
        org.elasticsearch.tasks.TaskId taskId12 = deleteRequest8.getParentTask();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[hi!][delete {[null][hi!][null]}][]}", deleteRequest8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNotNull(taskId12);
    }

    @Test
    public void test05865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05865");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest16.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest20.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.refresh(false);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        deleteRequest16.setParentTask(taskId29);
        org.elasticsearch.tasks.Task task31 = deleteRequest12.createTask(0L, "delete {[][null][null]}", "", taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest12.parent("delete {[delete {[null][null][null]}][][]}");
        long long34 = deleteRequest12.seqNo();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
    }

    @Test
    public void test05866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05866");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        java.lang.Throwable throwable8 = shardFailure7.cause;
        java.lang.Throwable throwable9 = shardFailure7.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable9, "hi!");
        java.lang.String str12 = shardFailure11.indexUUID;
        java.lang.String str13 = shardFailure11.indexUUID;
        java.lang.String str14 = shardFailure11.reason;
        java.lang.String str15 = shardFailure11.reason;
        java.lang.String str16 = shardFailure11.reason;
        java.lang.Throwable throwable17 = shardFailure11.cause;
        java.lang.String str18 = shardFailure11.reason;
        java.lang.String str19 = shardFailure11.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = shardFailure11.routing;
        java.lang.String str21 = shardFailure11.indexUUID;
        java.lang.Throwable throwable22 = shardFailure11.cause;
        java.lang.String str23 = shardFailure11.reason;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(shardRouting20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable22.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test05867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05867");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest16.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest20.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.refresh(false);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        deleteRequest16.setParentTask(taskId29);
        org.elasticsearch.tasks.Task task31 = deleteRequest12.createTask(0L, "delete {[][null][null]}", "", taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest12.parent("delete {[delete {[null][null][null]}][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.parent("delete {[delete {[null][null][null]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest33.type("delete {[delete {[null][][null]}][delete {[null][null][]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest33.version((long) (byte) 10);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(actionRequestValidationException34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
    }

    @Test
    public void test05868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05868");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        long long3 = deleteRequest0.seqNo();
        java.lang.String str4 = deleteRequest0.toString();
        java.lang.String str5 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.type("hi!");
        long long10 = deleteRequest9.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.refresh(false);
        boolean boolean16 = deleteRequest13.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue21 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.timeout(timeValue21);
        org.elasticsearch.common.transport.TransportAddress transportAddress23 = null;
        deleteRequest20.remoteAddress(transportAddress23);
        java.lang.String str25 = deleteRequest20.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest20.parent("hi!");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest20.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest13.versionType(versionType28);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest13.id("");
        java.lang.String str32 = deleteRequest31.parent();
        java.lang.String str33 = deleteRequest31.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = null;
        deleteRequest36.remoteAddress(transportAddress38);
        java.lang.String str40 = deleteRequest36.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest36.parent("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel43 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest31.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest9.consistencyLevel(writeConsistencyLevel43);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput46 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest45.writeTo(streamOutput46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel43 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel43.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest45);
    }

    @Test
    public void test05869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05869");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest3.timeout();
        long long14 = deleteRequest3.primaryTerm();
        java.lang.String str15 = deleteRequest3.type();
        java.lang.String str16 = deleteRequest3.routing();
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest3.indicesOptions();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel18 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.consistencyLevel(writeConsistencyLevel23);
        java.lang.String str25 = deleteRequest21.getDescription();
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest21.getParentTask();
        org.elasticsearch.index.VersionType versionType27 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest3.versionType(versionType27);
        long long29 = deleteRequest3.version();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel18 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel18.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "delete {[null][null][null]}" + "'", str25, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 1L + "'", long29 == 1L);
    }

    @Test
    public void test05870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05870");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        long long3 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.parent("");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException6 = deleteRequest0.validate();
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest0.getParentTask();
        org.elasticsearch.index.VersionType versionType8 = deleteRequest0.versionType();
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest0.indicesOptions();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest0.writeTo(streamOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNotNull(indicesOptions9);
    }

    @Test
    public void test05871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05871");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions3 = deleteRequest2.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.parent("");
        java.lang.String str6 = deleteRequest5.type();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest5.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "hi!", (java.lang.Throwable) actionRequestValidationException7, "delete {[null][null][hi!]}");
        java.lang.String str10 = shardFailure9.indexUUID;
        java.lang.String str11 = shardFailure9.reason;
        java.lang.String str12 = shardFailure9.reason;
        java.lang.Throwable throwable13 = shardFailure9.cause;
        org.junit.Assert.assertNotNull(indicesOptions3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[null][null][hi!]}" + "'", str10, "delete {[null][null][hi!]}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "hi!" + "'", str11, "hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05872");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("");
        boolean boolean8 = deleteRequest7.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.index("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest11.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest13.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest11.timeout(timeValue17);
        org.elasticsearch.index.VersionType versionType19 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest7.versionType(versionType19);
        java.lang.String str21 = deleteRequest7.parent();
        deleteRequest7.seqNo((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.consistencyLevel(writeConsistencyLevel27);
        org.elasticsearch.common.unit.TimeValue timeValue29 = deleteRequest28.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest7.timeout(timeValue29);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(timeValue29);
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test05873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05873");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        long long11 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.id("delete {[delete {[][null][null]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions15 = deleteRequest14.indicesOptions();
        java.lang.String str16 = deleteRequest14.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest17.setParentTask("hi!", 10L);
        java.lang.String[] strArray21 = deleteRequest17.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel22 = deleteRequest17.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.consistencyLevel(writeConsistencyLevel22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.setShardId(shardId24);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel26 = deleteRequest23.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.consistencyLevel(writeConsistencyLevel26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId31 = deleteRequest30.shardId();
        long long32 = deleteRequest30.seqNo();
        org.elasticsearch.index.shard.ShardId shardId33 = deleteRequest30.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId37 = deleteRequest36.shardId();
        deleteRequest36.setParentTask("delete {[][null][null]}", 0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest36.routing("delete {[delete {[][null][null]}][hi!][null]}");
        java.lang.String str43 = deleteRequest42.parent();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest42.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest30.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest27.consistencyLevel(writeConsistencyLevel44);
        java.lang.String str47 = deleteRequest27.id();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(indicesOptions15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel22 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel22.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel26 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel26.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNull(shardId33);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "delete {[delete {[][null][null]}][hi!][null]}" + "'", str47, "delete {[delete {[][null][null]}][hi!][null]}");
    }

    @Test
    public void test05874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05874");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        org.elasticsearch.tasks.TaskId taskId6 = deleteRequest3.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.refresh(true);
        java.lang.String str11 = deleteRequest8.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions13 = deleteRequest12.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.refresh(false);
        org.elasticsearch.index.VersionType versionType19 = deleteRequest16.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest15.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.type("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = null;
        deleteRequest22.remoteAddress(transportAddress25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest27.setParentTask("hi!", 10L);
        java.lang.String[] strArray31 = deleteRequest27.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel32 = deleteRequest27.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest22.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest8.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest3.consistencyLevel(writeConsistencyLevel32);
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest3.timeout();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException37 = deleteRequest3.validate();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(taskId6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(indicesOptions13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel32 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel32.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(actionRequestValidationException37);
    }

    @Test
    public void test05875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05875");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[][][hi!]}][null]}");
        deleteRequest1.seqNo(0L);
    }

    @Test
    public void test05876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05876");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        java.lang.String str11 = deleteRequest10.routing();
        java.lang.String str12 = deleteRequest10.parent();
        org.elasticsearch.index.VersionType versionType13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.versionType(versionType13);
        java.lang.String str15 = deleteRequest10.routing();
        java.lang.String str16 = deleteRequest10.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.refresh(false);
        org.elasticsearch.index.VersionType versionType20 = deleteRequest17.versionType();
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest17.timeout();
        org.elasticsearch.index.VersionType versionType22 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest10.versionType(versionType22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest24.setParentTask("hi!", 10L);
        java.lang.String[] strArray28 = deleteRequest24.indices();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest24.validate();
        org.elasticsearch.index.VersionType versionType30 = deleteRequest24.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest23.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest23.parent("delete {[null][delete {[][null][null]}][null]}");
        java.lang.String str34 = deleteRequest23.parent();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(versionType20);
        org.junit.Assert.assertNotNull(timeValue21);
        org.junit.Assert.assertNotNull(versionType22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(actionRequestValidationException29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "delete {[null][delete {[][null][null]}][null]}" + "'", str34, "delete {[null][delete {[][null][null]}][null]}");
    }

    @Test
    public void test05877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05877");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        long long9 = deleteRequest3.version();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.type("hi!");
        java.lang.String[] strArray13 = deleteRequest3.indices();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-3L) + "'", long9 == (-3L));
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test05878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05878");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][null][null]}][null][null]}", "delete {[null][null][delete {[][][hi!]}]}", "delete {[delete {[][][hi!]}][][delete {[][null][null]}]}");
        long long4 = deleteRequest3.primaryTerm();
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test05879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05879");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest8.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.routing();
        org.elasticsearch.index.VersionType versionType13 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.versionType(versionType13);
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest14.shardId();
        java.lang.Class<?> wildcardClass17 = deleteRequest14.getClass();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test05880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05880");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue9 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.timeout(timeValue9);
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest8.remoteAddress(transportAddress11);
        java.lang.String str13 = deleteRequest8.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.parent("hi!");
        org.elasticsearch.tasks.TaskId taskId16 = deleteRequest15.getParentTask();
        deleteRequest0.setParentTask(taskId16);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest0.setShardId(shardId18);
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId16);
        org.junit.Assert.assertNotNull(deleteRequest19);
    }

    @Test
    public void test05881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05881");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId4 = null;
        deleteRequest0.setParentTask(taskId4);
        deleteRequest0.seqNo((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest11.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest11.shardId();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        long long18 = deleteRequest16.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest16.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest16.version((long) 10);
        long long22 = deleteRequest16.version();
        org.elasticsearch.index.VersionType versionType23 = deleteRequest16.versionType();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 10L + "'", long22 == 10L);
        org.junit.Assert.assertNotNull(versionType23);
    }

    @Test
    public void test05882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05882");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest3.timeout();
        long long14 = deleteRequest3.primaryTerm();
        java.lang.String str15 = deleteRequest3.type();
        java.lang.String str16 = deleteRequest3.index();
        java.lang.String str17 = deleteRequest3.routing();
        java.lang.String str18 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.index("delete {[delete {[][null][null]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue25 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.timeout(timeValue25);
        org.elasticsearch.common.transport.TransportAddress transportAddress27 = null;
        deleteRequest24.remoteAddress(transportAddress27);
        java.lang.String str29 = deleteRequest24.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.id("");
        java.lang.String str32 = deleteRequest31.routing();
        java.lang.String str33 = deleteRequest31.parent();
        org.elasticsearch.index.VersionType versionType34 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest31.versionType(versionType34);
        java.lang.String str36 = deleteRequest31.routing();
        java.lang.String str37 = deleteRequest31.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.refresh(false);
        org.elasticsearch.index.VersionType versionType41 = deleteRequest38.versionType();
        org.elasticsearch.common.unit.TimeValue timeValue42 = deleteRequest38.timeout();
        org.elasticsearch.index.VersionType versionType43 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest31.versionType(versionType43);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest45.setParentTask("hi!", 10L);
        java.lang.String[] strArray49 = deleteRequest45.indices();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException50 = deleteRequest45.validate();
        org.elasticsearch.index.VersionType versionType51 = deleteRequest45.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest44.versionType(versionType51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest3.versionType(versionType51);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("", "delete {[null][null][]}", "delete {[delete {[null][null][null]}][][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest60.id("delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}");
        org.elasticsearch.tasks.TaskId taskId63 = deleteRequest60.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest60.type("delete {[delete {[null][null][null]}][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][null][null]}]}");
        java.lang.String str66 = deleteRequest65.type();
        org.elasticsearch.tasks.TaskId taskId67 = deleteRequest65.getParentTask();
        org.elasticsearch.tasks.Task task68 = deleteRequest3.createTask((-1L), "delete {[null][null][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}]}", "delete {[hi!][null][delete {[null][hi!][null]}]}", taskId67);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "" + "'", str37, "");
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(versionType41);
        org.junit.Assert.assertNotNull(timeValue42);
        org.junit.Assert.assertNotNull(versionType43);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(actionRequestValidationException50);
        org.junit.Assert.assertNotNull(versionType51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(taskId63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "delete {[delete {[null][null][null]}][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][null][null]}]}" + "'", str66, "delete {[delete {[null][null][null]}][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][null][null]}]}");
        org.junit.Assert.assertNotNull(taskId67);
        org.junit.Assert.assertNotNull(task68);
    }

    @Test
    public void test05883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05883");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        long long3 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = deleteRequest5.remoteAddress();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest5.consistencyLevel();
        long long8 = deleteRequest5.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest9.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException14 = deleteRequest13.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest16.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest9.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest19.setParentTask("hi!", 10L);
        java.lang.String[] strArray23 = deleteRequest19.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.type("hi!");
        org.elasticsearch.index.VersionType versionType27 = deleteRequest26.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest9.versionType(versionType27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest9.setShardId(shardId29);
        java.lang.String str31 = deleteRequest30.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.type("delete {[null][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest34.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.type("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest36.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions44 = deleteRequest43.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest43.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress47 = null;
        deleteRequest43.remoteAddress(transportAddress47);
        org.elasticsearch.tasks.TaskId taskId49 = deleteRequest43.getParentTask();
        org.elasticsearch.tasks.Task task50 = deleteRequest36.createTask((long) (short) 1, "delete {[null][hi!][]}", "delete {[delete {[][][hi!]}][][delete {[][null][null]}]}", taskId49);
        deleteRequest30.setParentTask(taskId49);
        deleteRequest5.setParentTask(taskId49);
        java.lang.String str53 = deleteRequest5.type();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(actionRequestValidationException14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(indicesOptions44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(taskId49);
        org.junit.Assert.assertNotNull(task50);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test05884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05884");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        long long3 = deleteRequest0.seqNo();
        long long4 = deleteRequest0.seqNo();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test05885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05885");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        java.lang.String[] strArray6 = deleteRequest3.indices();
        java.lang.String str7 = deleteRequest3.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.refresh(true);
        org.elasticsearch.tasks.TaskId taskId17 = deleteRequest14.getParentTask();
        org.elasticsearch.tasks.Task task18 = deleteRequest3.createTask(100L, "delete {[null][null][null]}", "delete {[null][null][null]}", taskId17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest3.setShardId(shardId19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.parent("delete {[][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException23 = deleteRequest20.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest20.index("delete {[][][]}");
        boolean boolean26 = deleteRequest25.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest25.index("delete {[null][delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}][null]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][null][null]}" + "'", str7, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(taskId17);
        org.junit.Assert.assertNotNull(task18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(actionRequestValidationException23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(deleteRequest28);
    }

    @Test
    public void test05886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05886");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.refresh(false);
        boolean boolean11 = deleteRequest8.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue16 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.timeout(timeValue16);
        org.elasticsearch.common.transport.TransportAddress transportAddress18 = null;
        deleteRequest15.remoteAddress(transportAddress18);
        java.lang.String str20 = deleteRequest15.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest15.parent("hi!");
        org.elasticsearch.index.VersionType versionType23 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest8.versionType(versionType23);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest8.validate();
        java.lang.String str26 = deleteRequest8.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest27.setParentTask("hi!", 10L);
        java.lang.String str31 = deleteRequest27.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.refresh(false);
        org.elasticsearch.tasks.TaskId taskId38 = deleteRequest37.getParentTask();
        org.elasticsearch.tasks.Task task39 = deleteRequest27.createTask((long) (-1), "", "hi!", taskId38);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest27.setShardId(shardId40);
        org.elasticsearch.common.transport.TransportAddress transportAddress42 = deleteRequest41.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "");
        long long47 = deleteRequest46.seqNo();
        long long48 = deleteRequest46.version();
        boolean boolean49 = deleteRequest46.refresh();
        org.elasticsearch.tasks.TaskId taskId50 = deleteRequest46.getParentTask();
        deleteRequest41.setParentTask(taskId50);
        deleteRequest8.setParentTask(taskId50);
        org.elasticsearch.tasks.Task task53 = deleteRequest2.createTask(100L, "delete {[null][null][null]}", "delete {[hi!][delete {[null][hi!][null]}][]}", taskId50);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest2.index("delete {[null][delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}][null]}");
        java.lang.String[] strArray56 = deleteRequest2.indices();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(versionType23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(actionRequestValidationException25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[null][null][null]}" + "'", str26, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "delete {[null][null][null]}" + "'", str31, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(taskId38);
        org.junit.Assert.assertNotNull(task39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNull(transportAddress42);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + (-3L) + "'", long48 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(taskId50);
        org.junit.Assert.assertNotNull(task53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(strArray56);
    }

    @Test
    public void test05887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05887");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][]}", "delete {[delete {[][][hi!]}][][delete {[][null][null]}]}", "delete {[delete {[][null][null]}][hi!][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        java.lang.String str8 = deleteRequest4.type();
        java.lang.String str9 = deleteRequest4.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest4.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(false);
        long long14 = deleteRequest11.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.version((long) (short) 0);
        deleteRequest16.setParentTask("delete {[null][null][null]}", (long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions24 = deleteRequest23.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest23.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.refresh(false);
        org.elasticsearch.index.VersionType versionType30 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest26.versionType(versionType30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest26.refresh(true);
        org.elasticsearch.tasks.TaskId taskId34 = deleteRequest26.getParentTask();
        org.elasticsearch.tasks.Task task35 = deleteRequest16.createTask((long) (byte) 0, "delete {[delete {[][null][null]}][hi!][null]}", "delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}", taskId34);
        deleteRequest3.setParentTask(taskId34);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "delete {[null][null][null]}" + "'", str9, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(indicesOptions24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(versionType30);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(taskId34);
        org.junit.Assert.assertNotNull(task35);
    }

    @Test
    public void test05888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05888");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.type("");
        java.lang.String str7 = deleteRequest6.type();
        java.lang.String[] strArray8 = deleteRequest6.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest6.remoteAddress();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest6.indicesOptions();
        long long11 = deleteRequest6.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest6.index("delete {[delete {[][][delete {[][null][null]}]}][hi!][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest6.writeTo(streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNull(transportAddress9);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test05889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05889");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest4.setParentTask("hi!", 10L);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure10 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "hi!", (java.lang.Throwable) actionRequestValidationException8, "delete {[][][hi!]}");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = shardFailure10.routing;
        java.lang.Throwable throwable12 = shardFailure10.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure14 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[delete {[delete {[null][null][null]}][][]}][null][null]}", throwable12, "delete {[null][delete {[delete {[][null][null]}][null][null]}][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNull(shardRouting11);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable12.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05890");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest10.setParentTask("hi!", 10L);
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.version((long) ' ');
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest10.routing("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId20 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task21 = deleteRequest6.createTask((long) 1, "delete {[null][null][hi!]}", "delete {[][null][null]}", taskId20);
        deleteRequest6.setParentTask("delete {[null][hi!][]}", 1L);
        java.lang.String str25 = deleteRequest6.type();
        deleteRequest6.setParentTask("delete {[null][delete {[null][null][null]}][hi!]}", (long) 10);
        java.lang.String str29 = deleteRequest6.index();
        java.lang.String str30 = deleteRequest6.id();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException31 = deleteRequest6.validate();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(taskId20);
        org.junit.Assert.assertNotNull(task21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "" + "'", str25, "");
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(actionRequestValidationException31);
    }

    @Test
    public void test05891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05891");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[null][null][null]}");
        java.lang.String str13 = deleteRequest12.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest15.indicesOptions();
        long long18 = deleteRequest15.seqNo();
        boolean boolean19 = deleteRequest15.refresh();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.setShardId(shardId20);
        java.lang.String str22 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest15.parent("delete {[delete {[null][hi!][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.type("hi!");
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest32.id("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.routing("delete {[delete {[delete {[null][null][null]}][][]}][null][null]}");
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task41 = deleteRequest15.createTask((long) 10, "delete {[delete {[][][delete {[][null][null]}]}][hi!][null]}", "delete {[null][][null]}", taskId40);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[delete {[null][null][null]}][][]}" + "'", str22, "delete {[delete {[null][null][null]}][][]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(task41);
    }

    @Test
    public void test05892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05892");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue9 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.timeout(timeValue9);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest4.timeout(timeValue9);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.setShardId(shardId12);
        boolean boolean14 = deleteRequest11.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest11.refresh(false);
        java.lang.String[] strArray17 = deleteRequest16.indices();
        org.elasticsearch.index.VersionType versionType18 = deleteRequest16.versionType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[null][null][delete {[][][hi!]}]}", deleteRequest16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(versionType18);
    }

    @Test
    public void test05893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05893");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest3.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId5 = deleteRequest3.shardId();
        org.elasticsearch.index.VersionType versionType6 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.version((long) (short) -1);
        java.lang.String[] strArray11 = deleteRequest8.indices();
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertNotNull(versionType6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test05894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05894");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.index("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest0.remoteAddress(transportAddress10);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.setShardId(shardId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("delete {[delete {[null][null][delete {[null][null][null]}]}][][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest13.consistencyLevel();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest13.writeTo(streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test05895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05895");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("");
        java.lang.String[] strArray8 = deleteRequest5.indices();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.timeout("delete {[delete {[null][null][delete {[null][null][null]}]}][hi!][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[null][null][delete {[null][null][null]}]}][hi!][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test05896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05896");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.index("hi!");
        java.lang.String str7 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId11 = deleteRequest10.shardId();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest10.remoteAddress(transportAddress12);
        java.lang.String str14 = deleteRequest10.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest10.parent("");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest0.timeout(timeValue17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest0.parent("delete {[hi!][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest0.id("delete {[delete {[delete {[null][null][]}][hi!][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest0.type("delete {[null][delete {[][][delete {[][null][null]}]}][null]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "hi!" + "'", str7, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
    }

    @Test
    public void test05897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05897");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId7 = deleteRequest6.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.consistencyLevel(writeConsistencyLevel8);
        org.elasticsearch.index.VersionType versionType10 = deleteRequest6.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.versionType(versionType10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean16 = deleteRequest15.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        long long20 = deleteRequest18.primaryTerm();
        deleteRequest18.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType24 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest11.versionType(versionType24);
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest11.remoteAddress(transportAddress26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean32 = deleteRequest31.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        long long36 = deleteRequest34.primaryTerm();
        deleteRequest34.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType40 = deleteRequest34.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest11.versionType(versionType40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest11.version((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest43.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest43.id("delete {[][][delete {[][null][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(versionType40);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
    }

    @Test
    public void test05898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05898");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        long long9 = deleteRequest3.version();
        org.elasticsearch.index.VersionType versionType10 = deleteRequest3.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.type("hi!");
        java.lang.String str13 = deleteRequest3.toString();
        java.lang.String str14 = deleteRequest3.type();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException15 = deleteRequest3.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.type("delete {[delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}][delete {[delete {[][null][null]}][][hi!]}][delete {[delete {[][null][null]}][hi!][null]}]}");
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-3L) + "'", long9 == (-3L));
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][hi!][null]}" + "'", str13, "delete {[null][hi!][null]}");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(actionRequestValidationException15);
        org.junit.Assert.assertNotNull(deleteRequest17);
    }

    @Test
    public void test05899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05899");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        java.lang.String str5 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        long long10 = deleteRequest7.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.refresh(false);
        long long13 = deleteRequest12.version();
        boolean boolean14 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.refresh(false);
        org.elasticsearch.index.VersionType versionType21 = deleteRequest18.versionType();
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest18.timeout();
        boolean boolean23 = deleteRequest18.getShouldPersistResult();
        deleteRequest18.primaryTerm((long) ' ');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest18.parent("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest18.id("delete {[hi!][][delete {[][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest18.routing("delete {[null][delete {[null][hi!][null]}][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest35.refresh(false);
        org.elasticsearch.index.VersionType versionType38 = deleteRequest35.versionType();
        java.lang.String str39 = deleteRequest35.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest35.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions43 = deleteRequest42.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest42.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.refresh(false);
        org.elasticsearch.index.VersionType versionType49 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest45.versionType(versionType49);
        deleteRequest50.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId53 = deleteRequest50.getParentTask();
        deleteRequest41.setParentTask(taskId53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest41.routing("delete {[][][hi!]}");
        org.elasticsearch.index.shard.ShardId shardId57 = deleteRequest56.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel64 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.consistencyLevel(writeConsistencyLevel64);
        deleteRequest65.seqNo((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest65.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions74 = deleteRequest73.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest73.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest77.refresh(false);
        org.elasticsearch.index.VersionType versionType80 = deleteRequest77.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest76.versionType(versionType80);
        deleteRequest81.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId84 = deleteRequest81.getParentTask();
        org.elasticsearch.tasks.Task task85 = deleteRequest65.createTask((long) (byte) 10, "delete {[null][null][null]}", "delete {[][][hi!]}", taskId84);
        org.elasticsearch.tasks.Task task86 = deleteRequest56.createTask(0L, "delete {[][][hi!]}", "delete {[][][hi!]}", taskId84);
        org.elasticsearch.tasks.Task task87 = deleteRequest18.createTask((long) (short) -1, "", "delete {[delete {[null][null][delete {[null][null][null]}]}][][hi!]}", taskId84);
        org.elasticsearch.tasks.Task task88 = deleteRequest12.createTask((long) 10, "delete {[hi!][delete {[null][hi!][null]}][]}", "delete {[null][hi!][delete {[][null][null]}]}", taskId84);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + (-3L) + "'", long13 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(versionType21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(versionType38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(indicesOptions43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(versionType49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(taskId53);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNull(shardId57);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(indicesOptions74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(versionType80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(taskId84);
        org.junit.Assert.assertNotNull(task85);
        org.junit.Assert.assertNotNull(task86);
        org.junit.Assert.assertNotNull(task87);
        org.junit.Assert.assertNotNull(task88);
    }

    @Test
    public void test05900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05900");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.type("delete {[delete {[][null][null]}][hi!][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.index("delete {[null][null][delete {[][null][null]}]}");
        long long10 = deleteRequest9.seqNo();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test05901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05901");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.index("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest0.remoteAddress(transportAddress10);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.setShardId(shardId12);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("delete {[delete {[null][null][delete {[null][null][null]}]}][][hi!]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel16 = deleteRequest13.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.refresh(false);
        long long23 = deleteRequest20.seqNo();
        java.lang.String str24 = deleteRequest20.toString();
        org.elasticsearch.common.transport.TransportAddress transportAddress25 = deleteRequest20.remoteAddress();
        java.lang.String str26 = deleteRequest20.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest27.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest27.timeout(timeValue35);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.refresh(false);
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest39.getParentTask();
        deleteRequest27.setParentTask(taskId40);
        deleteRequest20.setParentTask(taskId40);
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest20.getParentTask();
        org.elasticsearch.tasks.Task task44 = deleteRequest13.createTask((long) '4', "delete {[null][delete {[][][delete {[][null][null]}]}][null]}", "delete {[delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][][hi!]}", taskId43);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel16 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel16.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "delete {[null][null][null]}" + "'", str24, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(transportAddress25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertNotNull(taskId43);
        org.junit.Assert.assertNotNull(task44);
    }

    @Test
    public void test05902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05902");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.index("delete {[null][null][null]}");
        boolean boolean20 = deleteRequest17.refresh();
        java.lang.String str21 = deleteRequest17.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest22.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest22.id("delete {[null][null][null]}");
        long long28 = deleteRequest22.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.refresh(false);
        org.elasticsearch.index.VersionType versionType32 = deleteRequest29.versionType();
        java.lang.String str33 = deleteRequest29.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest29.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue36 = deleteRequest35.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest22.timeout(timeValue36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest17.timeout(timeValue36);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest5.timeout(timeValue36);
        java.lang.String str40 = deleteRequest39.id();
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest39.remoteAddress(transportAddress41);
        org.elasticsearch.index.shard.ShardId shardId43 = deleteRequest39.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.routing("hi!");
        deleteRequest45.setParentTask("hi!", (long) (short) -1);
        deleteRequest45.setParentTask("hi!", (long) 'a');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest45.version((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest55.routing("");
        org.elasticsearch.common.unit.TimeValue timeValue58 = deleteRequest57.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest39.timeout(timeValue58);
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest59.setShardId(shardId60);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.type("delete {[hi!][null][delete {[null][hi!][null]}]}");
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "delete {[null][null][null]}" + "'", str21, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + (-3L) + "'", long28 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertNotNull(timeValue36);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(timeValue58);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(deleteRequest63);
    }

    @Test
    public void test05903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05903");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        java.lang.String str5 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        long long10 = deleteRequest7.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest7.setShardId(shardId11);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest16.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest16.remoteAddress(transportAddress20);
        org.elasticsearch.tasks.TaskId taskId22 = deleteRequest16.getParentTask();
        org.elasticsearch.tasks.Task task23 = deleteRequest12.createTask(0L, "", "delete {[null][null][]}", taskId22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest12.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.index("delete {[null][null][delete {[null][null][delete {[null][null][null]}]}]}");
        org.elasticsearch.index.VersionType versionType28 = deleteRequest27.versionType();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(taskId22);
        org.junit.Assert.assertNotNull(task23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(versionType28);
    }

    @Test
    public void test05904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05904");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.version((long) 1);
        org.elasticsearch.tasks.TaskId taskId10 = deleteRequest0.getParentTask();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(taskId10);
    }

    @Test
    public void test05905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05905");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        deleteRequest8.seqNo((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.version(10L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel13 = deleteRequest12.consistencyLevel();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest12.versionType();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel13 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel13.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(versionType14);
    }

    @Test
    public void test05906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05906");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][null][null]}][][]}", "delete {[hi!][null][hi!]}", "delete {[null][null][delete {[delete {[][null][null]}][hi!][null]}]}");
        deleteRequest3.setParentTask("delete {[][delete {[null][null][]}][delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}]}", 0L);
    }

    @Test
    public void test05907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05907");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        deleteRequest3.primaryTerm((long) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        deleteRequest3.seqNo((-3L));
        java.lang.String[] strArray11 = deleteRequest3.indices();
        org.elasticsearch.index.shard.IndexShard indexShard12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete13 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest3, indexShard12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test05908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05908");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("delete {[][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId8 = deleteRequest7.shardId();
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest7.shardId();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest7.version((-1L));
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.refresh(false);
        boolean boolean15 = deleteRequest12.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue20 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.timeout(timeValue20);
        org.elasticsearch.common.transport.TransportAddress transportAddress22 = null;
        deleteRequest19.remoteAddress(transportAddress22);
        java.lang.String str24 = deleteRequest19.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest19.parent("hi!");
        org.elasticsearch.index.VersionType versionType27 = deleteRequest19.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest12.versionType(versionType27);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException29 = deleteRequest12.validate();
        java.lang.String str30 = deleteRequest12.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.refresh(false);
        org.elasticsearch.index.VersionType versionType34 = deleteRequest31.versionType();
        java.lang.String str35 = deleteRequest31.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest31.index("hi!");
        java.lang.String str38 = deleteRequest31.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions40 = deleteRequest39.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest39.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest43.refresh(false);
        org.elasticsearch.index.VersionType versionType46 = deleteRequest43.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest42.versionType(versionType46);
        deleteRequest47.seqNo((long) (byte) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest47.version(10L);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest51.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest31.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest12.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException56 = deleteRequest55.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest55.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue59 = deleteRequest58.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = deleteRequest58.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest62.setParentTask("hi!", 10L);
        java.lang.String[] strArray66 = deleteRequest62.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest67.setParentTask("hi!", 10L);
        java.lang.String[] strArray71 = deleteRequest67.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel72 = deleteRequest67.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = deleteRequest62.consistencyLevel(writeConsistencyLevel72);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest61.consistencyLevel(writeConsistencyLevel72);
        long long75 = deleteRequest61.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue76 = deleteRequest61.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest77 = deleteRequest12.timeout(timeValue76);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest7.timeout(timeValue76);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel79 = deleteRequest7.consistencyLevel();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(timeValue20);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(actionRequestValidationException29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "delete {[null][null][null]}" + "'", str30, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "hi!" + "'", str38, "hi!");
        org.junit.Assert.assertNotNull(indicesOptions40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(versionType46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(actionRequestValidationException56);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(timeValue59);
        org.junit.Assert.assertNotNull(deleteRequest61);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel72 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel72.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest73);
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertNotNull(timeValue76);
        org.junit.Assert.assertNotNull(deleteRequest77);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel79 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel79.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test05909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05909");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        java.lang.String str1 = deleteRequest0.getDescription();
        long long2 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue7 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.timeout(timeValue7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest9.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest11.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest11.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue15 = deleteRequest14.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest9.timeout(timeValue15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest9.index("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress19 = null;
        deleteRequest9.remoteAddress(transportAddress19);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest9.setShardId(shardId21);
        org.elasticsearch.tasks.TaskId taskId23 = deleteRequest22.getParentTask();
        deleteRequest8.setParentTask(taskId23);
        long long25 = deleteRequest8.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest28.remoteAddress(transportAddress30);
        java.lang.String str32 = deleteRequest28.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions37 = deleteRequest36.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId38 = deleteRequest36.shardId();
        org.elasticsearch.index.VersionType versionType39 = deleteRequest36.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest28.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest8.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest0.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest47.refresh(false);
        org.elasticsearch.index.VersionType versionType50 = deleteRequest47.versionType();
        java.lang.String str51 = deleteRequest47.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest47.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions55 = deleteRequest54.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest54.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.refresh(false);
        org.elasticsearch.index.VersionType versionType61 = deleteRequest58.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest57.versionType(versionType61);
        deleteRequest62.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId65 = deleteRequest62.getParentTask();
        deleteRequest53.setParentTask(taskId65);
        deleteRequest53.setParentTask("hi!", (long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress70 = null;
        deleteRequest53.remoteAddress(transportAddress70);
        java.lang.String[] strArray72 = deleteRequest53.indices();
        org.elasticsearch.common.unit.TimeValue timeValue73 = deleteRequest53.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest53.type("delete {[delete {[null][null][null]}][null][null]}");
        org.elasticsearch.tasks.TaskId taskId76 = deleteRequest53.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean81 = deleteRequest80.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest80.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue84 = deleteRequest83.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest83.refresh(true);
        org.elasticsearch.tasks.TaskId taskId87 = deleteRequest83.getParentTask();
        deleteRequest53.setParentTask(taskId87);
        org.elasticsearch.tasks.Task task89 = deleteRequest43.createTask((long) (byte) 100, "delete {[null][null][delete {[][null][null]}]}", "delete {[hi!][null][null]}", taskId87);
        org.elasticsearch.index.shard.ShardId shardId90 = deleteRequest43.shardId();
        org.junit.Assert.assertEquals("'" + str1 + "' != '" + "delete {[null][null][null]}" + "'", str1, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + (-3L) + "'", long2 == (-3L));
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(timeValue15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(taskId23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(indicesOptions37);
        org.junit.Assert.assertNull(shardId38);
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(versionType50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(indicesOptions55);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(versionType61);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(taskId65);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(timeValue73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(taskId76);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(timeValue84);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(taskId87);
        org.junit.Assert.assertNotNull(task89);
        org.junit.Assert.assertNull(shardId90);
    }

    @Test
    public void test05910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05910");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.routing("delete {[null][hi!][delete {[delete {[null][null][null]}][null][null]}]}");
        java.lang.String str11 = deleteRequest10.getDescription();
        boolean boolean12 = deleteRequest10.refresh();
        java.lang.String str13 = deleteRequest10.getDescription();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "delete {[null][null][null]}" + "'", str13, "delete {[null][null][null]}");
    }

    @Test
    public void test05911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05911");
        org.elasticsearch.cluster.metadata.MetaData metaData0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest2.setParentTask("hi!", 10L);
        java.lang.String str6 = deleteRequest2.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(false);
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        org.elasticsearch.tasks.Task task14 = deleteRequest2.createTask((long) (-1), "", "hi!", taskId13);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest2.setShardId(shardId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest2.version((long) (short) 10);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel19 = deleteRequest2.consistencyLevel();
        java.lang.String str20 = deleteRequest2.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException22 = deleteRequest21.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId30 = deleteRequest29.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel31 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest29.consistencyLevel(writeConsistencyLevel31);
        java.lang.String str33 = deleteRequest32.routing();
        org.elasticsearch.index.VersionType versionType34 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest24.versionType(versionType34);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest35.consistencyLevel();
        java.lang.String str37 = deleteRequest35.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest35.routing("delete {[][null][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress40 = deleteRequest35.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean45 = deleteRequest44.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest44.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue48 = deleteRequest47.timeout();
        long long49 = deleteRequest47.primaryTerm();
        deleteRequest47.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType53 = deleteRequest47.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest35.versionType(versionType53);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest2.versionType(versionType53);
        java.lang.String str56 = deleteRequest55.parent();
        long long57 = deleteRequest55.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest55.parent("delete {[null][null][delete {[][][hi!]}]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.TransportDeleteAction.resolveAndValidateRouting(metaData0, "delete {[null][null][delete {[][][hi!]}]}", deleteRequest55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "delete {[null][null][null]}" + "'", str6, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(task14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel19 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel19.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(actionRequestValidationException22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(versionType34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(transportAddress40);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(timeValue48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(versionType53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 10L + "'", long57 == 10L);
        org.junit.Assert.assertNotNull(deleteRequest59);
    }

    @Test
    public void test05912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05912");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest8.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.routing();
        org.elasticsearch.index.VersionType versionType13 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.versionType(versionType13);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest18.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest21.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.timeout(timeValue22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest26.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.support.IndicesOptions indicesOptions30 = deleteRequest26.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest38.setParentTask("hi!", 10L);
        java.lang.String[] strArray42 = deleteRequest38.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest43.setParentTask("hi!", 10L);
        java.lang.String[] strArray47 = deleteRequest43.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest38.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest37.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest26.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest16.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest14.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest14.parent("delete {[delete {[delete {[null][null][null]}][][]}][null][null]}");
        java.lang.String str56 = deleteRequest14.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest14.type("delete {[null][hi!][delete {[delete {[null][null][null]}][null][null]}]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException59 = deleteRequest58.validate();
        java.lang.String str60 = deleteRequest58.parent();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(indicesOptions30);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "delete {[null][null][null]}" + "'", str56, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(actionRequestValidationException59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "delete {[delete {[delete {[null][null][null]}][][]}][null][null]}" + "'", str60, "delete {[delete {[delete {[null][null][null]}][][]}][null][null]}");
    }

    @Test
    public void test05913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05913");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        deleteRequest8.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest8.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.refresh(true);
        org.elasticsearch.tasks.TaskId taskId21 = deleteRequest18.getParentTask();
        org.elasticsearch.tasks.Task task22 = deleteRequest8.createTask((long) (short) 10, "", "hi!", taskId21);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest23.setParentTask("hi!", 10L);
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest8.timeout(timeValue27);
        java.lang.String str29 = deleteRequest8.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions34 = deleteRequest33.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId35 = deleteRequest33.shardId();
        org.elasticsearch.index.VersionType versionType36 = deleteRequest33.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest37.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId40 = deleteRequest39.shardId();
        long long41 = deleteRequest39.seqNo();
        long long42 = deleteRequest39.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions44 = deleteRequest43.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest43.parent("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel47 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest39.consistencyLevel(writeConsistencyLevel47);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel49 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest33.consistencyLevel(writeConsistencyLevel49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest8.consistencyLevel(writeConsistencyLevel49);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest8.routing("delete {[null][][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest53.version((long) (-1));
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(taskId21);
        org.junit.Assert.assertNotNull(task22);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "delete {[null][null][null]}" + "'", str29, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(indicesOptions34);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(versionType36);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNull(shardId40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions44);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel47 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel47.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel49 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel49.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
    }

    @Test
    public void test05914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05914");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.index("hi!");
        java.lang.String[] strArray10 = deleteRequest0.indices();
        java.lang.String str11 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.refresh(false);
        long long14 = deleteRequest13.version();
        java.lang.String str15 = deleteRequest13.id();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test05915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05915");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        long long3 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.parent("");
        deleteRequest0.seqNo((long) (short) 10);
        java.lang.String str8 = deleteRequest0.toString();
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest0.timeout();
        deleteRequest0.seqNo((long) (byte) 10);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "delete {[null][null][null]}" + "'", str8, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(timeValue9);
    }

    @Test
    public void test05916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05916");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest5.timeout(timeValue10);
        boolean boolean12 = deleteRequest5.refresh();
        boolean boolean13 = deleteRequest5.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest14.refresh(false);
        org.elasticsearch.index.VersionType versionType17 = deleteRequest14.versionType();
        java.lang.String str18 = deleteRequest14.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest14.index("hi!");
        java.lang.String str21 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId25 = deleteRequest24.shardId();
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest24.remoteAddress(transportAddress26);
        java.lang.String str28 = deleteRequest24.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest24.parent("");
        org.elasticsearch.common.unit.TimeValue timeValue31 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest14.timeout(timeValue31);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest14.parent("delete {[hi!][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.routing("hi!");
        deleteRequest36.setParentTask("hi!", (long) (short) -1);
        deleteRequest36.setParentTask("hi!", (long) 'a');
        deleteRequest36.setParentTask("delete {[][][hi!]}", (long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue52 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest51.timeout(timeValue52);
        org.elasticsearch.common.transport.TransportAddress transportAddress54 = deleteRequest51.remoteAddress();
        boolean boolean55 = deleteRequest51.getShouldPersistResult();
        java.lang.String str56 = deleteRequest51.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest51.type("delete {[null][null][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue63 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest62.timeout(timeValue63);
        org.elasticsearch.common.transport.TransportAddress transportAddress65 = null;
        deleteRequest62.remoteAddress(transportAddress65);
        java.lang.String str67 = deleteRequest62.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest62.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = deleteRequest69.index("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException73 = deleteRequest72.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest75 = deleteRequest72.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue76 = deleteRequest75.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = deleteRequest75.routing("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel79 = deleteRequest75.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest80 = deleteRequest69.consistencyLevel(writeConsistencyLevel79);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest51.consistencyLevel(writeConsistencyLevel79);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest36.consistencyLevel(writeConsistencyLevel79);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest34.consistencyLevel(writeConsistencyLevel79);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest5.consistencyLevel(writeConsistencyLevel79);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest86 = deleteRequest84.refresh(false);
        java.lang.String[] strArray87 = deleteRequest84.indices();
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(versionType17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(timeValue31);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNull(transportAddress54);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "hi!" + "'", str56, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(timeValue63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(deleteRequest71);
        org.junit.Assert.assertNotNull(actionRequestValidationException73);
        org.junit.Assert.assertNotNull(deleteRequest75);
        org.junit.Assert.assertNotNull(timeValue76);
        org.junit.Assert.assertNotNull(deleteRequest78);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel79 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel79.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest80);
        org.junit.Assert.assertNotNull(deleteRequest81);
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest86);
        org.junit.Assert.assertNotNull(strArray87);
    }

    @Test
    public void test05917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05917");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.timeout(timeValue8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest7.remoteAddress(transportAddress10);
        java.lang.String str12 = deleteRequest7.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.parent("hi!");
        org.elasticsearch.index.VersionType versionType15 = deleteRequest7.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.versionType(versionType15);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest0.validate();
        java.lang.String str18 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest0.id("delete {[delete {[][null][null]}][hi!][null]}");
        java.lang.String str21 = deleteRequest20.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException25 = deleteRequest24.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest27.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest31.setParentTask("hi!", 10L);
        java.lang.String[] strArray35 = deleteRequest31.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest36.setParentTask("hi!", 10L);
        java.lang.String[] strArray40 = deleteRequest36.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel41 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest31.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest30.consistencyLevel(writeConsistencyLevel41);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest30.setShardId(shardId44);
        boolean boolean46 = deleteRequest45.getShouldPersistResult();
        org.elasticsearch.common.unit.TimeValue timeValue47 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest45.timeout(timeValue47);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.id("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue51 = deleteRequest48.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest23.timeout(timeValue51);
        boolean boolean53 = deleteRequest52.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest52.routing("delete {[hi!][delete {[null][hi!][null]}][]}");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel56 = deleteRequest52.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest20.consistencyLevel(writeConsistencyLevel56);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(actionRequestValidationException25);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel41 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel41.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(timeValue51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel56 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel56.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest57);
    }

    @Test
    public void test05918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05918");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String str4 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.refresh(false);
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task12 = deleteRequest0.createTask((long) (-1), "", "hi!", taskId11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest0.setShardId(shardId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.version((long) (short) 10);
        boolean boolean17 = deleteRequest0.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest0.index("");
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest0.remoteAddress(transportAddress20);
        java.lang.String[] strArray22 = deleteRequest0.indices();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test05919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05919");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.index("hi!");
        java.lang.String[] strArray10 = deleteRequest0.indices();
        java.lang.String str11 = deleteRequest0.parent();
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest0.timeout();
        java.lang.String[] strArray13 = deleteRequest0.indices();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test05920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05920");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        long long3 = deleteRequest0.seqNo();
        java.lang.String str4 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("");
        org.elasticsearch.tasks.TaskId taskId7 = deleteRequest0.getParentTask();
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest0.indicesOptions();
        java.lang.String str9 = deleteRequest0.type();
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest0.timeout();
        deleteRequest0.setParentTask("delete {[null][delete {[null][hi!][null]}][hi!]}", (long) (short) 1);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(taskId7);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(timeValue10);
    }

    @Test
    public void test05921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05921");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(false);
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        deleteRequest0.setParentTask(taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.id("delete {[null][null][null]}");
        boolean boolean17 = deleteRequest16.getShouldPersistResult();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest16.timeout("delete {[][delete {[delete {[null][null][delete {[null][null][null]}]}][hi!][null]}][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][delete {[delete {[null][null][delete {[null][null][null]}]}][hi!][null]}][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test05922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05922");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(false);
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        java.lang.String str15 = deleteRequest11.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest11.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest18.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.refresh(false);
        org.elasticsearch.index.VersionType versionType25 = deleteRequest22.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.versionType(versionType25);
        deleteRequest26.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest26.getParentTask();
        deleteRequest17.setParentTask(taskId29);
        deleteRequest17.setParentTask("hi!", (long) (-1));
        org.elasticsearch.common.transport.TransportAddress transportAddress34 = null;
        deleteRequest17.remoteAddress(transportAddress34);
        java.lang.String[] strArray36 = deleteRequest17.indices();
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest17.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest3.timeout(timeValue37);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.version((long) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.type("delete {[][][]}");
        long long43 = deleteRequest40.seqNo();
        java.lang.String[] strArray44 = deleteRequest40.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest40.refresh(false);
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(deleteRequest46);
    }

    @Test
    public void test05923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05923");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest2.shardId();
        deleteRequest2.setParentTask("delete {[][null][null]}", 0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.type("delete {[null][null][]}");
        java.lang.String str9 = deleteRequest8.parent();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test05924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05924");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.version((long) ' ');
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel7 = deleteRequest0.consistencyLevel();
        long long8 = deleteRequest0.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.index("delete {[null][null][]}");
        java.lang.String str13 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest0.version((long) (byte) 100);
        boolean boolean16 = deleteRequest0.getShouldPersistResult();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel7 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel7.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test05925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05925");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest16.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest20.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.refresh(false);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        deleteRequest16.setParentTask(taskId29);
        org.elasticsearch.tasks.Task task31 = deleteRequest12.createTask(0L, "delete {[][null][null]}", "", taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest12.parent("delete {[delete {[null][null][null]}][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.parent("delete {[delete {[null][null][null]}][][]}");
        boolean boolean37 = deleteRequest36.getShouldPersistResult();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(actionRequestValidationException34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test05926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05926");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[null][null][null]}");
        java.lang.String str13 = deleteRequest12.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest15.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions19 = deleteRequest18.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest22.refresh(false);
        org.elasticsearch.index.VersionType versionType25 = deleteRequest22.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest21.versionType(versionType25);
        org.elasticsearch.common.unit.TimeValue timeValue27 = deleteRequest21.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest15.timeout(timeValue27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest15.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.refresh(false);
        boolean boolean34 = deleteRequest31.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue39 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest38.timeout(timeValue39);
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest38.remoteAddress(transportAddress41);
        java.lang.String str43 = deleteRequest38.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest38.parent("hi!");
        org.elasticsearch.index.VersionType versionType46 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest31.versionType(versionType46);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest31.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest31.index("delete {[null][null][delete {[null][null][null]}]}");
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest31.setShardId(shardId52);
        org.elasticsearch.index.VersionType versionType54 = deleteRequest53.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest15.versionType(versionType54);
        deleteRequest55.primaryTerm(0L);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertNotNull(indicesOptions19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(versionType46);
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(versionType54);
        org.junit.Assert.assertNotNull(deleteRequest55);
    }

    @Test
    public void test05927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05927");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][][hi!]}", "delete {[null][delete {[][null][null]}][null]}", "delete {[null][][null]}");
        deleteRequest3.primaryTerm((long) (byte) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest3.routing("delete {[delete {[delete {[delete {[null][null][]}][hi!][null]}][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test05928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05928");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        java.lang.String str5 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions10 = deleteRequest9.indicesOptions();
        java.lang.String str11 = deleteRequest9.id();
        long long12 = deleteRequest9.primaryTerm();
        java.lang.String str13 = deleteRequest9.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest9.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest18.setParentTask("hi!", 10L);
        java.lang.String[] strArray22 = deleteRequest18.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = deleteRequest18.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest18.type("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest18.remoteAddress(transportAddress26);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean32 = deleteRequest31.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest35.setParentTask("hi!", 10L);
        java.lang.String[] strArray39 = deleteRequest35.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest35.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest34.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest18.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue47 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest46.timeout(timeValue47);
        org.elasticsearch.common.transport.TransportAddress transportAddress49 = null;
        deleteRequest46.remoteAddress(transportAddress49);
        java.lang.String str51 = deleteRequest46.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest46.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest46.version((long) (byte) 1);
        org.elasticsearch.common.unit.TimeValue timeValue56 = deleteRequest46.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = deleteRequest18.timeout(timeValue56);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest15.timeout(timeValue56);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest58.setShardId(shardId59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest58.type("delete {[delete {[][][hi!]}][][delete {[][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest58.type("delete {[null][hi!][null]}");
        java.lang.String str65 = deleteRequest58.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException67 = deleteRequest66.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest69 = deleteRequest66.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue70 = deleteRequest69.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = deleteRequest69.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest73 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest73.setParentTask("hi!", 10L);
        java.lang.String[] strArray77 = deleteRequest73.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest78 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest78.setParentTask("hi!", 10L);
        java.lang.String[] strArray82 = deleteRequest78.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel83 = deleteRequest78.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest73.consistencyLevel(writeConsistencyLevel83);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest72.consistencyLevel(writeConsistencyLevel83);
        long long86 = deleteRequest72.primaryTerm();
        org.elasticsearch.common.unit.TimeValue timeValue87 = deleteRequest72.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest88 = deleteRequest58.timeout(timeValue87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest89 = deleteRequest7.timeout(timeValue87);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest91 = deleteRequest7.type("delete {[null][delete {[][null][null]}][null]}");
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(indicesOptions10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel23 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel23.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(timeValue47);
        org.junit.Assert.assertNotNull(deleteRequest48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(timeValue56);
        org.junit.Assert.assertNotNull(deleteRequest57);
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "delete {[null][hi!][null]}" + "'", str65, "delete {[null][hi!][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException67);
        org.junit.Assert.assertNotNull(deleteRequest69);
        org.junit.Assert.assertNotNull(timeValue70);
        org.junit.Assert.assertNotNull(deleteRequest72);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel83 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel83.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 0L + "'", long86 == 0L);
        org.junit.Assert.assertNotNull(timeValue87);
        org.junit.Assert.assertNotNull(deleteRequest88);
        org.junit.Assert.assertNotNull(deleteRequest89);
        org.junit.Assert.assertNotNull(deleteRequest91);
    }

    @Test
    public void test05929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05929");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[null][null][null]}");
        java.lang.String str13 = deleteRequest12.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("");
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest15.timeout();
        org.elasticsearch.action.support.IndicesOptions indicesOptions17 = deleteRequest15.indicesOptions();
        long long18 = deleteRequest15.seqNo();
        boolean boolean19 = deleteRequest15.refresh();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest15.setShardId(shardId20);
        java.lang.String str22 = deleteRequest15.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest15.parent("delete {[delete {[null][hi!][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.version(32L);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException27 = deleteRequest26.validate();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "" + "'", str13, "");
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(indicesOptions17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "delete {[delete {[null][null][null]}][][]}" + "'", str22, "delete {[delete {[null][null][null]}][][]}");
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(actionRequestValidationException27);
    }

    @Test
    public void test05930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05930");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.index("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest7.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest11.refresh(false);
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.versionType(versionType14);
        deleteRequest15.seqNo((long) (byte) -1);
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest15.getParentTask();
        deleteRequest6.setParentTask(taskId18);
        org.elasticsearch.common.transport.TransportAddress transportAddress20 = null;
        deleteRequest6.remoteAddress(transportAddress20);
        long long22 = deleteRequest6.version();
        deleteRequest6.primaryTerm((long) 0);
        org.elasticsearch.index.shard.ShardId shardId25 = deleteRequest6.shardId();
        boolean boolean26 = deleteRequest6.refresh();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-3L) + "'", long22 == (-3L));
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test05931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05931");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.timeout(timeValue6);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel8 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.index("delete {[null][hi!][]}");
        java.lang.String str11 = deleteRequest0.parent();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException12 = deleteRequest0.validate();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel8 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel8.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(actionRequestValidationException12);
    }

    @Test
    public void test05932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05932");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest2.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.consistencyLevel(writeConsistencyLevel4);
        deleteRequest2.setParentTask("delete {[null][null][null]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest2.type("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest2.getParentTask();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest2.consistencyLevel();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNull(writeConsistencyLevel12);
    }

    @Test
    public void test05933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05933");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String str4 = deleteRequest0.toString();
        java.lang.String str5 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.index("delete {[null][][null]}");
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test05934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05934");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest8.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.routing();
        org.elasticsearch.index.VersionType versionType13 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.versionType(versionType13);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest18.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest21.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.timeout(timeValue22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest26.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.support.IndicesOptions indicesOptions30 = deleteRequest26.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest38.setParentTask("hi!", 10L);
        java.lang.String[] strArray42 = deleteRequest38.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest43.setParentTask("hi!", 10L);
        java.lang.String[] strArray47 = deleteRequest43.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest38.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest37.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest26.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest16.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest14.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest14.parent("delete {[delete {[delete {[null][null][null]}][][]}][null][null]}");
        java.lang.String str56 = deleteRequest14.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest58 = deleteRequest14.type("delete {[null][hi!][delete {[delete {[null][null][null]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = deleteRequest14.refresh(true);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(indicesOptions30);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "delete {[null][null][null]}" + "'", str56, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest58);
        org.junit.Assert.assertNotNull(deleteRequest60);
    }

    @Test
    public void test05935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05935");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[null][delete {[delete {[][null][null]}][hi!][null]}][null]}][null]}", "delete {[delete {[null][null][]}][hi!][null]}", "delete {[hi!][delete {[null][delete {[][][delete {[][null][null]}]}][null]}][null]}");
    }

    @Test
    public void test05936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05936");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String str4 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.refresh(false);
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task12 = deleteRequest0.createTask((long) (-1), "", "hi!", taskId11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest0.setShardId(shardId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.version((long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest16.type("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest18.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest18.version((long) (short) -1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest18.type("");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest24.writeTo(streamOutput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(task12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(deleteRequest24);
    }

    @Test
    public void test05937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05937");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        long long3 = deleteRequest0.seqNo();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.refresh(true);
        java.lang.String[] strArray8 = deleteRequest7.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress9 = deleteRequest7.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNull(transportAddress9);
    }

    @Test
    public void test05938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05938");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.id("delete {[null][null][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        java.lang.String[] strArray10 = deleteRequest7.indices();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test05939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05939");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        java.lang.String str11 = deleteRequest10.routing();
        java.lang.String str12 = deleteRequest10.parent();
        java.lang.String str13 = deleteRequest10.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest10.refresh(false);
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = null;
        deleteRequest10.remoteAddress(transportAddress16);
        long long18 = deleteRequest10.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions23 = deleteRequest22.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId24 = deleteRequest22.shardId();
        org.elasticsearch.index.VersionType versionType25 = deleteRequest22.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId29 = deleteRequest28.shardId();
        long long30 = deleteRequest28.seqNo();
        long long31 = deleteRequest28.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions33 = deleteRequest32.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest32.parent("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel36 = deleteRequest32.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest28.consistencyLevel(writeConsistencyLevel36);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel38 = deleteRequest28.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest22.consistencyLevel(writeConsistencyLevel38);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest39.id("delete {[][][hi!]}");
        boolean boolean42 = deleteRequest41.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId43 = deleteRequest41.getParentTask();
        deleteRequest10.setParentTask(taskId43);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions23);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(indicesOptions33);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel36 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel36.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel38 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel38.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(taskId43);
    }

    @Test
    public void test05940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05940");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "delete {[null][][null]}", "");
        java.lang.String str4 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.version((long) 10);
        long long7 = deleteRequest6.version();
        long long8 = deleteRequest6.version();
        org.elasticsearch.index.shard.IndexShard indexShard9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete10 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest6, indexShard9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][][null]}" + "'", str4, "delete {[null][][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 10L + "'", long7 == 10L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 10L + "'", long8 == 10L);
    }

    @Test
    public void test05941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05941");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest2.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.consistencyLevel(writeConsistencyLevel4);
        deleteRequest2.setParentTask("delete {[null][null][null]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest2.type("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[delete {[][null][null]}][null][null]}");
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest10.setShardId(shardId13);
        org.elasticsearch.index.shard.IndexShard indexShard15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult16 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest14, indexShard15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test05942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05942");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.timeout(timeValue6);
        org.elasticsearch.index.VersionType versionType8 = deleteRequest7.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.parent("delete {[delete {[null][][null]}][][delete {[null][null][]}]}");
        deleteRequest7.seqNo((-3L));
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(versionType8);
        org.junit.Assert.assertNotNull(deleteRequest10);
    }

    @Test
    public void test05943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05943");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest8.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.routing();
        org.elasticsearch.index.VersionType versionType13 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.versionType(versionType13);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest18.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest21.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.timeout(timeValue22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest26.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.support.IndicesOptions indicesOptions30 = deleteRequest26.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest38.setParentTask("hi!", 10L);
        java.lang.String[] strArray42 = deleteRequest38.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest43.setParentTask("hi!", 10L);
        java.lang.String[] strArray47 = deleteRequest43.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest38.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest37.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest26.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest16.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest14.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest14.routing("delete {[null][][null]}");
        deleteRequest55.setParentTask("delete {[hi!][null][null]}", (long) (byte) 100);
        org.elasticsearch.common.unit.TimeValue timeValue59 = deleteRequest55.timeout();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(indicesOptions30);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(timeValue59);
    }

    @Test
    public void test05944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05944");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest0.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.support.IndicesOptions indicesOptions8 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest0.routing("delete {[null][hi!][delete {[delete {[null][null][null]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.routing("");
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(indicesOptions8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test05945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05945");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest5.setParentTask("hi!", 10L);
        java.lang.String[] strArray9 = deleteRequest5.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("hi!");
        deleteRequest15.seqNo((long) (short) 1);
        java.lang.String str18 = deleteRequest15.parent();
        org.elasticsearch.index.VersionType versionType19 = deleteRequest15.versionType();
        org.elasticsearch.action.support.IndicesOptions indicesOptions20 = deleteRequest15.indicesOptions();
        java.lang.String str21 = deleteRequest15.type();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(indicesOptions20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test05946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05946");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        deleteRequest0.primaryTerm(10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(true);
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest10.getParentTask();
        org.elasticsearch.tasks.Task task14 = deleteRequest0.createTask((long) (byte) 1, "", "delete {[null][null][null]}", taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest15.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException20 = deleteRequest19.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest19.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue23 = deleteRequest22.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest15.timeout(timeValue23);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest25.setParentTask("hi!", 10L);
        java.lang.String[] strArray29 = deleteRequest25.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.type("hi!");
        org.elasticsearch.index.VersionType versionType33 = deleteRequest32.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest15.versionType(versionType33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = deleteRequest0.versionType(versionType33);
        java.lang.String str36 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest0.version(97L);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest0.timeout("delete {[][][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[][][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(task14);
        org.junit.Assert.assertNotNull(actionRequestValidationException20);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue23);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "delete {[null][null][null]}" + "'", str36, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest38);
    }

    @Test
    public void test05947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05947");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(false);
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        deleteRequest0.setParentTask(taskId13);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest0.consistencyLevel();
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest0.shardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest0.timeout("delete {[null][delete {[null][delete {[delete {[][null][null]}][hi!][null]}][null]}][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][delete {[null][delete {[delete {[][null][null]}][hi!][null]}][null]}][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(shardId16);
    }

    @Test
    public void test05948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05948");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest6.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure9 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting4, "", (java.lang.Throwable) actionRequestValidationException7, "hi!");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "delete {[][null][null]}", (java.lang.Throwable) actionRequestValidationException7, "");
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure13 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException7, "delete {[][null][null]}");
        java.lang.String str14 = shardFailure13.reason;
        java.lang.String str15 = shardFailure13.indexUUID;
        java.lang.String str16 = shardFailure13.indexUUID;
        java.lang.Throwable throwable17 = shardFailure13.cause;
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[][null][null]}" + "'", str15, "delete {[][null][null]}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "delete {[][null][null]}" + "'", str16, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
    }

    @Test
    public void test05949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05949");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.version((long) ' ');
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.refresh(false);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest9.remoteAddress(transportAddress10);
        long long12 = deleteRequest9.version();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 32L + "'", long12 == 32L);
    }

    @Test
    public void test05950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05950");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("hi!");
        java.lang.String str11 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest12.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean22 = deleteRequest21.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue25 = deleteRequest24.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest17.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest3.timeout(timeValue25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest27.type("delete {[null][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.index("delete {[null][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest32.refresh(false);
        org.elasticsearch.index.VersionType versionType35 = deleteRequest32.versionType();
        java.lang.String str36 = deleteRequest32.type();
        java.lang.String str37 = deleteRequest32.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest32.index("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest32.parent("");
        org.elasticsearch.tasks.TaskId taskId42 = deleteRequest41.getParentTask();
        deleteRequest31.setParentTask(taskId42);
        java.lang.String str44 = deleteRequest31.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest45.refresh(false);
        org.elasticsearch.index.VersionType versionType48 = deleteRequest45.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest49.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId52 = deleteRequest51.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel53 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest51.consistencyLevel(writeConsistencyLevel53);
        org.elasticsearch.index.VersionType versionType55 = deleteRequest51.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest45.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = deleteRequest57.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId60 = deleteRequest59.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel61 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest59.consistencyLevel(writeConsistencyLevel61);
        org.elasticsearch.action.support.IndicesOptions indicesOptions63 = deleteRequest59.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException65 = deleteRequest64.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest67 = deleteRequest64.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue68 = deleteRequest67.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest67.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest71 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest71.setParentTask("hi!", 10L);
        java.lang.String[] strArray75 = deleteRequest71.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest76.setParentTask("hi!", 10L);
        java.lang.String[] strArray80 = deleteRequest76.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel81 = deleteRequest76.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest82 = deleteRequest71.consistencyLevel(writeConsistencyLevel81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest83 = deleteRequest70.consistencyLevel(writeConsistencyLevel81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest84 = deleteRequest59.consistencyLevel(writeConsistencyLevel81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest85 = deleteRequest56.consistencyLevel(writeConsistencyLevel81);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest87 = deleteRequest85.index("delete {[hi!][null][hi!]}");
        org.elasticsearch.tasks.TaskId taskId88 = deleteRequest87.getParentTask();
        deleteRequest31.setParentTask(taskId88);
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][hi!]}" + "'", str11, "delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(timeValue25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(versionType35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "delete {[null][null][null]}" + "'", str37, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(taskId42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "delete {[delete {[null][hi!][]}][delete {[null][null][hi!]}][hi!]}" + "'", str44, "delete {[delete {[null][hi!][]}][delete {[null][null][hi!]}][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest47);
        org.junit.Assert.assertNotNull(versionType48);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNull(shardId52);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest59);
        org.junit.Assert.assertNull(shardId60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(indicesOptions63);
        org.junit.Assert.assertNotNull(actionRequestValidationException65);
        org.junit.Assert.assertNotNull(deleteRequest67);
        org.junit.Assert.assertNotNull(timeValue68);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel81 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel81.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest82);
        org.junit.Assert.assertNotNull(deleteRequest83);
        org.junit.Assert.assertNotNull(deleteRequest84);
        org.junit.Assert.assertNotNull(deleteRequest85);
        org.junit.Assert.assertNotNull(deleteRequest87);
        org.junit.Assert.assertNotNull(taskId88);
    }

    @Test
    public void test05951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05951");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        long long11 = deleteRequest3.seqNo();
        java.lang.String[] strArray12 = deleteRequest3.indices();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException13 = deleteRequest3.validate();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNull(actionRequestValidationException13);
    }

    @Test
    public void test05952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05952");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.common.transport.TransportAddress transportAddress4 = deleteRequest0.remoteAddress();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.type("delete {[delete {[][null][null]}][hi!][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue7 = deleteRequest6.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest6.parent("delete {[delete {[null][null][]}][hi!][null]}");
        deleteRequest6.primaryTerm((long) ' ');
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest6.setShardId(shardId12);
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNull(transportAddress4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test05953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05953");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        java.lang.String str2 = deleteRequest0.id();
        long long3 = deleteRequest0.primaryTerm();
        java.lang.String str4 = deleteRequest0.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.routing("delete {[][][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.refresh(false);
        org.elasticsearch.index.VersionType versionType12 = deleteRequest9.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId16 = deleteRequest15.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.consistencyLevel(writeConsistencyLevel17);
        org.elasticsearch.index.VersionType versionType19 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest9.versionType(versionType19);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean25 = deleteRequest24.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest24.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue28 = deleteRequest27.timeout();
        long long29 = deleteRequest27.primaryTerm();
        deleteRequest27.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType33 = deleteRequest27.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest20.versionType(versionType33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest20.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions38 = deleteRequest37.indicesOptions();
        java.lang.String str39 = deleteRequest37.id();
        long long40 = deleteRequest37.primaryTerm();
        java.lang.String str41 = deleteRequest37.routing();
        java.lang.String str42 = deleteRequest37.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException47 = deleteRequest46.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException49 = deleteRequest48.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest48.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue52 = deleteRequest51.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest46.timeout(timeValue52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest60 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId64 = null;
        org.elasticsearch.tasks.Task task65 = deleteRequest60.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId64);
        org.elasticsearch.tasks.TaskId taskId66 = deleteRequest60.getParentTask();
        org.elasticsearch.tasks.Task task67 = deleteRequest53.createTask((long) 1, "delete {[][null][null]}", "delete {[delete {[][null][null]}][hi!][null]}", taskId66);
        org.elasticsearch.tasks.Task task68 = deleteRequest37.createTask((long) ' ', "delete {[null][null][null]}", "", taskId66);
        deleteRequest36.setParentTask(taskId66);
        deleteRequest8.setParentTask(taskId66);
        org.elasticsearch.common.unit.TimeValue timeValue71 = deleteRequest8.timeout();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(versionType12);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(versionType19);
        org.junit.Assert.assertNotNull(deleteRequest20);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(versionType33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(indicesOptions38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "delete {[null][null][null]}" + "'", str42, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(actionRequestValidationException47);
        org.junit.Assert.assertNotNull(actionRequestValidationException49);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(timeValue52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(task65);
        org.junit.Assert.assertNotNull(taskId66);
        org.junit.Assert.assertNotNull(task67);
        org.junit.Assert.assertNotNull(task68);
        org.junit.Assert.assertNotNull(timeValue71);
    }

    @Test
    public void test05954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05954");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "", "delete {[][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue4 = deleteRequest3.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel5 = deleteRequest3.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean10 = deleteRequest9.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue13 = deleteRequest12.timeout();
        long long14 = deleteRequest12.primaryTerm();
        deleteRequest12.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType18 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.versionType(versionType18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.setShardId(shardId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest19.parent("delete {[delete {[null][null][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.id("delete {[delete {[null][null][delete {[null][null][null]}]}][hi!][null]}");
        java.lang.String str26 = deleteRequest23.index();
        java.lang.String str27 = deleteRequest23.parent();
        java.lang.Class<?> wildcardClass28 = deleteRequest23.getClass();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel5 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel5.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[][][hi!]}" + "'", str26, "delete {[][][hi!]}");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "delete {[delete {[null][null][null]}][null][null]}" + "'", str27, "delete {[delete {[null][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test05955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05955");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        java.lang.String str2 = deleteRequest0.id();
        long long3 = deleteRequest0.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setShardId(shardId4);
        java.lang.String[] strArray6 = deleteRequest5.indices();
        deleteRequest5.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest5.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest10.consistencyLevel();
        org.elasticsearch.common.io.stream.StreamInput streamInput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest10.readFrom(streamInput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
    }

    @Test
    public void test05956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05956");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        org.elasticsearch.action.support.IndicesOptions indicesOptions9 = deleteRequest8.indicesOptions();
        org.elasticsearch.index.shard.IndexShard indexShard10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete11 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest8, indexShard10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(indicesOptions9);
    }

    @Test
    public void test05957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05957");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String str4 = deleteRequest0.toString();
        long long5 = deleteRequest0.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue10 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest9.timeout(timeValue10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest0.timeout(timeValue10);
        org.elasticsearch.index.VersionType versionType13 = deleteRequest12.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.version((long) (byte) 1);
        deleteRequest12.primaryTerm((long) (byte) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.type("delete {[delete {[null][null][null]}][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.type("delete {[hi!][null][hi!]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest22.setParentTask("hi!", 10L);
        java.lang.String[] strArray26 = deleteRequest22.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest22.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.type("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress30 = null;
        deleteRequest22.remoteAddress(transportAddress30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean36 = deleteRequest35.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest39.setParentTask("hi!", 10L);
        java.lang.String[] strArray43 = deleteRequest39.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel44 = deleteRequest39.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest45 = deleteRequest38.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = deleteRequest22.consistencyLevel(writeConsistencyLevel44);
        org.elasticsearch.index.VersionType versionType47 = deleteRequest46.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = deleteRequest19.versionType(versionType47);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + (-3L) + "'", long5 == (-3L));
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel44 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel44.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest45);
        org.junit.Assert.assertNotNull(deleteRequest46);
        org.junit.Assert.assertNotNull(versionType47);
        org.junit.Assert.assertNotNull(deleteRequest48);
    }

    @Test
    public void test05958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05958");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest10.setParentTask("hi!", 10L);
        java.lang.String[] strArray14 = deleteRequest10.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest10.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest10.type("hi!");
        org.elasticsearch.index.VersionType versionType18 = deleteRequest17.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest0.versionType(versionType18);
        java.lang.String str20 = deleteRequest19.parent();
        long long21 = deleteRequest19.seqNo();
        deleteRequest19.seqNo((long) (short) 0);
        org.elasticsearch.common.transport.TransportAddress transportAddress24 = null;
        deleteRequest19.remoteAddress(transportAddress24);
        boolean boolean26 = deleteRequest19.refresh();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest19.consistencyLevel();
        boolean boolean28 = deleteRequest19.getShouldPersistResult();
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test05959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05959");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest16.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException21 = deleteRequest20.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest20.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue24 = deleteRequest23.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest16.timeout(timeValue24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.refresh(false);
        org.elasticsearch.tasks.TaskId taskId29 = deleteRequest28.getParentTask();
        deleteRequest16.setParentTask(taskId29);
        org.elasticsearch.tasks.Task task31 = deleteRequest12.createTask(0L, "delete {[][null][null]}", "", taskId29);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest12.parent("delete {[delete {[null][null][null]}][][]}");
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.type("delete {[hi!][delete {[delete {[null][null][null]}][null][null]}][delete {[delete {[null][null][null]}][null][null]}]}");
        long long37 = deleteRequest33.seqNo();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(actionRequestValidationException21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(taskId29);
        org.junit.Assert.assertNotNull(task31);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNull(actionRequestValidationException34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
    }

    @Test
    public void test05960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05960");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][][null]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.parent("delete {[hi!][null][hi!]}");
        org.elasticsearch.tasks.TaskId taskId4 = deleteRequest1.getParentTask();
        org.elasticsearch.common.transport.TransportAddress transportAddress5 = null;
        deleteRequest1.remoteAddress(transportAddress5);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException8 = deleteRequest7.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest10.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest10.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest14.setParentTask("hi!", 10L);
        java.lang.String[] strArray18 = deleteRequest14.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest19.setParentTask("hi!", 10L);
        java.lang.String[] strArray23 = deleteRequest19.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel24 = deleteRequest19.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest14.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest13.consistencyLevel(writeConsistencyLevel24);
        org.elasticsearch.index.VersionType versionType27 = deleteRequest13.versionType();
        long long28 = deleteRequest13.seqNo();
        org.elasticsearch.index.VersionType versionType29 = deleteRequest13.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest1.versionType(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(taskId4);
        org.junit.Assert.assertNotNull(actionRequestValidationException8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel24 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel24.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(versionType27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(versionType29);
        org.junit.Assert.assertNotNull(deleteRequest30);
    }

    @Test
    public void test05961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05961");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.support.IndicesOptions indicesOptions4 = deleteRequest0.indicesOptions();
        long long5 = deleteRequest0.seqNo();
        java.lang.String str6 = deleteRequest0.parent();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException7 = deleteRequest0.validate();
        java.lang.String[] strArray8 = deleteRequest0.indices();
        org.elasticsearch.index.VersionType versionType9 = deleteRequest0.versionType();
        org.elasticsearch.common.unit.TimeValue timeValue10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.timeout(timeValue10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.index("delete {[][null][delete {[null][null][null]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.type("delete {[null][hi!][null]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress16 = deleteRequest13.remoteAddress();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(indicesOptions4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(actionRequestValidationException7);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(versionType9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNull(transportAddress16);
    }

    @Test
    public void test05962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05962");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest2.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.consistencyLevel(writeConsistencyLevel4);
        java.lang.String str6 = deleteRequest5.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest5.index("");
        deleteRequest8.seqNo((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.type("delete {[null][hi!][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions13 = deleteRequest12.indicesOptions();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest12.versionType();
        java.lang.String str15 = deleteRequest12.type();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(indicesOptions13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "delete {[null][hi!][null]}" + "'", str15, "delete {[null][hi!][null]}");
    }

    @Test
    public void test05963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05963");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure4 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "delete {[null][hi!][delete {[delete {[null][null][null]}][null][null]}]}", throwable2, "delete {[delete {[null][null][hi!]}][null][null]}");
    }

    @Test
    public void test05964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05964");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.id("");
        long long11 = deleteRequest3.version();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.id("delete {[delete {[][null][null]}][hi!][null]}");
        java.lang.String str14 = deleteRequest3.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        org.elasticsearch.index.VersionType versionType18 = deleteRequest15.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest19.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId22 = deleteRequest21.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel23 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = deleteRequest21.consistencyLevel(writeConsistencyLevel23);
        org.elasticsearch.index.VersionType versionType25 = deleteRequest21.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest15.versionType(versionType25);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean31 = deleteRequest30.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest30.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue34 = deleteRequest33.timeout();
        long long35 = deleteRequest33.primaryTerm();
        deleteRequest33.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType39 = deleteRequest33.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = deleteRequest26.versionType(versionType39);
        org.elasticsearch.common.transport.TransportAddress transportAddress41 = null;
        deleteRequest26.remoteAddress(transportAddress41);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest46 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean47 = deleteRequest46.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest46.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue50 = deleteRequest49.timeout();
        long long51 = deleteRequest49.primaryTerm();
        deleteRequest49.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType55 = deleteRequest49.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest26.versionType(versionType55);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest57 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException58 = deleteRequest57.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest59 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException60 = deleteRequest59.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest62 = deleteRequest59.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue63 = deleteRequest62.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest64 = deleteRequest57.timeout(timeValue63);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest66 = deleteRequest57.index("hi!");
        org.elasticsearch.common.transport.TransportAddress transportAddress67 = null;
        deleteRequest57.remoteAddress(transportAddress67);
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest70 = deleteRequest57.setShardId(shardId69);
        org.elasticsearch.tasks.TaskId taskId71 = deleteRequest70.getParentTask();
        deleteRequest56.setParentTask(taskId71);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "", "delete {[][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue77 = deleteRequest76.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel78 = deleteRequest76.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest79 = deleteRequest56.consistencyLevel(writeConsistencyLevel78);
        org.elasticsearch.common.unit.TimeValue timeValue80 = deleteRequest79.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest81 = deleteRequest3.timeout(timeValue80);
        org.elasticsearch.common.io.stream.StreamInput streamInput82 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest81.readFrom(streamInput82);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + (-3L) + "'", long11 == (-3L));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "delete {[delete {[][null][null]}][hi!][null]}" + "'", str14, "delete {[delete {[][null][null]}][hi!][null]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(versionType18);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(deleteRequest24);
        org.junit.Assert.assertNotNull(versionType25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(timeValue34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertNotNull(deleteRequest40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(timeValue50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(versionType55);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(actionRequestValidationException58);
        org.junit.Assert.assertNotNull(actionRequestValidationException60);
        org.junit.Assert.assertNotNull(deleteRequest62);
        org.junit.Assert.assertNotNull(timeValue63);
        org.junit.Assert.assertNotNull(deleteRequest64);
        org.junit.Assert.assertNotNull(deleteRequest66);
        org.junit.Assert.assertNotNull(deleteRequest70);
        org.junit.Assert.assertNotNull(taskId71);
        org.junit.Assert.assertNotNull(timeValue77);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel78 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel78.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest79);
        org.junit.Assert.assertNotNull(timeValue80);
        org.junit.Assert.assertNotNull(deleteRequest81);
    }

    @Test
    public void test05965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05965");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue6 = deleteRequest5.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest0.timeout(timeValue6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.index("hi!");
        java.lang.String[] strArray10 = deleteRequest0.indices();
        java.lang.String str11 = deleteRequest0.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest0.refresh(true);
        boolean boolean16 = deleteRequest15.getShouldPersistResult();
        boolean boolean17 = deleteRequest15.refresh();
        org.elasticsearch.common.io.stream.StreamInput streamInput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest15.readFrom(streamInput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(timeValue6);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test05966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05966");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        long long3 = deleteRequest0.seqNo();
        java.lang.String str4 = deleteRequest0.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.parent("delete {[delete {[null][null][null]}][][delete {[delete {[null][null][null]}][][]}]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.version((long) '#');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest8.id("delete {[][delete {[delete {[delete {[][null][null]}][hi!][null]}][null][null]}][]}");
        java.lang.String str13 = deleteRequest8.index();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest8.timeout("delete {[delete {[][null][null]}][hi!][null]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[delete {[][null][null]}][hi!][null]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test05967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05967");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}", "delete {[null][][null]}", "delete {[delete {[delete {[null][null][null]}][][]}][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][hi!][]}", "delete {[null][hi!][]}", "delete {[null][hi!][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest8.refresh(false);
        org.elasticsearch.index.VersionType versionType11 = deleteRequest8.versionType();
        java.lang.String str12 = deleteRequest8.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest8.index("hi!");
        java.lang.String str15 = deleteRequest8.index();
        long long16 = deleteRequest8.version();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel17 = deleteRequest8.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest7.consistencyLevel(writeConsistencyLevel17);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest3.consistencyLevel(writeConsistencyLevel17);
        long long20 = deleteRequest19.seqNo();
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(versionType11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "hi!" + "'", str15, "hi!");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + (-3L) + "'", long16 == (-3L));
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel17 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel17.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    }

    @Test
    public void test05968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05968");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest4.refresh(false);
        org.elasticsearch.index.VersionType versionType7 = deleteRequest4.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest3.versionType(versionType7);
        org.elasticsearch.common.unit.TimeValue timeValue9 = deleteRequest3.timeout();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException10 = deleteRequest3.validate();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest3.setShardId(shardId11);
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(versionType7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(timeValue9);
        org.junit.Assert.assertNotNull(actionRequestValidationException10);
        org.junit.Assert.assertNotNull(deleteRequest12);
    }

    @Test
    public void test05969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05969");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean4 = deleteRequest3.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest3.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest7.setParentTask("hi!", 10L);
        java.lang.String[] strArray11 = deleteRequest7.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel12 = deleteRequest7.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest6.consistencyLevel(writeConsistencyLevel12);
        org.elasticsearch.common.unit.TimeValue timeValue14 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.timeout(timeValue14);
        java.lang.String str16 = deleteRequest15.routing();
        deleteRequest15.seqNo(10L);
        org.elasticsearch.tasks.TaskId taskId19 = deleteRequest15.getParentTask();
        java.lang.String str20 = deleteRequest15.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress21 = null;
        deleteRequest15.remoteAddress(transportAddress21);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNotNull(deleteRequest6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel12 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel12.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "hi!" + "'", str16, "hi!");
        org.junit.Assert.assertNotNull(taskId19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test05970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05970");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest5.setParentTask("hi!", 10L);
        java.lang.String[] strArray9 = deleteRequest5.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("hi!");
        deleteRequest15.seqNo((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.refresh(false);
        long long20 = deleteRequest19.version();
        java.lang.String str21 = deleteRequest19.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest25.setParentTask("hi!", 10L);
        java.lang.String[] strArray29 = deleteRequest25.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel30 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest25.routing("hi!");
        org.elasticsearch.index.shard.ShardId shardId33 = deleteRequest25.shardId();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest25.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest25.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest36.refresh(false);
        org.elasticsearch.index.VersionType versionType39 = deleteRequest38.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest40 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest40.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest44 = deleteRequest42.type("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest48 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest48.refresh(false);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel51 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest50.consistencyLevel(writeConsistencyLevel51);
        deleteRequest52.seqNo((long) (byte) 0);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest52.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest61 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest61.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest63.refresh(true);
        java.lang.String[] strArray66 = deleteRequest63.indices();
        java.lang.String str67 = deleteRequest63.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest72 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest74 = deleteRequest72.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest76 = deleteRequest74.refresh(true);
        org.elasticsearch.tasks.TaskId taskId77 = deleteRequest74.getParentTask();
        org.elasticsearch.tasks.Task task78 = deleteRequest63.createTask(100L, "delete {[null][null][null]}", "delete {[null][null][null]}", taskId77);
        org.elasticsearch.tasks.Task task79 = deleteRequest52.createTask(100L, "", "delete {[null][null][null]}", taskId77);
        org.elasticsearch.tasks.Task task80 = deleteRequest44.createTask(10L, "", "delete {[null][null][hi!]}", taskId77);
        deleteRequest38.setParentTask(taskId77);
        org.elasticsearch.tasks.Task task82 = deleteRequest19.createTask((long) (short) 0, "delete {[null][delete {[null][delete {[delete {[][null][null]}][hi!][null]}][null]}][null]}", "delete {[delete {[][null][null]}][null][null]}", taskId77);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-3L) + "'", long20 == (-3L));
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel30 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel30.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNull(shardId33);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(versionType39);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest44);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "delete {[][null][null]}" + "'", str67, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest74);
        org.junit.Assert.assertNotNull(deleteRequest76);
        org.junit.Assert.assertNotNull(taskId77);
        org.junit.Assert.assertNotNull(task78);
        org.junit.Assert.assertNotNull(task79);
        org.junit.Assert.assertNotNull(task80);
        org.junit.Assert.assertNotNull(task82);
    }

    @Test
    public void test05971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05971");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest2.shardId();
        deleteRequest2.setParentTask("delete {[][null][null]}", 0L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest2.routing("delete {[delete {[][null][null]}][hi!][null]}");
        java.lang.String str9 = deleteRequest8.parent();
        long long10 = deleteRequest8.version();
        org.elasticsearch.action.support.IndicesOptions indicesOptions11 = deleteRequest8.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-3L) + "'", long10 == (-3L));
        org.junit.Assert.assertNotNull(indicesOptions11);
    }

    @Test
    public void test05972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05972");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.tasks.TaskId taskId4 = null;
        deleteRequest0.setParentTask(taskId4);
        deleteRequest0.seqNo((long) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][null][null]}", "delete {[null][null][null]}", "");
        org.elasticsearch.action.support.IndicesOptions indicesOptions12 = deleteRequest11.indicesOptions();
        org.elasticsearch.index.shard.ShardId shardId13 = deleteRequest11.shardId();
        org.elasticsearch.index.VersionType versionType14 = deleteRequest11.versionType();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest11.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.consistencyLevel(writeConsistencyLevel15);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        long long18 = deleteRequest16.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId19 = deleteRequest16.shardId();
        java.lang.String[] strArray20 = deleteRequest16.indices();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(indicesOptions12);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(versionType14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(strArray20);
    }

    @Test
    public void test05973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05973");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        boolean boolean3 = deleteRequest0.getShouldPersistResult();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.timeout(timeValue8);
        org.elasticsearch.common.transport.TransportAddress transportAddress10 = null;
        deleteRequest7.remoteAddress(transportAddress10);
        java.lang.String str12 = deleteRequest7.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest7.parent("hi!");
        org.elasticsearch.index.VersionType versionType15 = deleteRequest7.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.versionType(versionType15);
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest0.validate();
        java.lang.String str18 = deleteRequest0.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = deleteRequest0.id("delete {[delete {[][null][null]}][hi!][null]}");
        deleteRequest20.primaryTerm((long) (short) -1);
        org.elasticsearch.index.shard.IndexShard indexShard23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.index.engine.Engine.Delete delete24 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnReplica(deleteRequest20, indexShard23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNotNull(versionType15);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(deleteRequest20);
    }

    @Test
    public void test05974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05974");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("delete {[null][null][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest5.writeTo(streamOutput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test05975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05975");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.parent("");
        java.lang.String str4 = deleteRequest3.toString();
        java.lang.String str5 = deleteRequest3.routing();
        java.lang.String str6 = deleteRequest3.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest7.setParentTask("hi!", 10L);
        java.lang.String[] strArray11 = deleteRequest7.indices();
        org.elasticsearch.common.transport.TransportAddress transportAddress12 = null;
        deleteRequest7.remoteAddress(transportAddress12);
        deleteRequest7.primaryTerm((long) '4');
        org.elasticsearch.common.unit.TimeValue timeValue16 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest3.timeout(timeValue16);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest17.routing("delete {[null][hi!][null]}");
        java.lang.String str20 = deleteRequest19.routing();
        org.elasticsearch.common.unit.TimeValue timeValue21 = deleteRequest19.timeout();
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[null][null][null]}" + "'", str4, "delete {[null][null][null]}");
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(timeValue16);
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[null][hi!][null]}" + "'", str20, "delete {[null][hi!][null]}");
        org.junit.Assert.assertNotNull(timeValue21);
    }

    @Test
    public void test05976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05976");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest8.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.routing();
        org.elasticsearch.index.VersionType versionType13 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.versionType(versionType13);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest14.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException17 = deleteRequest16.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest18.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest21.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest16.timeout(timeValue22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest24.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId27 = deleteRequest26.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel28 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest26.consistencyLevel(writeConsistencyLevel28);
        org.elasticsearch.action.support.IndicesOptions indicesOptions30 = deleteRequest26.indicesOptions();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException32 = deleteRequest31.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest31.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue35 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest38.setParentTask("hi!", 10L);
        java.lang.String[] strArray42 = deleteRequest38.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest43.setParentTask("hi!", 10L);
        java.lang.String[] strArray47 = deleteRequest43.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel48 = deleteRequest43.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest49 = deleteRequest38.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest50 = deleteRequest37.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest51 = deleteRequest26.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest52 = deleteRequest16.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest14.consistencyLevel(writeConsistencyLevel48);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest55 = deleteRequest14.parent("delete {[delete {[delete {[null][null][null]}][][]}][null][null]}");
        org.elasticsearch.action.support.IndicesOptions indicesOptions56 = deleteRequest14.indicesOptions();
        org.elasticsearch.common.transport.TransportAddress transportAddress57 = null;
        deleteRequest14.remoteAddress(transportAddress57);
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(actionRequestValidationException17);
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(indicesOptions30);
        org.junit.Assert.assertNotNull(actionRequestValidationException32);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNotNull(timeValue35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel48 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel48.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest49);
        org.junit.Assert.assertNotNull(deleteRequest50);
        org.junit.Assert.assertNotNull(deleteRequest51);
        org.junit.Assert.assertNotNull(deleteRequest52);
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest55);
        org.junit.Assert.assertNotNull(indicesOptions56);
    }

    @Test
    public void test05977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05977");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}");
        org.elasticsearch.common.transport.TransportAddress transportAddress2 = null;
        deleteRequest1.remoteAddress(transportAddress2);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.refresh(false);
        org.elasticsearch.index.VersionType versionType10 = deleteRequest7.versionType();
        java.lang.String str11 = deleteRequest7.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.index("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue14 = deleteRequest13.timeout();
        org.elasticsearch.tasks.TaskId taskId15 = deleteRequest13.getParentTask();
        org.elasticsearch.tasks.Task task16 = deleteRequest1.createTask((long) (byte) 100, "delete {[null][hi!][null]}", "delete {[][][]}", taskId15);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest20 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = deleteRequest20.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue27 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest26.timeout(timeValue27);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest29 = deleteRequest22.timeout(timeValue27);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest29.setShardId(shardId30);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest35 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException36 = deleteRequest35.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest35.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest38.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest38.routing("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest42.setParentTask("hi!", 10L);
        java.lang.String[] strArray46 = deleteRequest42.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest47.setParentTask("hi!", 10L);
        java.lang.String[] strArray51 = deleteRequest47.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel52 = deleteRequest47.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest53 = deleteRequest42.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest54 = deleteRequest41.consistencyLevel(writeConsistencyLevel52);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest56 = deleteRequest41.setShardId(shardId55);
        org.elasticsearch.common.transport.TransportAddress transportAddress57 = null;
        deleteRequest41.remoteAddress(transportAddress57);
        org.elasticsearch.tasks.TaskId taskId59 = deleteRequest41.getParentTask();
        org.elasticsearch.tasks.Task task60 = deleteRequest29.createTask((long) 'a', "delete {[][][]}", "hi!", taskId59);
        org.elasticsearch.tasks.Task task61 = deleteRequest1.createTask((long) (-1), "delete {[hi!][delete {[delete {[][][hi!]}][][delete {[][null][null]}]}][delete {[delete {[][null][null]}][hi!][null]}]}", "delete {[null][hi!][]}", taskId59);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest63 = deleteRequest1.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest65 = deleteRequest1.type("delete {[][][delete {[delete {[][null][null]}][hi!][null]}]}");
        java.lang.String str66 = deleteRequest65.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest68 = deleteRequest65.parent("delete {[delete {[][null][null]}][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(versionType10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(timeValue14);
        org.junit.Assert.assertNotNull(taskId15);
        org.junit.Assert.assertNotNull(task16);
        org.junit.Assert.assertNotNull(deleteRequest22);
        org.junit.Assert.assertNotNull(timeValue27);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest29);
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(actionRequestValidationException36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel52 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel52.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest53);
        org.junit.Assert.assertNotNull(deleteRequest54);
        org.junit.Assert.assertNotNull(deleteRequest56);
        org.junit.Assert.assertNotNull(taskId59);
        org.junit.Assert.assertNotNull(task60);
        org.junit.Assert.assertNotNull(task61);
        org.junit.Assert.assertNotNull(deleteRequest63);
        org.junit.Assert.assertNotNull(deleteRequest65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(deleteRequest68);
    }

    @Test
    public void test05978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05978");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.index("");
        boolean boolean8 = deleteRequest7.refresh();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest7.setShardId(shardId9);
        org.elasticsearch.tasks.TaskId taskId11 = deleteRequest7.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest7.refresh(true);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest14.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException19 = deleteRequest18.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest18.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest21.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest14.timeout(timeValue22);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest24 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest24.setParentTask("hi!", 10L);
        java.lang.String[] strArray28 = deleteRequest24.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel29 = deleteRequest24.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = deleteRequest24.type("hi!");
        org.elasticsearch.index.VersionType versionType32 = deleteRequest31.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest14.versionType(versionType32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest13.versionType(versionType32);
        java.lang.String str35 = deleteRequest13.routing();
        long long36 = deleteRequest13.primaryTerm();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput37 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest13.writeTo(streamOutput37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(taskId11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(actionRequestValidationException19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel29 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel29.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest31);
        org.junit.Assert.assertNotNull(versionType32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
    }

    @Test
    public void test05979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05979");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue8 = deleteRequest7.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest0.timeout(timeValue8);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(false);
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest12.getParentTask();
        deleteRequest0.setParentTask(taskId13);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest0.id("delete {[null][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue17 = deleteRequest0.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest0.type("delete {[null][null][null]}");
        java.lang.String str20 = deleteRequest0.id();
        java.lang.String[] strArray21 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest22 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest22.setParentTask("hi!", 10L);
        java.lang.String str26 = deleteRequest22.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.refresh(false);
        org.elasticsearch.tasks.TaskId taskId33 = deleteRequest32.getParentTask();
        org.elasticsearch.tasks.Task task34 = deleteRequest22.createTask((long) (-1), "", "hi!", taskId33);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest22.routing("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest38 = deleteRequest22.type("delete {[delete {[][null][null]}][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue39 = deleteRequest22.timeout();
        org.elasticsearch.tasks.TaskId taskId40 = deleteRequest22.getParentTask();
        deleteRequest0.setParentTask(taskId40);
        boolean boolean42 = deleteRequest0.refresh();
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(timeValue8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(taskId13);
        org.junit.Assert.assertNotNull(deleteRequest16);
        org.junit.Assert.assertNotNull(timeValue17);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "delete {[null][null][null]}" + "'", str20, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "delete {[null][null][null]}" + "'", str26, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(taskId33);
        org.junit.Assert.assertNotNull(task34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(deleteRequest38);
        org.junit.Assert.assertNotNull(timeValue39);
        org.junit.Assert.assertNotNull(taskId40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test05980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05980");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId3 = deleteRequest2.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest2.consistencyLevel(writeConsistencyLevel4);
        deleteRequest2.setParentTask("delete {[null][null][null]}", (long) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest2.type("delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.index("delete {[delete {[][null][null]}][null][null]}");
        java.lang.String[] strArray13 = deleteRequest12.indices();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest12.timeout("delete {[null][delete {[null][null][null]}][hi!]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][delete {[null][null][null]}][hi!]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNull(shardId3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test05981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05981");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        java.lang.String str8 = deleteRequest3.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.parent("hi!");
        java.lang.String str11 = deleteRequest3.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.parent("delete {[null][][null]}");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest13.writeTo(streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[][][hi!]}" + "'", str11, "delete {[][][hi!]}");
        org.junit.Assert.assertNotNull(deleteRequest13);
    }

    @Test
    public void test05982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05982");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting2 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException5 = deleteRequest4.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure7 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting2, "", (java.lang.Throwable) actionRequestValidationException5, "hi!");
        java.lang.Throwable throwable8 = shardFailure7.cause;
        java.lang.Throwable throwable9 = shardFailure7.cause;
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure11 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", throwable9, "hi!");
        java.lang.String str12 = shardFailure11.indexUUID;
        java.lang.String str13 = shardFailure11.indexUUID;
        java.lang.String str14 = shardFailure11.reason;
        java.lang.String str15 = shardFailure11.reason;
        java.lang.String str16 = shardFailure11.reason;
        java.lang.Throwable throwable17 = shardFailure11.cause;
        java.lang.String str18 = shardFailure11.reason;
        java.lang.String str19 = shardFailure11.reason;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting20 = shardFailure11.routing;
        java.lang.String str21 = shardFailure11.indexUUID;
        java.lang.Throwable throwable22 = shardFailure11.cause;
        java.lang.String str23 = shardFailure11.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException5);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "" + "'", str16, "");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable17.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNull(shardRouting20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable22.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
    }

    @Test
    public void test05983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05983");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.id("delete {[null][null][null]}");
        java.lang.String[] strArray6 = deleteRequest5.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest7.setParentTask("hi!", 10L);
        java.lang.String str11 = deleteRequest7.toString();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest17 = deleteRequest15.refresh(false);
        org.elasticsearch.tasks.TaskId taskId18 = deleteRequest17.getParentTask();
        org.elasticsearch.tasks.Task task19 = deleteRequest7.createTask((long) (-1), "", "hi!", taskId18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest7.setShardId(shardId20);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = deleteRequest7.version((long) (short) 10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.type("delete {[][null][null]}");
        org.elasticsearch.tasks.TaskId taskId26 = deleteRequest25.getParentTask();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel27 = deleteRequest25.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest5.consistencyLevel(writeConsistencyLevel27);
        boolean boolean29 = deleteRequest5.refresh();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "delete {[null][null][null]}" + "'", str11, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(deleteRequest17);
        org.junit.Assert.assertNotNull(taskId18);
        org.junit.Assert.assertNotNull(task19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(deleteRequest23);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(taskId26);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel27 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel27.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
    }

    @Test
    public void test05984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05984");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "", "delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.routing("delete {[][null][null]}");
        java.lang.String str6 = deleteRequest5.type();
        java.lang.String str7 = deleteRequest5.routing();
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "" + "'", str6, "");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "delete {[][null][null]}" + "'", str7, "delete {[][null][null]}");
    }

    @Test
    public void test05985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05985");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException1 = deleteRequest0.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest0.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.refresh(false);
        org.elasticsearch.index.shard.ShardId shardId9 = deleteRequest8.shardId();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest8.consistencyLevel(writeConsistencyLevel10);
        java.lang.String str12 = deleteRequest11.routing();
        org.elasticsearch.index.VersionType versionType13 = deleteRequest11.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest3.versionType(versionType13);
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest14.consistencyLevel();
        java.lang.String str16 = deleteRequest14.id();
        deleteRequest14.seqNo((long) 0);
        java.lang.String str19 = deleteRequest14.index();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest21 = deleteRequest14.type("");
        org.elasticsearch.common.unit.TimeValue timeValue22 = deleteRequest21.timeout();
        boolean boolean23 = deleteRequest21.refresh();
        org.junit.Assert.assertNotNull(actionRequestValidationException1);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(versionType13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(deleteRequest21);
        org.junit.Assert.assertNotNull(timeValue22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test05986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05986");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue7 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest8 = deleteRequest6.timeout(timeValue7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest2.timeout(timeValue7);
        java.lang.String str10 = deleteRequest9.type();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = null;
        deleteRequest9.remoteAddress(transportAddress11);
        java.lang.String str13 = deleteRequest9.id();
        org.elasticsearch.action.support.IndicesOptions indicesOptions14 = deleteRequest9.indicesOptions();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel15 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.support.IndicesOptions indicesOptions16 = deleteRequest9.indicesOptions();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(timeValue7);
        org.junit.Assert.assertNotNull(deleteRequest8);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(indicesOptions14);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel15 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel15.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(indicesOptions16);
    }

    @Test
    public void test05987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05987");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.tasks.TaskId taskId7 = null;
        org.elasticsearch.tasks.Task task8 = deleteRequest3.createTask((long) ' ', "delete {[null][null][null]}", "delete {[null][null][null]}", taskId7);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest10 = deleteRequest3.type("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest10.refresh(false);
        java.lang.String str13 = deleteRequest10.id();
        long long14 = deleteRequest10.version();
        org.junit.Assert.assertNotNull(task8);
        org.junit.Assert.assertNotNull(deleteRequest10);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "hi!" + "'", str13, "hi!");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + (-3L) + "'", long14 == (-3L));
    }

    @Test
    public void test05988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05988");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest2.type("hi!");
        org.elasticsearch.tasks.TaskId taskId5 = deleteRequest4.getParentTask();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest4.parent("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest7.routing("");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = deleteRequest9.type("delete {[null][delete {[][][hi!]}][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest9.routing("delete {[hi!][][delete {[][null][null]}]}");
        deleteRequest9.primaryTerm(32L);
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(deleteRequest4);
        org.junit.Assert.assertNotNull(taskId5);
        org.junit.Assert.assertNotNull(deleteRequest7);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest12);
        org.junit.Assert.assertNotNull(deleteRequest14);
    }

    @Test
    public void test05989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05989");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = deleteRequest1.routing("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.refresh(true);
        deleteRequest3.primaryTerm((long) 10);
        org.elasticsearch.common.transport.TransportAddress transportAddress8 = deleteRequest3.remoteAddress();
        java.lang.String str9 = deleteRequest3.id();
        java.lang.String str10 = deleteRequest3.toString();
        org.elasticsearch.common.unit.TimeValue timeValue11 = deleteRequest3.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest3.version((long) (byte) 10);
        java.lang.String str14 = deleteRequest13.routing();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest16 = deleteRequest13.refresh(true);
        deleteRequest13.seqNo((long) 10);
        org.junit.Assert.assertNotNull(deleteRequest3);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNull(transportAddress8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "delete {[][null][null]}" + "'", str10, "delete {[][null][null]}");
        org.junit.Assert.assertNotNull(timeValue11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest16);
    }

    @Test
    public void test05990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05990");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        java.lang.String str2 = deleteRequest0.id();
        long long3 = deleteRequest0.primaryTerm();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest0.setShardId(shardId4);
        java.lang.String[] strArray6 = deleteRequest5.indices();
        deleteRequest5.primaryTerm((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest12 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue13 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest14 = deleteRequest12.timeout(timeValue13);
        org.elasticsearch.common.transport.TransportAddress transportAddress15 = deleteRequest12.remoteAddress();
        boolean boolean16 = deleteRequest12.getShouldPersistResult();
        java.lang.String str17 = deleteRequest12.id();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest12.type("delete {[null][null][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest23 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue24 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest23.timeout(timeValue24);
        org.elasticsearch.common.transport.TransportAddress transportAddress26 = null;
        deleteRequest23.remoteAddress(transportAddress26);
        java.lang.String str28 = deleteRequest23.parent();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest23.id("");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest32 = deleteRequest30.index("delete {[null][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException34 = deleteRequest33.validate();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest36 = deleteRequest33.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue37 = deleteRequest36.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest39 = deleteRequest36.routing("");
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel40 = deleteRequest36.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest30.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest42 = deleteRequest12.consistencyLevel(writeConsistencyLevel40);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest43 = deleteRequest5.consistencyLevel(writeConsistencyLevel40);
        deleteRequest5.seqNo((long) (short) 100);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest47 = deleteRequest5.id("");
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(timeValue13);
        org.junit.Assert.assertNotNull(deleteRequest14);
        org.junit.Assert.assertNull(transportAddress15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "hi!" + "'", str17, "hi!");
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertNotNull(timeValue24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNotNull(deleteRequest32);
        org.junit.Assert.assertNotNull(actionRequestValidationException34);
        org.junit.Assert.assertNotNull(deleteRequest36);
        org.junit.Assert.assertNotNull(timeValue37);
        org.junit.Assert.assertNotNull(deleteRequest39);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel40 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel40.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest41);
        org.junit.Assert.assertNotNull(deleteRequest42);
        org.junit.Assert.assertNotNull(deleteRequest43);
        org.junit.Assert.assertNotNull(deleteRequest47);
    }

    @Test
    public void test05991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05991");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("hi!", "", "delete {[][null][null]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.parent("delete {[null][null][]}");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest7 = deleteRequest5.routing("delete {[delete {[null][][null]}][][delete {[null][null][]}]}");
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest7);
    }

    @Test
    public void test05992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05992");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[null][][null]}][][delete {[null][null][]}]}", "delete {[hi!][null][delete {[null][hi!][null]}]}", "delete {[delete {[null][][null]}][delete {[null][null][]}][hi!]}");
        java.lang.String str4 = deleteRequest3.getDescription();
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "delete {[delete {[delete {[null][][null]}][][delete {[null][null][]}]}][delete {[hi!][null][delete {[null][hi!][null]}]}][delete {[delete {[null][][null]}][delete {[null][null][]}][hi!]}]}" + "'", str4, "delete {[delete {[delete {[null][][null]}][][delete {[null][null][]}]}][delete {[hi!][null][delete {[null][hi!][null]}]}][delete {[delete {[null][][null]}][delete {[null][null][]}][hi!]}]}");
    }

    @Test
    public void test05993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05993");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException3, "hi!");
        java.lang.Throwable throwable6 = shardFailure5.cause;
        java.lang.Throwable throwable7 = shardFailure5.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting8 = shardFailure5.routing;
        java.lang.Throwable throwable9 = shardFailure5.cause;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure5.routing;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting11 = shardFailure5.routing;
        java.lang.String str12 = shardFailure5.indexUUID;
        java.lang.Throwable throwable13 = shardFailure5.cause;
        java.lang.String str14 = shardFailure5.indexUUID;
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable6.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable7.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable9.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertNull(shardRouting10);
        org.junit.Assert.assertNull(shardRouting11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "hi!" + "'", str12, "hi!");
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable13.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!" + "'", str14, "hi!");
    }

    @Test
    public void test05994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05994");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = deleteRequest0.refresh(false);
        org.elasticsearch.index.VersionType versionType3 = deleteRequest0.versionType();
        java.lang.String str4 = deleteRequest0.type();
        java.lang.String str5 = deleteRequest0.getDescription();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = new org.elasticsearch.action.delete.DeleteRequest("delete {[][][hi!]}", "", "delete {[][null][null]}");
        org.elasticsearch.common.unit.TimeValue timeValue10 = deleteRequest9.timeout();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel11 = deleteRequest9.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        boolean boolean16 = deleteRequest15.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest18 = deleteRequest15.routing("hi!");
        org.elasticsearch.common.unit.TimeValue timeValue19 = deleteRequest18.timeout();
        long long20 = deleteRequest18.primaryTerm();
        deleteRequest18.setParentTask("delete {[null][null][]}", (-3L));
        org.elasticsearch.index.VersionType versionType24 = deleteRequest18.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = deleteRequest9.versionType(versionType24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest26 = deleteRequest0.versionType(versionType24);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest28 = deleteRequest0.version((long) '4');
        org.elasticsearch.action.delete.DeleteRequest deleteRequest30 = deleteRequest28.refresh(false);
        java.lang.String str31 = deleteRequest30.routing();
        org.junit.Assert.assertNotNull(deleteRequest2);
        org.junit.Assert.assertNotNull(versionType3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "delete {[null][null][null]}" + "'", str5, "delete {[null][null][null]}");
        org.junit.Assert.assertNotNull(timeValue10);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel11 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel11.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(deleteRequest18);
        org.junit.Assert.assertNotNull(timeValue19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(versionType24);
        org.junit.Assert.assertNotNull(deleteRequest25);
        org.junit.Assert.assertNotNull(deleteRequest26);
        org.junit.Assert.assertNotNull(deleteRequest28);
        org.junit.Assert.assertNotNull(deleteRequest30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test05995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05995");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting0 = null;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest2 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.ActionRequestValidationException actionRequestValidationException3 = deleteRequest2.validate();
        org.elasticsearch.index.shard.IndexShard.ShardFailure shardFailure5 = new org.elasticsearch.index.shard.IndexShard.ShardFailure(shardRouting0, "", (java.lang.Throwable) actionRequestValidationException3, "hi!");
        org.elasticsearch.cluster.routing.ShardRouting shardRouting6 = shardFailure5.routing;
        java.lang.String str7 = shardFailure5.reason;
        java.lang.Throwable throwable8 = shardFailure5.cause;
        java.lang.String str9 = shardFailure5.indexUUID;
        org.elasticsearch.cluster.routing.ShardRouting shardRouting10 = shardFailure5.routing;
        org.junit.Assert.assertNotNull(actionRequestValidationException3);
        org.junit.Assert.assertNull(shardRouting6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "" + "'", str7, "");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals(throwable8.toString(), "org.elasticsearch.action.ActionRequestValidationException: Validation Failed: 1: index is missing;2: type is missing;3: id is missing;");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "hi!" + "'", str9, "hi!");
        org.junit.Assert.assertNull(shardRouting10);
    }

    @Test
    public void test05996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05996");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest1 = new org.elasticsearch.action.delete.DeleteRequest("delete {[delete {[][null][null]}][hi!][null]}");
        org.elasticsearch.common.io.stream.StreamInput streamInput2 = null;
        // The following exception was thrown during execution in test generation
        try {
            deleteRequest1.readFrom(streamInput2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test05997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05997");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest0.setParentTask("hi!", 10L);
        java.lang.String[] strArray4 = deleteRequest0.indices();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = new org.elasticsearch.action.delete.DeleteRequest();
        deleteRequest5.setParentTask("hi!", 10L);
        java.lang.String[] strArray9 = deleteRequest5.indices();
        org.elasticsearch.action.WriteConsistencyLevel writeConsistencyLevel10 = deleteRequest5.consistencyLevel();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest11 = deleteRequest0.consistencyLevel(writeConsistencyLevel10);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest13 = deleteRequest0.id("hi!");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest15 = deleteRequest13.index("hi!");
        deleteRequest15.seqNo((long) (short) 1);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest19 = deleteRequest15.refresh(false);
        long long20 = deleteRequest19.version();
        deleteRequest19.setParentTask("delete {[delete {[null][null][null]}][][]}", (long) (byte) -1);
        boolean boolean24 = deleteRequest19.refresh();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest25 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest27 = deleteRequest25.refresh(false);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest31 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue32 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest33 = deleteRequest31.timeout(timeValue32);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest34 = deleteRequest27.timeout(timeValue32);
        java.lang.String str35 = deleteRequest34.type();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest37 = deleteRequest34.routing("");
        org.elasticsearch.common.transport.TransportAddress transportAddress38 = deleteRequest34.remoteAddress();
        long long39 = deleteRequest34.version();
        org.elasticsearch.common.unit.TimeValue timeValue40 = deleteRequest34.timeout();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest41 = deleteRequest19.timeout(timeValue40);
        org.elasticsearch.index.shard.IndexShard indexShard42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.TransportReplicationAction.WriteResult<org.elasticsearch.action.delete.DeleteResponse> deleteResponseWriteResult43 = org.elasticsearch.action.delete.TransportDeleteAction.executeDeleteRequestOnPrimary(deleteRequest19, indexShard42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + writeConsistencyLevel10 + "' != '" + org.elasticsearch.action.WriteConsistencyLevel.DEFAULT + "'", writeConsistencyLevel10.equals(org.elasticsearch.action.WriteConsistencyLevel.DEFAULT));
        org.junit.Assert.assertNotNull(deleteRequest11);
        org.junit.Assert.assertNotNull(deleteRequest13);
        org.junit.Assert.assertNotNull(deleteRequest15);
        org.junit.Assert.assertNotNull(deleteRequest19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-3L) + "'", long20 == (-3L));
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(deleteRequest27);
        org.junit.Assert.assertNotNull(timeValue32);
        org.junit.Assert.assertNotNull(deleteRequest33);
        org.junit.Assert.assertNotNull(deleteRequest34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(deleteRequest37);
        org.junit.Assert.assertNull(transportAddress38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + (-3L) + "'", long39 == (-3L));
        org.junit.Assert.assertNotNull(timeValue40);
        org.junit.Assert.assertNotNull(deleteRequest41);
    }

    @Test
    public void test05998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05998");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest0 = new org.elasticsearch.action.delete.DeleteRequest();
        org.elasticsearch.action.support.IndicesOptions indicesOptions1 = deleteRequest0.indicesOptions();
        org.elasticsearch.index.VersionType versionType2 = deleteRequest0.versionType();
        org.elasticsearch.action.delete.DeleteRequest deleteRequest4 = deleteRequest0.routing("delete {[hi!][delete {[delete {[null][null][null]}][null][null]}][null]}");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.delete.DeleteRequest deleteRequest6 = deleteRequest0.timeout("delete {[null][null][]}");
            org.junit.Assert.fail("Expected exception of type org.elasticsearch.ElasticsearchParseException; message: Failed to parse setting [DeleteRequest.timeout] with value [delete {[null][null][]}] as a time value: unit is missing or unrecognized");
        } catch (org.elasticsearch.ElasticsearchParseException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(indicesOptions1);
        org.junit.Assert.assertNotNull(versionType2);
        org.junit.Assert.assertNotNull(deleteRequest4);
    }

    @Test
    public void test05999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test05999");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("", "", "hi!");
        org.elasticsearch.common.unit.TimeValue timeValue4 = org.elasticsearch.action.support.replication.ReplicationRequest.DEFAULT_TIMEOUT;
        org.elasticsearch.action.delete.DeleteRequest deleteRequest5 = deleteRequest3.timeout(timeValue4);
        org.elasticsearch.common.transport.TransportAddress transportAddress6 = null;
        deleteRequest3.remoteAddress(transportAddress6);
        org.elasticsearch.action.delete.DeleteRequest deleteRequest9 = deleteRequest3.id("delete {[][][hi!]}");
        long long10 = deleteRequest9.primaryTerm();
        org.elasticsearch.common.transport.TransportAddress transportAddress11 = deleteRequest9.remoteAddress();
        org.elasticsearch.common.unit.TimeValue timeValue12 = deleteRequest9.timeout();
        org.elasticsearch.tasks.TaskId taskId13 = deleteRequest9.getParentTask();
        org.junit.Assert.assertNotNull(timeValue4);
        org.junit.Assert.assertNotNull(deleteRequest5);
        org.junit.Assert.assertNotNull(deleteRequest9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(transportAddress11);
        org.junit.Assert.assertNotNull(timeValue12);
        org.junit.Assert.assertNotNull(taskId13);
    }

    @Test
    public void test06000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest11.test06000");
        org.elasticsearch.action.delete.DeleteRequest deleteRequest3 = new org.elasticsearch.action.delete.DeleteRequest("delete {[null][delete {[null][null][null]}][delete {[null][null][null]}]}", "delete {[hi!][][delete {[][null][null]}]}", "");
    }
}

