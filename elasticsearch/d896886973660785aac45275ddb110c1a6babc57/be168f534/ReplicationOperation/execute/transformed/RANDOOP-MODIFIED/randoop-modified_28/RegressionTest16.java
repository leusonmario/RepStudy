import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest16 {

    public static boolean debug = false;

    @Test
    public void test8001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8001");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.Index index9 = retryOnPrimaryException4.getIndex();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        retryOnPrimaryException4.setShard(shardId10);
        org.elasticsearch.index.Index index12 = retryOnPrimaryException4.getIndex();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException13.getHeader("RetryOnPrimaryException[[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; [][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.Index index16 = retryOnPrimaryException13.getIndex();
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertNull(index12);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(index16);
    }

    @Test
    public void test8002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8002");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable[] throwableArray4 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray6 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException2.status();
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str12 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test8003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8003");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException8.status();
        java.lang.Throwable[] throwableArray10 = retryOnPrimaryException8.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.Index index21 = retryOnPrimaryException16.getIndex();
        java.lang.Throwable throwable22 = retryOnPrimaryException16.unwrapCause();
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException16.getHeaderKeys();
        java.lang.String str24 = retryOnPrimaryException16.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "");
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "hi!");
        retryOnPrimaryException28.addSuppressed((java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.index.Index index33 = retryOnPrimaryException28.getIndex();
        java.lang.Throwable throwable34 = retryOnPrimaryException28.unwrapCause();
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "hi!");
        retryOnPrimaryException39.setShard("", 0);
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException39);
        java.util.List<java.lang.String> strList45 = retryOnPrimaryException39.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray50 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException39.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray50);
        retryOnPrimaryException28.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray50);
        retryOnPrimaryException16.addHeader("RetryOnPrimaryException[hi!]", strArray50);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "");
        retryOnPrimaryException58.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet62 = retryOnPrimaryException58.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "hi!");
        retryOnPrimaryException66.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray70 = retryOnPrimaryException66.guessRootCauses();
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        retryOnPrimaryException66.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList77);
        retryOnPrimaryException58.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList77);
        retryOnPrimaryException54.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList77);
        retryOnPrimaryException8.addHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList77);
        boolean boolean83 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.rest.RestStatus restStatus84 = retryOnPrimaryException8.status();
        org.elasticsearch.index.Index index85 = retryOnPrimaryException8.getIndex();
        java.lang.Throwable throwable86 = retryOnPrimaryException8.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNull(index21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(index33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray70);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertTrue("'" + restStatus84 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus84.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index85);
        org.junit.Assert.assertNotNull(throwable86);
        org.junit.Assert.assertEquals(throwable86.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable86.getMessage(), "");
        org.junit.Assert.assertEquals(throwable86.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test8004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8004");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException6.getShardId();
        java.lang.Throwable throwable9 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder10 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params11 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder12 = retryOnPrimaryException6.toXContent(xContentBuilder10, params11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str7, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(params11);
    }

    @Test
    public void test8005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8005");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException4.status();
        java.lang.Throwable throwable12 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        retryOnPrimaryException17.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException17.getResourceId();
        org.elasticsearch.index.Index index23 = retryOnPrimaryException17.getIndex();
        java.lang.Throwable throwable24 = retryOnPrimaryException17.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException17);
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException25);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = retryOnPrimaryException25.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus29 = retryOnPrimaryException25.status();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput30 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException25.writeTo(streamOutput30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(index23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertTrue("'" + restStatus29 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus29.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8006");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.Index index9 = retryOnPrimaryException4.getIndex();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException4.getHeader("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException4.setShard("[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (byte) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable16 = retryOnPrimaryException15.unwrapCause();
        retryOnPrimaryException15.setShard("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];", (int) (byte) 100);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = retryOnPrimaryException15.guessRootCauses();
        java.lang.Class<?> wildcardClass21 = elasticsearchExceptionArray20.getClass();
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable16.toString(), "[RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];][100]] RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test8007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8007");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.util.List<java.lang.String> strList14 = null;
        retryOnPrimaryException11.addHeader("hi!", strList14);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException11.getResourceId();
        org.elasticsearch.index.Index index19 = retryOnPrimaryException11.getIndex();
        org.elasticsearch.index.Index index20 = retryOnPrimaryException11.getIndex();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(index19);
        org.junit.Assert.assertNull(index20);
    }

    @Test
    public void test8008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8008");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException4.setIndex(index10);
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.Index index14 = retryOnPrimaryException4.getIndex();
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId16 = retryOnPrimaryException4.getShardId();
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(shardId16);
    }

    @Test
    public void test8009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8009");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        retryOnPrimaryException2.setShard("rest.exception.stacktrace.skip", 0);
        java.lang.Throwable throwable6 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str8 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getResourceId();
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test8010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8010");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException8);
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException9.getHeader("");
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException9.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "");
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.util.List<java.lang.String> strList27 = null;
        retryOnPrimaryException24.addHeader("hi!", strList27);
        retryOnPrimaryException17.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException30.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray33);
        retryOnPrimaryException30.setIndex("hi!");
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "");
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "hi!");
        retryOnPrimaryException42.addSuppressed((java.lang.Throwable) retryOnPrimaryException45);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException42);
        retryOnPrimaryException47.setShard("rest.exception.stacktrace.skip", (int) (short) 0);
        boolean boolean51 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String str52 = retryOnPrimaryException47.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "hi!");
        java.util.List<java.lang.String> strList59 = retryOnPrimaryException58.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "", (java.lang.Throwable) retryOnPrimaryException58);
        java.lang.Throwable throwable61 = retryOnPrimaryException60.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "hi!");
        retryOnPrimaryException65.setShard("", 0);
        boolean boolean69 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException65);
        java.util.List<java.lang.String> strList71 = retryOnPrimaryException65.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray76 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException65.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray76);
        retryOnPrimaryException60.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray76);
        retryOnPrimaryException47.addHeader("[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray76);
        retryOnPrimaryException30.addSuppressed((java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.common.io.stream.StreamInput streamInput81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException82 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException30, streamInput81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str52, "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(throwable61);
        org.junit.Assert.assertEquals(throwable61.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable61.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable61.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(strArray76);
    }

    @Test
    public void test8011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8011");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable13 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip", throwable13);
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException14.getSuppressed();
        java.lang.String str16 = retryOnPrimaryException14.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable13.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];" + "'", str16, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test8012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8012");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException6.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str9 = retryOnPrimaryException6.toString();
        java.lang.String[] strArray14 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException6.setResources("", strArray14);
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException6.getSuppressed();
        java.lang.Throwable[] throwableArray18 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException6.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = retryOnPrimaryException6.guessRootCauses();
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str9, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
    }

    @Test
    public void test8013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8013");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.getRootCause();
        retryOnPrimaryException2.setIndex("[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable11 = retryOnPrimaryException9.getRootCause();
        java.lang.String str12 = retryOnPrimaryException9.getDetailedMessage();
        java.lang.String str13 = retryOnPrimaryException9.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("", 0);
        org.elasticsearch.index.Index index28 = null;
        retryOnPrimaryException24.setIndex(index28);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException24.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.rest.RestStatus restStatus33 = retryOnPrimaryException24.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!", (java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException17.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "");
        org.elasticsearch.rest.RestStatus restStatus42 = retryOnPrimaryException41.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "", (java.lang.Throwable) retryOnPrimaryException41);
        java.util.List<java.lang.String> strList45 = retryOnPrimaryException43.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str46 = retryOnPrimaryException43.toString();
        java.lang.String[] strArray51 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException43.setResources("", strArray51);
        retryOnPrimaryException24.setResources("retry_on_primary_exception", strArray51);
        retryOnPrimaryException9.addHeader("RetryOnPrimaryException[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]]", strArray51);
        retryOnPrimaryException2.addHeader("[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][0]] RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];", strArray51);
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertEquals(throwable3.toString(), "[[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]] RetryOnPrimaryException[[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]]");
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + restStatus33 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus33.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus42 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus42.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str46, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray51);
    }

    @Test
    public void test8014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8014");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException6.getShardId();
        java.lang.Throwable throwable8 = retryOnPrimaryException6.unwrapCause();
        retryOnPrimaryException6.setIndex("[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[RetryOnPrimaryException[]]");
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "");
        java.lang.String str17 = retryOnPrimaryException16.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("", 0);
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str29 = retryOnPrimaryException28.toString();
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        java.lang.Throwable throwable31 = retryOnPrimaryException16.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable throwable33 = retryOnPrimaryException32.unwrapCause();
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException32);
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException32.getResourceId();
        retryOnPrimaryException32.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "");
        retryOnPrimaryException41.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet45 = retryOnPrimaryException41.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "hi!");
        retryOnPrimaryException49.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray53 = retryOnPrimaryException49.guessRootCauses();
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        retryOnPrimaryException49.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList60);
        retryOnPrimaryException41.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList60);
        retryOnPrimaryException32.addHeader("[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][52]] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]", (java.util.List<java.lang.String>) strList60);
        retryOnPrimaryException6.addHeader("", (java.util.List<java.lang.String>) strList60);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "[[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[RetryOnPrimaryException[]]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str17, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str29, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "");
        org.junit.Assert.assertEquals(throwable31.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        org.junit.Assert.assertEquals(throwable33.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray53);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
    }

    @Test
    public void test8015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8015");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException9.status();
        java.lang.String str11 = retryOnPrimaryException9.getDetailedMessage();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException9.getShardId();
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str11, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(shardId13);
    }

    @Test
    public void test8016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8016");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException6.setIndex(index8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!", (java.lang.Throwable) retryOnPrimaryException6);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8017");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[hi!][[hi!][-1]] RetryOnPrimaryException[]");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        java.lang.String[] strArray9 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" };
        retryOnPrimaryException4.setResources("[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray9);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException4.guessRootCauses();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[[hi!][[hi!][-1]] RetryOnPrimaryException[]]" + "'", str5, "RetryOnPrimaryException[[hi!][[hi!][-1]] RetryOnPrimaryException[]]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
    }

    @Test
    public void test8018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8018");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str9 = retryOnPrimaryException6.toString();
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str12 = retryOnPrimaryException11.getResourceType();
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str9, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test8019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8019");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        java.lang.String str10 = retryOnPrimaryException6.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException6.setShard(shardId11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable15 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "[hi!][[hi!][-1]] RetryOnPrimaryException[]");
        java.lang.String str19 = retryOnPrimaryException18.toString();
        java.lang.String str20 = retryOnPrimaryException18.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "hi!");
        java.util.List<java.lang.String> strList26 = retryOnPrimaryException25.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.index.Index index28 = null;
        retryOnPrimaryException25.setIndex(index28);
        java.lang.Throwable throwable30 = retryOnPrimaryException25.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray31 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "hi!");
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException38);
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException38.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException38);
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException38.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId43 = retryOnPrimaryException38.getShardId();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "");
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "hi!");
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException49);
        org.elasticsearch.index.Index index51 = retryOnPrimaryException46.getIndex();
        retryOnPrimaryException38.addSuppressed((java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = retryOnPrimaryException53.guessRootCauses();
        retryOnPrimaryException25.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        java.util.List<java.lang.String> strList57 = null;
        retryOnPrimaryException53.addHeader("[RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]] RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];", strList57);
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        throwable15.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        java.lang.String str61 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable15);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable15.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "RetryOnPrimaryException[[hi!][[hi!][-1]] RetryOnPrimaryException[]]" + "'", str19, "RetryOnPrimaryException[[hi!][[hi!][-1]] RetryOnPrimaryException[]]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [hi!][[hi!][-1]] RetryOnPrimaryException[]" + "'", str20, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [hi!][[hi!][-1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable30.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray31);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNull(index51);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "retry_on_primary_exception" + "'", str61, "retry_on_primary_exception");
    }

    @Test
    public void test8020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8020");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.util.List<java.lang.String> strList14 = null;
        retryOnPrimaryException11.addHeader("hi!", strList14);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException17.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray20);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = retryOnPrimaryException17.guessRootCauses();
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException17.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException17.guessRootCauses();
        java.lang.String str25 = retryOnPrimaryException17.getResourceType();
        java.lang.String str26 = retryOnPrimaryException17.getDetailedMessage();
        retryOnPrimaryException17.setIndex("[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str26, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test8021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8021");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.String str6 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException15.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId18 = retryOnPrimaryException15.getShardId();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "hi!");
        java.util.List<java.lang.String> strList26 = retryOnPrimaryException25.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String str28 = retryOnPrimaryException25.toString();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "hi!");
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "");
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        retryOnPrimaryException38.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.util.List<java.lang.String> strList44 = null;
        retryOnPrimaryException41.addHeader("hi!", strList44);
        retryOnPrimaryException34.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", (java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException47.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray50);
        retryOnPrimaryException25.setResources("rest.exception.stacktrace.skip", strArray50);
        java.lang.String str53 = retryOnPrimaryException25.toString();
        java.lang.Throwable throwable54 = retryOnPrimaryException25.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable54);
        org.elasticsearch.index.Index index56 = retryOnPrimaryException55.getIndex();
        java.lang.String str57 = retryOnPrimaryException55.toString();
        retryOnPrimaryException15.addSuppressed((java.lang.Throwable) retryOnPrimaryException55);
        throwable9.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        java.util.List<java.lang.String> strList60 = retryOnPrimaryException15.getResourceId();
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]" + "'", str6, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str28, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str53, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable54);
        org.junit.Assert.assertEquals(throwable54.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable54.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable54.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str57, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(strList60);
    }

    @Test
    public void test8022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8022");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException8);
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException8.getHeaderKeys();
        java.lang.Throwable throwable11 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException8.writeTo(streamOutput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test8023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8023");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip");
        retryOnPrimaryException4.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "RetryOnPrimaryException[]");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setIndex("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.String str17 = retryOnPrimaryException4.toString();
        java.lang.Throwable[] throwableArray18 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = retryOnPrimaryException4.guessRootCauses();
        java.lang.Class<?> wildcardClass20 = retryOnPrimaryException4.getClass();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]" + "'", str17, "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test8024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8024");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable9 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str11 = retryOnPrimaryException10.getDetailedMessage();
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException10.getHeaderKeys();
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException10.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException10.status();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException21.setIndex(index22);
        java.lang.Throwable throwable24 = retryOnPrimaryException21.getRootCause();
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException21.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException21);
        java.util.Set<java.lang.String> strSet27 = retryOnPrimaryException26.getHeaderKeys();
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "hi!");
        retryOnPrimaryException36.setShard("", 0);
        java.lang.String str40 = retryOnPrimaryException36.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        retryOnPrimaryException36.setShard(shardId41);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.shard.ShardId shardId45 = retryOnPrimaryException44.getShardId();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "hi!");
        java.util.List<java.lang.String> strList52 = retryOnPrimaryException51.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", (java.lang.Throwable) retryOnPrimaryException51);
        java.lang.Throwable throwable54 = retryOnPrimaryException53.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "hi!");
        retryOnPrimaryException58.setShard("", 0);
        boolean boolean62 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException58);
        java.util.List<java.lang.String> strList64 = retryOnPrimaryException58.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray69 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException58.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray69);
        retryOnPrimaryException53.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray69);
        retryOnPrimaryException44.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];", strArray69);
        retryOnPrimaryException26.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]", strArray69);
        retryOnPrimaryException10.setResources("[[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray69);
        org.elasticsearch.index.shard.ShardId shardId75 = retryOnPrimaryException10.getShardId();
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str11, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(throwable54);
        org.junit.Assert.assertEquals(throwable54.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable54.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable54.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNull(shardId75);
    }

    @Test
    public void test8025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8025");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException4.setIndex(index5);
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable[] throwableArray8 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException9.getResourceId();
        java.lang.Throwable throwable11 = retryOnPrimaryException9.getRootCause();
        org.elasticsearch.common.io.stream.StreamInput streamInput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException9, streamInput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8026");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId4 = retryOnPrimaryException2.getShardId();
        java.lang.String str5 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str6 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException12.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", (java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String str15 = retryOnPrimaryException12.toString();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "");
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        retryOnPrimaryException25.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        java.util.List<java.lang.String> strList31 = null;
        retryOnPrimaryException28.addHeader("hi!", strList31);
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException34.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray37);
        retryOnPrimaryException12.setResources("rest.exception.stacktrace.skip", strArray37);
        java.lang.String str40 = retryOnPrimaryException12.toString();
        java.lang.Throwable throwable41 = retryOnPrimaryException12.getRootCause();
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException12.getResourceId();
        retryOnPrimaryException2.addHeader("hi!", strList42);
        org.elasticsearch.rest.RestStatus restStatus44 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];", (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "retry_on_primary_exception" + "'", str5, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]" + "'", str6, "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]");
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str15, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str40, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable41.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertTrue("'" + restStatus44 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus44.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8027");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException2.setIndex(index10);
        java.lang.Throwable throwable12 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException2.guessRootCauses();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "");
        org.junit.Assert.assertEquals(throwable12.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNull(strList17);
    }

    @Test
    public void test8028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8028");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable[] throwableArray4 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray6 = retryOnPrimaryException2.getSuppressed();
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[];", (int) ' ');
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = retryOnPrimaryException19.guessRootCauses();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        retryOnPrimaryException19.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList30);
        retryOnPrimaryException19.setIndex("RetryOnPrimaryException[hi!]");
        java.lang.String str35 = retryOnPrimaryException19.toString();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "");
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException44);
        java.util.List<java.lang.String> strList46 = retryOnPrimaryException41.getResourceId();
        org.elasticsearch.index.Index index47 = retryOnPrimaryException41.getIndex();
        java.lang.Throwable throwable48 = retryOnPrimaryException41.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "hi!");
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "");
        retryOnPrimaryException57.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet61 = retryOnPrimaryException57.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "hi!");
        retryOnPrimaryException65.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray69 = retryOnPrimaryException65.guessRootCauses();
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        retryOnPrimaryException65.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList76);
        retryOnPrimaryException57.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList76);
        retryOnPrimaryException53.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList76);
        retryOnPrimaryException49.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList76);
        retryOnPrimaryException19.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList76);
        retryOnPrimaryException15.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList76);
        java.lang.Throwable throwable84 = retryOnPrimaryException15.getRootCause();
        org.elasticsearch.rest.RestStatus restStatus85 = retryOnPrimaryException15.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException86 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.Index index87 = retryOnPrimaryException15.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray89 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String str90 = retryOnPrimaryException15.getDetailedMessage();
        boolean boolean91 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String str92 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException15);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]" + "'", str35, "[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(index47);
        org.junit.Assert.assertNotNull(throwable48);
        org.junit.Assert.assertEquals(throwable48.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable48.getMessage(), "");
        org.junit.Assert.assertEquals(throwable48.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray69);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(throwable84);
        org.junit.Assert.assertEquals(throwable84.getLocalizedMessage(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable84.getMessage(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable84.toString(), "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]");
        org.junit.Assert.assertTrue("'" + restStatus85 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus85.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index87);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray89);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [][[][0]] RetryOnPrimaryException[hi!]" + "'", str90, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "retry_on_primary_exception" + "'", str92, "retry_on_primary_exception");
    }

    @Test
    public void test8029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8029");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException11.setShard("", 0);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        retryOnPrimaryException11.setShard(shardId18);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable22 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str24 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setIndex("[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "");
        org.junit.Assert.assertEquals(throwable22.toString(), "[[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test8030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8030");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip");
        retryOnPrimaryException4.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException11.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException11.guessRootCauses();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        retryOnPrimaryException11.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList22);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        retryOnPrimaryException28.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray32 = retryOnPrimaryException28.guessRootCauses();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        retryOnPrimaryException28.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList39);
        retryOnPrimaryException28.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException28.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "hi!");
        java.util.List<java.lang.String> strList53 = retryOnPrimaryException52.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "", (java.lang.Throwable) retryOnPrimaryException52);
        org.elasticsearch.rest.RestStatus restStatus55 = retryOnPrimaryException54.status();
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "hi!");
        retryOnPrimaryException59.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray63 = retryOnPrimaryException59.guessRootCauses();
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        retryOnPrimaryException59.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList70);
        retryOnPrimaryException54.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList70);
        retryOnPrimaryException28.addHeader("", (java.util.List<java.lang.String>) strList70);
        java.lang.String[] strArray78 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException28.setResources("RetryOnPrimaryException[]", strArray78);
        retryOnPrimaryException11.setResources("RetryOnPrimaryException[hi!]", strArray78);
        retryOnPrimaryException4.setResources("hi!", strArray78);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException82 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str83 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable84 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput85 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable86 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException4, streamOutput85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray32);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertTrue("'" + restStatus55 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus55.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray63);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str83, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(throwable84);
        org.junit.Assert.assertEquals(throwable84.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable84.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable84.toString(), "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
    }

    @Test
    public void test8031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8031");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException6.setIndex(index10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException6.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        java.lang.String str21 = retryOnPrimaryException20.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "hi!");
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException27);
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException27.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.index.shard.ShardId shardId31 = retryOnPrimaryException30.getShardId();
        org.elasticsearch.index.shard.ShardId shardId32 = retryOnPrimaryException30.getShardId();
        retryOnPrimaryException30.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException30.getSuppressed();
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.String str37 = retryOnPrimaryException30.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "");
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.index.Index index46 = retryOnPrimaryException41.getIndex();
        java.lang.Throwable throwable47 = retryOnPrimaryException41.unwrapCause();
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "hi!");
        retryOnPrimaryException52.setShard("", 0);
        boolean boolean56 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException52);
        java.util.List<java.lang.String> strList58 = retryOnPrimaryException52.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray63 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException52.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray63);
        retryOnPrimaryException41.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray63);
        retryOnPrimaryException30.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray63);
        retryOnPrimaryException20.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray63);
        retryOnPrimaryException16.addHeader("", strArray63);
        java.util.Set<java.lang.String> strSet69 = retryOnPrimaryException16.getHeaderKeys();
        java.util.Set<java.lang.String> strSet70 = retryOnPrimaryException16.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException75 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId73, "hi!");
        org.elasticsearch.index.Index index76 = null;
        retryOnPrimaryException75.setIndex(index76);
        java.lang.String str78 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException75);
        java.lang.Throwable[] throwableArray79 = retryOnPrimaryException75.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException80 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException75);
        retryOnPrimaryException75.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        java.util.List<java.lang.String> strList83 = retryOnPrimaryException75.getResourceId();
        boolean boolean84 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException75);
        java.lang.Throwable throwable85 = retryOnPrimaryException75.unwrapCause();
        retryOnPrimaryException16.addSuppressed(throwable85);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(index46);
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "");
        org.junit.Assert.assertEquals(throwable47.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "retry_on_primary_exception" + "'", str78, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNull(strList83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(throwable85);
        org.junit.Assert.assertEquals(throwable85.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable85.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable85.toString(), "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8032");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException13.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException13.guessRootCauses();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        retryOnPrimaryException13.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList24);
        retryOnPrimaryException13.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException13.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException37.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", (java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.rest.RestStatus restStatus40 = retryOnPrimaryException39.status();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        retryOnPrimaryException44.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray48 = retryOnPrimaryException44.guessRootCauses();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        retryOnPrimaryException44.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException39.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException13.addHeader("", (java.util.List<java.lang.String>) strList55);
        java.lang.String[] strArray63 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException13.setResources("RetryOnPrimaryException[]", strArray63);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray63);
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "");
        retryOnPrimaryException69.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet73 = retryOnPrimaryException69.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId75 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException77 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId75, "hi!");
        retryOnPrimaryException77.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray81 = retryOnPrimaryException77.guessRootCauses();
        java.lang.String[] strArray87 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList88 = new java.util.ArrayList<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        retryOnPrimaryException77.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList88);
        retryOnPrimaryException69.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList88);
        retryOnPrimaryException4.addHeader("hi!", (java.util.List<java.lang.String>) strList88);
        java.lang.String str93 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId94 = retryOnPrimaryException4.getShardId();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertTrue("'" + restStatus40 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus40.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray48);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray81);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "retry_on_primary_exception" + "'", str93, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId94);
    }

    @Test
    public void test8033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8033");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test8034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8034");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getHeader("retry_on_primary_exception");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable12 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException17.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = retryOnPrimaryException17.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", (java.lang.Throwable) retryOnPrimaryException17);
        java.util.List<java.lang.String> strList24 = retryOnPrimaryException22.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.stacktrace.skip");
        retryOnPrimaryException27.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray31 = retryOnPrimaryException27.guessRootCauses();
        retryOnPrimaryException22.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        throwable12.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException22.getHeaderKeys();
        java.lang.Throwable throwable35 = retryOnPrimaryException22.getRootCause();
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException22.getResourceId();
        retryOnPrimaryException22.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str39 = retryOnPrimaryException22.getResourceType();
        java.util.List<java.lang.String> strList41 = retryOnPrimaryException22.getHeader("RetryOnPrimaryException[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str42 = retryOnPrimaryException22.getDetailedMessage();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray31);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable35.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str42, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test8035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8035");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable[] throwableArray7 = retryOnPrimaryException6.getSuppressed();
        java.lang.String str8 = retryOnPrimaryException6.toString();
        org.elasticsearch.index.Index index9 = retryOnPrimaryException6.getIndex();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "");
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "hi!");
        retryOnPrimaryException15.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.index.Index index20 = retryOnPrimaryException15.getIndex();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId22 = retryOnPrimaryException15.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = retryOnPrimaryException15.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        org.elasticsearch.index.Index index29 = null;
        retryOnPrimaryException28.setIndex(index29);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        java.lang.Throwable throwable34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable34);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "hi!");
        retryOnPrimaryException39.setShard("", 0);
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException39);
        java.util.List<java.lang.String> strList45 = retryOnPrimaryException39.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray50 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException39.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray50);
        retryOnPrimaryException35.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray50);
        retryOnPrimaryException28.setResources("retry_on_primary_exception", strArray50);
        java.util.List<java.lang.String> strList54 = retryOnPrimaryException28.getResourceId();
        retryOnPrimaryException24.addHeader("[][[][0]] RetryOnPrimaryException[hi!]", strList54);
        retryOnPrimaryException6.addHeader("rest.exception.stacktrace.skip", strList54);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray57 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];" + "'", str8, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertNull(index20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray57);
    }

    @Test
    public void test8036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8036");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.toString();
        java.lang.Throwable[] throwableArray8 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (byte) 0);
        java.lang.String str13 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.String str14 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.stacktrace.skip");
        retryOnPrimaryException19.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = retryOnPrimaryException19.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "RetryOnPrimaryException[]");
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException19);
        retryOnPrimaryException19.setIndex("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.String str32 = retryOnPrimaryException19.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.rest.RestStatus restStatus34 = retryOnPrimaryException19.status();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str7, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]" + "'", str32, "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertTrue("'" + restStatus34 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus34.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8037");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.toString();
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index9 = retryOnPrimaryException4.getIndex();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        java.lang.Throwable throwable14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", throwable14);
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException15.setIndex(index16);
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("", 0);
        org.elasticsearch.index.Index index30 = null;
        retryOnPrimaryException26.setIndex(index30);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException26.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException26);
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.index.shard.ShardId shardId37 = retryOnPrimaryException35.getShardId();
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        java.util.List<java.lang.String> strList45 = retryOnPrimaryException44.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException44);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException46.getSuppressed();
        java.lang.String str48 = retryOnPrimaryException46.toString();
        java.util.List<java.lang.String> strList49 = retryOnPrimaryException46.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "");
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "hi!");
        retryOnPrimaryException57.addSuppressed((java.lang.Throwable) retryOnPrimaryException60);
        org.elasticsearch.index.Index index62 = retryOnPrimaryException57.getIndex();
        java.lang.Throwable throwable63 = retryOnPrimaryException57.unwrapCause();
        java.util.Set<java.lang.String> strSet64 = retryOnPrimaryException57.getHeaderKeys();
        java.lang.String str65 = retryOnPrimaryException57.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "");
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "hi!");
        retryOnPrimaryException69.addSuppressed((java.lang.Throwable) retryOnPrimaryException72);
        org.elasticsearch.index.Index index74 = retryOnPrimaryException69.getIndex();
        java.lang.Throwable throwable75 = retryOnPrimaryException69.unwrapCause();
        boolean boolean76 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException69);
        org.elasticsearch.index.shard.ShardId shardId78 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException80 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId78, "hi!");
        retryOnPrimaryException80.setShard("", 0);
        boolean boolean84 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException80);
        java.util.List<java.lang.String> strList86 = retryOnPrimaryException80.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray91 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException80.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray91);
        retryOnPrimaryException69.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray91);
        retryOnPrimaryException57.addHeader("RetryOnPrimaryException[hi!]", strArray91);
        retryOnPrimaryException53.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray91);
        retryOnPrimaryException46.setResources("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray91);
        retryOnPrimaryException35.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[hi!];; RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray91);
        retryOnPrimaryException15.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray91);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[hi!];", strArray91);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str7, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];" + "'", str48, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(index62);
        org.junit.Assert.assertNotNull(throwable63);
        org.junit.Assert.assertEquals(throwable63.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable63.getMessage(), "");
        org.junit.Assert.assertEquals(throwable63.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(index74);
        org.junit.Assert.assertNotNull(throwable75);
        org.junit.Assert.assertEquals(throwable75.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable75.getMessage(), "");
        org.junit.Assert.assertEquals(throwable75.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNotNull(strArray91);
    }

    @Test
    public void test8038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8038");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException4.setIndex(index7);
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException4.status();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8039");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException8.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId11 = retryOnPrimaryException8.getShardId();
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException8.status();
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException8.getShardId();
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId13);
    }

    @Test
    public void test8040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8040");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str14 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException21);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException21.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId25 = retryOnPrimaryException24.getShardId();
        org.elasticsearch.index.shard.ShardId shardId26 = retryOnPrimaryException24.getShardId();
        retryOnPrimaryException24.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException24.getSuppressed();
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String str31 = retryOnPrimaryException24.getResourceType();
        java.lang.String str32 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException33);
        java.lang.String str35 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str36 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder37 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params38 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder39 = retryOnPrimaryException6.toXContent(xContentBuilder37, params38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str14, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "retry_on_primary_exception" + "'", str32, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "retry_on_primary_exception" + "'", str35, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str36, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(params38);
    }

    @Test
    public void test8041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8041");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.util.List<java.lang.String> strList14 = null;
        retryOnPrimaryException11.addHeader("hi!", strList14);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException11.guessRootCauses();
        java.lang.Throwable throwable18 = retryOnPrimaryException11.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String str20 = retryOnPrimaryException19.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId21 = retryOnPrimaryException19.getShardId();
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException19.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId23 = retryOnPrimaryException19.getShardId();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNull(shardId23);
    }

    @Test
    public void test8042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8042");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException7.getResourceId();
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException7.getHeaderKeys();
        java.lang.String str10 = retryOnPrimaryException7.toString();
        java.lang.String str11 = retryOnPrimaryException7.toString();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        retryOnPrimaryException17.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException17.getResourceId();
        org.elasticsearch.index.Index index23 = retryOnPrimaryException17.getIndex();
        java.lang.Throwable throwable24 = retryOnPrimaryException17.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException17);
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "");
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "hi!");
        retryOnPrimaryException30.addSuppressed((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.Index index35 = retryOnPrimaryException30.getIndex();
        java.lang.Throwable throwable36 = retryOnPrimaryException30.unwrapCause();
        java.lang.String str37 = retryOnPrimaryException30.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus38 = retryOnPrimaryException30.status();
        org.elasticsearch.index.Index index39 = retryOnPrimaryException30.getIndex();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "");
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "hi!");
        retryOnPrimaryException43.addSuppressed((java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.index.Index index48 = retryOnPrimaryException43.getIndex();
        java.lang.Throwable throwable49 = retryOnPrimaryException43.unwrapCause();
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "hi!");
        retryOnPrimaryException54.setShard("", 0);
        boolean boolean58 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException54);
        java.util.List<java.lang.String> strList60 = retryOnPrimaryException54.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray65 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException54.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray65);
        retryOnPrimaryException43.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray65);
        retryOnPrimaryException30.addHeader("RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]", strArray65);
        retryOnPrimaryException25.setResources("RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray65);
        retryOnPrimaryException7.addHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]", strArray65);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str10, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str11, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNull(index23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(index35);
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "");
        org.junit.Assert.assertEquals(throwable36.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + restStatus38 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus38.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index39);
        org.junit.Assert.assertNull(index48);
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "");
        org.junit.Assert.assertEquals(throwable49.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray65);
    }

    @Test
    public void test8043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8043");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable11 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", throwable11);
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException12.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        retryOnPrimaryException23.setShard("", 0);
        boolean boolean27 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.rest.RestStatus restStatus30 = retryOnPrimaryException23.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "hi!");
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException38);
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException38.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException38);
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException41.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "hi!");
        java.util.List<java.lang.String> strList49 = retryOnPrimaryException48.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "", (java.lang.Throwable) retryOnPrimaryException48);
        java.lang.String str51 = retryOnPrimaryException48.toString();
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "hi!");
        boolean boolean58 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException57);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "");
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "hi!");
        retryOnPrimaryException61.addSuppressed((java.lang.Throwable) retryOnPrimaryException64);
        java.util.List<java.lang.String> strList67 = null;
        retryOnPrimaryException64.addHeader("hi!", strList67);
        retryOnPrimaryException57.addSuppressed((java.lang.Throwable) retryOnPrimaryException64);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "", (java.lang.Throwable) retryOnPrimaryException64);
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException70.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray73);
        retryOnPrimaryException48.setResources("rest.exception.stacktrace.skip", strArray73);
        retryOnPrimaryException41.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]", strArray73);
        retryOnPrimaryException32.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray73);
        retryOnPrimaryException12.setResources("[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray73);
        retryOnPrimaryException12.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertTrue("'" + restStatus30 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus30.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str51, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strArray73);
    }

    @Test
    public void test8044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8044");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException11.setShard("", 0);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        retryOnPrimaryException11.setShard(shardId18);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        org.elasticsearch.index.Index index24 = null;
        retryOnPrimaryException23.setIndex(index24);
        java.util.Set<java.lang.String> strSet26 = retryOnPrimaryException23.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException23.status();
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable throwable30 = retryOnPrimaryException11.getRootCause();
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable30.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8045");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        java.lang.String str4 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (-1));
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.stacktrace.skip");
        retryOnPrimaryException12.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException12);
        retryOnPrimaryException16.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.util.List<java.lang.String> strList21 = null;
        retryOnPrimaryException16.addHeader("", strList21);
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException16.getHeaderKeys();
        java.lang.Throwable throwable24 = retryOnPrimaryException16.getRootCause();
        java.lang.String str25 = retryOnPrimaryException16.getDetailedMessage();
        java.lang.Throwable throwable26 = retryOnPrimaryException16.unwrapCause();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable24.toString(), "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str25, "[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable26.toString(), "[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
    }

    @Test
    public void test8046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8046");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable[] throwableArray4 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray6 = retryOnPrimaryException2.getSuppressed();
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[];", (int) ' ');
        java.lang.String str10 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.stacktrace.skip");
        retryOnPrimaryException13.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        retryOnPrimaryException20.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException20.guessRootCauses();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        retryOnPrimaryException20.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList31);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException37.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = retryOnPrimaryException37.guessRootCauses();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        retryOnPrimaryException37.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList48);
        retryOnPrimaryException37.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException37.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "hi!");
        java.util.List<java.lang.String> strList62 = retryOnPrimaryException61.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "", (java.lang.Throwable) retryOnPrimaryException61);
        org.elasticsearch.rest.RestStatus restStatus64 = retryOnPrimaryException63.status();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "hi!");
        retryOnPrimaryException68.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray72 = retryOnPrimaryException68.guessRootCauses();
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        retryOnPrimaryException68.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException63.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException37.addHeader("", (java.util.List<java.lang.String>) strList79);
        java.lang.String[] strArray87 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException37.setResources("RetryOnPrimaryException[]", strArray87);
        retryOnPrimaryException20.setResources("RetryOnPrimaryException[hi!]", strArray87);
        retryOnPrimaryException13.setResources("hi!", strArray87);
        boolean boolean91 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId92 = null;
        retryOnPrimaryException13.setShard(shardId92);
        boolean boolean94 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        java.util.List<java.lang.String> strList95 = retryOnPrimaryException13.getResourceId();
        java.lang.String str96 = retryOnPrimaryException13.getDetailedMessage();
        java.lang.Throwable[] throwableArray97 = retryOnPrimaryException13.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.util.Set<java.lang.String> strSet99 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[];][32]] RetryOnPrimaryException[]" + "'", str10, "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[];][32]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertTrue("'" + restStatus64 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus64.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray72);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNotNull(strList95);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str96, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(throwableArray97);
        org.junit.Assert.assertNotNull(strSet99);
    }

    @Test
    public void test8047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8047");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.cause.skip");
        retryOnPrimaryException6.setShard("", (int) ' ');
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable11 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable13 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("", 0);
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException19);
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException19.getHeader("retry_on_primary_exception");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.Throwable throwable27 = retryOnPrimaryException19.getRootCause();
        java.lang.Throwable[] throwableArray28 = retryOnPrimaryException19.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "hi!");
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException33);
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException33.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException33);
        java.lang.String str37 = retryOnPrimaryException36.toString();
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException36);
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException36.getResourceId();
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = retryOnPrimaryException36.guessRootCauses();
        java.lang.String str42 = retryOnPrimaryException36.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "");
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "hi!");
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException49);
        org.elasticsearch.index.Index index51 = retryOnPrimaryException46.getIndex();
        java.lang.Throwable throwable52 = retryOnPrimaryException46.unwrapCause();
        java.lang.String str53 = retryOnPrimaryException46.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus54 = retryOnPrimaryException46.status();
        org.elasticsearch.index.Index index55 = retryOnPrimaryException46.getIndex();
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "");
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "hi!");
        retryOnPrimaryException59.addSuppressed((java.lang.Throwable) retryOnPrimaryException62);
        org.elasticsearch.index.Index index64 = retryOnPrimaryException59.getIndex();
        java.lang.Throwable throwable65 = retryOnPrimaryException59.unwrapCause();
        boolean boolean66 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException59);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "hi!");
        retryOnPrimaryException70.setShard("", 0);
        boolean boolean74 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException70);
        java.util.List<java.lang.String> strList76 = retryOnPrimaryException70.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray81 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException70.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray81);
        retryOnPrimaryException59.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray81);
        retryOnPrimaryException46.addHeader("RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]", strArray81);
        retryOnPrimaryException36.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray81);
        retryOnPrimaryException6.addHeader("[RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][-1]] RetryOnPrimaryException[hi!]", strArray81);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput87 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException6.writeTo(streamOutput87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[][[][32]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.toString(), "[][[][32]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable27.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str37, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(index51);
        org.junit.Assert.assertNotNull(throwable52);
        org.junit.Assert.assertEquals(throwable52.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable52.getMessage(), "");
        org.junit.Assert.assertEquals(throwable52.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertTrue("'" + restStatus54 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus54.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index55);
        org.junit.Assert.assertNull(index64);
        org.junit.Assert.assertNotNull(throwable65);
        org.junit.Assert.assertEquals(throwable65.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable65.getMessage(), "");
        org.junit.Assert.assertEquals(throwable65.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strArray81);
    }

    @Test
    public void test8048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8048");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.String str6 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "");
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.Index index17 = retryOnPrimaryException12.getIndex();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("", 0);
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        retryOnPrimaryException21.setShard(shardId28);
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String str31 = retryOnPrimaryException12.getDetailedMessage();
        java.lang.Throwable throwable32 = retryOnPrimaryException12.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.Throwable throwable34 = retryOnPrimaryException12.unwrapCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException4.getHeaderKeys();
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]" + "'", str6, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNull(index17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str31, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "");
        org.junit.Assert.assertEquals(throwable32.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertNotNull(strSet37);
    }

    @Test
    public void test8049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8049");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        java.lang.String str7 = retryOnPrimaryException6.getResourceType();
        java.lang.Throwable throwable8 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip", throwable8);
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException9.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException12.getShardId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String str16 = retryOnPrimaryException12.getDetailedMessage();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str16, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test8050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8050");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        retryOnPrimaryException2.setShard(shardId4);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("", 0);
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException12.setIndex(index16);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException12);
        retryOnPrimaryException12.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str21 = retryOnPrimaryException12.toString();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "");
        org.elasticsearch.rest.RestStatus restStatus30 = retryOnPrimaryException29.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException29);
        retryOnPrimaryException31.setShard("", 10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", (java.lang.Throwable) retryOnPrimaryException31);
        java.lang.Throwable throwable36 = retryOnPrimaryException35.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        retryOnPrimaryException40.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray44 = retryOnPrimaryException40.guessRootCauses();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        retryOnPrimaryException40.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList51);
        retryOnPrimaryException40.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException40.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "hi!");
        java.util.List<java.lang.String> strList65 = retryOnPrimaryException64.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "", (java.lang.Throwable) retryOnPrimaryException64);
        org.elasticsearch.rest.RestStatus restStatus67 = retryOnPrimaryException66.status();
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "hi!");
        retryOnPrimaryException71.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray75 = retryOnPrimaryException71.guessRootCauses();
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        retryOnPrimaryException71.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList82);
        retryOnPrimaryException66.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList82);
        retryOnPrimaryException40.addHeader("", (java.util.List<java.lang.String>) strList82);
        java.lang.String[] strArray90 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException40.setResources("RetryOnPrimaryException[]", strArray90);
        retryOnPrimaryException35.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray90);
        retryOnPrimaryException12.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray90);
        retryOnPrimaryException2.setResources("", strArray90);
        org.elasticsearch.index.shard.ShardId shardId95 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.Index index96 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.index.shard.ShardId shardId97 = null;
        retryOnPrimaryException2.setShard(shardId97);
        java.lang.Throwable throwable99 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]" + "'", str21, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus30 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus30.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "");
        org.junit.Assert.assertEquals(throwable36.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray44);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertTrue("'" + restStatus67 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus67.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray75);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNull(shardId95);
        org.junit.Assert.assertNull(index96);
        org.junit.Assert.assertNotNull(throwable99);
        org.junit.Assert.assertEquals(throwable99.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable99.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable99.toString(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
    }

    @Test
    public void test8051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8051");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable[] throwableArray4 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray6 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[hi!]", (int) (short) 1);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.stacktrace.skip");
        retryOnPrimaryException22.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException22.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "RetryOnPrimaryException[]");
        retryOnPrimaryException22.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray31 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "");
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "hi!");
        retryOnPrimaryException35.addSuppressed((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.Index index40 = retryOnPrimaryException35.getIndex();
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        retryOnPrimaryException44.setShard("", 0);
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray50 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        retryOnPrimaryException44.setShard(shardId51);
        retryOnPrimaryException35.addSuppressed((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "hi!");
        boolean boolean60 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException59);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "");
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "hi!");
        retryOnPrimaryException63.addSuppressed((java.lang.Throwable) retryOnPrimaryException66);
        java.util.List<java.lang.String> strList69 = null;
        retryOnPrimaryException66.addHeader("hi!", strList69);
        retryOnPrimaryException59.addSuppressed((java.lang.Throwable) retryOnPrimaryException66);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "", (java.lang.Throwable) retryOnPrimaryException66);
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException72.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray75);
        retryOnPrimaryException35.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray75);
        retryOnPrimaryException22.addHeader("", strArray75);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray75);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];][1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "[RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];][1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray31);
        org.junit.Assert.assertNull(index40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray50);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strArray75);
    }

    @Test
    public void test8052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8052");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable7 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        retryOnPrimaryException4.setIndex("RetryOnPrimaryException[]");
        retryOnPrimaryException4.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", 1);
        retryOnPrimaryException4.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
    }

    @Test
    public void test8053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8053");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        java.lang.String str3 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) ' ');
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getResourceId();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "retry_on_primary_exception" + "'", str3, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable7.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][32]] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][32]] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test8054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8054");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException6.getDetailedMessage();
        retryOnPrimaryException6.setShard("[][[][0]] RetryOnPrimaryException[hi!]", (int) (short) 100);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException6.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str7, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test8055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8055");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        retryOnPrimaryException4.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = retryOnPrimaryException12.guessRootCauses();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        retryOnPrimaryException12.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList23);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList23);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray29 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str30 = retryOnPrimaryException4.toString();
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setIndex("[[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][100]] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[hi!][[hi!][-1]] RetryOnPrimaryException[]" + "'", str30, "[hi!][[hi!][-1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test8056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8056");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "");
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        java.util.List<java.lang.String> strList18 = null;
        retryOnPrimaryException15.addHeader("hi!", strList18);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.Throwable throwable22 = retryOnPrimaryException15.getRootCause();
        java.lang.String str23 = retryOnPrimaryException15.getDetailedMessage();
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId26 = retryOnPrimaryException15.getShardId();
        java.lang.String str27 = retryOnPrimaryException15.toString();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.stacktrace.skip");
        retryOnPrimaryException31.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = retryOnPrimaryException31.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "RetryOnPrimaryException[]");
        retryOnPrimaryException31.addSuppressed((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray40 = retryOnPrimaryException38.guessRootCauses();
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException38.getHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "hi!");
        retryOnPrimaryException46.setShard("", 0);
        org.elasticsearch.index.Index index50 = null;
        retryOnPrimaryException46.setIndex(index50);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        java.lang.Throwable throwable55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable55);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "hi!");
        retryOnPrimaryException60.setShard("", 0);
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException60);
        java.util.List<java.lang.String> strList66 = retryOnPrimaryException60.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray71 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException60.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray71);
        retryOnPrimaryException56.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray71);
        retryOnPrimaryException46.setResources("", strArray71);
        retryOnPrimaryException38.setResources("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", strArray71);
        retryOnPrimaryException15.setResources("[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray71);
        org.elasticsearch.rest.RestStatus restStatus77 = retryOnPrimaryException15.status();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str27, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + restStatus77 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus77.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8057");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "hi!");
        retryOnPrimaryException10.setShard("", 0);
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException10.setIndex(index14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException10.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.rest.RestStatus restStatus21 = retryOnPrimaryException10.status();
        java.util.Set<java.lang.String> strSet22 = retryOnPrimaryException10.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + restStatus21 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus21.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet22);
    }

    @Test
    public void test8058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8058");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException6.setIndex(index10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException6.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        java.lang.String str21 = retryOnPrimaryException20.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "hi!");
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException27);
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException27.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.index.shard.ShardId shardId31 = retryOnPrimaryException30.getShardId();
        org.elasticsearch.index.shard.ShardId shardId32 = retryOnPrimaryException30.getShardId();
        retryOnPrimaryException30.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException30.getSuppressed();
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.String str37 = retryOnPrimaryException30.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "");
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.index.Index index46 = retryOnPrimaryException41.getIndex();
        java.lang.Throwable throwable47 = retryOnPrimaryException41.unwrapCause();
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "hi!");
        retryOnPrimaryException52.setShard("", 0);
        boolean boolean56 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException52);
        java.util.List<java.lang.String> strList58 = retryOnPrimaryException52.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray63 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException52.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray63);
        retryOnPrimaryException41.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray63);
        retryOnPrimaryException30.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray63);
        retryOnPrimaryException20.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray63);
        retryOnPrimaryException16.addHeader("", strArray63);
        retryOnPrimaryException16.setShard("", (int) (byte) 100);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray72 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.common.io.stream.StreamInput streamInput73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException74 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException16, streamInput73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(index46);
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "");
        org.junit.Assert.assertEquals(throwable47.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray72);
    }

    @Test
    public void test8059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8059");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        java.lang.Throwable throwable16 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable17 = retryOnPrimaryException2.getRootCause();
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet19 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Class<?> wildcardClass20 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable16.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test8060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8060");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip");
        retryOnPrimaryException4.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "RetryOnPrimaryException[]");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setIndex("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.lang.String str17 = retryOnPrimaryException4.toString();
        java.lang.Throwable[] throwableArray18 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "");
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "");
        java.lang.String str31 = retryOnPrimaryException30.getResourceType();
        java.lang.Throwable throwable32 = retryOnPrimaryException30.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip", throwable32);
        retryOnPrimaryException25.addSuppressed(throwable32);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException35);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = retryOnPrimaryException35.guessRootCauses();
        java.lang.String str39 = retryOnPrimaryException35.getResourceType();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]" + "'", str17, "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "");
        org.junit.Assert.assertEquals(throwable32.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test8061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8061");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str8 = retryOnPrimaryException7.toString();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException7.getResourceId();
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException7.guessRootCauses();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str8, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
    }

    @Test
    public void test8062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8062");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        java.lang.String str4 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException2.getShardId();
        java.lang.String str10 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
    }

    @Test
    public void test8063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8063");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException9.setIndex(index10);
        java.lang.Throwable throwable12 = retryOnPrimaryException9.getRootCause();
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException9.getResourceId();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException9.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = retryOnPrimaryException9.guessRootCauses();
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
    }

    @Test
    public void test8064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8064");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.stacktrace.skip");
        retryOnPrimaryException16.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "");
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "hi!");
        retryOnPrimaryException26.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException26.getResourceId();
        org.elasticsearch.index.Index index32 = retryOnPrimaryException26.getIndex();
        java.lang.Throwable throwable33 = retryOnPrimaryException26.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "hi!");
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "");
        retryOnPrimaryException42.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet46 = retryOnPrimaryException42.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "hi!");
        retryOnPrimaryException50.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = retryOnPrimaryException50.guessRootCauses();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        retryOnPrimaryException50.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList61);
        retryOnPrimaryException42.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList61);
        retryOnPrimaryException38.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList61);
        retryOnPrimaryException34.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList61);
        retryOnPrimaryException16.addHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList61);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList61);
        java.lang.String str69 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(index32);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "");
        org.junit.Assert.assertEquals(throwable33.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "retry_on_primary_exception" + "'", str69, "retry_on_primary_exception");
    }

    @Test
    public void test8065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8065");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "hi!");
        retryOnPrimaryException10.setShard("", 0);
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException10.setIndex(index14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException10.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "hi!");
        java.util.List<java.lang.String> strList26 = retryOnPrimaryException25.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String str28 = retryOnPrimaryException25.toString();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "hi!");
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "");
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        retryOnPrimaryException38.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.util.List<java.lang.String> strList44 = null;
        retryOnPrimaryException41.addHeader("hi!", strList44);
        retryOnPrimaryException34.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", (java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException47.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray50);
        retryOnPrimaryException25.setResources("rest.exception.stacktrace.skip", strArray50);
        retryOnPrimaryException10.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray50);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable55 = retryOnPrimaryException54.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException54);
        java.lang.Throwable throwable57 = retryOnPrimaryException54.getRootCause();
        java.lang.Throwable throwable58 = retryOnPrimaryException54.unwrapCause();
        java.lang.Class<?> wildcardClass59 = retryOnPrimaryException54.getClass();
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str28, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(throwable55);
        org.junit.Assert.assertEquals(throwable55.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable55.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable55.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable57);
        org.junit.Assert.assertEquals(throwable57.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable57.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable57.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable58);
        org.junit.Assert.assertEquals(throwable58.getLocalizedMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertEquals(throwable58.getMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertEquals(throwable58.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test8066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8066");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException14);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable throwable22 = retryOnPrimaryException20.unwrapCause();
        retryOnPrimaryException20.setIndex("rest.exception.cause.skip");
        java.lang.String str25 = retryOnPrimaryException20.toString();
        retryOnPrimaryException20.setIndex("[[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException20);
        java.util.Set<java.lang.String> strSet29 = retryOnPrimaryException20.getHeaderKeys();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str7, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "[[[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];" + "'", str25, "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertNotNull(strSet29);
    }

    @Test
    public void test8067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8067");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException8.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId11 = retryOnPrimaryException8.getShardId();
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException8.getHeader("[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        retryOnPrimaryException16.setShard("", 0);
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.String str22 = retryOnPrimaryException16.getDetailedMessage();
        retryOnPrimaryException16.setShard("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (short) 0);
        retryOnPrimaryException16.setShard("[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[];][32]] RetryOnPrimaryException[]", (int) (short) 0);
        java.lang.String str29 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str22, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "retry_on_primary_exception" + "'", str29, "retry_on_primary_exception");
    }

    @Test
    public void test8068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8068");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException4.setIndex(index8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException4.status();
        java.lang.Throwable throwable12 = retryOnPrimaryException4.unwrapCause();
        java.lang.Throwable[] throwableArray13 = throwable12.getSuppressed();
        java.lang.Throwable[] throwableArray14 = throwable12.getSuppressed();
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwableArray14);
    }

    @Test
    public void test8069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8069");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        java.util.List<java.lang.String> strList3 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray4 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException2.getResourceId();
        java.lang.String str7 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(str7);
    }

    @Test
    public void test8070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8070");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException7.getShardId();
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException7.getShardId();
        retryOnPrimaryException7.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray12 = retryOnPrimaryException7.getSuppressed();
        retryOnPrimaryException7.setShard("[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]", 0);
        java.util.Set<java.lang.String> strSet16 = retryOnPrimaryException7.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        java.lang.Throwable throwable19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "RetryOnPrimaryException[hi!]", throwable19);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "hi!");
        retryOnPrimaryException27.setShard("", 0);
        org.elasticsearch.index.Index index31 = null;
        retryOnPrimaryException27.setIndex(index31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException27);
        retryOnPrimaryException27.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException27);
        retryOnPrimaryException20.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.rest.RestStatus restStatus38 = retryOnPrimaryException27.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = retryOnPrimaryException27.guessRootCauses();
        retryOnPrimaryException7.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "");
        java.lang.String str48 = retryOnPrimaryException47.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "hi!");
        retryOnPrimaryException53.setShard("", 0);
        boolean boolean57 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray58 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException53);
        java.lang.String str60 = retryOnPrimaryException59.toString();
        retryOnPrimaryException47.addSuppressed((java.lang.Throwable) retryOnPrimaryException59);
        java.lang.Throwable throwable62 = retryOnPrimaryException47.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", throwable62);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException63);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray65 = retryOnPrimaryException63.guessRootCauses();
        java.lang.String str66 = retryOnPrimaryException63.getDetailedMessage();
        retryOnPrimaryException7.addSuppressed((java.lang.Throwable) retryOnPrimaryException63);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + restStatus38 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus38.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str48, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str60, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwable62);
        org.junit.Assert.assertEquals(throwable62.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable62.getMessage(), "");
        org.junit.Assert.assertEquals(throwable62.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str66, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test8071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8071");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.Index index4 = retryOnPrimaryException2.getIndex();
        java.lang.String str5 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(index4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];]" + "'", str5, "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];]");
    }

    @Test
    public void test8072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8072");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException4.status();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.stacktrace.skip");
        retryOnPrimaryException18.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "");
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "hi!");
        retryOnPrimaryException28.addSuppressed((java.lang.Throwable) retryOnPrimaryException31);
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException28.getResourceId();
        org.elasticsearch.index.Index index34 = retryOnPrimaryException28.getIndex();
        java.lang.Throwable throwable35 = retryOnPrimaryException28.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "");
        retryOnPrimaryException44.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet48 = retryOnPrimaryException44.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "hi!");
        retryOnPrimaryException52.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray56 = retryOnPrimaryException52.guessRootCauses();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        retryOnPrimaryException52.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException44.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException40.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException36.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException18.addHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException4.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList63);
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "");
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId74, "hi!");
        retryOnPrimaryException73.addSuppressed((java.lang.Throwable) retryOnPrimaryException76);
        org.elasticsearch.index.Index index78 = retryOnPrimaryException73.getIndex();
        boolean boolean79 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException73);
        java.util.List<java.lang.String> strList81 = retryOnPrimaryException73.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException73);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(index34);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "");
        org.junit.Assert.assertEquals(throwable35.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray56);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(index78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(strList81);
    }

    @Test
    public void test8073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8073");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable9 = retryOnPrimaryException6.getRootCause();
        java.lang.String str10 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = retryOnPrimaryException14.guessRootCauses();
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        retryOnPrimaryException14.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList25);
        retryOnPrimaryException14.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException14.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "hi!");
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException38.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", (java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.rest.RestStatus restStatus41 = retryOnPrimaryException40.status();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "hi!");
        retryOnPrimaryException45.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = retryOnPrimaryException45.guessRootCauses();
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        retryOnPrimaryException45.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList56);
        retryOnPrimaryException40.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList56);
        retryOnPrimaryException14.addHeader("", (java.util.List<java.lang.String>) strList56);
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList56);
        java.lang.Throwable throwable62 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray63 = retryOnPrimaryException6.guessRootCauses();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertTrue("'" + restStatus41 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus41.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(throwable62);
        org.junit.Assert.assertEquals(throwable62.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable62.getMessage(), "");
        org.junit.Assert.assertEquals(throwable62.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray63);
    }

    @Test
    public void test8074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8074");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index6 = retryOnPrimaryException4.getIndex();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException4.getResourceId();
        java.lang.Throwable throwable8 = retryOnPrimaryException4.getRootCause();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException13.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException13.guessRootCauses();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        retryOnPrimaryException13.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList24);
        retryOnPrimaryException13.setIndex("RetryOnPrimaryException[hi!]");
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException13.getHeader("RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        retryOnPrimaryException13.setShard(shardId31);
        retryOnPrimaryException13.setShard("RetryOnPrimaryException[hi!]", (int) (short) 10);
        java.lang.String[] strArray47 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", "hi!", "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "[hi!][[hi!][-1]] RetryOnPrimaryException[]", "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        retryOnPrimaryException13.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList48);
        retryOnPrimaryException4.addHeader("[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList48);
        org.elasticsearch.index.Index index52 = retryOnPrimaryException4.getIndex();
        org.junit.Assert.assertNull(index6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(index52);
    }

    @Test
    public void test8075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8075");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setIndex("[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
    }

    @Test
    public void test8076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8076");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId10 = retryOnPrimaryException9.getShardId();
        org.elasticsearch.index.shard.ShardId shardId11 = retryOnPrimaryException9.getShardId();
        retryOnPrimaryException9.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray14 = retryOnPrimaryException9.getSuppressed();
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException9.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test8077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8077");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        retryOnPrimaryException2.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException9.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException9.guessRootCauses();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        retryOnPrimaryException9.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList20);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray30 = retryOnPrimaryException26.guessRootCauses();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        retryOnPrimaryException26.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList37);
        retryOnPrimaryException26.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException26.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "hi!");
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException50.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "", (java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.rest.RestStatus restStatus53 = retryOnPrimaryException52.status();
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "hi!");
        retryOnPrimaryException57.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray61 = retryOnPrimaryException57.guessRootCauses();
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        retryOnPrimaryException57.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList68);
        retryOnPrimaryException52.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList68);
        retryOnPrimaryException26.addHeader("", (java.util.List<java.lang.String>) strList68);
        java.lang.String[] strArray76 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException26.setResources("RetryOnPrimaryException[]", strArray76);
        retryOnPrimaryException9.setResources("RetryOnPrimaryException[hi!]", strArray76);
        retryOnPrimaryException2.setResources("hi!", strArray76);
        boolean boolean80 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId81 = null;
        retryOnPrimaryException2.setShard(shardId81);
        boolean boolean83 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList84 = retryOnPrimaryException2.getResourceId();
        boolean boolean85 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray30);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertTrue("'" + restStatus53 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus53.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray61);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test8078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8078");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException13.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException13.guessRootCauses();
        org.elasticsearch.index.Index index16 = retryOnPrimaryException13.getIndex();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        org.elasticsearch.index.Index index21 = null;
        retryOnPrimaryException20.setIndex(index21);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable26);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "hi!");
        retryOnPrimaryException31.setShard("", 0);
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException31);
        java.util.List<java.lang.String> strList37 = retryOnPrimaryException31.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray42 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException31.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray42);
        retryOnPrimaryException27.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray42);
        retryOnPrimaryException20.setResources("retry_on_primary_exception", strArray42);
        java.util.List<java.lang.String> strList46 = retryOnPrimaryException20.getResourceId();
        retryOnPrimaryException13.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]", strList46);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];", strList46);
        java.lang.Throwable throwable49 = retryOnPrimaryException2.unwrapCause();
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strList46);
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "");
        org.junit.Assert.assertEquals(throwable49.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test8079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8079");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable[] throwableArray7 = retryOnPrimaryException6.getSuppressed();
        java.lang.String str8 = retryOnPrimaryException6.toString();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        retryOnPrimaryException17.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.Index index22 = retryOnPrimaryException17.getIndex();
        java.lang.Throwable throwable23 = retryOnPrimaryException17.unwrapCause();
        java.util.Set<java.lang.String> strSet24 = retryOnPrimaryException17.getHeaderKeys();
        java.lang.String str25 = retryOnPrimaryException17.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "hi!");
        retryOnPrimaryException29.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.Index index34 = retryOnPrimaryException29.getIndex();
        java.lang.Throwable throwable35 = retryOnPrimaryException29.unwrapCause();
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        retryOnPrimaryException40.setShard("", 0);
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException40);
        java.util.List<java.lang.String> strList46 = retryOnPrimaryException40.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray51 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException40.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray51);
        retryOnPrimaryException29.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray51);
        retryOnPrimaryException17.addHeader("RetryOnPrimaryException[hi!]", strArray51);
        retryOnPrimaryException13.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray51);
        retryOnPrimaryException6.setResources("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray51);
        java.lang.Throwable throwable57 = retryOnPrimaryException6.getRootCause();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];" + "'", str8, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(index22);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "");
        org.junit.Assert.assertEquals(throwable23.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(index34);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "");
        org.junit.Assert.assertEquals(throwable35.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(throwable57);
        org.junit.Assert.assertEquals(throwable57.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable57.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable57.toString(), "RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8080");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getHeader("retry_on_primary_exception");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException4.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        retryOnPrimaryException4.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test8081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8081");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str9 = retryOnPrimaryException6.toString();
        java.lang.Throwable[] throwableArray10 = retryOnPrimaryException6.getSuppressed();
        retryOnPrimaryException6.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        java.lang.String str13 = retryOnPrimaryException6.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str9, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[hi!]" + "'", str13, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8082");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException6.setIndex(index10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException6.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable17 = retryOnPrimaryException16.getRootCause();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable17);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test8083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8083");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException10.setShard("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (int) (short) 100);
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str15 = retryOnPrimaryException10.getDetailedMessage();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];][100]] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str15, "[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];][100]] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
    }

    @Test
    public void test8084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8084");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException2.getHeader("hi!");
        java.lang.String str18 = retryOnPrimaryException2.toString();
        java.lang.String str19 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "");
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        retryOnPrimaryException25.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.index.Index index30 = retryOnPrimaryException25.getIndex();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "");
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "hi!");
        retryOnPrimaryException35.addSuppressed((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.Index index40 = retryOnPrimaryException35.getIndex();
        java.lang.Throwable throwable41 = retryOnPrimaryException35.getRootCause();
        retryOnPrimaryException35.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        retryOnPrimaryException35.setShard(shardId44);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "hi!");
        org.elasticsearch.index.Index index50 = null;
        retryOnPrimaryException49.setIndex(index50);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        java.lang.Throwable throwable55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable55);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "hi!");
        retryOnPrimaryException60.setShard("", 0);
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException60);
        java.util.List<java.lang.String> strList66 = retryOnPrimaryException60.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray71 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException60.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray71);
        retryOnPrimaryException56.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray71);
        retryOnPrimaryException49.setResources("retry_on_primary_exception", strArray71);
        java.util.List<java.lang.String> strList75 = retryOnPrimaryException49.getResourceId();
        retryOnPrimaryException35.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", strList75);
        retryOnPrimaryException31.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList75);
        retryOnPrimaryException2.addHeader("[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList75);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str18, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str19, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index30);
        org.junit.Assert.assertNull(index40);
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "");
        org.junit.Assert.assertEquals(throwable41.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strList75);
    }

    @Test
    public void test8085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8085");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException4.getShardId();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "");
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.Index index17 = retryOnPrimaryException12.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException4.getSuppressed();
        retryOnPrimaryException4.setShard("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", (int) (short) 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = retryOnPrimaryException4.guessRootCauses();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNull(index17);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
    }

    @Test
    public void test8086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8086");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException6.getHeader("retry_on_primary_exception");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable14 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = retryOnPrimaryException19.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.util.List<java.lang.String> strList26 = retryOnPrimaryException24.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.stacktrace.skip");
        retryOnPrimaryException29.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = retryOnPrimaryException29.guessRootCauses();
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        throwable14.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.util.Set<java.lang.String> strSet36 = retryOnPrimaryException24.getHeaderKeys();
        java.lang.Throwable throwable37 = retryOnPrimaryException24.getRootCause();
        java.lang.Throwable throwable38 = retryOnPrimaryException24.getRootCause();
        java.util.Set<java.lang.String> strSet39 = retryOnPrimaryException24.getHeaderKeys();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable37.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable38.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strSet39);
    }

    @Test
    public void test8087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8087");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.Index index8 = retryOnPrimaryException2.getIndex();
        java.lang.String str9 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId10 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(index8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(shardId10);
    }

    @Test
    public void test8088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8088");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.util.List<java.lang.String> strList16 = null;
        retryOnPrimaryException13.addHeader("hi!", strList16);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.util.Set<java.lang.String> strSet19 = retryOnPrimaryException13.getHeaderKeys();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException13);
        java.lang.Throwable throwable21 = retryOnPrimaryException13.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable21.toString(), "RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8089");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable7 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException11.setShard("", 0);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String str18 = retryOnPrimaryException11.toString();
        java.util.Set<java.lang.String> strSet19 = retryOnPrimaryException11.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "");
        org.elasticsearch.rest.RestStatus restStatus29 = retryOnPrimaryException28.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException28);
        retryOnPrimaryException30.setShard("", 10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", (java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable throwable35 = retryOnPrimaryException34.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "hi!");
        retryOnPrimaryException39.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray43 = retryOnPrimaryException39.guessRootCauses();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        retryOnPrimaryException39.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList50);
        retryOnPrimaryException39.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException39.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "hi!");
        java.util.List<java.lang.String> strList64 = retryOnPrimaryException63.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "", (java.lang.Throwable) retryOnPrimaryException63);
        org.elasticsearch.rest.RestStatus restStatus66 = retryOnPrimaryException65.status();
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "hi!");
        retryOnPrimaryException70.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray74 = retryOnPrimaryException70.guessRootCauses();
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        retryOnPrimaryException70.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList81);
        retryOnPrimaryException65.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList81);
        retryOnPrimaryException39.addHeader("", (java.util.List<java.lang.String>) strList81);
        java.lang.String[] strArray89 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException39.setResources("RetryOnPrimaryException[]", strArray89);
        retryOnPrimaryException34.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray89);
        retryOnPrimaryException11.setResources("[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray89);
        retryOnPrimaryException6.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]", strArray89);
        java.lang.String str94 = retryOnPrimaryException6.getResourceType();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput95 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException6.writeTo(streamOutput95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str18, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertTrue("'" + restStatus29 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus29.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "");
        org.junit.Assert.assertEquals(throwable35.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray43);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertTrue("'" + restStatus66 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus66.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray74);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test8090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8090");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable13);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "hi!");
        retryOnPrimaryException18.setShard("", 0);
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException18);
        java.util.List<java.lang.String> strList24 = retryOnPrimaryException18.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray29 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException18.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray29);
        retryOnPrimaryException14.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray29);
        retryOnPrimaryException9.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray29);
        retryOnPrimaryException9.setShard("[hi!][[hi!][-1]] RetryOnPrimaryException[]", (int) (short) 100);
        java.lang.Throwable[] throwableArray36 = retryOnPrimaryException9.getSuppressed();
        java.lang.Class<?> wildcardClass37 = retryOnPrimaryException9.getClass();
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test8091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8091");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable[] throwableArray4 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray6 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[hi!]", (int) (short) 1);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException2.status();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException2.getResourceId();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str19 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str19, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test8092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8092");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException11.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException11.guessRootCauses();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        retryOnPrimaryException11.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList22);
        retryOnPrimaryException6.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("", (int) (short) 10);
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str31 = retryOnPrimaryException6.getDetailedMessage();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[][[][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str31, "[][[][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test8093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8093");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException9.status();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException9.setShard(shardId11);
        java.lang.String str13 = retryOnPrimaryException9.getDetailedMessage();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException9.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str13, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test8094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8094");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException2.getHeader("[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strList5);
    }

    @Test
    public void test8095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8095");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable13 = retryOnPrimaryException12.unwrapCause();
        java.lang.Throwable throwable14 = retryOnPrimaryException12.getRootCause();
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable13.toString(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test8096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8096");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        java.lang.String str8 = retryOnPrimaryException2.toString();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "RetryOnPrimaryException[]" + "'", str8, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8097");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        java.lang.String str9 = retryOnPrimaryException8.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("", 0);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String str21 = retryOnPrimaryException20.toString();
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable throwable23 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", throwable23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException24.guessRootCauses();
        java.util.Set<java.lang.String> strSet27 = retryOnPrimaryException24.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException24.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray29 = retryOnPrimaryException24.guessRootCauses();
        retryOnPrimaryException24.setIndex("[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str21, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "");
        org.junit.Assert.assertEquals(throwable23.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray29);
    }

    @Test
    public void test8098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8098");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException6.getHeaderKeys();
        java.lang.String str8 = retryOnPrimaryException6.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException6.guessRootCauses();
        java.lang.Throwable throwable11 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("", 0);
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException14.setIndex(index18);
        java.lang.Throwable throwable20 = retryOnPrimaryException14.getRootCause();
        retryOnPrimaryException6.addSuppressed(throwable20);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "");
        java.lang.String str27 = retryOnPrimaryException26.getResourceType();
        java.lang.Throwable[] throwableArray28 = retryOnPrimaryException26.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray29 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable[] throwableArray30 = retryOnPrimaryException26.getSuppressed();
        java.lang.Throwable throwable31 = retryOnPrimaryException26.getRootCause();
        java.lang.Throwable throwable32 = retryOnPrimaryException26.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String str34 = retryOnPrimaryException26.getResourceType();
        throwable20.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]" + "'", str8, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "");
        org.junit.Assert.assertEquals(throwable31.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "");
        org.junit.Assert.assertEquals(throwable32.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str34);
    }

    @Test
    public void test8099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8099");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        retryOnPrimaryException17.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.util.List<java.lang.String> strList23 = null;
        retryOnPrimaryException20.addHeader("hi!", strList23);
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", (java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException26.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray29);
        retryOnPrimaryException4.setResources("rest.exception.stacktrace.skip", strArray29);
        java.lang.String str32 = retryOnPrimaryException4.toString();
        java.util.List<java.lang.String> strList34 = retryOnPrimaryException4.getHeader("hi!");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str36 = retryOnPrimaryException4.toString();
        java.util.List<java.lang.String> strList37 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = retryOnPrimaryException4.guessRootCauses();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str7, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str32, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str36, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
    }

    @Test
    public void test8100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8100");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.rest.RestStatus restStatus4 = retryOnPrimaryException3.status();
        java.lang.String str5 = retryOnPrimaryException3.toString();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException9.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException9.guessRootCauses();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        retryOnPrimaryException9.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList20);
        retryOnPrimaryException9.setIndex("RetryOnPrimaryException[hi!]");
        java.lang.String str25 = retryOnPrimaryException9.toString();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "hi!");
        retryOnPrimaryException31.addSuppressed((java.lang.Throwable) retryOnPrimaryException34);
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException31.getResourceId();
        org.elasticsearch.index.Index index37 = retryOnPrimaryException31.getIndex();
        java.lang.Throwable throwable38 = retryOnPrimaryException31.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "hi!");
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "");
        retryOnPrimaryException47.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet51 = retryOnPrimaryException47.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "hi!");
        retryOnPrimaryException55.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray59 = retryOnPrimaryException55.guessRootCauses();
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        retryOnPrimaryException55.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList66);
        retryOnPrimaryException47.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList66);
        retryOnPrimaryException43.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList66);
        retryOnPrimaryException39.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList66);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList66);
        retryOnPrimaryException3.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList66);
        org.junit.Assert.assertTrue("'" + restStatus4 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus4.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[]" + "'", str5, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]" + "'", str25, "[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(index37);
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "");
        org.junit.Assert.assertEquals(throwable38.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray59);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
    }

    @Test
    public void test8101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8101");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId11 = retryOnPrimaryException6.getShardId();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.Index index19 = retryOnPrimaryException14.getIndex();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException14);
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.Throwable throwable23 = retryOnPrimaryException14.unwrapCause();
        java.util.List<java.lang.String> strList24 = retryOnPrimaryException14.getResourceId();
        java.lang.Throwable throwable25 = retryOnPrimaryException14.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "hi!");
        retryOnPrimaryException33.setShard("", 0);
        java.lang.String str37 = retryOnPrimaryException33.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        retryOnPrimaryException33.setShard(shardId38);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "RetryOnPrimaryException[]");
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException44);
        java.lang.String str46 = retryOnPrimaryException41.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = retryOnPrimaryException41.guessRootCauses();
        retryOnPrimaryException41.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "hi!");
        retryOnPrimaryException55.setShard("", 0);
        org.elasticsearch.index.Index index59 = null;
        retryOnPrimaryException55.setIndex(index59);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException55);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray62 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException55);
        java.lang.String str63 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException55);
        java.lang.String str64 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException55);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray65 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException55);
        java.lang.String str66 = retryOnPrimaryException55.toString();
        java.lang.Throwable throwable67 = retryOnPrimaryException55.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        java.lang.Throwable throwable71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable71);
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId74, "hi!");
        retryOnPrimaryException76.setShard("", 0);
        boolean boolean80 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException76);
        java.util.List<java.lang.String> strList82 = retryOnPrimaryException76.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray87 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException76.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray87);
        retryOnPrimaryException72.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray87);
        retryOnPrimaryException55.addHeader("[][[][32]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray87);
        retryOnPrimaryException41.setResources("[[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray87);
        retryOnPrimaryException14.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray87);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNull(index19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "");
        org.junit.Assert.assertEquals(throwable23.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "");
        org.junit.Assert.assertEquals(throwable25.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];" + "'", str46, "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "retry_on_primary_exception" + "'", str63, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "retry_on_primary_exception" + "'", str64, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str66, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable67);
        org.junit.Assert.assertEquals(throwable67.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable67.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable67.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNotNull(strArray87);
    }

    @Test
    public void test8102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8102");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "hi!");
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException10.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str13 = retryOnPrimaryException10.toString();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.util.List<java.lang.String> strList29 = null;
        retryOnPrimaryException26.addHeader("hi!", strList29);
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException32.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray35);
        retryOnPrimaryException10.setResources("rest.exception.stacktrace.skip", strArray35);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException10);
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException10.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.util.List<java.lang.String> strList41 = retryOnPrimaryException10.getResourceId();
        java.lang.Throwable throwable42 = retryOnPrimaryException10.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str13, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertNotNull(strList41);
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8103");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable10 = retryOnPrimaryException8.unwrapCause();
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = retryOnPrimaryException8.guessRootCauses();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException8.getHeader("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];");
        java.lang.Throwable throwable15 = retryOnPrimaryException8.getRootCause();
        java.lang.Class<?> wildcardClass16 = throwable15.getClass();
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test8104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8104");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId6 = retryOnPrimaryException5.getShardId();
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException5.status();
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException5.status();
        retryOnPrimaryException5.setShard("[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][0]] RetryOnPrimaryException[hi!]", (int) 'a');
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8105");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getHeader("retry_on_primary_exception");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable12 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException17.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = retryOnPrimaryException17.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", (java.lang.Throwable) retryOnPrimaryException17);
        java.util.List<java.lang.String> strList24 = retryOnPrimaryException22.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.stacktrace.skip");
        retryOnPrimaryException27.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray31 = retryOnPrimaryException27.guessRootCauses();
        retryOnPrimaryException22.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        throwable12.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str34 = retryOnPrimaryException22.toString();
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException22.getHeader("");
        java.lang.Throwable[] throwableArray37 = retryOnPrimaryException22.getSuppressed();
        java.lang.Throwable throwable38 = retryOnPrimaryException22.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        retryOnPrimaryException44.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray48 = retryOnPrimaryException44.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "", (java.lang.Throwable) retryOnPrimaryException44);
        java.lang.String str50 = retryOnPrimaryException44.getResourceType();
        retryOnPrimaryException44.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (-1));
        java.lang.String str54 = retryOnPrimaryException44.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "hi!");
        java.util.List<java.lang.String> strList63 = retryOnPrimaryException62.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "", (java.lang.Throwable) retryOnPrimaryException62);
        java.lang.String str65 = retryOnPrimaryException62.toString();
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "hi!");
        boolean boolean72 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException71);
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException75 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId73, "");
        org.elasticsearch.index.shard.ShardId shardId76 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException78 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId76, "hi!");
        retryOnPrimaryException75.addSuppressed((java.lang.Throwable) retryOnPrimaryException78);
        java.util.List<java.lang.String> strList81 = null;
        retryOnPrimaryException78.addHeader("hi!", strList81);
        retryOnPrimaryException71.addSuppressed((java.lang.Throwable) retryOnPrimaryException78);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException84 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "", (java.lang.Throwable) retryOnPrimaryException78);
        java.lang.String[] strArray87 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException84.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray87);
        retryOnPrimaryException62.setResources("rest.exception.stacktrace.skip", strArray87);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException90 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException62);
        java.util.List<java.lang.String> strList91 = retryOnPrimaryException62.getResourceId();
        retryOnPrimaryException44.addHeader("hi!", strList91);
        retryOnPrimaryException22.addHeader("RetryOnPrimaryException[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strList91);
        java.util.List<java.lang.String> strList94 = retryOnPrimaryException22.getResourceId();
        java.lang.Throwable throwable95 = retryOnPrimaryException22.unwrapCause();
        retryOnPrimaryException22.setShard("[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][1]] RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];", (int) (byte) 100);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];" + "'", str34, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str54, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str65, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNull(strList94);
        org.junit.Assert.assertNotNull(throwable95);
        org.junit.Assert.assertEquals(throwable95.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable95.getMessage(), "");
    }

    @Test
    public void test8106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8106");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str11 = retryOnPrimaryException4.getDetailedMessage();
        retryOnPrimaryException4.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str14 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder15 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params16 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder17 = retryOnPrimaryException4.toXContent(xContentBuilder15, params16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str11, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(params16);
    }

    @Test
    public void test8107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8107");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str9 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "retry_on_primary_exception" + "'", str9, "retry_on_primary_exception");
    }

    @Test
    public void test8108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8108");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.stacktrace.skip");
        retryOnPrimaryException6.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.Set<java.lang.String> strSet16 = retryOnPrimaryException15.getHeaderKeys();
        java.lang.String str17 = retryOnPrimaryException15.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "");
        java.lang.String str27 = retryOnPrimaryException26.getResourceType();
        java.lang.Throwable[] throwableArray28 = retryOnPrimaryException26.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray29 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable[] throwableArray30 = retryOnPrimaryException26.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException37.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", (java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.rest.RestStatus restStatus40 = retryOnPrimaryException39.status();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        retryOnPrimaryException44.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray48 = retryOnPrimaryException44.guessRootCauses();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        retryOnPrimaryException44.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException39.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException31.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException10.addHeader("[[hi!][[hi!][-1]] RetryOnPrimaryException[]] RetryOnPrimaryException[]", (java.util.List<java.lang.String>) strList55);
        org.elasticsearch.rest.RestStatus restStatus61 = retryOnPrimaryException10.status();
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]" + "'", str17, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray29);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertTrue("'" + restStatus40 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus40.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray48);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertTrue("'" + restStatus61 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus61.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8109");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getHeader("retry_on_primary_exception");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable12 = retryOnPrimaryException4.getRootCause();
        java.lang.String str13 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "");
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException18.getResourceId();
        org.elasticsearch.index.Index index24 = retryOnPrimaryException18.getIndex();
        java.lang.Throwable throwable25 = retryOnPrimaryException18.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "");
        retryOnPrimaryException34.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet38 = retryOnPrimaryException34.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "hi!");
        retryOnPrimaryException42.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray46 = retryOnPrimaryException42.guessRootCauses();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        retryOnPrimaryException42.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException34.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException30.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException26.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList53);
        java.lang.String str59 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray61 = retryOnPrimaryException26.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus62 = retryOnPrimaryException26.status();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(index24);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "");
        org.junit.Assert.assertEquals(throwable25.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray46);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "retry_on_primary_exception" + "'", str59, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray61);
        org.junit.Assert.assertTrue("'" + restStatus62 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus62.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8110");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        java.lang.String str4 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (-1));
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.stacktrace.skip");
        retryOnPrimaryException12.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException12);
        retryOnPrimaryException16.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.util.List<java.lang.String> strList21 = null;
        retryOnPrimaryException16.addHeader("", strList21);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = retryOnPrimaryException16.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException16.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray25 = retryOnPrimaryException16.guessRootCauses();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray25);
    }

    @Test
    public void test8111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8111");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException11.status();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException11.setShard(shardId13);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String str16 = retryOnPrimaryException15.toString();
        retryOnPrimaryException15.setShard("[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];" + "'", str16, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test8112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8112");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        java.lang.String str5 = retryOnPrimaryException4.getResourceType();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", throwable6);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException7.getHeaderKeys();
        retryOnPrimaryException7.setShard("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (byte) 0);
        java.lang.Throwable[] throwableArray12 = retryOnPrimaryException7.getSuppressed();
        org.elasticsearch.common.io.stream.StreamInput streamInput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException7, streamInput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test8113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8113");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException2.getHeader("hi!");
        retryOnPrimaryException2.setShard("retry_on_primary_exception", (int) (short) 100);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = retryOnPrimaryException2.guessRootCauses();
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException2.getResourceId();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertNull(strList22);
    }

    @Test
    public void test8114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8114");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable[] throwableArray4 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray6 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException2.status();
        org.elasticsearch.rest.RestStatus restStatus13 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException21);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException21.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId25 = retryOnPrimaryException24.getShardId();
        org.elasticsearch.index.shard.ShardId shardId26 = retryOnPrimaryException24.getShardId();
        retryOnPrimaryException24.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException24.getSuppressed();
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String str31 = retryOnPrimaryException24.getResourceType();
        java.lang.String str32 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String str34 = retryOnPrimaryException24.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "hi!");
        java.util.List<java.lang.String> strList48 = retryOnPrimaryException47.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", (java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String str50 = retryOnPrimaryException47.toString();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "hi!");
        boolean boolean57 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException56);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "");
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "hi!");
        retryOnPrimaryException60.addSuppressed((java.lang.Throwable) retryOnPrimaryException63);
        java.util.List<java.lang.String> strList66 = null;
        retryOnPrimaryException63.addHeader("hi!", strList66);
        retryOnPrimaryException56.addSuppressed((java.lang.Throwable) retryOnPrimaryException63);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "", (java.lang.Throwable) retryOnPrimaryException63);
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException69.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray72);
        retryOnPrimaryException47.setResources("rest.exception.stacktrace.skip", strArray72);
        retryOnPrimaryException41.setResources("RetryOnPrimaryException[hi!]", strArray72);
        retryOnPrimaryException24.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray72);
        retryOnPrimaryException2.setResources("[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[hi!]", strArray72);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus13 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus13.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "retry_on_primary_exception" + "'", str32, "retry_on_primary_exception");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str50, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray72);
    }

    @Test
    public void test8115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8115");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        org.elasticsearch.index.Index index3 = null;
        retryOnPrimaryException2.setIndex(index3);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable8);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException13.setShard("", 0);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException13.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray24 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException13.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray24);
        retryOnPrimaryException9.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray24);
        retryOnPrimaryException2.setResources("retry_on_primary_exception", strArray24);
        java.util.List<java.lang.String> strList28 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus29 = retryOnPrimaryException2.status();
        java.lang.Throwable[] throwableArray30 = retryOnPrimaryException2.getSuppressed();
        java.util.Set<java.lang.String> strSet31 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str32 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strList28);
        org.junit.Assert.assertTrue("'" + restStatus29 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus29.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "retry_on_primary_exception" + "'", str32, "retry_on_primary_exception");
    }

    @Test
    public void test8116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8116");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException6.setIndex(index10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException6.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException6.guessRootCauses();
        java.lang.Throwable throwable18 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.Index index28 = retryOnPrimaryException23.getIndex();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        retryOnPrimaryException23.setShard(shardId29);
        org.elasticsearch.index.Index index31 = retryOnPrimaryException23.getIndex();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException23);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index28);
        org.junit.Assert.assertNull(index31);
    }

    @Test
    public void test8117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8117");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.toString();
        java.lang.Throwable[] throwableArray8 = retryOnPrimaryException4.getSuppressed();
        java.lang.String str9 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException15.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException18.getShardId();
        java.lang.Throwable throwable20 = retryOnPrimaryException18.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "");
        java.lang.String str27 = retryOnPrimaryException26.getResourceType();
        java.lang.String str28 = retryOnPrimaryException26.getResourceType();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "hi!");
        retryOnPrimaryException33.setShard("", 0);
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException33);
        java.lang.Throwable[] throwableArray38 = retryOnPrimaryException33.getSuppressed();
        retryOnPrimaryException33.setShard("[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", 100);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "hi!");
        java.util.List<java.lang.String> strList48 = retryOnPrimaryException47.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", (java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String str50 = retryOnPrimaryException47.toString();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "hi!");
        boolean boolean57 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException56);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "");
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "hi!");
        retryOnPrimaryException60.addSuppressed((java.lang.Throwable) retryOnPrimaryException63);
        java.util.List<java.lang.String> strList66 = null;
        retryOnPrimaryException63.addHeader("hi!", strList66);
        retryOnPrimaryException56.addSuppressed((java.lang.Throwable) retryOnPrimaryException63);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "", (java.lang.Throwable) retryOnPrimaryException63);
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException69.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray72);
        retryOnPrimaryException47.setResources("rest.exception.stacktrace.skip", strArray72);
        retryOnPrimaryException33.setResources("rest.exception.cause.skip", strArray72);
        retryOnPrimaryException26.setResources("", strArray72);
        retryOnPrimaryException18.addHeader("retry_on_primary_exception", strArray72);
        retryOnPrimaryException4.setResources("RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]", strArray72);
        java.lang.Throwable throwable79 = retryOnPrimaryException4.getRootCause();
        boolean boolean80 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable79);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str7, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "retry_on_primary_exception" + "'", str9, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str50, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(throwable79);
        org.junit.Assert.assertEquals(throwable79.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable79.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable79.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
    }

    @Test
    public void test8118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8118");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId6 = retryOnPrimaryException5.getShardId();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException11.setShard("", 0);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException11.getHeader("retry_on_primary_exception");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable throwable19 = retryOnPrimaryException11.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = retryOnPrimaryException24.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException29.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.stacktrace.skip");
        retryOnPrimaryException34.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = retryOnPrimaryException34.guessRootCauses();
        retryOnPrimaryException29.addSuppressed((java.lang.Throwable) retryOnPrimaryException34);
        throwable19.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        java.util.Set<java.lang.String> strSet41 = retryOnPrimaryException29.getHeaderKeys();
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException29);
        retryOnPrimaryException5.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String str44 = retryOnPrimaryException29.getResourceType();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder45 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params46 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder47 = retryOnPrimaryException29.toXContent(xContentBuilder45, params46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable19.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(params46);
    }

    @Test
    public void test8119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8119");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException6.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException11.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.stacktrace.skip");
        retryOnPrimaryException16.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = retryOnPrimaryException16.guessRootCauses();
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "");
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "hi!");
        retryOnPrimaryException26.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.index.Index index31 = retryOnPrimaryException26.getIndex();
        java.lang.Throwable throwable32 = retryOnPrimaryException26.getRootCause();
        retryOnPrimaryException26.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException41.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "", (java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String str44 = retryOnPrimaryException41.toString();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "hi!");
        boolean boolean51 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "");
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "hi!");
        retryOnPrimaryException54.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        java.util.List<java.lang.String> strList60 = null;
        retryOnPrimaryException57.addHeader("hi!", strList60);
        retryOnPrimaryException50.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "", (java.lang.Throwable) retryOnPrimaryException57);
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException63.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray66);
        retryOnPrimaryException41.setResources("rest.exception.stacktrace.skip", strArray66);
        retryOnPrimaryException26.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray66);
        retryOnPrimaryException22.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]", strArray66);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray71 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        retryOnPrimaryException22.setShard("RetryOnPrimaryException[[[hi!][[hi!][-1]] RetryOnPrimaryException[]] RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", 0);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNull(index31);
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "");
        org.junit.Assert.assertEquals(throwable32.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str44, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray71);
    }

    @Test
    public void test8120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8120");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException8.setShard("", 10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "");
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException16.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.String str20 = retryOnPrimaryException16.getDetailedMessage();
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException16.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str20, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strSet21);
    }

    @Test
    public void test8121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8121");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "hi!");
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException10.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str13 = retryOnPrimaryException10.toString();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = retryOnPrimaryException19.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.util.List<java.lang.String> strList26 = retryOnPrimaryException24.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable[] throwableArray28 = retryOnPrimaryException24.getSuppressed();
        retryOnPrimaryException24.setIndex("[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "");
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException34.addSuppressed((java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.index.Index index39 = retryOnPrimaryException34.getIndex();
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "hi!");
        retryOnPrimaryException43.setShard("", 0);
        boolean boolean47 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray48 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        retryOnPrimaryException43.setShard(shardId50);
        retryOnPrimaryException34.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "");
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "hi!");
        retryOnPrimaryException58.addSuppressed((java.lang.Throwable) retryOnPrimaryException61);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException58);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        java.lang.Throwable throwable67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable67);
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "hi!");
        retryOnPrimaryException72.setShard("", 0);
        boolean boolean76 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException72);
        java.util.List<java.lang.String> strList78 = retryOnPrimaryException72.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray83 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException72.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray83);
        retryOnPrimaryException68.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray83);
        retryOnPrimaryException63.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray83);
        retryOnPrimaryException43.addHeader("[][[][0]] RetryOnPrimaryException[hi!]", strArray83);
        retryOnPrimaryException24.addHeader("RetryOnPrimaryException[hi!]", strArray83);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];", strArray83);
        java.util.List<java.lang.String> strList90 = retryOnPrimaryException2.getResourceId();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str13, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNull(index39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray48);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNull(strList78);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strList90);
    }

    @Test
    public void test8122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8122");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str9 = retryOnPrimaryException2.toString();
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "");
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException19.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException19);
        retryOnPrimaryException21.setShard("", 10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", (java.lang.Throwable) retryOnPrimaryException21);
        java.lang.Throwable throwable26 = retryOnPrimaryException25.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!");
        retryOnPrimaryException30.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray34 = retryOnPrimaryException30.guessRootCauses();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        retryOnPrimaryException30.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList41);
        retryOnPrimaryException30.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException30.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "hi!");
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException54.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "", (java.lang.Throwable) retryOnPrimaryException54);
        org.elasticsearch.rest.RestStatus restStatus57 = retryOnPrimaryException56.status();
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "hi!");
        retryOnPrimaryException61.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray65 = retryOnPrimaryException61.guessRootCauses();
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        retryOnPrimaryException61.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList72);
        retryOnPrimaryException56.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList72);
        retryOnPrimaryException30.addHeader("", (java.util.List<java.lang.String>) strList72);
        java.lang.String[] strArray80 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException30.setResources("RetryOnPrimaryException[]", strArray80);
        retryOnPrimaryException25.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray80);
        retryOnPrimaryException2.setResources("[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray80);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray84 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet85 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str9, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "");
        org.junit.Assert.assertEquals(throwable26.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray34);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertTrue("'" + restStatus57 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus57.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray65);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray84);
        org.junit.Assert.assertNotNull(strSet85);
    }

    @Test
    public void test8123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8123");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.Index index9 = retryOnPrimaryException4.getIndex();
        java.lang.Throwable throwable10 = retryOnPrimaryException4.getRootCause();
        retryOnPrimaryException4.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable15 = retryOnPrimaryException14.unwrapCause();
        java.lang.Throwable throwable16 = retryOnPrimaryException14.unwrapCause();
        java.lang.String str17 = retryOnPrimaryException14.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = retryOnPrimaryException14.guessRootCauses();
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str17, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
    }

    @Test
    public void test8124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8124");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException19.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException21);
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException21.getHeaderKeys();
        java.lang.String str24 = retryOnPrimaryException21.toString();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "");
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "hi!");
        retryOnPrimaryException28.addSuppressed((java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = retryOnPrimaryException31.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        retryOnPrimaryException41.setShard("", 0);
        org.elasticsearch.index.Index index45 = null;
        retryOnPrimaryException41.setIndex(index45);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException41);
        retryOnPrimaryException41.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "hi!");
        java.util.List<java.lang.String> strList57 = retryOnPrimaryException56.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "", (java.lang.Throwable) retryOnPrimaryException56);
        java.lang.String str59 = retryOnPrimaryException56.toString();
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "hi!");
        boolean boolean66 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException65);
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "");
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "hi!");
        retryOnPrimaryException69.addSuppressed((java.lang.Throwable) retryOnPrimaryException72);
        java.util.List<java.lang.String> strList75 = null;
        retryOnPrimaryException72.addHeader("hi!", strList75);
        retryOnPrimaryException65.addSuppressed((java.lang.Throwable) retryOnPrimaryException72);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException78 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "", (java.lang.Throwable) retryOnPrimaryException72);
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException78.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray81);
        retryOnPrimaryException56.setResources("rest.exception.stacktrace.skip", strArray81);
        retryOnPrimaryException41.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray81);
        retryOnPrimaryException31.addHeader("rest.exception.stacktrace.skip", strArray81);
        retryOnPrimaryException21.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray81);
        retryOnPrimaryException9.setResources("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[hi!];", strArray81);
        java.util.List<java.lang.String> strList89 = retryOnPrimaryException9.getHeader("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        java.lang.Throwable throwable90 = retryOnPrimaryException9.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, throwable90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];" + "'", str24, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str59, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNull(strList89);
        org.junit.Assert.assertNotNull(throwable90);
        org.junit.Assert.assertEquals(throwable90.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable90.getMessage(), "");
        org.junit.Assert.assertEquals(throwable90.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test8125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8125");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("", 0);
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException8.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable throwable18 = retryOnPrimaryException17.unwrapCause();
        org.elasticsearch.index.Index index19 = retryOnPrimaryException17.getIndex();
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(index19);
    }

    @Test
    public void test8126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8126");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        retryOnPrimaryException2.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException9.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException9.guessRootCauses();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        retryOnPrimaryException9.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList20);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray30 = retryOnPrimaryException26.guessRootCauses();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        retryOnPrimaryException26.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList37);
        retryOnPrimaryException26.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException26.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "hi!");
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException50.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "", (java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.rest.RestStatus restStatus53 = retryOnPrimaryException52.status();
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "hi!");
        retryOnPrimaryException57.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray61 = retryOnPrimaryException57.guessRootCauses();
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        retryOnPrimaryException57.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList68);
        retryOnPrimaryException52.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList68);
        retryOnPrimaryException26.addHeader("", (java.util.List<java.lang.String>) strList68);
        java.lang.String[] strArray76 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException26.setResources("RetryOnPrimaryException[]", strArray76);
        retryOnPrimaryException9.setResources("RetryOnPrimaryException[hi!]", strArray76);
        retryOnPrimaryException2.setResources("hi!", strArray76);
        boolean boolean80 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId81 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException83 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId81, "rest.exception.stacktrace.skip");
        boolean boolean84 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException83);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException83);
        java.lang.Throwable throwable86 = retryOnPrimaryException83.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray87 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException83);
        org.elasticsearch.rest.RestStatus restStatus88 = retryOnPrimaryException83.status();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray30);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertTrue("'" + restStatus53 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus53.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray61);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(throwable86);
        org.junit.Assert.assertEquals(throwable86.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable86.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable86.toString(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray87);
        org.junit.Assert.assertTrue("'" + restStatus88 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus88.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8127");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException11.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException19);
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException19.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId23 = retryOnPrimaryException22.getShardId();
        org.elasticsearch.index.shard.ShardId shardId24 = retryOnPrimaryException22.getShardId();
        retryOnPrimaryException22.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray27 = retryOnPrimaryException22.getSuppressed();
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str29 = retryOnPrimaryException22.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "");
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "hi!");
        retryOnPrimaryException33.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.Index index38 = retryOnPrimaryException33.getIndex();
        java.lang.Throwable throwable39 = retryOnPrimaryException33.unwrapCause();
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        retryOnPrimaryException44.setShard("", 0);
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException44);
        java.util.List<java.lang.String> strList50 = retryOnPrimaryException44.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray55 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException44.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray55);
        retryOnPrimaryException33.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray55);
        retryOnPrimaryException22.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray55);
        retryOnPrimaryException13.setResources("rest.exception.cause.skip", strArray55);
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "[][[][0]] RetryOnPrimaryException[hi!]");
        java.lang.String str63 = retryOnPrimaryException62.toString();
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException62);
        java.util.List<java.lang.String> strList65 = retryOnPrimaryException13.getResourceId();
        java.lang.Throwable[] throwableArray66 = retryOnPrimaryException13.getSuppressed();
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(index38);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "");
        org.junit.Assert.assertEquals(throwable39.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]" + "'", str63, "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]");
        org.junit.Assert.assertNotNull(strList65);
        org.junit.Assert.assertNotNull(throwableArray66);
    }

    @Test
    public void test8128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8128");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        retryOnPrimaryException2.setIndex("[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str6 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]" + "'", str6, "[[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
    }

    @Test
    public void test8129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8129");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str9 = retryOnPrimaryException2.toString();
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "");
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException19.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException19);
        retryOnPrimaryException21.setShard("", 10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", (java.lang.Throwable) retryOnPrimaryException21);
        java.lang.Throwable throwable26 = retryOnPrimaryException25.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!");
        retryOnPrimaryException30.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray34 = retryOnPrimaryException30.guessRootCauses();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        retryOnPrimaryException30.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList41);
        retryOnPrimaryException30.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException30.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "hi!");
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException54.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "", (java.lang.Throwable) retryOnPrimaryException54);
        org.elasticsearch.rest.RestStatus restStatus57 = retryOnPrimaryException56.status();
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "hi!");
        retryOnPrimaryException61.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray65 = retryOnPrimaryException61.guessRootCauses();
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        retryOnPrimaryException61.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList72);
        retryOnPrimaryException56.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList72);
        retryOnPrimaryException30.addHeader("", (java.util.List<java.lang.String>) strList72);
        java.lang.String[] strArray80 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException30.setResources("RetryOnPrimaryException[]", strArray80);
        retryOnPrimaryException25.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray80);
        retryOnPrimaryException2.setResources("[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray80);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray84 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder85 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params86 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder87 = retryOnPrimaryException2.toXContent(xContentBuilder85, params86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str9, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "");
        org.junit.Assert.assertEquals(throwable26.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray34);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertTrue("'" + restStatus57 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus57.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray65);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray84);
        org.junit.Assert.assertNotNull(params86);
    }

    @Test
    public void test8130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8130");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str14 = retryOnPrimaryException6.getDetailedMessage();
        java.lang.Throwable throwable15 = retryOnPrimaryException6.getRootCause();
        retryOnPrimaryException6.setShard("[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException6.getResourceId();
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException6.getHeader("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str14, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable15.toString(), "[[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];][[[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList22);
    }

    @Test
    public void test8131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8131");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        retryOnPrimaryException2.setShard(shardId8);
        org.elasticsearch.index.Index index10 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]", 1);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException21);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException21.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId25 = retryOnPrimaryException24.getShardId();
        org.elasticsearch.index.shard.ShardId shardId26 = retryOnPrimaryException24.getShardId();
        retryOnPrimaryException24.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException24.getSuppressed();
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String str31 = retryOnPrimaryException24.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus32 = retryOnPrimaryException24.status();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.stacktrace.skip");
        retryOnPrimaryException36.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray40 = retryOnPrimaryException36.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = retryOnPrimaryException36.guessRootCauses();
        java.lang.String str42 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException36);
        java.lang.String[] strArray44 = new java.lang.String[] {};
        retryOnPrimaryException36.addHeader("hi!", strArray44);
        retryOnPrimaryException24.addHeader("[][[][0]] RetryOnPrimaryException[hi!]", strArray44);
        retryOnPrimaryException2.setResources("", strArray44);
        java.lang.String str48 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertNull(index10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + restStatus32 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus32.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray40);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "retry_on_primary_exception" + "'", str42, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
    }

    @Test
    public void test8132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8132");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        java.lang.String str5 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "hi!");
        retryOnPrimaryException10.setShard("", 0);
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str17 = retryOnPrimaryException16.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable throwable19 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable21 = retryOnPrimaryException20.unwrapCause();
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException20.getSuppressed();
        java.lang.Throwable throwable23 = retryOnPrimaryException20.unwrapCause();
        java.lang.String str24 = retryOnPrimaryException20.getResourceType();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str17, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        org.junit.Assert.assertEquals(throwable21.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        org.junit.Assert.assertEquals(throwable23.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test8133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8133");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException13.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", (java.lang.Throwable) retryOnPrimaryException13);
        java.lang.String str16 = retryOnPrimaryException13.toString();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException23);
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "");
        org.elasticsearch.rest.RestStatus restStatus37 = retryOnPrimaryException36.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", (java.lang.Throwable) retryOnPrimaryException36);
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException38.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str41 = retryOnPrimaryException38.toString();
        java.lang.String[] strArray46 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException38.setResources("", strArray46);
        retryOnPrimaryException29.addHeader("RetryOnPrimaryException[hi!]", strArray46);
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray46);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException51.addSuppressed((java.lang.Throwable) retryOnPrimaryException54);
        org.elasticsearch.rest.RestStatus restStatus56 = retryOnPrimaryException54.status();
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str16, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus37 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus37.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str41, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + restStatus56 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus56.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8134");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable9 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str11 = retryOnPrimaryException10.getDetailedMessage();
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException10.getHeaderKeys();
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException10.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException10.status();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException21.setIndex(index22);
        java.lang.Throwable throwable24 = retryOnPrimaryException21.getRootCause();
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException21.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException21);
        java.util.Set<java.lang.String> strSet27 = retryOnPrimaryException26.getHeaderKeys();
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "hi!");
        retryOnPrimaryException36.setShard("", 0);
        java.lang.String str40 = retryOnPrimaryException36.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        retryOnPrimaryException36.setShard(shardId41);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.shard.ShardId shardId45 = retryOnPrimaryException44.getShardId();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "hi!");
        java.util.List<java.lang.String> strList52 = retryOnPrimaryException51.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", (java.lang.Throwable) retryOnPrimaryException51);
        java.lang.Throwable throwable54 = retryOnPrimaryException53.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "hi!");
        retryOnPrimaryException58.setShard("", 0);
        boolean boolean62 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException58);
        java.util.List<java.lang.String> strList64 = retryOnPrimaryException58.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray69 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException58.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray69);
        retryOnPrimaryException53.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray69);
        retryOnPrimaryException44.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];", strArray69);
        retryOnPrimaryException26.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]", strArray69);
        retryOnPrimaryException10.setResources("[[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray69);
        java.lang.Throwable throwable75 = retryOnPrimaryException10.unwrapCause();
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str11, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(throwable54);
        org.junit.Assert.assertEquals(throwable54.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable54.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable54.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(throwable75);
        org.junit.Assert.assertEquals(throwable75.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable75.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable75.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test8135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8135");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.stacktrace.skip");
        retryOnPrimaryException6.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException10.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException12.getShardId();
        java.lang.String str14 = retryOnPrimaryException12.getResourceType();
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test8136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8136");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable7 = retryOnPrimaryException4.getRootCause();
        java.lang.Throwable throwable8 = retryOnPrimaryException4.unwrapCause();
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getHeader("[][[][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test8137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8137");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = retryOnPrimaryException19.guessRootCauses();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        retryOnPrimaryException19.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList30);
        retryOnPrimaryException19.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException19.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "hi!");
        java.util.List<java.lang.String> strList44 = retryOnPrimaryException43.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "", (java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.rest.RestStatus restStatus46 = retryOnPrimaryException45.status();
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "hi!");
        retryOnPrimaryException50.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = retryOnPrimaryException50.guessRootCauses();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        retryOnPrimaryException50.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList61);
        retryOnPrimaryException45.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList61);
        retryOnPrimaryException19.addHeader("", (java.util.List<java.lang.String>) strList61);
        java.lang.String[] strArray69 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException19.setResources("RetryOnPrimaryException[]", strArray69);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[hi!]", strArray69);
        java.lang.Throwable throwable72 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray73 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable72);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertTrue("'" + restStatus46 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus46.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(throwable72);
        org.junit.Assert.assertEquals(throwable72.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable72.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable72.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray73);
    }

    @Test
    public void test8138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8138");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str7 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str7, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test8139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8139");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException2.getRootCause();
        java.lang.String str10 = retryOnPrimaryException2.getResourceType();
        java.lang.String str11 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str11, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test8140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8140");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        java.lang.String str4 = retryOnPrimaryException2.getResourceType();
        java.lang.String str5 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable6 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "");
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException14.status();
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException14.setIndex(index16);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!", (java.lang.Throwable) retryOnPrimaryException14);
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException18.getHeader("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        java.lang.String str22 = retryOnPrimaryException18.toString();
        retryOnPrimaryException18.setShard("[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][97]] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];", (int) '#');
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[]" + "'", str5, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];" + "'", str22, "RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test8141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8141");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException11.setShard("", 0);
        org.elasticsearch.index.Index index15 = null;
        retryOnPrimaryException11.setIndex(index15);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException11);
        retryOnPrimaryException11.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException11.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!", (java.lang.Throwable) retryOnPrimaryException11);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "");
        org.elasticsearch.rest.RestStatus restStatus29 = retryOnPrimaryException28.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "", (java.lang.Throwable) retryOnPrimaryException28);
        java.util.List<java.lang.String> strList32 = retryOnPrimaryException30.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str33 = retryOnPrimaryException30.toString();
        java.lang.String[] strArray38 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException30.setResources("", strArray38);
        retryOnPrimaryException11.setResources("retry_on_primary_exception", strArray38);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String str42 = retryOnPrimaryException41.toString();
        java.lang.String str43 = retryOnPrimaryException41.getDetailedMessage();
        org.elasticsearch.rest.RestStatus restStatus44 = retryOnPrimaryException41.status();
        java.lang.Class<?> wildcardClass45 = retryOnPrimaryException41.getClass();
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus29 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus29.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str33, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];" + "'", str42, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str43, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + restStatus44 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus44.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test8142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8142");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str11 = retryOnPrimaryException8.toString();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "");
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.util.List<java.lang.String> strList27 = null;
        retryOnPrimaryException24.addHeader("hi!", strList27);
        retryOnPrimaryException17.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException30.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray33);
        retryOnPrimaryException8.setResources("rest.exception.stacktrace.skip", strArray33);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        java.util.List<java.lang.String> strList37 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        boolean boolean45 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "");
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "hi!");
        retryOnPrimaryException48.addSuppressed((java.lang.Throwable) retryOnPrimaryException51);
        java.util.List<java.lang.String> strList54 = null;
        retryOnPrimaryException51.addHeader("hi!", strList54);
        retryOnPrimaryException44.addSuppressed((java.lang.Throwable) retryOnPrimaryException51);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "", (java.lang.Throwable) retryOnPrimaryException51);
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException57.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray60);
        retryOnPrimaryException38.addHeader("", strArray60);
        java.lang.String str63 = retryOnPrimaryException38.getResourceType();
        java.lang.Throwable[] throwableArray64 = retryOnPrimaryException38.getSuppressed();
        java.lang.Throwable throwable65 = retryOnPrimaryException38.unwrapCause();
        java.lang.Throwable[] throwableArray66 = retryOnPrimaryException38.getSuppressed();
        java.lang.String str67 = retryOnPrimaryException38.getResourceType();
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str11, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwable65);
        org.junit.Assert.assertEquals(throwable65.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable65.getMessage(), "");
        org.junit.Assert.assertEquals(throwable65.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNull(str67);
    }

    @Test
    public void test8143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8143");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        retryOnPrimaryException17.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.util.List<java.lang.String> strList23 = null;
        retryOnPrimaryException20.addHeader("hi!", strList23);
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", (java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException26.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray29);
        retryOnPrimaryException4.setResources("rest.exception.stacktrace.skip", strArray29);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "hi!");
        retryOnPrimaryException39.setShard("", 0);
        org.elasticsearch.index.Index index43 = null;
        retryOnPrimaryException39.setIndex(index43);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException39);
        retryOnPrimaryException39.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "hi!");
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException54.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "", (java.lang.Throwable) retryOnPrimaryException54);
        java.lang.String str57 = retryOnPrimaryException54.toString();
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "hi!");
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException63);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "");
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "hi!");
        retryOnPrimaryException67.addSuppressed((java.lang.Throwable) retryOnPrimaryException70);
        java.util.List<java.lang.String> strList73 = null;
        retryOnPrimaryException70.addHeader("hi!", strList73);
        retryOnPrimaryException63.addSuppressed((java.lang.Throwable) retryOnPrimaryException70);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "", (java.lang.Throwable) retryOnPrimaryException70);
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException76.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray79);
        retryOnPrimaryException54.setResources("rest.exception.stacktrace.skip", strArray79);
        retryOnPrimaryException39.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray79);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray79);
        retryOnPrimaryException4.setShard("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (int) (short) 0);
        java.lang.String str87 = retryOnPrimaryException4.getDetailedMessage();
        retryOnPrimaryException4.setShard("RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[hi!];", (int) (byte) 100);
        retryOnPrimaryException4.setShard("RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (byte) 10);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str7, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str57, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str87, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test8144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8144");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException4.setIndex(index5);
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable[] throwableArray8 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index10 = retryOnPrimaryException9.getIndex();
        org.elasticsearch.index.Index index11 = retryOnPrimaryException9.getIndex();
        java.lang.String str12 = retryOnPrimaryException9.getResourceType();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNull(index10);
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test8145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8145");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.toString();
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException4.status();
        retryOnPrimaryException4.setIndex("[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][35]] RetryOnPrimaryException[RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]]");
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str7, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8146");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException8);
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException8.getHeaderKeys();
        java.lang.String str11 = retryOnPrimaryException8.toString();
        java.lang.String str12 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException8.getShardId();
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];" + "'", str11, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "retry_on_primary_exception" + "'", str12, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId13);
    }

    @Test
    public void test8147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8147");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        java.lang.String str7 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("", 0);
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String str19 = retryOnPrimaryException18.toString();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        java.lang.Throwable throwable21 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException22.guessRootCauses();
        java.lang.String str25 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException22);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str7, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str19, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "");
        org.junit.Assert.assertEquals(throwable21.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "retry_on_primary_exception" + "'", str25, "retry_on_primary_exception");
    }

    @Test
    public void test8148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8148");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.util.List<java.lang.String> strList14 = null;
        retryOnPrimaryException11.addHeader("hi!", strList14);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException4.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.common.io.stream.StreamInput streamInput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception20 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException18, streamInput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(shardId17);
    }

    @Test
    public void test8149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8149");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.Index index9 = retryOnPrimaryException4.getIndex();
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException13.setShard("", 0);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        retryOnPrimaryException13.setShard(shardId20);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "hi!");
        org.elasticsearch.index.Index index26 = null;
        retryOnPrimaryException25.setIndex(index26);
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException25.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus29 = retryOnPrimaryException25.status();
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "hi!");
        retryOnPrimaryException34.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = retryOnPrimaryException34.guessRootCauses();
        retryOnPrimaryException31.addSuppressed((java.lang.Throwable) retryOnPrimaryException34);
        java.lang.Throwable[] throwableArray40 = retryOnPrimaryException34.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = retryOnPrimaryException34.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
        java.lang.String str45 = retryOnPrimaryException44.getResourceType();
        org.elasticsearch.index.Index index46 = retryOnPrimaryException44.getIndex();
        retryOnPrimaryException34.addSuppressed((java.lang.Throwable) retryOnPrimaryException44);
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException44);
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + restStatus29 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus29.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(index46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test8150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8150");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable11 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", throwable11);
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException12.getShardId();
        java.lang.String str14 = retryOnPrimaryException12.getDetailedMessage();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException12.getHeader("[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][35]] RetryOnPrimaryException[RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]]");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        retryOnPrimaryException23.setShard("", 0);
        org.elasticsearch.index.Index index27 = null;
        retryOnPrimaryException23.setIndex(index27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException23);
        java.lang.Throwable[] throwableArray30 = retryOnPrimaryException23.getSuppressed();
        java.util.Set<java.lang.String> strSet31 = retryOnPrimaryException23.getHeaderKeys();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException23);
        java.lang.String str33 = retryOnPrimaryException32.getDetailedMessage();
        java.lang.Throwable throwable34 = retryOnPrimaryException32.unwrapCause();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = retryOnPrimaryException32.guessRootCauses();
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException32.getHeader("[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];][100]] RetryOnPrimaryException[]");
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException32.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput40 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException32.writeTo(streamOutput40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str14, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList39);
    }

    @Test
    public void test8151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8151");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.index.Index index10 = retryOnPrimaryException4.getIndex();
        java.lang.Throwable throwable11 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException12.getSuppressed();
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException12);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.Throwable throwable16 = retryOnPrimaryException12.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable16);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(index10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
    }

    @Test
    public void test8152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8152");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", throwable2);
        retryOnPrimaryException3.setShard("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", 0);
        java.lang.Throwable throwable7 = retryOnPrimaryException3.unwrapCause();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test8153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8153");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable11 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", throwable11);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder13 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder15 = retryOnPrimaryException12.toXContent(xContentBuilder13, params14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8154");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException4.setIndex(index8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str12 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException20.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "", (java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str23 = retryOnPrimaryException20.toString();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "hi!");
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "");
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "hi!");
        retryOnPrimaryException33.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        java.util.List<java.lang.String> strList39 = null;
        retryOnPrimaryException36.addHeader("hi!", strList39);
        retryOnPrimaryException29.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", (java.lang.Throwable) retryOnPrimaryException36);
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException42.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray45);
        retryOnPrimaryException20.setResources("rest.exception.stacktrace.skip", strArray45);
        java.lang.String str48 = retryOnPrimaryException20.toString();
        java.lang.Throwable throwable49 = retryOnPrimaryException20.getRootCause();
        java.util.List<java.lang.String> strList50 = retryOnPrimaryException20.getResourceId();
        retryOnPrimaryException4.addHeader("[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]", strList50);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "");
        org.elasticsearch.rest.RestStatus restStatus59 = retryOnPrimaryException58.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException58);
        java.lang.String str61 = retryOnPrimaryException60.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException60);
        java.lang.Throwable throwable63 = retryOnPrimaryException62.unwrapCause();
        java.lang.String str64 = retryOnPrimaryException62.getDetailedMessage();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException62);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "retry_on_primary_exception" + "'", str12, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str23, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str48, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable49.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strList50);
        org.junit.Assert.assertTrue("'" + restStatus59 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus59.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str61, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable63);
        org.junit.Assert.assertEquals(throwable63.getLocalizedMessage(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable63.getMessage(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable63.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str64, "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test8155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8155");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("retry_on_primary_exception");
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getResourceId();
        java.lang.String str10 = retryOnPrimaryException2.toString();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]]");
        org.elasticsearch.rest.RestStatus restStatus13 = retryOnPrimaryException2.status();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str10, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus13 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus13.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8156");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", throwable2);
        java.lang.Throwable throwable4 = retryOnPrimaryException3.getRootCause();
        java.lang.Throwable throwable5 = retryOnPrimaryException3.unwrapCause();
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]");
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]");
    }

    @Test
    public void test8157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8157");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable9 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException10.getHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable28);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "hi!");
        retryOnPrimaryException33.setShard("", 0);
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException33);
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException33.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray44 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException33.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray44);
        retryOnPrimaryException29.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray44);
        retryOnPrimaryException24.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray44);
        retryOnPrimaryException10.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];", strArray44);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        java.util.Set<java.lang.String> strSet50 = retryOnPrimaryException10.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertNotNull(strSet50);
    }

    @Test
    public void test8158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8158");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.Index index9 = retryOnPrimaryException4.getIndex();
        java.lang.Throwable throwable10 = retryOnPrimaryException4.unwrapCause();
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException4.setIndex(index12);
        java.lang.Throwable throwable14 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.Index index17 = retryOnPrimaryException4.getIndex();
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable19 = retryOnPrimaryException4.getRootCause();
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "RetryOnPrimaryException[]" + "'", str16, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(index17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test8159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8159");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable7 = retryOnPrimaryException4.getRootCause();
        java.lang.Throwable[] throwableArray8 = throwable7.getSuppressed();
        java.lang.Throwable[] throwableArray9 = throwable7.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = retryOnPrimaryException12.guessRootCauses();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        retryOnPrimaryException12.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList23);
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException12.getHeader("hi!");
        retryOnPrimaryException12.setShard("retry_on_primary_exception", (int) (short) 100);
        throwable7.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test8160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8160");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        retryOnPrimaryException2.setShard(shardId9);
        retryOnPrimaryException2.setShard("[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", 0);
        java.lang.Throwable throwable14 = retryOnPrimaryException2.unwrapCause();
        java.lang.Throwable[] throwableArray15 = throwable14.getSuppressed();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable14);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable14);
        java.lang.Throwable[] throwableArray18 = throwable14.getSuppressed();
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable14);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.toString(), "[[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test8161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8161");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException9.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.stacktrace.skip");
        retryOnPrimaryException14.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = retryOnPrimaryException14.guessRootCauses();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String str20 = retryOnPrimaryException9.getResourceType();
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException9.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str23 = retryOnPrimaryException9.getDetailedMessage();
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.Index index25 = retryOnPrimaryException9.getIndex();
        java.lang.String str26 = retryOnPrimaryException9.getDetailedMessage();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str26, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test8162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8162");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str6 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException4.unwrapCause();
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException4.getResourceId();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "");
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException15.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException17.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str20 = retryOnPrimaryException17.toString();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "");
        retryOnPrimaryException28.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet32 = retryOnPrimaryException28.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "hi!");
        retryOnPrimaryException36.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray40 = retryOnPrimaryException36.guessRootCauses();
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        retryOnPrimaryException36.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException28.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException24.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException17.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException4.addHeader("[[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]", (java.util.List<java.lang.String>) strList47);
        java.util.Set<java.lang.String> strSet54 = retryOnPrimaryException4.getHeaderKeys();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str20, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray40);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strSet54);
    }

    @Test
    public void test8163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8163");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable7 = retryOnPrimaryException4.getRootCause();
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException4.getHeaderKeys();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable10 = retryOnPrimaryException4.getRootCause();
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException17.setIndex(index18);
        java.lang.String str20 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException17.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.rest.RestStatus restStatus23 = retryOnPrimaryException17.status();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        java.lang.Throwable throwable27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable27);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "hi!");
        retryOnPrimaryException32.setShard("", 0);
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException32);
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException32.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray43 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException32.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray43);
        retryOnPrimaryException28.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray43);
        retryOnPrimaryException17.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", strArray43);
        retryOnPrimaryException4.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray43);
        retryOnPrimaryException4.setShard("RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]]; nested: RetryOnPrimaryException[hi!];", (int) (short) -1);
        boolean boolean51 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]]; nested: RetryOnPrimaryException[hi!];][-1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]]; nested: RetryOnPrimaryException[hi!];][-1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "retry_on_primary_exception" + "'", str20, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertTrue("'" + restStatus23 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus23.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test8164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8164");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId11 = retryOnPrimaryException2.getShardId();
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException2.getResourceId();
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test8165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8165");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.util.List<java.lang.String> strList16 = null;
        retryOnPrimaryException13.addHeader("hi!", strList16);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException13);
        java.lang.Throwable throwable20 = retryOnPrimaryException13.getRootCause();
        java.lang.String str21 = retryOnPrimaryException13.getDetailedMessage();
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException13.guessRootCauses();
        org.elasticsearch.index.Index index25 = null;
        retryOnPrimaryException13.setIndex(index25);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = retryOnPrimaryException13.guessRootCauses();
        java.lang.Throwable throwable28 = retryOnPrimaryException13.getRootCause();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.toString(), "RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8166");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("", 0);
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "");
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        retryOnPrimaryException20.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.Index index25 = retryOnPrimaryException20.getIndex();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException20);
        retryOnPrimaryException26.setIndex("");
        retryOnPrimaryException15.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException15.setShard("[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) ' ');
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.Throwable throwable35 = retryOnPrimaryException15.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable35.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8167");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "");
        java.lang.String str12 = retryOnPrimaryException11.getResourceType();
        java.lang.Throwable throwable13 = retryOnPrimaryException11.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip", throwable13);
        retryOnPrimaryException6.addSuppressed(throwable13);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException16.setIndex("[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        java.lang.String str20 = retryOnPrimaryException16.getDetailedMessage();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException16.getSuppressed();
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "");
        org.junit.Assert.assertEquals(throwable13.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str20, "[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test8168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8168");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.Index index9 = retryOnPrimaryException4.getIndex();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "");
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException16.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException18.setShard("", 10);
        java.lang.String str22 = retryOnPrimaryException18.getDetailedMessage();
        java.util.List<java.lang.String> strList24 = retryOnPrimaryException18.getHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "hi!");
        java.util.List<java.lang.String> strList32 = retryOnPrimaryException31.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException31);
        java.lang.String str34 = retryOnPrimaryException31.toString();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "rest.exception.stacktrace.skip");
        retryOnPrimaryException42.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException42);
        retryOnPrimaryException46.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "hi!");
        boolean boolean56 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException55);
        java.util.List<java.lang.String> strList57 = retryOnPrimaryException55.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException55);
        org.elasticsearch.index.shard.ShardId shardId59 = retryOnPrimaryException58.getShardId();
        org.elasticsearch.index.shard.ShardId shardId60 = retryOnPrimaryException58.getShardId();
        retryOnPrimaryException58.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray63 = retryOnPrimaryException58.getSuppressed();
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException58);
        java.lang.String str65 = retryOnPrimaryException58.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus66 = retryOnPrimaryException58.status();
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "rest.exception.stacktrace.skip");
        retryOnPrimaryException70.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray74 = retryOnPrimaryException70.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray75 = retryOnPrimaryException70.guessRootCauses();
        java.lang.String str76 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException70);
        java.lang.String[] strArray78 = new java.lang.String[] {};
        retryOnPrimaryException70.addHeader("hi!", strArray78);
        retryOnPrimaryException58.addHeader("[][[][0]] RetryOnPrimaryException[hi!]", strArray78);
        retryOnPrimaryException49.setResources("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray78);
        retryOnPrimaryException31.setResources("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray78);
        retryOnPrimaryException18.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", strArray78);
        retryOnPrimaryException10.addHeader("", strArray78);
        boolean boolean85 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str86 = retryOnPrimaryException10.getDetailedMessage();
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str22, "[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str34, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(shardId59);
        org.junit.Assert.assertNull(shardId60);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertTrue("'" + restStatus66 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus66.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray74);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "retry_on_primary_exception" + "'", str76, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "RetryOnPrimaryException[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str86, "RetryOnPrimaryException[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test8169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8169");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "hi!");
        retryOnPrimaryException10.setShard("", 0);
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException10.setIndex(index14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException10.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException10.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "");
        java.lang.String str35 = retryOnPrimaryException34.getResourceType();
        java.lang.Throwable throwable36 = retryOnPrimaryException34.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip", throwable36);
        retryOnPrimaryException29.addSuppressed(throwable36);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        retryOnPrimaryException44.setShard("", 0);
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray50 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        retryOnPrimaryException44.setShard(shardId51);
        java.lang.String str53 = retryOnPrimaryException44.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "hi!");
        java.util.List<java.lang.String> strList60 = retryOnPrimaryException59.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "", (java.lang.Throwable) retryOnPrimaryException59);
        java.lang.String str62 = retryOnPrimaryException59.toString();
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "");
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "hi!");
        retryOnPrimaryException69.addSuppressed((java.lang.Throwable) retryOnPrimaryException72);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException69);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException75 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException69);
        retryOnPrimaryException59.addSuppressed((java.lang.Throwable) retryOnPrimaryException75);
        org.elasticsearch.index.shard.ShardId shardId78 = null;
        org.elasticsearch.index.shard.ShardId shardId80 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException82 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId80, "");
        org.elasticsearch.rest.RestStatus restStatus83 = retryOnPrimaryException82.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException84 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId78, "", (java.lang.Throwable) retryOnPrimaryException82);
        java.util.List<java.lang.String> strList86 = retryOnPrimaryException84.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str87 = retryOnPrimaryException84.toString();
        java.lang.String[] strArray92 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException84.setResources("", strArray92);
        retryOnPrimaryException75.addHeader("RetryOnPrimaryException[hi!]", strArray92);
        retryOnPrimaryException44.addHeader("[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray92);
        retryOnPrimaryException39.addHeader("[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray92);
        retryOnPrimaryException10.addHeader("", strArray92);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput98 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException10.writeTo(streamOutput98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "");
        org.junit.Assert.assertEquals(throwable36.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str62, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus83 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus83.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str87, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray92);
    }

    @Test
    public void test8170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8170");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable[] throwableArray10 = retryOnPrimaryException8.getSuppressed();
        java.lang.Throwable throwable11 = retryOnPrimaryException8.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("", 0);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException14.getSuppressed();
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test8171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8171");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException10.setShard("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (int) (short) 100);
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str15 = retryOnPrimaryException10.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = retryOnPrimaryException10.guessRootCauses();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];][100]] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str15, "[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];][100]] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
    }

    @Test
    public void test8172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8172");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable[] throwableArray4 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray6 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        java.lang.String str8 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "");
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "hi!");
        retryOnPrimaryException15.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException15.getResourceId();
        org.elasticsearch.index.Index index21 = retryOnPrimaryException15.getIndex();
        java.lang.Throwable throwable22 = retryOnPrimaryException15.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException15);
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "");
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "hi!");
        retryOnPrimaryException28.addSuppressed((java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.index.Index index33 = retryOnPrimaryException28.getIndex();
        java.lang.Throwable throwable34 = retryOnPrimaryException28.unwrapCause();
        java.lang.String str35 = retryOnPrimaryException28.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus36 = retryOnPrimaryException28.status();
        org.elasticsearch.index.Index index37 = retryOnPrimaryException28.getIndex();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "");
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.index.Index index46 = retryOnPrimaryException41.getIndex();
        java.lang.Throwable throwable47 = retryOnPrimaryException41.unwrapCause();
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "hi!");
        retryOnPrimaryException52.setShard("", 0);
        boolean boolean56 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException52);
        java.util.List<java.lang.String> strList58 = retryOnPrimaryException52.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray63 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException52.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray63);
        retryOnPrimaryException41.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray63);
        retryOnPrimaryException28.addHeader("RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]", strArray63);
        retryOnPrimaryException23.setResources("RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray63);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.stacktrace.skip]", strArray63);
        org.elasticsearch.index.shard.ShardId shardId69 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput70 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(index21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(index33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertTrue("'" + restStatus36 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus36.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index37);
        org.junit.Assert.assertNull(index46);
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "");
        org.junit.Assert.assertEquals(throwable47.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNull(shardId69);
    }

    @Test
    public void test8173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8173");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable7 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException6.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException6.getShardId();
        java.lang.String str10 = retryOnPrimaryException6.getDetailedMessage();
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException6.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable13 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException6, streamOutput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str10, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test8174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8174");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException2.getHeader("[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];");
        java.lang.String str14 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[]" + "'", str14, "RetryOnPrimaryException[]");
    }

    @Test
    public void test8175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8175");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException10.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable14 = retryOnPrimaryException10.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][52]] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]", throwable14);
        retryOnPrimaryException15.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8176");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        retryOnPrimaryException2.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str9 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "");
        java.lang.String str14 = retryOnPrimaryException13.getResourceType();
        java.lang.String str15 = retryOnPrimaryException13.getResourceType();
        java.lang.Throwable[] throwableArray16 = retryOnPrimaryException13.getSuppressed();
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException13.getHeader("RetryOnPrimaryException[]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        org.elasticsearch.index.Index index24 = null;
        retryOnPrimaryException23.setIndex(index24);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        java.lang.Throwable throwable29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable29);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "hi!");
        retryOnPrimaryException34.setShard("", 0);
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException34);
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException34.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray45 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException34.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray45);
        retryOnPrimaryException30.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray45);
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray45);
        retryOnPrimaryException13.setResources("", strArray45);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray45);
        org.elasticsearch.rest.RestStatus restStatus51 = retryOnPrimaryException2.status();
        java.lang.String str52 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet53 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + restStatus51 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus51.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str52, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(strSet53);
    }

    @Test
    public void test8177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8177");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        retryOnPrimaryException8.setShard(shardId10);
        java.lang.String str12 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException8.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException8.guessRootCauses();
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "retry_on_primary_exception" + "'", str12, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
    }

    @Test
    public void test8178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8178");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId10 = retryOnPrimaryException9.getShardId();
        org.elasticsearch.index.shard.ShardId shardId11 = retryOnPrimaryException9.getShardId();
        retryOnPrimaryException9.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray14 = retryOnPrimaryException9.getSuppressed();
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str16 = retryOnPrimaryException9.getResourceType();
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus19 = retryOnPrimaryException9.status();
        java.lang.Throwable[] throwableArray20 = retryOnPrimaryException9.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "");
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "");
        java.lang.String str30 = retryOnPrimaryException29.getResourceType();
        java.lang.Throwable throwable31 = retryOnPrimaryException29.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.cause.skip", throwable31);
        retryOnPrimaryException24.addSuppressed(throwable31);
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException24.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]");
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException37);
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "hi!");
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "");
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "hi!");
        retryOnPrimaryException47.addSuppressed((java.lang.Throwable) retryOnPrimaryException50);
        java.util.List<java.lang.String> strList53 = null;
        retryOnPrimaryException50.addHeader("hi!", strList53);
        retryOnPrimaryException43.addSuppressed((java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray56 = retryOnPrimaryException50.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "rest.exception.stacktrace.skip");
        retryOnPrimaryException60.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray64 = retryOnPrimaryException60.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray65 = retryOnPrimaryException60.guessRootCauses();
        java.lang.String str66 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException60);
        java.lang.String[] strArray68 = new java.lang.String[] {};
        retryOnPrimaryException60.addHeader("hi!", strArray68);
        retryOnPrimaryException50.addHeader("[[hi!][[hi!][-1]] RetryOnPrimaryException[]] RetryOnPrimaryException[]", strArray68);
        retryOnPrimaryException37.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]", strArray68);
        retryOnPrimaryException9.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray68);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder73 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params74 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder75 = retryOnPrimaryException9.toXContent(xContentBuilder73, params74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus19 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus19.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "");
        org.junit.Assert.assertEquals(throwable31.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray56);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray64);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "retry_on_primary_exception" + "'", str66, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertNotNull(params74);
    }

    @Test
    public void test8179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8179");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "");
        java.lang.String str8 = retryOnPrimaryException7.getResourceType();
        java.lang.Throwable throwable9 = retryOnPrimaryException7.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "rest.exception.cause.skip", throwable9);
        retryOnPrimaryException2.addSuppressed(throwable9);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException16.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "");
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.Index index26 = retryOnPrimaryException21.getIndex();
        java.lang.Throwable throwable27 = retryOnPrimaryException21.unwrapCause();
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "hi!");
        retryOnPrimaryException32.setShard("", 0);
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException32);
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException32.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray43 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException32.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray43);
        retryOnPrimaryException21.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray43);
        retryOnPrimaryException16.addHeader("rest.exception.stacktrace.skip", strArray43);
        retryOnPrimaryException2.setResources("[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]] RetryOnPrimaryException[hi!]", strArray43);
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet49 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNull(index26);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "");
        org.junit.Assert.assertEquals(throwable27.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strSet49);
    }

    @Test
    public void test8180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8180");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray3 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray4 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException2, streamOutput5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray3);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray4);
    }

    @Test
    public void test8181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8181");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str9 = retryOnPrimaryException6.getDetailedMessage();
        java.lang.String str10 = retryOnPrimaryException6.getDetailedMessage();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test8182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8182");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException11.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String str14 = retryOnPrimaryException11.toString();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "");
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException21);
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "");
        org.elasticsearch.rest.RestStatus restStatus35 = retryOnPrimaryException34.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", (java.lang.Throwable) retryOnPrimaryException34);
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException36.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str39 = retryOnPrimaryException36.toString();
        java.lang.String[] strArray44 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException36.setResources("", strArray44);
        retryOnPrimaryException27.addHeader("RetryOnPrimaryException[hi!]", strArray44);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray44);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "");
        java.lang.String str54 = retryOnPrimaryException53.getResourceType();
        java.lang.Throwable[] throwableArray55 = retryOnPrimaryException53.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray56 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException53);
        java.lang.Throwable[] throwableArray57 = retryOnPrimaryException53.getSuppressed();
        java.lang.Throwable throwable58 = retryOnPrimaryException53.getRootCause();
        java.lang.Throwable throwable59 = retryOnPrimaryException53.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException53);
        java.lang.String str61 = retryOnPrimaryException53.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        java.lang.String str63 = retryOnPrimaryException53.toString();
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str14, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus35 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus35.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str39, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray56);
        org.junit.Assert.assertNotNull(throwableArray57);
        org.junit.Assert.assertNotNull(throwable58);
        org.junit.Assert.assertEquals(throwable58.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable58.getMessage(), "");
        org.junit.Assert.assertEquals(throwable58.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable59);
        org.junit.Assert.assertEquals(throwable59.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable59.getMessage(), "");
        org.junit.Assert.assertEquals(throwable59.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "RetryOnPrimaryException[]" + "'", str61, "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "RetryOnPrimaryException[]" + "'", str63, "RetryOnPrimaryException[]");
    }

    @Test
    public void test8183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8183");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        java.lang.String str10 = retryOnPrimaryException6.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException6.setShard(shardId11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable15 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException6.status();
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable15.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8184");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException2.status();
        org.elasticsearch.rest.RestStatus restStatus6 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus6 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus6.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8185");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str10 = retryOnPrimaryException9.toString();
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException9);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException9.getResourceId();
        retryOnPrimaryException9.setIndex("retry_on_primary_exception");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException9);
        retryOnPrimaryException9.setShard("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) ' ');
        java.lang.Throwable throwable19 = retryOnPrimaryException9.getRootCause();
        java.lang.Throwable throwable20 = retryOnPrimaryException9.unwrapCause();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str10, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable20.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][32]] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test8186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8186");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException4.setIndex(index8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str12 = retryOnPrimaryException4.getDetailedMessage();
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.stacktrace.skip");
        retryOnPrimaryException17.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = retryOnPrimaryException17.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = retryOnPrimaryException17.guessRootCauses();
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.String[] strArray25 = new java.lang.String[] {};
        retryOnPrimaryException17.addHeader("hi!", strArray25);
        retryOnPrimaryException4.setResources("RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];", strArray25);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "hi!");
        retryOnPrimaryException31.addSuppressed((java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.index.shard.ShardId shardId36 = retryOnPrimaryException31.getShardId();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        retryOnPrimaryException40.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray44 = retryOnPrimaryException40.guessRootCauses();
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        retryOnPrimaryException40.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList51);
        retryOnPrimaryException40.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException40.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "hi!");
        java.util.List<java.lang.String> strList65 = retryOnPrimaryException64.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "", (java.lang.Throwable) retryOnPrimaryException64);
        org.elasticsearch.rest.RestStatus restStatus67 = retryOnPrimaryException66.status();
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "hi!");
        retryOnPrimaryException71.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray75 = retryOnPrimaryException71.guessRootCauses();
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        retryOnPrimaryException71.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList82);
        retryOnPrimaryException66.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList82);
        retryOnPrimaryException40.addHeader("", (java.util.List<java.lang.String>) strList82);
        java.lang.String[] strArray90 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException40.setResources("RetryOnPrimaryException[]", strArray90);
        retryOnPrimaryException31.addHeader("rest.exception.stacktrace.skip", strArray90);
        retryOnPrimaryException4.addHeader("[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[RetryOnPrimaryException[]]", strArray90);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNull(shardId36);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray44);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertTrue("'" + restStatus67 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus67.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray75);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strArray90);
    }

    @Test
    public void test8187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8187");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException13.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException13.guessRootCauses();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        retryOnPrimaryException13.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList24);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!");
        retryOnPrimaryException30.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray34 = retryOnPrimaryException30.guessRootCauses();
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        retryOnPrimaryException30.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList41);
        retryOnPrimaryException30.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException30.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "hi!");
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException54.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "", (java.lang.Throwable) retryOnPrimaryException54);
        org.elasticsearch.rest.RestStatus restStatus57 = retryOnPrimaryException56.status();
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "hi!");
        retryOnPrimaryException61.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray65 = retryOnPrimaryException61.guessRootCauses();
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        retryOnPrimaryException61.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList72);
        retryOnPrimaryException56.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList72);
        retryOnPrimaryException30.addHeader("", (java.util.List<java.lang.String>) strList72);
        java.lang.String[] strArray80 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException30.setResources("RetryOnPrimaryException[]", strArray80);
        retryOnPrimaryException13.setResources("RetryOnPrimaryException[hi!]", strArray80);
        retryOnPrimaryException9.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray80);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray84 = retryOnPrimaryException9.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus85 = retryOnPrimaryException9.status();
        boolean boolean86 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray34);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertTrue("'" + restStatus57 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus57.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray65);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray84);
        org.junit.Assert.assertTrue("'" + restStatus85 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus85.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
    }

    @Test
    public void test8188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8188");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException8.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str11 = retryOnPrimaryException8.toString();
        java.lang.String[] strArray16 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException8.setResources("", strArray16);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException8.getSuppressed();
        java.lang.Throwable[] throwableArray20 = retryOnPrimaryException8.getSuppressed();
        retryOnPrimaryException8.setShard("[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][35]] RetryOnPrimaryException[RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]]", (int) (short) -1);
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException8);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str11, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test8189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8189");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable9 = retryOnPrimaryException6.getRootCause();
        java.lang.Throwable[] throwableArray10 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "");
        java.lang.String str16 = retryOnPrimaryException15.getResourceType();
        java.lang.Throwable throwable17 = retryOnPrimaryException15.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip", throwable17);
        java.util.Set<java.lang.String> strSet19 = retryOnPrimaryException18.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("", 0);
        org.elasticsearch.index.Index index26 = null;
        retryOnPrimaryException22.setIndex(index26);
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException22.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.Throwable[] throwableArray32 = retryOnPrimaryException6.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(throwableArray32);
    }

    @Test
    public void test8190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8190");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        java.lang.String str5 = retryOnPrimaryException4.getResourceType();
        java.lang.Throwable[] throwableArray6 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.Throwable throwable18 = retryOnPrimaryException17.unwrapCause();
        retryOnPrimaryException17.setShard("[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]", 0);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "");
        org.elasticsearch.rest.RestStatus restStatus26 = retryOnPrimaryException25.status();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "hi!");
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException32.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String str35 = retryOnPrimaryException32.toString();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "");
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "hi!");
        retryOnPrimaryException42.addSuppressed((java.lang.Throwable) retryOnPrimaryException45);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException42);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException42);
        retryOnPrimaryException32.addSuppressed((java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "");
        org.elasticsearch.rest.RestStatus restStatus56 = retryOnPrimaryException55.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "", (java.lang.Throwable) retryOnPrimaryException55);
        java.util.List<java.lang.String> strList59 = retryOnPrimaryException57.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str60 = retryOnPrimaryException57.toString();
        java.lang.String[] strArray65 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException57.setResources("", strArray65);
        retryOnPrimaryException48.addHeader("RetryOnPrimaryException[hi!]", strArray65);
        retryOnPrimaryException25.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray65);
        retryOnPrimaryException17.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", strArray65);
        retryOnPrimaryException7.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[hi!];", strArray65);
        org.elasticsearch.index.Index index71 = retryOnPrimaryException7.getIndex();
        java.lang.Throwable[] throwableArray72 = retryOnPrimaryException7.getSuppressed();
        java.lang.String str73 = retryOnPrimaryException7.toString();
        java.lang.Throwable[] throwableArray74 = retryOnPrimaryException7.getSuppressed();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput75 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException7.writeTo(streamOutput75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus26 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus26.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str35, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus56 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus56.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str60, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNull(index71);
        org.junit.Assert.assertNotNull(throwableArray72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];" + "'", str73, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwableArray74);
    }

    @Test
    public void test8191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8191");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException4.setIndex(index8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str12 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException4.getHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.Throwable throwable16 = retryOnPrimaryException4.getRootCause();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "retry_on_primary_exception" + "'", str12, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable16.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8192");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        retryOnPrimaryException4.setShard(shardId5);
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException8.getHeader("");
        java.lang.String str11 = retryOnPrimaryException8.toString();
        java.lang.Throwable[] throwableArray12 = retryOnPrimaryException8.getSuppressed();
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException8.getHeaderKeys();
        java.lang.Throwable throwable14 = retryOnPrimaryException8.getRootCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder15 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params16 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder17 = retryOnPrimaryException8.toXContent(xContentBuilder15, params16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str11, "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(params16);
    }

    @Test
    public void test8193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8193");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][0]] RetryOnPrimaryException[hi!]");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        boolean boolean4 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "hi!");
        retryOnPrimaryException10.setShard("", 0);
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable17 = retryOnPrimaryException10.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.stacktrace.skip", throwable17);
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException18.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "hi!");
        retryOnPrimaryException29.setShard("", 0);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray34 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.rest.RestStatus restStatus36 = retryOnPrimaryException29.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        boolean boolean45 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException44);
        java.util.List<java.lang.String> strList46 = retryOnPrimaryException44.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException44);
        java.util.List<java.lang.String> strList48 = retryOnPrimaryException47.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "hi!");
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException54.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "", (java.lang.Throwable) retryOnPrimaryException54);
        java.lang.String str57 = retryOnPrimaryException54.toString();
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "hi!");
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException63);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "");
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "hi!");
        retryOnPrimaryException67.addSuppressed((java.lang.Throwable) retryOnPrimaryException70);
        java.util.List<java.lang.String> strList73 = null;
        retryOnPrimaryException70.addHeader("hi!", strList73);
        retryOnPrimaryException63.addSuppressed((java.lang.Throwable) retryOnPrimaryException70);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "", (java.lang.Throwable) retryOnPrimaryException70);
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException76.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray79);
        retryOnPrimaryException54.setResources("rest.exception.stacktrace.skip", strArray79);
        retryOnPrimaryException47.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]", strArray79);
        retryOnPrimaryException38.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray79);
        retryOnPrimaryException18.setResources("[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray79);
        retryOnPrimaryException2.addHeader("[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray79);
        java.lang.String str86 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray34);
        org.junit.Assert.assertTrue("'" + restStatus36 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus36.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str57, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]" + "'", str86, "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]");
    }

    @Test
    public void test8194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8194");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getHeader("retry_on_primary_exception");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable12 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException17.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = retryOnPrimaryException17.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", (java.lang.Throwable) retryOnPrimaryException17);
        java.util.List<java.lang.String> strList24 = retryOnPrimaryException22.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.stacktrace.skip");
        retryOnPrimaryException27.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray31 = retryOnPrimaryException27.guessRootCauses();
        retryOnPrimaryException22.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        throwable12.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str34 = retryOnPrimaryException22.toString();
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException22.getHeader("");
        java.lang.Throwable[] throwableArray37 = retryOnPrimaryException22.getSuppressed();
        java.lang.Throwable throwable38 = retryOnPrimaryException22.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        retryOnPrimaryException44.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray48 = retryOnPrimaryException44.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "", (java.lang.Throwable) retryOnPrimaryException44);
        java.lang.String str50 = retryOnPrimaryException44.getResourceType();
        retryOnPrimaryException44.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (-1));
        java.lang.String str54 = retryOnPrimaryException44.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "hi!");
        java.util.List<java.lang.String> strList63 = retryOnPrimaryException62.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "", (java.lang.Throwable) retryOnPrimaryException62);
        java.lang.String str65 = retryOnPrimaryException62.toString();
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "hi!");
        boolean boolean72 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException71);
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException75 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId73, "");
        org.elasticsearch.index.shard.ShardId shardId76 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException78 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId76, "hi!");
        retryOnPrimaryException75.addSuppressed((java.lang.Throwable) retryOnPrimaryException78);
        java.util.List<java.lang.String> strList81 = null;
        retryOnPrimaryException78.addHeader("hi!", strList81);
        retryOnPrimaryException71.addSuppressed((java.lang.Throwable) retryOnPrimaryException78);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException84 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "", (java.lang.Throwable) retryOnPrimaryException78);
        java.lang.String[] strArray87 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException84.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray87);
        retryOnPrimaryException62.setResources("rest.exception.stacktrace.skip", strArray87);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException90 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException62);
        java.util.List<java.lang.String> strList91 = retryOnPrimaryException62.getResourceId();
        retryOnPrimaryException44.addHeader("hi!", strList91);
        retryOnPrimaryException22.addHeader("RetryOnPrimaryException[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strList91);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray94 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];" + "'", str34, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "");
        org.junit.Assert.assertEquals(throwable38.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str54, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str65, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(strList91);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray94);
    }

    @Test
    public void test8195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8195");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException4.getShardId();
        java.lang.Throwable[] throwableArray8 = retryOnPrimaryException4.getSuppressed();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.getRootCause();
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str11 = retryOnPrimaryException4.toString();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str11, "RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8196");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        java.lang.String str4 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (-1));
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.stacktrace.skip");
        retryOnPrimaryException12.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException12);
        retryOnPrimaryException16.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.util.List<java.lang.String> strList21 = null;
        retryOnPrimaryException16.addHeader("", strList21);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = retryOnPrimaryException16.guessRootCauses();
        java.lang.String str24 = retryOnPrimaryException16.toString();
        java.lang.Throwable throwable25 = retryOnPrimaryException16.getRootCause();
        java.lang.String str26 = retryOnPrimaryException16.getResourceType();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];" + "'", str24, "[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable25.toString(), "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test8197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8197");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.stacktrace.skip");
        retryOnPrimaryException6.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException10.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException10.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException10.setShard("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (int) (short) 1);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "");
        org.elasticsearch.rest.RestStatus restStatus21 = retryOnPrimaryException20.status();
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException20.status();
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException20.getResourceId();
        retryOnPrimaryException20.setIndex("");
        java.lang.Throwable[] throwableArray26 = retryOnPrimaryException20.getSuppressed();
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder28 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params29 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder30 = retryOnPrimaryException20.toXContent(xContentBuilder28, params29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertTrue("'" + restStatus21 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus21.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNotNull(params29);
    }

    @Test
    public void test8198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8198");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str10 = retryOnPrimaryException9.toString();
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException9);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException9.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        retryOnPrimaryException16.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = retryOnPrimaryException16.guessRootCauses();
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        retryOnPrimaryException16.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList27);
        retryOnPrimaryException16.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException16.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        java.util.List<java.lang.String> strList41 = retryOnPrimaryException40.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "", (java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.rest.RestStatus restStatus43 = retryOnPrimaryException42.status();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "hi!");
        retryOnPrimaryException47.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray51 = retryOnPrimaryException47.guessRootCauses();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        retryOnPrimaryException47.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList58);
        retryOnPrimaryException42.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList58);
        retryOnPrimaryException16.addHeader("", (java.util.List<java.lang.String>) strList58);
        retryOnPrimaryException9.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList58);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str10, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertTrue("'" + restStatus43 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus43.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray51);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
    }

    @Test
    public void test8199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8199");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable7 = retryOnPrimaryException4.getRootCause();
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = retryOnPrimaryException12.guessRootCauses();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        retryOnPrimaryException12.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList23);
        retryOnPrimaryException12.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException12.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "hi!");
        java.util.List<java.lang.String> strList37 = retryOnPrimaryException36.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", (java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.rest.RestStatus restStatus39 = retryOnPrimaryException38.status();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "hi!");
        retryOnPrimaryException43.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = retryOnPrimaryException43.guessRootCauses();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        retryOnPrimaryException43.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList54);
        retryOnPrimaryException38.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList54);
        retryOnPrimaryException12.addHeader("", (java.util.List<java.lang.String>) strList54);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList54);
        java.lang.String str60 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.String str61 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId62 = retryOnPrimaryException4.getShardId();
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertTrue("'" + restStatus39 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus39.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str60, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(shardId62);
    }

    @Test
    public void test8200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8200");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        java.lang.String str5 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "hi!");
        retryOnPrimaryException10.setShard("", 0);
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str17 = retryOnPrimaryException16.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable throwable19 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];", (int) (byte) 1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str17, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "[[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];][[[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];][1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test8201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8201");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException8);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException8.getResourceId();
        java.lang.Throwable throwable13 = retryOnPrimaryException8.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.util.List<java.lang.String> strList29 = null;
        retryOnPrimaryException26.addHeader("hi!", strList29);
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException32.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray35);
        retryOnPrimaryException32.setIndex("hi!");
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "");
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "hi!");
        retryOnPrimaryException43.addSuppressed((java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.index.Index index48 = retryOnPrimaryException43.getIndex();
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "hi!");
        retryOnPrimaryException52.setShard("", 0);
        boolean boolean56 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException52);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray57 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException52);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray58 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException52);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        retryOnPrimaryException52.setShard(shardId59);
        retryOnPrimaryException43.addSuppressed((java.lang.Throwable) retryOnPrimaryException52);
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "hi!");
        boolean boolean68 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException67);
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "");
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "hi!");
        retryOnPrimaryException71.addSuppressed((java.lang.Throwable) retryOnPrimaryException74);
        java.util.List<java.lang.String> strList77 = null;
        retryOnPrimaryException74.addHeader("hi!", strList77);
        retryOnPrimaryException67.addSuppressed((java.lang.Throwable) retryOnPrimaryException74);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException80 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "", (java.lang.Throwable) retryOnPrimaryException74);
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException80.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray83);
        retryOnPrimaryException43.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray83);
        retryOnPrimaryException32.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray83);
        retryOnPrimaryException8.setResources("", strArray83);
        org.elasticsearch.index.shard.ShardId shardId88 = null;
        retryOnPrimaryException8.setShard(shardId88);
        retryOnPrimaryException8.setIndex("rest.exception.cause.skip");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException92 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable93 = retryOnPrimaryException92.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException94 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable93);
        java.lang.String str95 = retryOnPrimaryException94.getDetailedMessage();
        java.lang.Throwable[] throwableArray96 = retryOnPrimaryException94.getSuppressed();
        org.elasticsearch.common.io.stream.StreamInput streamInput97 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException98 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException94, streamInput97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable13.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(index48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray57);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray58);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(throwable93);
        org.junit.Assert.assertEquals(throwable93.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable93.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable93.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str95, "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray96);
    }

    @Test
    public void test8202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8202");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable10 = retryOnPrimaryException9.unwrapCause();
        retryOnPrimaryException9.setShard("[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (int) '#');
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable10.toString(), "[[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];][[[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];][35]] RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test8203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8203");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException4.setIndex(index8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str12 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.String str16 = retryOnPrimaryException4.getResourceType();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "retry_on_primary_exception" + "'", str12, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test8204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8204");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException4.setIndex(index5);
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable[] throwableArray8 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException9.guessRootCauses();
        org.elasticsearch.index.Index index11 = retryOnPrimaryException9.getIndex();
        org.elasticsearch.index.shard.ShardId shardId12 = retryOnPrimaryException9.getShardId();
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertNull(shardId12);
    }

    @Test
    public void test8205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8205");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.util.List<java.lang.String> strList16 = null;
        retryOnPrimaryException13.addHeader("hi!", strList16);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException13);
        java.lang.Throwable throwable20 = retryOnPrimaryException13.getRootCause();
        java.lang.String str21 = retryOnPrimaryException13.getDetailedMessage();
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        java.lang.String str28 = retryOnPrimaryException27.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "hi!");
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "");
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        retryOnPrimaryException38.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.util.List<java.lang.String> strList44 = null;
        retryOnPrimaryException41.addHeader("hi!", strList44);
        retryOnPrimaryException34.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "", (java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "hi!");
        boolean boolean54 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException53);
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException53.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.index.shard.ShardId shardId57 = retryOnPrimaryException56.getShardId();
        org.elasticsearch.index.shard.ShardId shardId58 = retryOnPrimaryException56.getShardId();
        retryOnPrimaryException56.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray61 = retryOnPrimaryException56.getSuppressed();
        boolean boolean62 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException56);
        java.lang.String str63 = retryOnPrimaryException56.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus64 = retryOnPrimaryException56.status();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.stacktrace.skip");
        retryOnPrimaryException68.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray72 = retryOnPrimaryException68.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray73 = retryOnPrimaryException68.guessRootCauses();
        java.lang.String str74 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException68);
        java.lang.String[] strArray76 = new java.lang.String[] {};
        retryOnPrimaryException68.addHeader("hi!", strArray76);
        retryOnPrimaryException56.addHeader("[][[][0]] RetryOnPrimaryException[hi!]", strArray76);
        retryOnPrimaryException41.addHeader("", strArray76);
        retryOnPrimaryException27.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", strArray76);
        retryOnPrimaryException13.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray76);
        retryOnPrimaryException13.setShard("[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", 100);
        java.lang.Throwable throwable85 = retryOnPrimaryException13.getRootCause();
        java.lang.Throwable throwable86 = null;
        // The following exception was thrown during execution in test generation
        try {
            throwable85.addSuppressed(throwable86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.toString(), "[[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][100]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(shardId57);
        org.junit.Assert.assertNull(shardId58);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + restStatus64 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus64.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray72);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "retry_on_primary_exception" + "'", str74, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(throwable85);
        org.junit.Assert.assertEquals(throwable85.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable85.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable85.toString(), "[[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][100]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8206");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getHeader("retry_on_primary_exception");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable12 = retryOnPrimaryException4.getRootCause();
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.util.List<java.lang.String> strList24 = retryOnPrimaryException19.getResourceId();
        org.elasticsearch.index.Index index25 = retryOnPrimaryException19.getIndex();
        java.lang.Throwable throwable26 = retryOnPrimaryException19.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String str28 = retryOnPrimaryException27.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "");
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "hi!");
        retryOnPrimaryException32.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.index.Index index37 = retryOnPrimaryException32.getIndex();
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        retryOnPrimaryException41.setShard("", 0);
        boolean boolean45 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray46 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        retryOnPrimaryException41.setShard(shardId48);
        retryOnPrimaryException32.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "");
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "hi!");
        retryOnPrimaryException56.addSuppressed((java.lang.Throwable) retryOnPrimaryException59);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException56);
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        java.lang.Throwable throwable65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable65);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "hi!");
        retryOnPrimaryException70.setShard("", 0);
        boolean boolean74 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException70);
        java.util.List<java.lang.String> strList76 = retryOnPrimaryException70.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray81 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException70.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray81);
        retryOnPrimaryException66.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray81);
        retryOnPrimaryException61.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray81);
        retryOnPrimaryException41.addHeader("[][[][0]] RetryOnPrimaryException[hi!]", strArray81);
        retryOnPrimaryException27.setResources("rest.exception.stacktrace.skip", strArray81);
        retryOnPrimaryException4.setResources("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", strArray81);
        org.elasticsearch.rest.RestStatus restStatus88 = retryOnPrimaryException4.status();
        java.lang.Throwable[] throwableArray89 = retryOnPrimaryException4.getSuppressed();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "");
        org.junit.Assert.assertEquals(throwable26.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(index37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray46);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNull(strList76);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + restStatus88 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus88.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray89);
    }

    @Test
    public void test8207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8207");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.rest.RestStatus restStatus4 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.stacktrace.skip");
        retryOnPrimaryException10.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException14.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.Throwable throwable18 = retryOnPrimaryException14.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        org.elasticsearch.index.Index index23 = null;
        retryOnPrimaryException22.setIndex(index23);
        java.lang.String str25 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.Set<java.lang.String> strSet30 = retryOnPrimaryException29.getHeaderKeys();
        java.lang.String str31 = retryOnPrimaryException29.toString();
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.stacktrace.skip");
        retryOnPrimaryException37.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "");
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "hi!");
        retryOnPrimaryException47.addSuppressed((java.lang.Throwable) retryOnPrimaryException50);
        java.util.List<java.lang.String> strList52 = retryOnPrimaryException47.getResourceId();
        org.elasticsearch.index.Index index53 = retryOnPrimaryException47.getIndex();
        java.lang.Throwable throwable54 = retryOnPrimaryException47.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "hi!");
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "");
        retryOnPrimaryException63.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet67 = retryOnPrimaryException63.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "hi!");
        retryOnPrimaryException71.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray75 = retryOnPrimaryException71.guessRootCauses();
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        retryOnPrimaryException71.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList82);
        retryOnPrimaryException63.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList82);
        retryOnPrimaryException59.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList82);
        retryOnPrimaryException55.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList82);
        retryOnPrimaryException37.addHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList82);
        retryOnPrimaryException29.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList82);
        retryOnPrimaryException22.addHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];", (java.util.List<java.lang.String>) strList82);
        retryOnPrimaryException14.addHeader("[][[][32]] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList82);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList82);
        org.elasticsearch.common.io.stream.StreamInput streamInput93 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception94 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException2, streamInput93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]]");
        org.junit.Assert.assertTrue("'" + restStatus4 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus4.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable18.toString(), "[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "retry_on_primary_exception" + "'", str25, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]" + "'", str31, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNull(index53);
        org.junit.Assert.assertNotNull(throwable54);
        org.junit.Assert.assertEquals(throwable54.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable54.getMessage(), "");
        org.junit.Assert.assertEquals(throwable54.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray75);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
    }

    @Test
    public void test8208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8208");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.Index index9 = retryOnPrimaryException4.getIndex();
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException13.setShard("", 0);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        retryOnPrimaryException13.setShard(shardId20);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "hi!");
        org.elasticsearch.index.Index index26 = null;
        retryOnPrimaryException25.setIndex(index26);
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException25.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus29 = retryOnPrimaryException25.status();
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException25);
        java.lang.String str32 = retryOnPrimaryException31.getResourceType();
        java.lang.String str33 = retryOnPrimaryException31.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "");
        java.lang.String str38 = retryOnPrimaryException37.getResourceType();
        java.lang.Throwable[] throwableArray39 = retryOnPrimaryException37.getSuppressed();
        java.lang.String str40 = retryOnPrimaryException37.getDetailedMessage();
        java.util.List<java.lang.String> strList41 = retryOnPrimaryException37.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.stacktrace.skip");
        retryOnPrimaryException45.setShard("rest.exception.stacktrace.skip", 0);
        java.lang.Throwable throwable49 = retryOnPrimaryException45.unwrapCause();
        java.util.List<java.lang.String> strList50 = retryOnPrimaryException45.getResourceId();
        java.lang.String str51 = retryOnPrimaryException45.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "hi!");
        retryOnPrimaryException55.setShard("", 0);
        org.elasticsearch.index.Index index59 = null;
        retryOnPrimaryException55.setIndex(index59);
        java.lang.Throwable throwable61 = retryOnPrimaryException55.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "");
        org.elasticsearch.rest.RestStatus restStatus67 = retryOnPrimaryException66.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "", (java.lang.Throwable) retryOnPrimaryException66);
        java.util.List<java.lang.String> strList70 = retryOnPrimaryException68.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str71 = retryOnPrimaryException68.toString();
        java.lang.String[] strArray76 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException68.setResources("", strArray76);
        boolean boolean78 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException68);
        java.lang.Throwable[] throwableArray79 = retryOnPrimaryException68.getSuppressed();
        retryOnPrimaryException55.addSuppressed((java.lang.Throwable) retryOnPrimaryException68);
        java.lang.Throwable throwable81 = retryOnPrimaryException68.getRootCause();
        java.util.List<java.lang.String> strList82 = retryOnPrimaryException68.getResourceId();
        retryOnPrimaryException45.addHeader("RetryOnPrimaryException[[hi!][[hi!][-1]] RetryOnPrimaryException[]]", strList82);
        retryOnPrimaryException37.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[hi!]", strList82);
        retryOnPrimaryException31.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strList82);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray86 = retryOnPrimaryException31.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus87 = retryOnPrimaryException31.status();
        java.lang.Throwable throwable88 = retryOnPrimaryException31.unwrapCause();
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + restStatus29 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus29.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str40, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable49.toString(), "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(throwable61);
        org.junit.Assert.assertEquals(throwable61.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable61.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable61.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus67 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus67.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str71, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(throwable81);
        org.junit.Assert.assertEquals(throwable81.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable81.getMessage(), "");
        org.junit.Assert.assertEquals(throwable81.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strList82);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray86);
        org.junit.Assert.assertTrue("'" + restStatus87 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus87.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable88);
        org.junit.Assert.assertEquals(throwable88.getLocalizedMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable88.getMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable88.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test8209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8209");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException14);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable throwable22 = retryOnPrimaryException20.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus23 = retryOnPrimaryException20.status();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "hi!");
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException31);
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException31.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.index.shard.ShardId shardId35 = retryOnPrimaryException34.getShardId();
        org.elasticsearch.index.shard.ShardId shardId36 = retryOnPrimaryException34.getShardId();
        retryOnPrimaryException34.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray39 = retryOnPrimaryException34.getSuppressed();
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException34);
        java.lang.String str41 = retryOnPrimaryException34.getResourceType();
        java.lang.String str42 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException34);
        java.lang.String str44 = retryOnPrimaryException34.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "hi!");
        java.util.List<java.lang.String> strList58 = retryOnPrimaryException57.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "", (java.lang.Throwable) retryOnPrimaryException57);
        java.lang.String str60 = retryOnPrimaryException57.toString();
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "hi!");
        boolean boolean67 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException66);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "");
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "hi!");
        retryOnPrimaryException70.addSuppressed((java.lang.Throwable) retryOnPrimaryException73);
        java.util.List<java.lang.String> strList76 = null;
        retryOnPrimaryException73.addHeader("hi!", strList76);
        retryOnPrimaryException66.addSuppressed((java.lang.Throwable) retryOnPrimaryException73);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException79 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "", (java.lang.Throwable) retryOnPrimaryException73);
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException79.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray82);
        retryOnPrimaryException57.setResources("rest.exception.stacktrace.skip", strArray82);
        retryOnPrimaryException51.setResources("RetryOnPrimaryException[hi!]", strArray82);
        retryOnPrimaryException34.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray82);
        retryOnPrimaryException20.addHeader("RetryOnPrimaryException[[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray82);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder88 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params89 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder90 = retryOnPrimaryException20.toXContent(xContentBuilder88, params89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str7, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus23 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus23.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNull(shardId36);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "retry_on_primary_exception" + "'", str42, "retry_on_primary_exception");
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str60, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(params89);
    }

    @Test
    public void test8210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8210");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable7 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException11.setShard("", 0);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException11.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray22 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException11.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray22);
        retryOnPrimaryException6.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray22);
        retryOnPrimaryException6.setShard("[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][35]] RetryOnPrimaryException[RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]]", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.stacktrace.skip");
        retryOnPrimaryException34.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException34);
        retryOnPrimaryException38.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList41 = retryOnPrimaryException38.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException38);
        java.util.List<java.lang.String> strList44 = retryOnPrimaryException42.getHeader("[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "hi!");
        java.util.List<java.lang.String> strList52 = retryOnPrimaryException51.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "", (java.lang.Throwable) retryOnPrimaryException51);
        java.lang.String str54 = retryOnPrimaryException51.toString();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "hi!");
        boolean boolean61 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException60);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "");
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "hi!");
        retryOnPrimaryException64.addSuppressed((java.lang.Throwable) retryOnPrimaryException67);
        java.util.List<java.lang.String> strList70 = null;
        retryOnPrimaryException67.addHeader("hi!", strList70);
        retryOnPrimaryException60.addSuppressed((java.lang.Throwable) retryOnPrimaryException67);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "", (java.lang.Throwable) retryOnPrimaryException67);
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException73.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray76);
        retryOnPrimaryException51.setResources("rest.exception.stacktrace.skip", strArray76);
        java.lang.String str79 = retryOnPrimaryException51.toString();
        java.lang.Throwable throwable80 = retryOnPrimaryException51.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException81 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable80);
        retryOnPrimaryException42.addSuppressed((java.lang.Throwable) retryOnPrimaryException81);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException81);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput84 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException6.writeTo(streamOutput84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str54, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str79, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable80);
        org.junit.Assert.assertEquals(throwable80.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable80.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable80.toString(), "RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8211");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        retryOnPrimaryException4.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList15);
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException4.getHeader("hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str21 = retryOnPrimaryException4.toString();
        java.lang.String str22 = retryOnPrimaryException4.getResourceType();
        java.lang.Throwable throwable23 = retryOnPrimaryException4.unwrapCause();
        java.util.List<java.lang.String> strList24 = retryOnPrimaryException4.getResourceId();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str21, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList24);
    }

    @Test
    public void test8212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8212");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        retryOnPrimaryException2.setShard(shardId8);
        org.elasticsearch.index.Index index10 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "");
        java.lang.String str15 = retryOnPrimaryException14.getResourceType();
        java.lang.String str16 = retryOnPrimaryException14.getResourceType();
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException14.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException14);
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException14.getResourceId();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        retryOnPrimaryException14.setShard("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) (short) -1);
        java.lang.String str24 = retryOnPrimaryException14.getDetailedMessage();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder25 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params26 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder27 = retryOnPrimaryException14.toXContent(xContentBuilder25, params26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertNull(index10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str24, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(params26);
    }

    @Test
    public void test8213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8213");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip");
        retryOnPrimaryException4.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "RetryOnPrimaryException[]");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException14.getResourceId();
        java.lang.String str16 = retryOnPrimaryException14.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException14.guessRootCauses();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
    }

    @Test
    public void test8214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8214");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.stacktrace.skip");
        retryOnPrimaryException6.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException10.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException17.setIndex(index18);
        java.lang.Throwable throwable20 = retryOnPrimaryException17.getRootCause();
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException17.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException17);
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException17);
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.Throwable[] throwableArray26 = retryOnPrimaryException17.getSuppressed();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput27 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException17.writeTo(streamOutput27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test8215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8215");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str9 = retryOnPrimaryException6.toString();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.util.List<java.lang.String> strList25 = null;
        retryOnPrimaryException22.addHeader("hi!", strList25);
        retryOnPrimaryException15.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException28.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray31);
        retryOnPrimaryException6.setResources("rest.exception.stacktrace.skip", strArray31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]", 0);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder38 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params39 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder40 = retryOnPrimaryException6.toXContent(xContentBuilder38, params39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str9, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(params39);
    }

    @Test
    public void test8216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8216");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "hi!");
        retryOnPrimaryException10.setShard("", 0);
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException10.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException18);
        retryOnPrimaryException18.setShard("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8217");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "");
        java.lang.String str12 = retryOnPrimaryException11.getResourceType();
        java.lang.Throwable throwable13 = retryOnPrimaryException11.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip", throwable13);
        retryOnPrimaryException6.addSuppressed(throwable13);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException16.setIndex("[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        java.lang.String str20 = retryOnPrimaryException16.getDetailedMessage();
        java.lang.Throwable throwable21 = retryOnPrimaryException16.unwrapCause();
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException16.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][100]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "");
        org.junit.Assert.assertEquals(throwable13.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str20, "[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals(throwable21.toString(), "[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(strList23);
    }

    @Test
    public void test8218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8218");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable[] throwableArray10 = retryOnPrimaryException9.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        org.elasticsearch.index.Index index15 = null;
        retryOnPrimaryException14.setIndex(index15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException14.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "");
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!");
        retryOnPrimaryException27.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        java.util.List<java.lang.String> strList33 = null;
        retryOnPrimaryException30.addHeader("hi!", strList33);
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException30);
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException36.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray39);
        retryOnPrimaryException36.setIndex("hi!");
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "");
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "hi!");
        retryOnPrimaryException47.addSuppressed((java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.index.Index index52 = retryOnPrimaryException47.getIndex();
        boolean boolean53 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "hi!");
        retryOnPrimaryException56.setShard("", 0);
        boolean boolean60 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException56);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray61 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException56);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray62 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException56);
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        retryOnPrimaryException56.setShard(shardId63);
        retryOnPrimaryException47.addSuppressed((java.lang.Throwable) retryOnPrimaryException56);
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "hi!");
        boolean boolean72 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException71);
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException75 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId73, "");
        org.elasticsearch.index.shard.ShardId shardId76 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException78 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId76, "hi!");
        retryOnPrimaryException75.addSuppressed((java.lang.Throwable) retryOnPrimaryException78);
        java.util.List<java.lang.String> strList81 = null;
        retryOnPrimaryException78.addHeader("hi!", strList81);
        retryOnPrimaryException71.addSuppressed((java.lang.Throwable) retryOnPrimaryException78);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException84 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "", (java.lang.Throwable) retryOnPrimaryException78);
        java.lang.String[] strArray87 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException84.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray87);
        retryOnPrimaryException47.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray87);
        retryOnPrimaryException36.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray87);
        retryOnPrimaryException14.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray87);
        retryOnPrimaryException9.setResources("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];", strArray87);
        org.elasticsearch.rest.RestStatus restStatus93 = retryOnPrimaryException9.status();
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(index52);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray61);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray62);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + restStatus93 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus93.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8219");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str9 = retryOnPrimaryException6.toString();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.util.List<java.lang.String> strList25 = null;
        retryOnPrimaryException22.addHeader("hi!", strList25);
        retryOnPrimaryException15.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException28.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray31);
        retryOnPrimaryException6.setResources("rest.exception.stacktrace.skip", strArray31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str35 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.util.Set<java.lang.String> strSet36 = retryOnPrimaryException6.getHeaderKeys();
        java.util.List<java.lang.String> strList37 = retryOnPrimaryException6.getResourceId();
        java.lang.Throwable throwable38 = retryOnPrimaryException6.unwrapCause();
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str9, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "retry_on_primary_exception" + "'", str35, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable38.toString(), "RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8220");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        java.util.List<java.lang.String> strList3 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray4 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.Index index5 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "");
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId18 = retryOnPrimaryException13.getShardId();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException22.guessRootCauses();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        retryOnPrimaryException22.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList33);
        retryOnPrimaryException22.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException22.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "hi!");
        java.util.List<java.lang.String> strList47 = retryOnPrimaryException46.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "", (java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.rest.RestStatus restStatus49 = retryOnPrimaryException48.status();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "hi!");
        retryOnPrimaryException53.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray57 = retryOnPrimaryException53.guessRootCauses();
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        retryOnPrimaryException53.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList64);
        retryOnPrimaryException48.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList64);
        retryOnPrimaryException22.addHeader("", (java.util.List<java.lang.String>) strList64);
        java.lang.String[] strArray72 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException22.setResources("RetryOnPrimaryException[]", strArray72);
        retryOnPrimaryException13.addHeader("rest.exception.stacktrace.skip", strArray72);
        retryOnPrimaryException9.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray72);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[]", strArray72);
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (-1));
        java.util.Set<java.lang.String> strSet80 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray81 = retryOnPrimaryException2.getSuppressed();
        retryOnPrimaryException2.setShard("[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][97]] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        java.lang.Throwable[] throwableArray85 = retryOnPrimaryException2.getSuppressed();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray4);
        org.junit.Assert.assertNull(index5);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertTrue("'" + restStatus49 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus49.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray57);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(throwableArray85);
    }

    @Test
    public void test8221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8221");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str11 = retryOnPrimaryException8.toString();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "");
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException18);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable throwable26 = retryOnPrimaryException24.unwrapCause();
        retryOnPrimaryException24.setIndex("rest.exception.cause.skip");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray31 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.String str32 = retryOnPrimaryException30.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus33 = retryOnPrimaryException30.status();
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str11, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + restStatus33 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus33.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8222");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException13.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException13.guessRootCauses();
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        retryOnPrimaryException13.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList24);
        retryOnPrimaryException13.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException13.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException37.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "", (java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.rest.RestStatus restStatus40 = retryOnPrimaryException39.status();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        retryOnPrimaryException44.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray48 = retryOnPrimaryException44.guessRootCauses();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        retryOnPrimaryException44.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException39.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException13.addHeader("", (java.util.List<java.lang.String>) strList55);
        java.lang.String[] strArray63 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException13.setResources("RetryOnPrimaryException[]", strArray63);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray63);
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "");
        retryOnPrimaryException69.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet73 = retryOnPrimaryException69.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId75 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException77 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId75, "hi!");
        retryOnPrimaryException77.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray81 = retryOnPrimaryException77.guessRootCauses();
        java.lang.String[] strArray87 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList88 = new java.util.ArrayList<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        retryOnPrimaryException77.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList88);
        retryOnPrimaryException69.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList88);
        retryOnPrimaryException4.addHeader("hi!", (java.util.List<java.lang.String>) strList88);
        boolean boolean93 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str94 = retryOnPrimaryException4.getResourceType();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertTrue("'" + restStatus40 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus40.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray48);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray81);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertNull(str94);
    }

    @Test
    public void test8223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8223");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException8.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException8);
        retryOnPrimaryException10.setShard("", 10);
        java.lang.String str14 = retryOnPrimaryException10.getDetailedMessage();
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException10.getResourceId();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException3);
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str14, "[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test8224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8224");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.util.List<java.lang.String> strList12 = null;
        retryOnPrimaryException9.addHeader("hi!", strList12);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException9.getHeaderKeys();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException9.getHeader("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        java.util.List<java.lang.String> strList24 = retryOnPrimaryException23.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException23);
        java.lang.String str26 = retryOnPrimaryException23.toString();
        boolean boolean27 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "hi!");
        retryOnPrimaryException32.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = retryOnPrimaryException32.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "", (java.lang.Throwable) retryOnPrimaryException32);
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException37.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException37);
        java.lang.Throwable throwable41 = retryOnPrimaryException23.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "hi!");
        java.util.List<java.lang.String> strList50 = retryOnPrimaryException49.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "", (java.lang.Throwable) retryOnPrimaryException49);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "", (java.lang.Throwable) retryOnPrimaryException51);
        java.lang.Throwable[] throwableArray53 = retryOnPrimaryException52.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus54 = retryOnPrimaryException52.status();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "hi!");
        retryOnPrimaryException58.setShard("", 0);
        java.lang.String str62 = retryOnPrimaryException58.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        retryOnPrimaryException58.setShard(shardId63);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        java.lang.Throwable throwable68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable68);
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "hi!");
        retryOnPrimaryException73.setShard("", 0);
        boolean boolean77 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException73);
        java.util.List<java.lang.String> strList79 = retryOnPrimaryException73.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray84 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException73.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray84);
        retryOnPrimaryException69.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray84);
        retryOnPrimaryException58.setResources("RetryOnPrimaryException[hi!]", strArray84);
        retryOnPrimaryException52.setResources("[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray84);
        retryOnPrimaryException23.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", strArray84);
        retryOnPrimaryException9.addHeader("[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]", strArray84);
        retryOnPrimaryException9.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        boolean boolean93 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus94 = retryOnPrimaryException9.status();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str26, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable41.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(throwableArray53);
        org.junit.Assert.assertTrue("'" + restStatus54 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus54.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
        org.junit.Assert.assertTrue("'" + restStatus94 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus94.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8225");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        java.lang.Throwable throwable16 = retryOnPrimaryException2.getRootCause();
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str19 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable16.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test8226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8226");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        java.lang.String str7 = retryOnPrimaryException6.getResourceType();
        java.lang.Throwable throwable8 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip", throwable8);
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException9.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException12.getShardId();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException12.writeTo(streamOutput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test8227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8227");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException10);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException10.getHeaderKeys();
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException10.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "");
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException18.getResourceId();
        org.elasticsearch.index.Index index24 = retryOnPrimaryException18.getIndex();
        java.lang.Throwable throwable25 = retryOnPrimaryException18.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException18);
        java.lang.Throwable[] throwableArray27 = retryOnPrimaryException26.getSuppressed();
        java.lang.String str28 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException10.getResourceId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(index24);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "");
        org.junit.Assert.assertEquals(throwable25.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "retry_on_primary_exception" + "'", str28, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList30);
    }

    @Test
    public void test8228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8228");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException13.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", (java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.Throwable throwable17 = retryOnPrimaryException15.unwrapCause();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.Throwable throwable19 = retryOnPrimaryException15.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.Index index28 = retryOnPrimaryException23.getIndex();
        java.lang.Throwable throwable29 = retryOnPrimaryException23.getRootCause();
        retryOnPrimaryException23.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        retryOnPrimaryException23.setShard(shardId32);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        org.elasticsearch.index.Index index38 = null;
        retryOnPrimaryException37.setIndex(index38);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        java.lang.Throwable throwable43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable43);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "hi!");
        retryOnPrimaryException48.setShard("", 0);
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException48);
        java.util.List<java.lang.String> strList54 = retryOnPrimaryException48.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray59 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException48.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray59);
        retryOnPrimaryException44.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray59);
        retryOnPrimaryException37.setResources("retry_on_primary_exception", strArray59);
        java.util.List<java.lang.String> strList63 = retryOnPrimaryException37.getResourceId();
        retryOnPrimaryException23.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", strList63);
        retryOnPrimaryException15.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList63);
        retryOnPrimaryException2.addHeader("[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strList63);
        java.util.Set<java.lang.String> strSet67 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index28);
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "");
        org.junit.Assert.assertEquals(throwable29.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertNotNull(strSet67);
    }

    @Test
    public void test8229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8229");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        retryOnPrimaryException2.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet6 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable7);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable7);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "[hi!][[hi!][-1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
    }

    @Test
    public void test8230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8230");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.stacktrace.skip");
        retryOnPrimaryException6.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException10.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException10.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException10.setShard("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (int) (short) 1);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException10.status();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException21.getResourceId();
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder24 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params25 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder26 = retryOnPrimaryException21.toXContent(xContentBuilder24, params25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(params25);
    }

    @Test
    public void test8231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8231");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable[] throwableArray4 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.Index index6 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException9.getResourceId();
        java.lang.String str15 = retryOnPrimaryException9.getDetailedMessage();
        java.lang.Throwable throwable16 = retryOnPrimaryException9.unwrapCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = retryOnPrimaryException9.guessRootCauses();
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException9.getHeader("RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
        org.elasticsearch.common.io.stream.StreamInput streamInput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException22 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException9, streamInput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(index6);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNull(strList20);
    }

    @Test
    public void test8232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8232");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException6.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str9 = retryOnPrimaryException6.toString();
        java.lang.String[] strArray14 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException6.setResources("", strArray14);
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "");
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.Index index26 = retryOnPrimaryException21.getIndex();
        java.lang.Throwable throwable27 = retryOnPrimaryException21.getRootCause();
        retryOnPrimaryException21.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray30 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "hi!");
        java.util.List<java.lang.String> strList37 = retryOnPrimaryException36.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", (java.lang.Throwable) retryOnPrimaryException36);
        java.lang.String str39 = retryOnPrimaryException36.toString();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "hi!");
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException45);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "");
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "hi!");
        retryOnPrimaryException49.addSuppressed((java.lang.Throwable) retryOnPrimaryException52);
        java.util.List<java.lang.String> strList55 = null;
        retryOnPrimaryException52.addHeader("hi!", strList55);
        retryOnPrimaryException45.addSuppressed((java.lang.Throwable) retryOnPrimaryException52);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "", (java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException58.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray61);
        retryOnPrimaryException36.setResources("rest.exception.stacktrace.skip", strArray61);
        retryOnPrimaryException21.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray61);
        retryOnPrimaryException6.addHeader("rest.exception.cause.skip", strArray61);
        java.lang.String str66 = retryOnPrimaryException6.toString();
        boolean boolean67 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str9, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNull(index26);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "");
        org.junit.Assert.assertEquals(throwable27.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray30);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str39, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str66, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test8233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8233");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]");
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (int) '#');
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        java.lang.String str9 = retryOnPrimaryException8.getDetailedMessage();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str11 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str13 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException2.getHeader("");
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException2.getResourceId();
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][35]] RetryOnPrimaryException[RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]]" + "'", str11, "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][35]] RetryOnPrimaryException[RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test8234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8234");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("", 0);
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str15 = retryOnPrimaryException14.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException14);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str3, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str15, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
    }

    @Test
    public void test8235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8235");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        java.lang.String str5 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "hi!");
        retryOnPrimaryException10.setShard("", 0);
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str17 = retryOnPrimaryException16.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable throwable19 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException4.getResourceId();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str17, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList21);
    }

    @Test
    public void test8236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8236");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException8.setShard("", 10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException12.getResourceId();
        org.elasticsearch.common.io.stream.StreamInput streamInput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception16 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException12, streamInput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test8237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8237");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.util.List<java.lang.String> strList14 = null;
        retryOnPrimaryException11.addHeader("hi!", strList14);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String str18 = retryOnPrimaryException17.getResourceType();
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.Throwable throwable20 = retryOnPrimaryException17.unwrapCause();
        org.elasticsearch.common.io.stream.StreamInput streamInput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException22 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException17, streamInput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test8238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8238");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable[] throwableArray4 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray6 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable7);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable7);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(throwableArray4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
    }

    @Test
    public void test8239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8239");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException6.setIndex(index7);
        java.lang.String str9 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray10 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException6.getResourceId();
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.Index index17 = null;
        retryOnPrimaryException6.setIndex(index17);
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException6.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        retryOnPrimaryException6.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str24 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "retry_on_primary_exception" + "'", str9, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "retry_on_primary_exception" + "'", str24, "retry_on_primary_exception");
    }

    @Test
    public void test8240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8240");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        java.lang.String str7 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("", 0);
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String str19 = retryOnPrimaryException18.toString();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        java.lang.Throwable throwable21 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", throwable21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        retryOnPrimaryException22.setIndex("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str7, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str19, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "");
        org.junit.Assert.assertEquals(throwable21.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
    }

    @Test
    public void test8241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8241");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        java.lang.String str5 = retryOnPrimaryException4.getResourceType();
        java.lang.String str6 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "retry_on_primary_exception");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException11);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test8242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8242");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable7 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException12.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", (java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String str15 = retryOnPrimaryException12.toString();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "");
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        retryOnPrimaryException25.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        java.util.List<java.lang.String> strList31 = null;
        retryOnPrimaryException28.addHeader("hi!", strList31);
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException34.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray37);
        retryOnPrimaryException12.setResources("rest.exception.stacktrace.skip", strArray37);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.Index index41 = retryOnPrimaryException12.getIndex();
        java.lang.Throwable throwable42 = retryOnPrimaryException12.getRootCause();
        retryOnPrimaryException12.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable throwable45 = retryOnPrimaryException12.getRootCause();
        java.lang.Throwable throwable46 = retryOnPrimaryException12.getRootCause();
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str15, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(index41);
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable42.toString(), "[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable45.toString(), "[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable46.toString(), "[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8243");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("", 0);
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException8.setIndex(index12);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException8);
        retryOnPrimaryException8.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "");
        org.elasticsearch.rest.RestStatus restStatus23 = retryOnPrimaryException22.status();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "hi!");
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException29.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", (java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String str32 = retryOnPrimaryException29.toString();
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "");
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "hi!");
        retryOnPrimaryException39.addSuppressed((java.lang.Throwable) retryOnPrimaryException42);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException39);
        retryOnPrimaryException29.addSuppressed((java.lang.Throwable) retryOnPrimaryException45);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "");
        org.elasticsearch.rest.RestStatus restStatus53 = retryOnPrimaryException52.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "", (java.lang.Throwable) retryOnPrimaryException52);
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException54.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str57 = retryOnPrimaryException54.toString();
        java.lang.String[] strArray62 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException54.setResources("", strArray62);
        retryOnPrimaryException45.addHeader("RetryOnPrimaryException[hi!]", strArray62);
        retryOnPrimaryException22.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray62);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId67 = retryOnPrimaryException66.getShardId();
        retryOnPrimaryException17.addSuppressed((java.lang.Throwable) retryOnPrimaryException66);
        retryOnPrimaryException66.setShard("[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", 10);
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "hi!");
        org.elasticsearch.index.Index index75 = null;
        retryOnPrimaryException74.setIndex(index75);
        java.lang.Throwable throwable77 = retryOnPrimaryException74.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray78 = retryOnPrimaryException74.guessRootCauses();
        java.lang.Throwable throwable79 = retryOnPrimaryException74.unwrapCause();
        retryOnPrimaryException66.addSuppressed((java.lang.Throwable) retryOnPrimaryException74);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + restStatus23 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus23.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str32, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus53 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus53.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str57, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNull(shardId67);
        org.junit.Assert.assertNotNull(throwable77);
        org.junit.Assert.assertEquals(throwable77.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable77.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable77.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray78);
        org.junit.Assert.assertNotNull(throwable79);
        org.junit.Assert.assertEquals(throwable79.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable79.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable79.toString(), "RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8244");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "");
        java.lang.String str14 = retryOnPrimaryException13.getResourceType();
        java.lang.Throwable throwable15 = retryOnPrimaryException13.unwrapCause();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException13.getHeader("rest.exception.cause.skip");
        java.lang.Throwable throwable18 = retryOnPrimaryException13.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus19 = retryOnPrimaryException13.status();
        java.lang.Throwable[] throwableArray20 = retryOnPrimaryException13.getSuppressed();
        java.lang.String str21 = retryOnPrimaryException13.getDetailedMessage();
        java.lang.Throwable throwable22 = retryOnPrimaryException13.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable22);
        retryOnPrimaryException8.addSuppressed(throwable22);
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + restStatus19 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus19.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
    }

    @Test
    public void test8245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8245");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.stacktrace.skip");
        retryOnPrimaryException6.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException10.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str14 = retryOnPrimaryException10.toString();
        java.lang.String str15 = retryOnPrimaryException10.toString();
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];" + "'", str14, "[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];" + "'", str15, "[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
    }

    @Test
    public void test8246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8246");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.Index index4 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(index4);
        org.junit.Assert.assertNotNull(throwableArray5);
    }

    @Test
    public void test8247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8247");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException7.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str11 = retryOnPrimaryException9.getResourceType();
        java.lang.String str12 = retryOnPrimaryException9.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable14 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException9, streamOutput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];" + "'", str12, "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test8248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8248");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException4.getResourceId();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.util.List<java.lang.String> strList25 = null;
        retryOnPrimaryException22.addHeader("hi!", strList25);
        retryOnPrimaryException15.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException28.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray31);
        retryOnPrimaryException28.setIndex("hi!");
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "");
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "hi!");
        retryOnPrimaryException39.addSuppressed((java.lang.Throwable) retryOnPrimaryException42);
        org.elasticsearch.index.Index index44 = retryOnPrimaryException39.getIndex();
        boolean boolean45 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "hi!");
        retryOnPrimaryException48.setShard("", 0);
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray53 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        retryOnPrimaryException48.setShard(shardId55);
        retryOnPrimaryException39.addSuppressed((java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "hi!");
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException63);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "");
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "hi!");
        retryOnPrimaryException67.addSuppressed((java.lang.Throwable) retryOnPrimaryException70);
        java.util.List<java.lang.String> strList73 = null;
        retryOnPrimaryException70.addHeader("hi!", strList73);
        retryOnPrimaryException63.addSuppressed((java.lang.Throwable) retryOnPrimaryException70);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "", (java.lang.Throwable) retryOnPrimaryException70);
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException76.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray79);
        retryOnPrimaryException39.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray79);
        retryOnPrimaryException28.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray79);
        retryOnPrimaryException4.setResources("", strArray79);
        boolean boolean84 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException86 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException4, streamOutput85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(index44);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray53);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
    }

    @Test
    public void test8249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8249");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.util.List<java.lang.String> strList14 = null;
        retryOnPrimaryException11.addHeader("hi!", strList14);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException17.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray20);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = retryOnPrimaryException17.guessRootCauses();
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
    }

    @Test
    public void test8250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8250");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException4.setIndex(index10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException4.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: [hi!][[hi!][-1]] RetryOnPrimaryException[]");
        org.elasticsearch.index.Index index15 = retryOnPrimaryException4.getIndex();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(index15);
    }

    @Test
    public void test8251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8251");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException2.getResourceId();
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
    }

    @Test
    public void test8252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8252");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException7.getShardId();
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException7.getShardId();
        retryOnPrimaryException7.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray12 = retryOnPrimaryException7.getSuppressed();
        java.lang.Throwable throwable13 = retryOnPrimaryException7.unwrapCause();
        java.lang.String str14 = retryOnPrimaryException7.getResourceType();
        java.lang.String str15 = retryOnPrimaryException7.getResourceType();
        java.lang.Throwable[] throwableArray16 = retryOnPrimaryException7.getSuppressed();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable13.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test8253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8253");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException7.getHeader("[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.stacktrace.skip");
        retryOnPrimaryException15.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = retryOnPrimaryException15.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = retryOnPrimaryException15.guessRootCauses();
        java.lang.String str21 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String str22 = retryOnPrimaryException15.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "");
        java.lang.String str27 = retryOnPrimaryException26.getResourceType();
        java.lang.String str28 = retryOnPrimaryException26.getResourceType();
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException26.getSuppressed();
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException26.getHeader("RetryOnPrimaryException[]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray32 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "hi!");
        org.elasticsearch.index.Index index37 = null;
        retryOnPrimaryException36.setIndex(index37);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        java.lang.Throwable throwable42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable42);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "hi!");
        retryOnPrimaryException47.setShard("", 0);
        boolean boolean51 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException47);
        java.util.List<java.lang.String> strList53 = retryOnPrimaryException47.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray58 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException47.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray58);
        retryOnPrimaryException43.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray58);
        retryOnPrimaryException36.setResources("retry_on_primary_exception", strArray58);
        retryOnPrimaryException26.setResources("", strArray58);
        retryOnPrimaryException15.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray58);
        retryOnPrimaryException7.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray58);
        java.util.List<java.lang.String> strList66 = retryOnPrimaryException7.getHeader("[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][10]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "retry_on_primary_exception" + "'", str21, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str22, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray32);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertNull(strList66);
    }

    @Test
    public void test8254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8254");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "");
        java.lang.String str14 = retryOnPrimaryException13.getResourceType();
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException13.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException13.getSuppressed();
        retryOnPrimaryException13.setShard("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[];", (int) ' ');
        java.lang.String str21 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "hi!");
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException29.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", (java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.rest.RestStatus restStatus32 = retryOnPrimaryException31.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray34 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "");
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "hi!");
        retryOnPrimaryException42.addSuppressed((java.lang.Throwable) retryOnPrimaryException45);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException42);
        org.elasticsearch.rest.RestStatus restStatus48 = retryOnPrimaryException47.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "hi!");
        boolean boolean56 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException55);
        java.util.List<java.lang.String> strList57 = retryOnPrimaryException55.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException55);
        org.elasticsearch.index.shard.ShardId shardId59 = retryOnPrimaryException58.getShardId();
        org.elasticsearch.index.shard.ShardId shardId60 = retryOnPrimaryException58.getShardId();
        retryOnPrimaryException58.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray63 = retryOnPrimaryException58.getSuppressed();
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException58);
        java.lang.String str65 = retryOnPrimaryException58.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "");
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "hi!");
        retryOnPrimaryException69.addSuppressed((java.lang.Throwable) retryOnPrimaryException72);
        org.elasticsearch.index.Index index74 = retryOnPrimaryException69.getIndex();
        java.lang.Throwable throwable75 = retryOnPrimaryException69.unwrapCause();
        boolean boolean76 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException69);
        org.elasticsearch.index.shard.ShardId shardId78 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException80 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId78, "hi!");
        retryOnPrimaryException80.setShard("", 0);
        boolean boolean84 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException80);
        java.util.List<java.lang.String> strList86 = retryOnPrimaryException80.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray91 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException80.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray91);
        retryOnPrimaryException69.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray91);
        retryOnPrimaryException58.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray91);
        retryOnPrimaryException49.setResources("rest.exception.cause.skip", strArray91);
        retryOnPrimaryException33.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", strArray91);
        retryOnPrimaryException13.addHeader("", strArray91);
        retryOnPrimaryException8.setResources("[RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]][[RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]][0]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", strArray91);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "retry_on_primary_exception" + "'", str21, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertTrue("'" + restStatus32 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus32.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray34);
        org.junit.Assert.assertTrue("'" + restStatus48 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus48.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(shardId59);
        org.junit.Assert.assertNull(shardId60);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(index74);
        org.junit.Assert.assertNotNull(throwable75);
        org.junit.Assert.assertEquals(throwable75.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable75.getMessage(), "");
        org.junit.Assert.assertEquals(throwable75.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNull(strList86);
        org.junit.Assert.assertNotNull(strArray91);
    }

    @Test
    public void test8255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8255");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.stacktrace.skip");
        retryOnPrimaryException16.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "");
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "hi!");
        retryOnPrimaryException26.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException26.getResourceId();
        org.elasticsearch.index.Index index32 = retryOnPrimaryException26.getIndex();
        java.lang.Throwable throwable33 = retryOnPrimaryException26.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "hi!");
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "");
        retryOnPrimaryException42.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet46 = retryOnPrimaryException42.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "hi!");
        retryOnPrimaryException50.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = retryOnPrimaryException50.guessRootCauses();
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        retryOnPrimaryException50.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList61);
        retryOnPrimaryException42.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList61);
        retryOnPrimaryException38.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList61);
        retryOnPrimaryException34.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList61);
        retryOnPrimaryException16.addHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList61);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList61);
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "");
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "hi!");
        retryOnPrimaryException71.addSuppressed((java.lang.Throwable) retryOnPrimaryException74);
        org.elasticsearch.index.Index index76 = retryOnPrimaryException71.getIndex();
        boolean boolean77 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException71);
        java.util.List<java.lang.String> strList79 = retryOnPrimaryException71.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException71);
        java.util.List<java.lang.String> strList81 = retryOnPrimaryException2.getResourceId();
        java.lang.String str82 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId83 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException85 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId83, "RetryOnPrimaryException[hi!]");
        java.lang.String str86 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException85);
        java.lang.Throwable throwable87 = retryOnPrimaryException85.getRootCause();
        retryOnPrimaryException2.addSuppressed(throwable87);
        java.lang.String str89 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNull(index32);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "");
        org.junit.Assert.assertEquals(throwable33.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNull(index76);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertNull(strList79);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str82, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "retry_on_primary_exception" + "'", str86, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable87);
        org.junit.Assert.assertEquals(throwable87.getLocalizedMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable87.getMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable87.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "retry_on_primary_exception" + "'", str89, "retry_on_primary_exception");
    }

    @Test
    public void test8256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8256");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException7.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = retryOnPrimaryException7.guessRootCauses();
        org.elasticsearch.index.Index index10 = retryOnPrimaryException7.getIndex();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        org.elasticsearch.index.Index index15 = null;
        retryOnPrimaryException14.setIndex(index15);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        java.lang.Throwable throwable20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable20);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "hi!");
        retryOnPrimaryException25.setShard("", 0);
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException25);
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException25.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray36 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException25.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray36);
        retryOnPrimaryException21.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray36);
        retryOnPrimaryException14.setResources("retry_on_primary_exception", strArray36);
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException14.getResourceId();
        retryOnPrimaryException7.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]", strList40);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; [][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList40);
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "");
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "hi!");
        retryOnPrimaryException47.addSuppressed((java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.index.Index index52 = retryOnPrimaryException47.getIndex();
        java.lang.Throwable throwable53 = retryOnPrimaryException47.unwrapCause();
        java.lang.String str54 = retryOnPrimaryException47.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus55 = retryOnPrimaryException47.status();
        org.elasticsearch.index.Index index56 = retryOnPrimaryException47.getIndex();
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "");
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "hi!");
        retryOnPrimaryException60.addSuppressed((java.lang.Throwable) retryOnPrimaryException63);
        org.elasticsearch.index.Index index65 = retryOnPrimaryException60.getIndex();
        java.lang.Throwable throwable66 = retryOnPrimaryException60.unwrapCause();
        boolean boolean67 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException60);
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "hi!");
        retryOnPrimaryException71.setShard("", 0);
        boolean boolean75 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException71);
        java.util.List<java.lang.String> strList77 = retryOnPrimaryException71.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray82 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException71.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray82);
        retryOnPrimaryException60.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray82);
        retryOnPrimaryException47.addHeader("RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]", strArray82);
        retryOnPrimaryException2.addHeader("[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray82);
        org.elasticsearch.rest.RestStatus restStatus87 = retryOnPrimaryException2.status();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]" + "'", str3, "RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNull(index10);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(index52);
        org.junit.Assert.assertNotNull(throwable53);
        org.junit.Assert.assertEquals(throwable53.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable53.getMessage(), "");
        org.junit.Assert.assertEquals(throwable53.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + restStatus55 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus55.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index56);
        org.junit.Assert.assertNull(index65);
        org.junit.Assert.assertNotNull(throwable66);
        org.junit.Assert.assertEquals(throwable66.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable66.getMessage(), "");
        org.junit.Assert.assertEquals(throwable66.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + restStatus87 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus87.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8257");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException17.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException19);
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException19.getHeaderKeys();
        java.lang.String str22 = retryOnPrimaryException19.toString();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "");
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "hi!");
        retryOnPrimaryException26.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray31 = retryOnPrimaryException29.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "hi!");
        retryOnPrimaryException39.setShard("", 0);
        org.elasticsearch.index.Index index43 = null;
        retryOnPrimaryException39.setIndex(index43);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException39);
        retryOnPrimaryException39.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "hi!");
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException54.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "", (java.lang.Throwable) retryOnPrimaryException54);
        java.lang.String str57 = retryOnPrimaryException54.toString();
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "hi!");
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException63);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "");
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "hi!");
        retryOnPrimaryException67.addSuppressed((java.lang.Throwable) retryOnPrimaryException70);
        java.util.List<java.lang.String> strList73 = null;
        retryOnPrimaryException70.addHeader("hi!", strList73);
        retryOnPrimaryException63.addSuppressed((java.lang.Throwable) retryOnPrimaryException70);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "", (java.lang.Throwable) retryOnPrimaryException70);
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException76.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray79);
        retryOnPrimaryException54.setResources("rest.exception.stacktrace.skip", strArray79);
        retryOnPrimaryException39.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray79);
        retryOnPrimaryException29.addHeader("rest.exception.stacktrace.skip", strArray79);
        retryOnPrimaryException19.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray79);
        retryOnPrimaryException7.setResources("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[hi!];", strArray79);
        java.lang.String str86 = retryOnPrimaryException7.getResourceType();
        java.lang.Throwable throwable87 = retryOnPrimaryException7.unwrapCause();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];" + "'", str22, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray31);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str57, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[hi!];" + "'", str86, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwable87);
        org.junit.Assert.assertEquals(throwable87.getLocalizedMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable87.getMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable87.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test8258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8258");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        java.lang.String str7 = retryOnPrimaryException6.getResourceType();
        java.lang.Throwable throwable8 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip", throwable8);
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException9.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException12.getShardId();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "");
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.util.List<java.lang.String> strList27 = null;
        retryOnPrimaryException24.addHeader("hi!", strList27);
        retryOnPrimaryException17.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray30 = retryOnPrimaryException24.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "");
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException34.addSuppressed((java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.index.Index index39 = retryOnPrimaryException34.getIndex();
        java.lang.Throwable throwable40 = retryOnPrimaryException34.unwrapCause();
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "hi!");
        retryOnPrimaryException45.setShard("", 0);
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException45);
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException45.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray56 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException45.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray56);
        retryOnPrimaryException34.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray56);
        retryOnPrimaryException24.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray56);
        retryOnPrimaryException12.setResources("", strArray56);
        java.util.List<java.lang.String> strList62 = retryOnPrimaryException12.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        retryOnPrimaryException12.setIndex("RetryOnPrimaryException[[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        java.util.Set<java.lang.String> strSet65 = retryOnPrimaryException12.getHeaderKeys();
        java.lang.String str66 = retryOnPrimaryException12.getDetailedMessage();
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray30);
        org.junit.Assert.assertNull(index39);
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "");
        org.junit.Assert.assertEquals(throwable40.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[RetryOnPrimaryException[[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str66, "[RetryOnPrimaryException[[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test8259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8259");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException14);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable throwable22 = retryOnPrimaryException20.unwrapCause();
        java.lang.String str23 = retryOnPrimaryException20.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!");
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        java.util.List<java.lang.String> strList32 = retryOnPrimaryException30.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException30);
        java.util.List<java.lang.String> strList34 = retryOnPrimaryException30.getResourceId();
        java.lang.Throwable throwable35 = retryOnPrimaryException30.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "[][[][0]] RetryOnPrimaryException[hi!]", throwable35);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = retryOnPrimaryException36.guessRootCauses();
        java.lang.String str38 = retryOnPrimaryException36.toString();
        retryOnPrimaryException20.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray40 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException20);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str7, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable35.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str38, "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray40);
    }

    @Test
    public void test8260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8260");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str9 = retryOnPrimaryException2.toString();
        java.lang.String str10 = retryOnPrimaryException2.toString();
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException20.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException22);
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException23.getHeader("");
        java.util.Set<java.lang.String> strSet26 = retryOnPrimaryException23.getHeaderKeys();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "");
        org.elasticsearch.rest.RestStatus restStatus32 = retryOnPrimaryException31.status();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "hi!");
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException38.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "", (java.lang.Throwable) retryOnPrimaryException38);
        java.lang.String str41 = retryOnPrimaryException38.toString();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "");
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "hi!");
        retryOnPrimaryException48.addSuppressed((java.lang.Throwable) retryOnPrimaryException51);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException48);
        retryOnPrimaryException38.addSuppressed((java.lang.Throwable) retryOnPrimaryException54);
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "");
        org.elasticsearch.rest.RestStatus restStatus62 = retryOnPrimaryException61.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "", (java.lang.Throwable) retryOnPrimaryException61);
        java.util.List<java.lang.String> strList65 = retryOnPrimaryException63.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str66 = retryOnPrimaryException63.toString();
        java.lang.String[] strArray71 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException63.setResources("", strArray71);
        retryOnPrimaryException54.addHeader("RetryOnPrimaryException[hi!]", strArray71);
        retryOnPrimaryException31.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray71);
        retryOnPrimaryException23.addHeader("RetryOnPrimaryException[]", strArray71);
        java.lang.Throwable throwable76 = retryOnPrimaryException23.getRootCause();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str9, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str10, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + restStatus32 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus32.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str41, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus62 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus62.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str66, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(throwable76);
        org.junit.Assert.assertEquals(throwable76.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable76.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable76.toString(), "RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8261");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException13.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", (java.lang.Throwable) retryOnPrimaryException13);
        java.lang.String str16 = retryOnPrimaryException13.toString();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException23);
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "");
        org.elasticsearch.rest.RestStatus restStatus37 = retryOnPrimaryException36.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "", (java.lang.Throwable) retryOnPrimaryException36);
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException38.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str41 = retryOnPrimaryException38.toString();
        java.lang.String[] strArray46 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException38.setResources("", strArray46);
        retryOnPrimaryException29.addHeader("RetryOnPrimaryException[hi!]", strArray46);
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray46);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable52 = retryOnPrimaryException51.unwrapCause();
        java.lang.String str53 = retryOnPrimaryException51.toString();
        java.lang.Throwable[] throwableArray54 = retryOnPrimaryException51.getSuppressed();
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException51.getResourceId();
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str16, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus37 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus37.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str41, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(throwable52);
        org.junit.Assert.assertEquals(throwable52.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable52.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable52.toString(), "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];" + "'", str53, "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNull(strList55);
    }

    @Test
    public void test8262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8262");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException4.setIndex(index10);
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException4.status();
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        org.elasticsearch.index.Index index21 = null;
        retryOnPrimaryException20.setIndex(index21);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable[] throwableArray24 = retryOnPrimaryException20.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException20);
        retryOnPrimaryException20.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        java.util.List<java.lang.String> strList28 = retryOnPrimaryException20.getResourceId();
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray30 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException20);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput33 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable34 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException4, streamOutput33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray30);
    }

    @Test
    public void test8263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8263");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        retryOnPrimaryException4.setShard(shardId5);
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException8.getHeader("rest.exception.cause.skip");
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str12 = retryOnPrimaryException8.getDetailedMessage();
        java.lang.Class<?> wildcardClass13 = retryOnPrimaryException8.getClass();
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str12, "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test8264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8264");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException7.setShard("", 0);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException7.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray18 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException7.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray18);
        retryOnPrimaryException3.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray18);
        org.elasticsearch.index.shard.ShardId shardId21 = retryOnPrimaryException3.getShardId();
        org.elasticsearch.index.Index index22 = retryOnPrimaryException3.getIndex();
        retryOnPrimaryException3.setIndex("RetryOnPrimaryException[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNull(index22);
    }

    @Test
    public void test8265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8265");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException6.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str9 = retryOnPrimaryException6.toString();
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException6.status();
        org.elasticsearch.common.io.stream.StreamInput streamInput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception12 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException6, streamInput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str9, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8266");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.util.List<java.lang.String> strList14 = null;
        retryOnPrimaryException11.addHeader("hi!", strList14);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException11);
        retryOnPrimaryException17.setIndex("[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]");
        java.lang.String str20 = retryOnPrimaryException17.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];" + "'", str20, "[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test8267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8267");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.Index index13 = retryOnPrimaryException12.getIndex();
        java.lang.String str14 = retryOnPrimaryException12.toString();
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException12.status();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException12.getResourceId();
        java.lang.String str17 = retryOnPrimaryException12.getResourceType();
        org.junit.Assert.assertNull(index13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];" + "'", str14, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test8268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8268");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.util.List<java.lang.String> strList14 = null;
        retryOnPrimaryException11.addHeader("hi!", strList14);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException17.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray20);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = retryOnPrimaryException17.guessRootCauses();
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException17.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException17.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!");
        retryOnPrimaryException30.setShard("", 0);
        java.lang.String str34 = retryOnPrimaryException30.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        retryOnPrimaryException30.setShard(shardId35);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException41.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray43 = retryOnPrimaryException41.guessRootCauses();
        org.elasticsearch.index.Index index44 = retryOnPrimaryException41.getIndex();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "hi!");
        org.elasticsearch.index.Index index49 = null;
        retryOnPrimaryException48.setIndex(index49);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        java.lang.Throwable throwable54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable54);
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "hi!");
        retryOnPrimaryException59.setShard("", 0);
        boolean boolean63 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException59);
        java.util.List<java.lang.String> strList65 = retryOnPrimaryException59.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray70 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException59.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray70);
        retryOnPrimaryException55.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray70);
        retryOnPrimaryException48.setResources("retry_on_primary_exception", strArray70);
        java.util.List<java.lang.String> strList74 = retryOnPrimaryException48.getResourceId();
        retryOnPrimaryException41.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]", strList74);
        retryOnPrimaryException30.addHeader("hi!", strList74);
        retryOnPrimaryException17.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList74);
        boolean boolean78 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.String str79 = retryOnPrimaryException17.getResourceType();
        java.lang.String str80 = retryOnPrimaryException17.getResourceType();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray43);
        org.junit.Assert.assertNull(index44);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNull(strList65);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertNotNull(strList74);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str79, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str80, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test8269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8269");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException2.setIndex(index10);
        java.lang.Throwable throwable12 = retryOnPrimaryException2.unwrapCause();
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setShard("[[[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", 0);
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str14, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test8270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8270");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId10 = retryOnPrimaryException9.getShardId();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "");
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.Index index18 = retryOnPrimaryException13.getIndex();
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("", 0);
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        retryOnPrimaryException22.setShard(shardId29);
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "hi!");
        org.elasticsearch.index.Index index35 = null;
        retryOnPrimaryException34.setIndex(index35);
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException34.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus38 = retryOnPrimaryException34.status();
        retryOnPrimaryException22.addSuppressed((java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.rest.RestStatus restStatus40 = retryOnPrimaryException22.status();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.Throwable[] throwableArray42 = retryOnPrimaryException9.getSuppressed();
        java.lang.Throwable throwable43 = retryOnPrimaryException9.getRootCause();
        java.lang.Throwable throwable44 = retryOnPrimaryException9.getRootCause();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertNull(index18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertTrue("'" + restStatus38 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus38.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus40 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus40.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable43.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable44.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8271");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.stacktrace.skip");
        retryOnPrimaryException6.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException10.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException19);
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException19.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId23 = retryOnPrimaryException22.getShardId();
        org.elasticsearch.index.shard.ShardId shardId24 = retryOnPrimaryException22.getShardId();
        retryOnPrimaryException22.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray27 = retryOnPrimaryException22.getSuppressed();
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str29 = retryOnPrimaryException22.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus30 = retryOnPrimaryException22.status();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.stacktrace.skip");
        retryOnPrimaryException34.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = retryOnPrimaryException34.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = retryOnPrimaryException34.guessRootCauses();
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException34);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        retryOnPrimaryException34.addHeader("hi!", strArray42);
        retryOnPrimaryException22.addHeader("[][[][0]] RetryOnPrimaryException[hi!]", strArray42);
        retryOnPrimaryException13.setResources("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray42);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "hi!");
        retryOnPrimaryException49.setShard("", 0);
        boolean boolean53 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.Throwable[] throwableArray54 = retryOnPrimaryException49.getSuppressed();
        retryOnPrimaryException49.setShard("[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", 100);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "hi!");
        java.util.List<java.lang.String> strList64 = retryOnPrimaryException63.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "", (java.lang.Throwable) retryOnPrimaryException63);
        java.lang.String str66 = retryOnPrimaryException63.toString();
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "hi!");
        boolean boolean73 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException72);
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId74, "");
        org.elasticsearch.index.shard.ShardId shardId77 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException79 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId77, "hi!");
        retryOnPrimaryException76.addSuppressed((java.lang.Throwable) retryOnPrimaryException79);
        java.util.List<java.lang.String> strList82 = null;
        retryOnPrimaryException79.addHeader("hi!", strList82);
        retryOnPrimaryException72.addSuppressed((java.lang.Throwable) retryOnPrimaryException79);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException85 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "", (java.lang.Throwable) retryOnPrimaryException79);
        java.lang.String[] strArray88 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException85.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray88);
        retryOnPrimaryException63.setResources("rest.exception.stacktrace.skip", strArray88);
        retryOnPrimaryException49.setResources("rest.exception.cause.skip", strArray88);
        retryOnPrimaryException13.setResources("[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]] RetryOnPrimaryException[hi!]", strArray88);
        java.util.List<java.lang.String> strList93 = retryOnPrimaryException13.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException95 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException13, streamOutput94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + restStatus30 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus30.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str66, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(strList93);
    }

    @Test
    public void test8272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8272");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        retryOnPrimaryException4.setShard(shardId5);
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException8.getHeader("");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException8.guessRootCauses();
        java.lang.Throwable throwable12 = retryOnPrimaryException8.unwrapCause();
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException8.getSuppressed();
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable12.toString(), "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwableArray13);
    }

    @Test
    public void test8273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8273");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.util.List<java.lang.String> strList14 = null;
        retryOnPrimaryException11.addHeader("hi!", strList14);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException11.guessRootCauses();
        java.lang.Throwable throwable18 = retryOnPrimaryException11.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String str20 = retryOnPrimaryException19.getResourceType();
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException19.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException19.status();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8274");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("", 0);
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str16 = retryOnPrimaryException8.getResourceType();
        java.lang.Throwable throwable17 = retryOnPrimaryException8.getRootCause();
        java.lang.Throwable[] throwableArray18 = retryOnPrimaryException8.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException8.toString();
        java.util.Set<java.lang.String> strSet22 = retryOnPrimaryException8.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus23 = retryOnPrimaryException8.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str21, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + restStatus23 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus23.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
    }

    @Test
    public void test8275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8275");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException8);
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException9.getHeader("");
        java.lang.String str12 = retryOnPrimaryException9.getDetailedMessage();
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        java.util.Set<java.lang.String> strSet19 = retryOnPrimaryException18.getHeaderKeys();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException18);
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException18);
        java.lang.Throwable throwable22 = retryOnPrimaryException18.unwrapCause();
        retryOnPrimaryException9.addSuppressed(throwable22);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str12, "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip]");
    }

    @Test
    public void test8276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8276");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId10 = retryOnPrimaryException9.getShardId();
        org.elasticsearch.index.shard.ShardId shardId11 = retryOnPrimaryException9.getShardId();
        retryOnPrimaryException9.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray14 = retryOnPrimaryException9.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException9);
        retryOnPrimaryException9.setIndex("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];");
        java.lang.Throwable throwable18 = retryOnPrimaryException9.getRootCause();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8277");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException7.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException7);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException7.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException7.status();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "");
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException16.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable throwable19 = retryOnPrimaryException16.getRootCause();
        java.lang.Throwable[] throwableArray20 = throwable19.getSuppressed();
        java.lang.Throwable[] throwableArray21 = throwable19.getSuppressed();
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable19);
        retryOnPrimaryException7.addSuppressed(throwable19);
        org.elasticsearch.index.shard.ShardId shardId24 = retryOnPrimaryException7.getShardId();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "");
        org.elasticsearch.rest.RestStatus restStatus30 = retryOnPrimaryException29.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", (java.lang.Throwable) retryOnPrimaryException29);
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException31.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str34 = retryOnPrimaryException31.toString();
        java.lang.String[] strArray39 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException31.setResources("", strArray39);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "hi!");
        java.util.List<java.lang.String> strList47 = retryOnPrimaryException46.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "", (java.lang.Throwable) retryOnPrimaryException46);
        java.lang.String str49 = retryOnPrimaryException46.toString();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "");
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "hi!");
        retryOnPrimaryException56.addSuppressed((java.lang.Throwable) retryOnPrimaryException59);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException56);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException56);
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException62);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "");
        org.elasticsearch.rest.RestStatus restStatus70 = retryOnPrimaryException69.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "", (java.lang.Throwable) retryOnPrimaryException69);
        java.util.List<java.lang.String> strList73 = retryOnPrimaryException71.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str74 = retryOnPrimaryException71.toString();
        java.lang.String[] strArray79 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException71.setResources("", strArray79);
        retryOnPrimaryException62.addHeader("RetryOnPrimaryException[hi!]", strArray79);
        retryOnPrimaryException31.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", strArray79);
        java.lang.Throwable[] throwableArray83 = retryOnPrimaryException31.getSuppressed();
        java.lang.Throwable throwable84 = retryOnPrimaryException31.getRootCause();
        java.lang.Throwable[] throwableArray85 = retryOnPrimaryException31.getSuppressed();
        retryOnPrimaryException7.addSuppressed((java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.index.Index index87 = retryOnPrimaryException31.getIndex();
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertTrue("'" + restStatus30 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus30.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str34, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str49, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus70 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus70.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str74, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(throwableArray83);
        org.junit.Assert.assertNotNull(throwable84);
        org.junit.Assert.assertEquals(throwable84.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable84.getMessage(), "");
        org.junit.Assert.assertEquals(throwable84.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertNull(index87);
    }

    @Test
    public void test8278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8278");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException6.getResourceType();
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        retryOnPrimaryException16.setShard("", 0);
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException16);
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException23.getHeader("rest.exception.stacktrace.skip");
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "hi!");
        retryOnPrimaryException29.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        java.util.List<java.lang.String> strList34 = retryOnPrimaryException29.getResourceId();
        org.elasticsearch.index.Index index35 = retryOnPrimaryException29.getIndex();
        java.lang.Throwable throwable36 = retryOnPrimaryException29.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "");
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "hi!");
        retryOnPrimaryException44.addSuppressed((java.lang.Throwable) retryOnPrimaryException47);
        java.util.List<java.lang.String> strList50 = null;
        retryOnPrimaryException47.addHeader("hi!", strList50);
        retryOnPrimaryException40.addSuppressed((java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray53 = retryOnPrimaryException47.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.stacktrace.skip");
        retryOnPrimaryException57.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray61 = retryOnPrimaryException57.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray62 = retryOnPrimaryException57.guessRootCauses();
        java.lang.String str63 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException57);
        java.lang.String[] strArray65 = new java.lang.String[] {};
        retryOnPrimaryException57.addHeader("hi!", strArray65);
        retryOnPrimaryException47.addHeader("[[hi!][[hi!][-1]] RetryOnPrimaryException[]] RetryOnPrimaryException[]", strArray65);
        retryOnPrimaryException29.setResources("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray65);
        retryOnPrimaryException23.setResources("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", strArray65);
        retryOnPrimaryException6.setResources("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[];", strArray65);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(index35);
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "");
        org.junit.Assert.assertEquals(throwable36.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray53);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray61);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "retry_on_primary_exception" + "'", str63, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray65);
    }

    @Test
    public void test8279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8279");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException6.setIndex(index10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable17 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "");
        java.lang.String str26 = retryOnPrimaryException25.getResourceType();
        java.lang.Throwable throwable27 = retryOnPrimaryException25.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip", throwable27);
        java.util.Set<java.lang.String> strSet29 = retryOnPrimaryException28.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus30 = retryOnPrimaryException28.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.index.shard.ShardId shardId32 = retryOnPrimaryException31.getShardId();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "hi!");
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "");
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "hi!");
        retryOnPrimaryException40.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        java.util.List<java.lang.String> strList46 = null;
        retryOnPrimaryException43.addHeader("hi!", strList46);
        retryOnPrimaryException36.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = retryOnPrimaryException43.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "");
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "hi!");
        retryOnPrimaryException53.addSuppressed((java.lang.Throwable) retryOnPrimaryException56);
        org.elasticsearch.index.Index index58 = retryOnPrimaryException53.getIndex();
        java.lang.Throwable throwable59 = retryOnPrimaryException53.unwrapCause();
        boolean boolean60 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "hi!");
        retryOnPrimaryException64.setShard("", 0);
        boolean boolean68 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException64);
        java.util.List<java.lang.String> strList70 = retryOnPrimaryException64.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray75 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException64.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray75);
        retryOnPrimaryException53.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray75);
        retryOnPrimaryException43.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray75);
        retryOnPrimaryException31.setResources("", strArray75);
        retryOnPrimaryException6.setResources("RetryOnPrimaryException[]", strArray75);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "");
        org.junit.Assert.assertEquals(throwable27.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + restStatus30 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus30.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertNull(index58);
        org.junit.Assert.assertNotNull(throwable59);
        org.junit.Assert.assertEquals(throwable59.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable59.getMessage(), "");
        org.junit.Assert.assertEquals(throwable59.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(strList70);
        org.junit.Assert.assertNotNull(strArray75);
    }

    @Test
    public void test8280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8280");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]");
        java.lang.String str5 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException12);
        java.lang.Throwable throwable15 = retryOnPrimaryException14.unwrapCause();
        retryOnPrimaryException14.setShard("[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]", 0);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "");
        org.elasticsearch.rest.RestStatus restStatus23 = retryOnPrimaryException22.status();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "hi!");
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException29.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", (java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String str32 = retryOnPrimaryException29.toString();
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "");
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "hi!");
        retryOnPrimaryException39.addSuppressed((java.lang.Throwable) retryOnPrimaryException42);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException39);
        retryOnPrimaryException29.addSuppressed((java.lang.Throwable) retryOnPrimaryException45);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "");
        org.elasticsearch.rest.RestStatus restStatus53 = retryOnPrimaryException52.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "", (java.lang.Throwable) retryOnPrimaryException52);
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException54.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str57 = retryOnPrimaryException54.toString();
        java.lang.String[] strArray62 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException54.setResources("", strArray62);
        retryOnPrimaryException45.addHeader("RetryOnPrimaryException[hi!]", strArray62);
        retryOnPrimaryException22.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray62);
        retryOnPrimaryException14.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", strArray62);
        java.lang.String str67 = retryOnPrimaryException14.getResourceType();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus23 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus23.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str32, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus53 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus53.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str57, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];" + "'", str67, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test8281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8281");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException7.getShardId();
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException7.getShardId();
        retryOnPrimaryException7.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray12 = retryOnPrimaryException7.getSuppressed();
        java.lang.Throwable throwable13 = retryOnPrimaryException7.unwrapCause();
        java.lang.Throwable[] throwableArray14 = retryOnPrimaryException7.getSuppressed();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable13.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwableArray14);
    }

    @Test
    public void test8282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8282");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.stacktrace.skip");
        retryOnPrimaryException6.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException10.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable throwable13 = retryOnPrimaryException10.unwrapCause();
        java.lang.String str14 = retryOnPrimaryException10.toString();
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException10.getSuppressed();
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable13.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];" + "'", str14, "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test8283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8283");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.Index index9 = retryOnPrimaryException4.getIndex();
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException13.setShard("", 0);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        retryOnPrimaryException13.setShard(shardId20);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "hi!");
        org.elasticsearch.index.Index index26 = null;
        retryOnPrimaryException25.setIndex(index26);
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException25.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus29 = retryOnPrimaryException25.status();
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "hi!");
        retryOnPrimaryException34.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = retryOnPrimaryException34.guessRootCauses();
        retryOnPrimaryException31.addSuppressed((java.lang.Throwable) retryOnPrimaryException34);
        java.util.List<java.lang.String> strList41 = retryOnPrimaryException34.getHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException34.getResourceId();
        retryOnPrimaryException34.setShard("[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][100]] RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", 1);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder46 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params47 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder48 = retryOnPrimaryException34.toXContent(xContentBuilder46, params47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + restStatus29 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus29.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(params47);
    }

    @Test
    public void test8284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8284");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean4 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = retryOnPrimaryException2.getShardId();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception9 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException2, streamOutput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertNull(strList7);
    }

    @Test
    public void test8285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8285");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException6.setIndex(index10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException15.getResourceId();
        java.lang.String str18 = retryOnPrimaryException15.getDetailedMessage();
        retryOnPrimaryException15.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String str22 = retryOnPrimaryException15.toString();
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str18, "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]] RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];" + "'", str22, "[RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]] RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test8286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8286");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        org.elasticsearch.index.Index index6 = null;
        retryOnPrimaryException2.setIndex(index6);
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
    }

    @Test
    public void test8287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8287");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException6.getHeader("retry_on_primary_exception");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable14 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = retryOnPrimaryException19.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.util.List<java.lang.String> strList26 = retryOnPrimaryException24.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.stacktrace.skip");
        retryOnPrimaryException29.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = retryOnPrimaryException29.guessRootCauses();
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        throwable14.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", throwable14);
        java.lang.Throwable throwable37 = retryOnPrimaryException36.getRootCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException39 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException36, streamOutput38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable37.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8288");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException8.setShard("", 10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "");
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException16.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.stacktrace.skip");
        retryOnPrimaryException22.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException22.guessRootCauses();
        java.lang.Throwable throwable27 = retryOnPrimaryException22.unwrapCause();
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException22);
        retryOnPrimaryException22.setShard("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (int) (short) 1);
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException16.getResourceId();
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable27.toString(), "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];][1]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(strList33);
    }

    @Test
    public void test8289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8289");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        retryOnPrimaryException8.setShard(shardId10);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.Index index19 = retryOnPrimaryException14.getIndex();
        java.lang.Throwable throwable20 = retryOnPrimaryException14.unwrapCause();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException14);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException8.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(index19);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
        org.junit.Assert.assertNull(strList25);
    }

    @Test
    public void test8290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8290");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable10 = retryOnPrimaryException9.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException14.status();
        org.elasticsearch.index.shard.ShardId shardId16 = retryOnPrimaryException14.getShardId();
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String str18 = retryOnPrimaryException14.toString();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException24.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String str27 = retryOnPrimaryException24.toString();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "hi!");
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "");
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        retryOnPrimaryException37.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        java.util.List<java.lang.String> strList43 = null;
        retryOnPrimaryException40.addHeader("hi!", strList43);
        retryOnPrimaryException33.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", (java.lang.Throwable) retryOnPrimaryException40);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException46.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray49);
        retryOnPrimaryException24.setResources("rest.exception.stacktrace.skip", strArray49);
        java.lang.String str52 = retryOnPrimaryException24.toString();
        java.lang.Throwable throwable53 = retryOnPrimaryException24.getRootCause();
        java.util.List<java.lang.String> strList54 = retryOnPrimaryException24.getResourceId();
        retryOnPrimaryException14.addHeader("hi!", strList54);
        retryOnPrimaryException9.addHeader("[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList54);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder57 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder59 = retryOnPrimaryException9.toXContent(xContentBuilder57, params58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]" + "'", str18, "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]");
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str27, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str52, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable53);
        org.junit.Assert.assertEquals(throwable53.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable53.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable53.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strList54);
    }

    @Test
    public void test8291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8291");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException11.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException19);
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException19.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId23 = retryOnPrimaryException22.getShardId();
        org.elasticsearch.index.shard.ShardId shardId24 = retryOnPrimaryException22.getShardId();
        retryOnPrimaryException22.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray27 = retryOnPrimaryException22.getSuppressed();
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str29 = retryOnPrimaryException22.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "");
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "hi!");
        retryOnPrimaryException33.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.Index index38 = retryOnPrimaryException33.getIndex();
        java.lang.Throwable throwable39 = retryOnPrimaryException33.unwrapCause();
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        retryOnPrimaryException44.setShard("", 0);
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException44);
        java.util.List<java.lang.String> strList50 = retryOnPrimaryException44.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray55 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException44.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray55);
        retryOnPrimaryException33.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray55);
        retryOnPrimaryException22.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray55);
        retryOnPrimaryException13.setResources("rest.exception.cause.skip", strArray55);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput60 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException13.writeTo(streamOutput60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(index38);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "");
        org.junit.Assert.assertEquals(throwable39.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strArray55);
    }

    @Test
    public void test8292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8292");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable7 = retryOnPrimaryException4.getRootCause();
        java.lang.Throwable[] throwableArray8 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "");
        java.lang.String str14 = retryOnPrimaryException13.getResourceType();
        java.lang.Throwable throwable15 = retryOnPrimaryException13.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip", throwable15);
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException16.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        retryOnPrimaryException20.setShard("", 0);
        org.elasticsearch.index.Index index24 = null;
        retryOnPrimaryException20.setIndex(index24);
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException20.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str30 = retryOnPrimaryException4.getDetailedMessage();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str30, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test8293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8293");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.stacktrace.skip");
        retryOnPrimaryException6.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException10.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException10);
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException12.getHeader("RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
        java.lang.String str15 = retryOnPrimaryException12.getDetailedMessage();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder16 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params17 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder18 = retryOnPrimaryException12.toXContent(xContentBuilder16, params17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str15, "RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(params17);
    }

    @Test
    public void test8294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8294");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable9 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str11 = retryOnPrimaryException10.getDetailedMessage();
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException10.getHeaderKeys();
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId14 = retryOnPrimaryException10.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException10.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = retryOnPrimaryException10.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException18 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException10, streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str11, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
    }

    @Test
    public void test8295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8295");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException7.getResourceId();
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException7.getHeaderKeys();
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException7.getResourceId();
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException7.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test8296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8296");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.stacktrace.skip");
        retryOnPrimaryException13.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        retryOnPrimaryException20.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException20.guessRootCauses();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        retryOnPrimaryException20.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList31);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException37.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = retryOnPrimaryException37.guessRootCauses();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        retryOnPrimaryException37.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList48);
        retryOnPrimaryException37.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException37.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "hi!");
        java.util.List<java.lang.String> strList62 = retryOnPrimaryException61.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "", (java.lang.Throwable) retryOnPrimaryException61);
        org.elasticsearch.rest.RestStatus restStatus64 = retryOnPrimaryException63.status();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "hi!");
        retryOnPrimaryException68.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray72 = retryOnPrimaryException68.guessRootCauses();
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        retryOnPrimaryException68.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException63.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException37.addHeader("", (java.util.List<java.lang.String>) strList79);
        java.lang.String[] strArray87 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException37.setResources("RetryOnPrimaryException[]", strArray87);
        retryOnPrimaryException20.setResources("RetryOnPrimaryException[hi!]", strArray87);
        retryOnPrimaryException13.setResources("hi!", strArray87);
        retryOnPrimaryException8.setResources("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray87);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException92 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException93 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException92);
        boolean boolean94 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException93);
        java.util.List<java.lang.String> strList95 = retryOnPrimaryException93.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput96 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException93.writeTo(streamOutput96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertTrue("'" + restStatus64 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus64.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray72);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(strList95);
    }

    @Test
    public void test8297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8297");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "");
        java.lang.String str15 = retryOnPrimaryException14.getResourceType();
        java.lang.Throwable throwable16 = retryOnPrimaryException14.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip", throwable16);
        retryOnPrimaryException9.addSuppressed(throwable16);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException9);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        java.lang.Throwable throwable21 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable23 = org.elasticsearch.ElasticsearchException.writeStackTraces(throwable21, streamOutput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable21.toString(), "RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8298");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.Index index13 = retryOnPrimaryException8.getIndex();
        java.lang.Throwable throwable14 = retryOnPrimaryException8.unwrapCause();
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException8.getHeaderKeys();
        java.lang.String str16 = retryOnPrimaryException8.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "");
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        retryOnPrimaryException20.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.Index index25 = retryOnPrimaryException20.getIndex();
        java.lang.Throwable throwable26 = retryOnPrimaryException20.unwrapCause();
        boolean boolean27 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "hi!");
        retryOnPrimaryException31.setShard("", 0);
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException31);
        java.util.List<java.lang.String> strList37 = retryOnPrimaryException31.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray42 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException31.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray42);
        retryOnPrimaryException20.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray42);
        retryOnPrimaryException8.addHeader("RetryOnPrimaryException[hi!]", strArray42);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray42);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException47.setShard("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (short) 100);
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException47.getResourceId();
        org.junit.Assert.assertNull(index13);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "");
        org.junit.Assert.assertEquals(throwable26.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNull(strList51);
    }

    @Test
    public void test8299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8299");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getHeader("retry_on_primary_exception");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable12 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException17.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = retryOnPrimaryException17.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", (java.lang.Throwable) retryOnPrimaryException17);
        java.util.List<java.lang.String> strList24 = retryOnPrimaryException22.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.stacktrace.skip");
        retryOnPrimaryException27.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray31 = retryOnPrimaryException27.guessRootCauses();
        retryOnPrimaryException22.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        throwable12.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str34 = retryOnPrimaryException22.toString();
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException22.getResourceId();
        java.lang.Throwable[] throwableArray36 = retryOnPrimaryException22.getSuppressed();
        java.lang.String str37 = retryOnPrimaryException22.getResourceType();
        java.util.List<java.lang.String> strList39 = null;
        retryOnPrimaryException22.addHeader("RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]", strList39);
        java.lang.Throwable throwable41 = retryOnPrimaryException22.getRootCause();
        org.elasticsearch.rest.RestStatus restStatus42 = retryOnPrimaryException22.status();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];" + "'", str34, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable41.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus42 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus42.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8300");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.getRootCause();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str6 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException12.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", (java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException14.status();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = retryOnPrimaryException19.guessRootCauses();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        retryOnPrimaryException19.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList30);
        retryOnPrimaryException14.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList30);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList30);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "");
        org.elasticsearch.rest.RestStatus restStatus44 = retryOnPrimaryException43.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException43);
        retryOnPrimaryException45.setShard("", 10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException45);
        java.lang.String str50 = retryOnPrimaryException49.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException49);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder52 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params53 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder54 = retryOnPrimaryException49.toXContent(xContentBuilder52, params53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable3.toString(), "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]" + "'", str6, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + restStatus44 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus44.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];" + "'", str50, "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(params53);
    }

    @Test
    public void test8301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8301");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.stacktrace.skip");
        retryOnPrimaryException6.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException10.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException19);
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException19.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId23 = retryOnPrimaryException22.getShardId();
        org.elasticsearch.index.shard.ShardId shardId24 = retryOnPrimaryException22.getShardId();
        retryOnPrimaryException22.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray27 = retryOnPrimaryException22.getSuppressed();
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str29 = retryOnPrimaryException22.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus30 = retryOnPrimaryException22.status();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.stacktrace.skip");
        retryOnPrimaryException34.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = retryOnPrimaryException34.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = retryOnPrimaryException34.guessRootCauses();
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException34);
        java.lang.String[] strArray42 = new java.lang.String[] {};
        retryOnPrimaryException34.addHeader("hi!", strArray42);
        retryOnPrimaryException22.addHeader("[][[][0]] RetryOnPrimaryException[hi!]", strArray42);
        retryOnPrimaryException13.setResources("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray42);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray46 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException13);
        boolean boolean47 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertTrue("'" + restStatus30 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus30.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test8302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8302");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[hi!]");
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("retry_on_primary_exception", 100);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "");
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!");
        retryOnPrimaryException27.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.Index index32 = retryOnPrimaryException27.getIndex();
        java.lang.Throwable throwable33 = retryOnPrimaryException27.unwrapCause();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException27.getHeaderKeys();
        java.lang.String str35 = retryOnPrimaryException27.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "");
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "hi!");
        retryOnPrimaryException39.addSuppressed((java.lang.Throwable) retryOnPrimaryException42);
        org.elasticsearch.index.Index index44 = retryOnPrimaryException39.getIndex();
        java.lang.Throwable throwable45 = retryOnPrimaryException39.unwrapCause();
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "hi!");
        retryOnPrimaryException50.setShard("", 0);
        boolean boolean54 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException50);
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException50.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray61 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException50.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray61);
        retryOnPrimaryException39.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray61);
        retryOnPrimaryException27.addHeader("RetryOnPrimaryException[hi!]", strArray61);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "");
        retryOnPrimaryException69.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet73 = retryOnPrimaryException69.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId75 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException77 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId75, "hi!");
        retryOnPrimaryException77.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray81 = retryOnPrimaryException77.guessRootCauses();
        java.lang.String[] strArray87 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList88 = new java.util.ArrayList<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        retryOnPrimaryException77.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList88);
        retryOnPrimaryException69.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList88);
        retryOnPrimaryException65.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList88);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList88);
        java.lang.Throwable throwable94 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray95 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable94);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index32);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "");
        org.junit.Assert.assertEquals(throwable33.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(index44);
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "");
        org.junit.Assert.assertEquals(throwable45.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray81);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNotNull(throwable94);
        org.junit.Assert.assertEquals(throwable94.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable94.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable94.toString(), "[retry_on_primary_exception][[retry_on_primary_exception][100]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray95);
    }

    @Test
    public void test8303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8303");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        retryOnPrimaryException4.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList15);
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException4.getHeader("hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException4.getRootCause();
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable22.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
    }

    @Test
    public void test8304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8304");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.stacktrace.skip");
        retryOnPrimaryException6.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.Set<java.lang.String> strSet16 = retryOnPrimaryException15.getHeaderKeys();
        java.lang.String str17 = retryOnPrimaryException15.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.rest.RestStatus restStatus21 = retryOnPrimaryException10.status();
        java.lang.Throwable throwable22 = retryOnPrimaryException10.unwrapCause();
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable22);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]" + "'", str17, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        org.junit.Assert.assertTrue("'" + restStatus21 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus21.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
    }

    @Test
    public void test8305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8305");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str11 = retryOnPrimaryException8.toString();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "");
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.util.List<java.lang.String> strList27 = null;
        retryOnPrimaryException24.addHeader("hi!", strList27);
        retryOnPrimaryException17.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException30.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray33);
        retryOnPrimaryException8.setResources("rest.exception.stacktrace.skip", strArray33);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        java.util.List<java.lang.String> strList37 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        java.lang.Throwable throwable43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable43);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "hi!");
        retryOnPrimaryException48.setShard("", 0);
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException48);
        java.util.List<java.lang.String> strList54 = retryOnPrimaryException48.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray59 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException48.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray59);
        retryOnPrimaryException44.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray59);
        retryOnPrimaryException8.setResources("RetryOnPrimaryException[]", strArray59);
        retryOnPrimaryException8.setShard("[] RetryOnPrimaryException[rest.exception.stacktrace.skip]", (int) (byte) 100);
        java.lang.Throwable throwable66 = retryOnPrimaryException8.unwrapCause();
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str11, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strList37);
        org.junit.Assert.assertNotNull(strList39);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(throwable66);
        org.junit.Assert.assertEquals(throwable66.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable66.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable66.toString(), "[[] RetryOnPrimaryException[rest.exception.stacktrace.skip]][[[] RetryOnPrimaryException[rest.exception.stacktrace.skip]][100]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8306");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "");
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException16.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", (java.lang.Throwable) retryOnPrimaryException16);
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException18.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str21 = retryOnPrimaryException18.toString();
        java.lang.String[] strArray26 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException18.setResources("", strArray26);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray26);
        java.lang.String str29 = retryOnPrimaryException2.getResourceType();
        java.lang.String str30 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str31 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("retry_on_primary_exception", (int) 'a');
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str21, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str29, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str30, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "retry_on_primary_exception" + "'", str31, "retry_on_primary_exception");
    }

    @Test
    public void test8307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8307");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String str9 = retryOnPrimaryException7.getResourceType();
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String str11 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException7);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException7.getHeaderKeys();
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "retry_on_primary_exception" + "'", str11, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test8308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8308");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable7 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException12.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", (java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String str15 = retryOnPrimaryException12.toString();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "");
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        retryOnPrimaryException25.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        java.util.List<java.lang.String> strList31 = null;
        retryOnPrimaryException28.addHeader("hi!", strList31);
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException34.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray37);
        retryOnPrimaryException12.setResources("rest.exception.stacktrace.skip", strArray37);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.Index index41 = retryOnPrimaryException12.getIndex();
        java.util.Set<java.lang.String> strSet42 = retryOnPrimaryException12.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str15, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(index41);
        org.junit.Assert.assertNotNull(strSet42);
    }

    @Test
    public void test8309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8309");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (short) 10);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test8310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8310");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray3 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean4 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException9.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable[] throwableArray12 = retryOnPrimaryException9.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException9.guessRootCauses();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.getRootCause();
        java.lang.Class<?> wildcardClass18 = throwable17.getClass();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray3);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test8311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8311");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];", (int) (short) 1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "[RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];][1]] RetryOnPrimaryException[]");
    }

    @Test
    public void test8312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8312");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException7.getResourceId();
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException7.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId10 = retryOnPrimaryException7.getShardId();
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException7.getHeader("RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]]; nested: RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException7.getSuppressed();
        java.lang.Throwable throwable14 = retryOnPrimaryException7.unwrapCause();
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException7.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test8313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8313");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        retryOnPrimaryException2.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "RetryOnPrimaryException[]");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException15.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException15.guessRootCauses();
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException15.getResourceId();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "hi!");
        java.util.List<java.lang.String> strList28 = retryOnPrimaryException27.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", (java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException29);
        java.lang.Throwable[] throwableArray31 = retryOnPrimaryException30.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "hi!");
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException38.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        retryOnPrimaryException40.setShard(shardId42);
        java.lang.String str44 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.index.Index index45 = retryOnPrimaryException40.getIndex();
        retryOnPrimaryException30.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.index.shard.ShardId shardId47 = retryOnPrimaryException30.getShardId();
        org.elasticsearch.rest.RestStatus restStatus48 = retryOnPrimaryException30.status();
        org.elasticsearch.rest.RestStatus restStatus49 = retryOnPrimaryException30.status();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "");
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "hi!");
        retryOnPrimaryException53.addSuppressed((java.lang.Throwable) retryOnPrimaryException56);
        org.elasticsearch.index.Index index58 = retryOnPrimaryException53.getIndex();
        boolean boolean59 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "hi!");
        retryOnPrimaryException62.setShard("", 0);
        boolean boolean66 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException62);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray67 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException62);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray68 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException62);
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        retryOnPrimaryException62.setShard(shardId69);
        retryOnPrimaryException53.addSuppressed((java.lang.Throwable) retryOnPrimaryException62);
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        org.elasticsearch.index.shard.ShardId shardId75 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException77 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId75, "hi!");
        boolean boolean78 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException77);
        org.elasticsearch.index.shard.ShardId shardId79 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException81 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId79, "");
        org.elasticsearch.index.shard.ShardId shardId82 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException84 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId82, "hi!");
        retryOnPrimaryException81.addSuppressed((java.lang.Throwable) retryOnPrimaryException84);
        java.util.List<java.lang.String> strList87 = null;
        retryOnPrimaryException84.addHeader("hi!", strList87);
        retryOnPrimaryException77.addSuppressed((java.lang.Throwable) retryOnPrimaryException84);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException90 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId73, "", (java.lang.Throwable) retryOnPrimaryException84);
        java.lang.String[] strArray93 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException90.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray93);
        retryOnPrimaryException53.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray93);
        retryOnPrimaryException30.addHeader("", strArray93);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray93);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "retry_on_primary_exception" + "'", str44, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index45);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertTrue("'" + restStatus48 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus48.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus49 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus49.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index58);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray67);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray68);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strArray93);
    }

    @Test
    public void test8314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8314");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("", 0);
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str15 = retryOnPrimaryException14.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException14.getHeaderKeys();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str3, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str15, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(strSet17);
    }

    @Test
    public void test8315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8315");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException7.getShardId();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException13.setShard("", 0);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException13.getHeader("retry_on_primary_exception");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", (java.lang.Throwable) retryOnPrimaryException13);
        java.lang.Throwable throwable21 = retryOnPrimaryException13.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray30 = retryOnPrimaryException26.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", (java.lang.Throwable) retryOnPrimaryException26);
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException31.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.stacktrace.skip");
        retryOnPrimaryException36.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray40 = retryOnPrimaryException36.guessRootCauses();
        retryOnPrimaryException31.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        throwable21.addSuppressed((java.lang.Throwable) retryOnPrimaryException31);
        java.util.Set<java.lang.String> strSet43 = retryOnPrimaryException31.getHeaderKeys();
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException31);
        retryOnPrimaryException7.addSuppressed((java.lang.Throwable) retryOnPrimaryException31);
        java.lang.String str46 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException31);
        java.lang.String str47 = retryOnPrimaryException31.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable21.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray30);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray40);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "retry_on_primary_exception" + "'", str46, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];" + "'", str47, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test8316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8316");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId6 = retryOnPrimaryException5.getShardId();
        retryOnPrimaryException5.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException5.getShardId();
        java.lang.Throwable throwable10 = retryOnPrimaryException5.getRootCause();
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException5.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException5.guessRootCauses();
        java.lang.Class<?> wildcardClass14 = retryOnPrimaryException5.getClass();
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test8317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8317");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        retryOnPrimaryException2.setShard(shardId9);
        retryOnPrimaryException2.setShard("[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", 0);
        retryOnPrimaryException2.setIndex("[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "");
        retryOnPrimaryException18.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet22 = retryOnPrimaryException18.getHeaderKeys();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        retryOnPrimaryException18.setIndex("[retry_on_primary_exception][[retry_on_primary_exception][100]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(strSet22);
    }

    @Test
    public void test8318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8318");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId10 = retryOnPrimaryException9.getShardId();
        org.elasticsearch.index.shard.ShardId shardId11 = retryOnPrimaryException9.getShardId();
        retryOnPrimaryException9.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray14 = retryOnPrimaryException9.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException9.status();
        retryOnPrimaryException9.setIndex("RetryOnPrimaryException[[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        retryOnPrimaryException9.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", 0);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8319");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus4 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable5);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + restStatus4 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus4.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
    }

    @Test
    public void test8320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8320");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException4.setIndex(index8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str12 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str15 = retryOnPrimaryException4.getDetailedMessage();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException4.getHeader("[RetryOnPrimaryException[hi!]] RetryOnPrimaryException[hi!]");
        java.lang.Throwable throwable18 = retryOnPrimaryException4.unwrapCause();
        java.lang.Throwable throwable19 = retryOnPrimaryException4.unwrapCause();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "retry_on_primary_exception" + "'", str12, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable19.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8321");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException8.setShard("", 10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable13 = retryOnPrimaryException12.getRootCause();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException12.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException19.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String str22 = retryOnPrimaryException19.toString();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "hi!");
        retryOnPrimaryException29.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException29);
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        java.lang.Throwable throwable37 = retryOnPrimaryException35.unwrapCause();
        retryOnPrimaryException35.setIndex("rest.exception.cause.skip");
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.rest.RestStatus restStatus41 = retryOnPrimaryException35.status();
        java.lang.Throwable throwable42 = retryOnPrimaryException35.unwrapCause();
        java.util.List<java.lang.String> strList44 = retryOnPrimaryException35.getHeader("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];");
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "");
        org.junit.Assert.assertEquals(throwable13.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str22, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable37.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + restStatus41 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus41.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(strList44);
    }

    @Test
    public void test8322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8322");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable7 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException12.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", (java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String str15 = retryOnPrimaryException12.toString();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "");
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        retryOnPrimaryException25.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        java.util.List<java.lang.String> strList31 = null;
        retryOnPrimaryException28.addHeader("hi!", strList31);
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException34.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray37);
        retryOnPrimaryException12.setResources("rest.exception.stacktrace.skip", strArray37);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.Index index41 = retryOnPrimaryException12.getIndex();
        java.lang.Throwable throwable42 = retryOnPrimaryException12.getRootCause();
        retryOnPrimaryException12.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable throwable45 = retryOnPrimaryException12.getRootCause();
        java.util.List<java.lang.String> strList47 = retryOnPrimaryException12.getHeader("[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];][35]] RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str15, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(index41);
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable42.toString(), "[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable45.toString(), "[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList47);
    }

    @Test
    public void test8323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8323");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException11.setShard("", 0);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        retryOnPrimaryException11.setShard(shardId18);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        org.elasticsearch.index.Index index24 = null;
        retryOnPrimaryException23.setIndex(index24);
        java.util.Set<java.lang.String> strSet26 = retryOnPrimaryException23.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException23.status();
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String str30 = retryOnPrimaryException11.toString();
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str30, "[][[][0]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8324");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("", 0);
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException8.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException16);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.String str19 = retryOnPrimaryException16.getResourceType();
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException16.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException22 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException16, streamOutput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strList20);
    }

    @Test
    public void test8325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8325");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId4 = retryOnPrimaryException2.getShardId();
        java.lang.String str5 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str6 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException12.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "", (java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String str15 = retryOnPrimaryException12.toString();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "");
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        retryOnPrimaryException25.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        java.util.List<java.lang.String> strList31 = null;
        retryOnPrimaryException28.addHeader("hi!", strList31);
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException34.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray37);
        retryOnPrimaryException12.setResources("rest.exception.stacktrace.skip", strArray37);
        java.lang.String str40 = retryOnPrimaryException12.toString();
        java.lang.Throwable throwable41 = retryOnPrimaryException12.getRootCause();
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException12.getResourceId();
        retryOnPrimaryException2.addHeader("hi!", strList42);
        org.elasticsearch.rest.RestStatus restStatus44 = retryOnPrimaryException2.status();
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray46 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "retry_on_primary_exception" + "'", str5, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]" + "'", str6, "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]");
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str15, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str40, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable41.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertTrue("'" + restStatus44 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus44.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray46);
    }

    @Test
    public void test8326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8326");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str9 = retryOnPrimaryException6.toString();
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.Index index19 = retryOnPrimaryException14.getIndex();
        java.lang.Throwable throwable20 = retryOnPrimaryException14.unwrapCause();
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException14.getHeaderKeys();
        java.lang.String str22 = retryOnPrimaryException14.getResourceType();
        java.lang.String str23 = retryOnPrimaryException14.toString();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "");
        org.elasticsearch.rest.RestStatus restStatus31 = retryOnPrimaryException30.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", (java.lang.Throwable) retryOnPrimaryException30);
        java.lang.String str33 = retryOnPrimaryException32.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = retryOnPrimaryException32.getShardId();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "");
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        retryOnPrimaryException38.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.Index index43 = retryOnPrimaryException38.getIndex();
        java.lang.Throwable throwable44 = retryOnPrimaryException38.getRootCause();
        retryOnPrimaryException38.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        retryOnPrimaryException38.setShard(shardId47);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "hi!");
        org.elasticsearch.index.Index index53 = null;
        retryOnPrimaryException52.setIndex(index53);
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        java.lang.Throwable throwable58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable58);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "hi!");
        retryOnPrimaryException63.setShard("", 0);
        boolean boolean67 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException63);
        java.util.List<java.lang.String> strList69 = retryOnPrimaryException63.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray74 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException63.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray74);
        retryOnPrimaryException59.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray74);
        retryOnPrimaryException52.setResources("retry_on_primary_exception", strArray74);
        java.util.List<java.lang.String> strList78 = retryOnPrimaryException52.getResourceId();
        retryOnPrimaryException38.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", strList78);
        retryOnPrimaryException32.addHeader("[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", strList78);
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[hi!];", strList78);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray82 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str9, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(index19);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "RetryOnPrimaryException[]" + "'", str23, "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + restStatus31 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus31.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str33, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNull(index43);
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "");
        org.junit.Assert.assertEquals(throwable44.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strList78);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray82);
    }

    @Test
    public void test8327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8327");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException6.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        retryOnPrimaryException15.setShard("", 0);
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException15.setShard(shardId22);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!");
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "");
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException34.addSuppressed((java.lang.Throwable) retryOnPrimaryException37);
        java.util.List<java.lang.String> strList40 = null;
        retryOnPrimaryException37.addHeader("hi!", strList40);
        retryOnPrimaryException30.addSuppressed((java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", (java.lang.Throwable) retryOnPrimaryException37);
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException43.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray46);
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray46);
        retryOnPrimaryException2.setResources("[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]", strArray46);
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strArray46);
    }

    @Test
    public void test8328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8328");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable11 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", throwable11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException12);
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException12.status();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8329");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        retryOnPrimaryException2.setShard("hi!", (int) (short) -1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "");
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException11.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "", (java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.stacktrace.skip");
        retryOnPrimaryException17.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = retryOnPrimaryException24.guessRootCauses();
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        retryOnPrimaryException24.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList35);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        retryOnPrimaryException41.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = retryOnPrimaryException41.guessRootCauses();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        retryOnPrimaryException41.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList52);
        retryOnPrimaryException41.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException41.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "hi!");
        java.util.List<java.lang.String> strList66 = retryOnPrimaryException65.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "", (java.lang.Throwable) retryOnPrimaryException65);
        org.elasticsearch.rest.RestStatus restStatus68 = retryOnPrimaryException67.status();
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "hi!");
        retryOnPrimaryException72.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray76 = retryOnPrimaryException72.guessRootCauses();
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        retryOnPrimaryException72.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList83);
        retryOnPrimaryException67.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList83);
        retryOnPrimaryException41.addHeader("", (java.util.List<java.lang.String>) strList83);
        java.lang.String[] strArray91 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException41.setResources("RetryOnPrimaryException[]", strArray91);
        retryOnPrimaryException24.setResources("RetryOnPrimaryException[hi!]", strArray91);
        retryOnPrimaryException17.setResources("hi!", strArray91);
        retryOnPrimaryException13.setResources("retry_on_primary_exception", strArray91);
        retryOnPrimaryException2.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray91);
        java.lang.Throwable throwable97 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray98 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable97);
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertTrue("'" + restStatus68 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus68.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray76);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(throwable97);
        org.junit.Assert.assertEquals(throwable97.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable97.getMessage(), "");
        org.junit.Assert.assertEquals(throwable97.toString(), "[hi!][[hi!][-1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray98);
    }

    @Test
    public void test8330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8330");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        java.lang.Throwable[] throwableArray8 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.Index index19 = retryOnPrimaryException14.getIndex();
        java.lang.Throwable throwable20 = retryOnPrimaryException14.unwrapCause();
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException14.getHeaderKeys();
        java.lang.String str22 = retryOnPrimaryException14.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "");
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "hi!");
        retryOnPrimaryException26.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.index.Index index31 = retryOnPrimaryException26.getIndex();
        java.lang.Throwable throwable32 = retryOnPrimaryException26.unwrapCause();
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException37.setShard("", 0);
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException37);
        java.util.List<java.lang.String> strList43 = retryOnPrimaryException37.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray48 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException37.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray48);
        retryOnPrimaryException26.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray48);
        retryOnPrimaryException14.addHeader("RetryOnPrimaryException[hi!]", strArray48);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "");
        retryOnPrimaryException56.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet60 = retryOnPrimaryException56.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "hi!");
        retryOnPrimaryException64.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray68 = retryOnPrimaryException64.guessRootCauses();
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        retryOnPrimaryException64.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList75);
        retryOnPrimaryException56.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList75);
        retryOnPrimaryException52.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList75);
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList75);
        boolean boolean81 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.rest.RestStatus restStatus82 = retryOnPrimaryException6.status();
        boolean boolean83 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str84 = retryOnPrimaryException6.toString();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNull(index19);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(index31);
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "");
        org.junit.Assert.assertEquals(throwable32.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray68);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + restStatus82 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus82.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];" + "'", str84, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test8331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8331");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String str9 = retryOnPrimaryException7.getResourceType();
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException16);
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException16.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.Index index28 = retryOnPrimaryException23.getIndex();
        java.lang.Throwable throwable29 = retryOnPrimaryException23.getRootCause();
        retryOnPrimaryException23.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        retryOnPrimaryException23.setShard(shardId32);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        org.elasticsearch.index.Index index38 = null;
        retryOnPrimaryException37.setIndex(index38);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        java.lang.Throwable throwable43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable43);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "hi!");
        retryOnPrimaryException48.setShard("", 0);
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException48);
        java.util.List<java.lang.String> strList54 = retryOnPrimaryException48.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray59 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException48.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray59);
        retryOnPrimaryException44.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray59);
        retryOnPrimaryException37.setResources("retry_on_primary_exception", strArray59);
        java.util.List<java.lang.String> strList63 = retryOnPrimaryException37.getResourceId();
        retryOnPrimaryException23.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", strList63);
        retryOnPrimaryException19.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strList63);
        retryOnPrimaryException7.addHeader("RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]", strList63);
        java.lang.String str67 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId68 = retryOnPrimaryException7.getShardId();
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(index28);
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "");
        org.junit.Assert.assertEquals(throwable29.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "retry_on_primary_exception" + "'", str67, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId68);
    }

    @Test
    public void test8332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8332");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray3 = retryOnPrimaryException2.guessRootCauses();
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException2.getHeader("[][[][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray3);
        org.junit.Assert.assertNull(strList5);
    }

    @Test
    public void test8333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8333");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException4.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable13);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "hi!");
        retryOnPrimaryException18.setShard("", 0);
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException18);
        java.util.List<java.lang.String> strList24 = retryOnPrimaryException18.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray29 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException18.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray29);
        retryOnPrimaryException14.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray29);
        retryOnPrimaryException4.setResources("", strArray29);
        java.lang.String str33 = retryOnPrimaryException4.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str33, "[][[][0]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8334");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.util.List<java.lang.String> strList14 = null;
        retryOnPrimaryException11.addHeader("hi!", strList14);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException11.guessRootCauses();
        java.lang.Throwable throwable18 = retryOnPrimaryException11.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String str20 = retryOnPrimaryException19.toString();
        org.elasticsearch.common.io.stream.StreamInput streamInput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception22 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException19, streamInput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "RetryOnPrimaryException[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str20, "RetryOnPrimaryException[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test8335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8335");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException8.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException8);
        retryOnPrimaryException10.setShard("", 10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String str17 = retryOnPrimaryException14.toString();
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];" + "'", str17, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test8336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8336");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException7.getShardId();
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException7.getShardId();
        retryOnPrimaryException7.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray12 = retryOnPrimaryException7.getSuppressed();
        java.lang.Throwable throwable13 = retryOnPrimaryException7.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String str21 = retryOnPrimaryException16.toString();
        retryOnPrimaryException7.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.String str23 = retryOnPrimaryException7.getResourceType();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable13.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "RetryOnPrimaryException[]" + "'", str21, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str23);
    }

    @Test
    public void test8337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8337");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.toString();
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException4.status();
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException4.status();
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index12 = retryOnPrimaryException4.getIndex();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str7, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(index12);
    }

    @Test
    public void test8338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8338");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.Index index9 = retryOnPrimaryException4.getIndex();
        java.lang.Throwable throwable10 = retryOnPrimaryException4.unwrapCause();
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.String str12 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.Index index21 = retryOnPrimaryException16.getIndex();
        java.lang.Throwable throwable22 = retryOnPrimaryException16.unwrapCause();
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "hi!");
        retryOnPrimaryException27.setShard("", 0);
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException27);
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException27.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray38 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException27.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray38);
        retryOnPrimaryException16.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray38);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[hi!]", strArray38);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "RetryOnPrimaryException[hi!]");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException47);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException48);
        java.lang.Throwable throwable50 = retryOnPrimaryException4.unwrapCause();
        java.lang.String str51 = retryOnPrimaryException4.toString();
        java.lang.Throwable throwable52 = retryOnPrimaryException4.unwrapCause();
        java.lang.String str53 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable52);
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(index21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(throwable50);
        org.junit.Assert.assertEquals(throwable50.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable50.getMessage(), "");
        org.junit.Assert.assertEquals(throwable50.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "RetryOnPrimaryException[]" + "'", str51, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable52);
        org.junit.Assert.assertEquals(throwable52.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable52.getMessage(), "");
        org.junit.Assert.assertEquals(throwable52.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "retry_on_primary_exception" + "'", str53, "retry_on_primary_exception");
    }

    @Test
    public void test8339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8339");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "");
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException14.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException14);
        retryOnPrimaryException16.setShard("", 10);
        java.lang.String str20 = retryOnPrimaryException16.getDetailedMessage();
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException16.getHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "hi!");
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException29.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "", (java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String str32 = retryOnPrimaryException29.toString();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.stacktrace.skip");
        retryOnPrimaryException40.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException40);
        retryOnPrimaryException44.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "hi!");
        boolean boolean54 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException53);
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException53.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.index.shard.ShardId shardId57 = retryOnPrimaryException56.getShardId();
        org.elasticsearch.index.shard.ShardId shardId58 = retryOnPrimaryException56.getShardId();
        retryOnPrimaryException56.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray61 = retryOnPrimaryException56.getSuppressed();
        boolean boolean62 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException56);
        java.lang.String str63 = retryOnPrimaryException56.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus64 = retryOnPrimaryException56.status();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.stacktrace.skip");
        retryOnPrimaryException68.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray72 = retryOnPrimaryException68.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray73 = retryOnPrimaryException68.guessRootCauses();
        java.lang.String str74 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException68);
        java.lang.String[] strArray76 = new java.lang.String[] {};
        retryOnPrimaryException68.addHeader("hi!", strArray76);
        retryOnPrimaryException56.addHeader("[][[][0]] RetryOnPrimaryException[hi!]", strArray76);
        retryOnPrimaryException47.setResources("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray76);
        retryOnPrimaryException29.setResources("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray76);
        retryOnPrimaryException16.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", strArray76);
        retryOnPrimaryException16.setShard("[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]", (int) (short) 0);
        throwable9.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.util.Set<java.lang.String> strSet86 = retryOnPrimaryException16.getHeaderKeys();
        boolean boolean87 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException16);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str20, "[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str32, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(shardId57);
        org.junit.Assert.assertNull(shardId58);
        org.junit.Assert.assertNotNull(throwableArray61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + restStatus64 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus64.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray72);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "retry_on_primary_exception" + "'", str74, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertNotNull(strSet86);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test8340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8340");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.index.Index index6 = null;
        retryOnPrimaryException4.setIndex(index6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = retryOnPrimaryException8.guessRootCauses();
        java.lang.String str10 = retryOnPrimaryException8.toString();
        java.lang.Throwable throwable11 = retryOnPrimaryException8.getRootCause();
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];" + "'", str10, "RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test8341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8341");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException8);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException8.getResourceId();
        java.lang.Throwable throwable13 = retryOnPrimaryException8.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[][[][0]] RetryOnPrimaryException[hi!]", throwable13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException14.guessRootCauses();
        java.lang.String str16 = retryOnPrimaryException14.toString();
        java.lang.Throwable throwable17 = retryOnPrimaryException14.getRootCause();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable17);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable13.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str16, "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test8342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8342");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        retryOnPrimaryException4.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = retryOnPrimaryException12.guessRootCauses();
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        retryOnPrimaryException12.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList23);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList23);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable29 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.common.io.stream.StreamInput streamInput30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException31 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException4, streamInput30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "");
        org.junit.Assert.assertEquals(throwable29.toString(), "[hi!][[hi!][-1]] RetryOnPrimaryException[]");
    }

    @Test
    public void test8343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8343");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str9 = retryOnPrimaryException6.toString();
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception13 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException11, streamOutput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str9, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test8344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8344");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        retryOnPrimaryException2.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException9.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException9.guessRootCauses();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        retryOnPrimaryException9.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList20);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray30 = retryOnPrimaryException26.guessRootCauses();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        retryOnPrimaryException26.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList37);
        retryOnPrimaryException26.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException26.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "hi!");
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException50.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "", (java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.rest.RestStatus restStatus53 = retryOnPrimaryException52.status();
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "hi!");
        retryOnPrimaryException57.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray61 = retryOnPrimaryException57.guessRootCauses();
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        retryOnPrimaryException57.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList68);
        retryOnPrimaryException52.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList68);
        retryOnPrimaryException26.addHeader("", (java.util.List<java.lang.String>) strList68);
        java.lang.String[] strArray76 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException26.setResources("RetryOnPrimaryException[]", strArray76);
        retryOnPrimaryException9.setResources("RetryOnPrimaryException[hi!]", strArray76);
        retryOnPrimaryException2.setResources("hi!", strArray76);
        boolean boolean80 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable81 = retryOnPrimaryException2.unwrapCause();
        java.lang.Throwable[] throwableArray82 = throwable81.getSuppressed();
        java.lang.Class<?> wildcardClass83 = throwable81.getClass();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray30);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertTrue("'" + restStatus53 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus53.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray61);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(throwable81);
        org.junit.Assert.assertEquals(throwable81.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable81.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable81.toString(), "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test8345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8345");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        org.elasticsearch.index.Index index6 = null;
        retryOnPrimaryException2.setIndex(index6);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable11);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        retryOnPrimaryException16.setShard("", 0);
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException16.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray27 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException16.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray27);
        retryOnPrimaryException12.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray27);
        retryOnPrimaryException2.setResources("", strArray27);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "hi!");
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException36);
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException36.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException36);
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException39.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "hi!");
        java.util.List<java.lang.String> strList47 = retryOnPrimaryException46.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "", (java.lang.Throwable) retryOnPrimaryException46);
        java.lang.String str49 = retryOnPrimaryException46.toString();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "hi!");
        boolean boolean56 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException55);
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "");
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "hi!");
        retryOnPrimaryException59.addSuppressed((java.lang.Throwable) retryOnPrimaryException62);
        java.util.List<java.lang.String> strList65 = null;
        retryOnPrimaryException62.addHeader("hi!", strList65);
        retryOnPrimaryException55.addSuppressed((java.lang.Throwable) retryOnPrimaryException62);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "", (java.lang.Throwable) retryOnPrimaryException62);
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException68.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray71);
        retryOnPrimaryException46.setResources("rest.exception.stacktrace.skip", strArray71);
        retryOnPrimaryException39.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]", strArray71);
        retryOnPrimaryException2.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]", strArray71);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray76 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray77 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray78 = retryOnPrimaryException2.getSuppressed();
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str49, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray76);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray77);
        org.junit.Assert.assertNotNull(throwableArray78);
    }

    @Test
    public void test8346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8346");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        retryOnPrimaryException2.setShard("rest.exception.stacktrace.skip", 0);
        java.lang.Throwable throwable6 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", 10);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "");
        java.lang.String str15 = retryOnPrimaryException14.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        retryOnPrimaryException20.setShard("", 0);
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray25 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str27 = retryOnPrimaryException26.toString();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String str29 = retryOnPrimaryException14.toString();
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException14.getResourceId();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][10]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str27, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "RetryOnPrimaryException[]" + "'", str29, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
    }

    @Test
    public void test8347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8347");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException14);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable throwable22 = retryOnPrimaryException20.unwrapCause();
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable throwable24 = retryOnPrimaryException20.getRootCause();
        java.lang.String str25 = retryOnPrimaryException20.toString();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!");
        retryOnPrimaryException30.setShard("", 0);
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException30);
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException30.getHeader("retry_on_primary_exception");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", (java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable throwable38 = retryOnPrimaryException30.getRootCause();
        java.lang.Throwable[] throwableArray39 = retryOnPrimaryException30.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        boolean boolean45 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException44);
        java.util.List<java.lang.String> strList46 = retryOnPrimaryException44.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException44);
        java.lang.String str48 = retryOnPrimaryException47.toString();
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException47);
        java.util.List<java.lang.String> strList50 = retryOnPrimaryException47.getResourceId();
        retryOnPrimaryException30.addSuppressed((java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "hi!");
        retryOnPrimaryException54.setShard("", 0);
        boolean boolean58 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException54);
        retryOnPrimaryException54.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException47.addSuppressed((java.lang.Throwable) retryOnPrimaryException54);
        java.lang.Throwable throwable62 = retryOnPrimaryException47.unwrapCause();
        retryOnPrimaryException20.addSuppressed((java.lang.Throwable) retryOnPrimaryException47);
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        boolean boolean65 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray66 = retryOnPrimaryException20.guessRootCauses();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str7, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];" + "'", str25, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable38.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str48, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(throwable62);
        org.junit.Assert.assertEquals(throwable62.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable62.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable62.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray66);
    }

    @Test
    public void test8348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8348");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str9 = retryOnPrimaryException6.toString();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.util.List<java.lang.String> strList25 = null;
        retryOnPrimaryException22.addHeader("hi!", strList25);
        retryOnPrimaryException15.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException28.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray31);
        retryOnPrimaryException6.setResources("rest.exception.stacktrace.skip", strArray31);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str35 = retryOnPrimaryException34.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = retryOnPrimaryException34.guessRootCauses();
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException34.getHeaderKeys();
        java.lang.Throwable[] throwableArray38 = retryOnPrimaryException34.getSuppressed();
        java.lang.String str39 = retryOnPrimaryException34.getResourceType();
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str9, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str35, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNull(str39);
    }

    @Test
    public void test8349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8349");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException4.setIndex(index5);
        java.lang.Throwable throwable7 = retryOnPrimaryException4.getRootCause();
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException9.getHeaderKeys();
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Class<?> wildcardClass13 = elasticsearchExceptionArray12.getClass();
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test8350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8350");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str10 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        retryOnPrimaryException16.setShard("", 0);
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable throwable23 = retryOnPrimaryException16.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.stacktrace.skip", throwable23);
        java.lang.Throwable[] throwableArray25 = retryOnPrimaryException24.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        boolean boolean27 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException24);
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
    }

    @Test
    public void test8351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8351");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException2.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException26.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", (java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.rest.RestStatus restStatus29 = retryOnPrimaryException28.status();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "hi!");
        retryOnPrimaryException33.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = retryOnPrimaryException33.guessRootCauses();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        retryOnPrimaryException33.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList44);
        retryOnPrimaryException28.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList44);
        retryOnPrimaryException2.addHeader("", (java.util.List<java.lang.String>) strList44);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        retryOnPrimaryException2.setShard(shardId49);
        java.lang.Throwable throwable51 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList52 = retryOnPrimaryException2.getResourceId();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertTrue("'" + restStatus29 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus29.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(throwable51);
        org.junit.Assert.assertEquals(throwable51.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable51.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable51.toString(), "[hi!][[hi!][32]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList52);
    }

    @Test
    public void test8352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8352");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str9 = retryOnPrimaryException2.toString();
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable11 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.Index index20 = retryOnPrimaryException16.getIndex();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str9, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index20);
    }

    @Test
    public void test8353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8353");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException11.setShard("", 0);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException11);
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException18.getHeader("rest.exception.stacktrace.skip");
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.index.shard.ShardId shardId30 = retryOnPrimaryException29.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException29);
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException29.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException37.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = retryOnPrimaryException37.guessRootCauses();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        retryOnPrimaryException37.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList48);
        retryOnPrimaryException37.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException37.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "hi!");
        java.util.List<java.lang.String> strList62 = retryOnPrimaryException61.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "", (java.lang.Throwable) retryOnPrimaryException61);
        org.elasticsearch.rest.RestStatus restStatus64 = retryOnPrimaryException63.status();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "hi!");
        retryOnPrimaryException68.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray72 = retryOnPrimaryException68.guessRootCauses();
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        retryOnPrimaryException68.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException63.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException37.addHeader("", (java.util.List<java.lang.String>) strList79);
        java.lang.String[] strArray87 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException37.setResources("RetryOnPrimaryException[]", strArray87);
        retryOnPrimaryException29.setResources("[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray87);
        retryOnPrimaryException18.setResources("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];", strArray87);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray87);
        boolean boolean92 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException94 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamOutput93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertTrue("'" + restStatus64 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus64.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray72);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test8354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8354");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        java.lang.String str5 = retryOnPrimaryException4.getResourceType();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", throwable6);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException7.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException11.setShard("", 0);
        org.elasticsearch.index.Index index15 = null;
        retryOnPrimaryException11.setIndex(index15);
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException11.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException7.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException7.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        retryOnPrimaryException7.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
        java.lang.String str24 = retryOnPrimaryException7.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException7.writeTo(streamOutput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];" + "'", str24, "[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test8355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8355");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        java.lang.String str5 = retryOnPrimaryException4.getResourceType();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", throwable6);
        org.elasticsearch.index.Index index8 = retryOnPrimaryException7.getIndex();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(index8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
    }

    @Test
    public void test8356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8356");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException6.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str9 = retryOnPrimaryException6.toString();
        java.lang.String[] strArray14 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException6.setResources("", strArray14);
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException6.getSuppressed();
        java.lang.Throwable[] throwableArray18 = retryOnPrimaryException6.getSuppressed();
        retryOnPrimaryException6.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", 0);
        java.lang.Throwable throwable22 = retryOnPrimaryException6.getRootCause();
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable22);
        java.lang.Class<?> wildcardClass24 = throwable22.getClass();
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str9, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test8357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8357");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][35]] RetryOnPrimaryException[RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]]");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.getRootCause();
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        org.elasticsearch.common.io.stream.StreamInput streamInput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException7 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][35]] RetryOnPrimaryException[RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]]");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][35]] RetryOnPrimaryException[RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]]");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][35]] RetryOnPrimaryException[RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]]]");
        org.junit.Assert.assertNull(strList5);
    }

    @Test
    public void test8358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8358");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        java.lang.String str8 = retryOnPrimaryException6.getResourceType();
        retryOnPrimaryException6.setShard("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (int) '4');
        retryOnPrimaryException6.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]", (int) ' ');
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test8359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8359");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str9 = retryOnPrimaryException2.toString();
        java.lang.String str10 = retryOnPrimaryException2.toString();
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "");
        java.lang.String str20 = retryOnPrimaryException19.getResourceType();
        java.lang.Throwable throwable21 = retryOnPrimaryException19.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip", throwable21);
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException22.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException22.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException22);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str27 = retryOnPrimaryException22.toString();
        java.lang.String str28 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "hi!");
        org.elasticsearch.index.Index index33 = null;
        retryOnPrimaryException32.setIndex(index33);
        java.lang.String str35 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "");
        retryOnPrimaryException39.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet43 = retryOnPrimaryException39.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "hi!");
        retryOnPrimaryException47.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray51 = retryOnPrimaryException47.guessRootCauses();
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        retryOnPrimaryException47.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList58);
        retryOnPrimaryException39.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList58);
        retryOnPrimaryException32.addHeader("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList58);
        retryOnPrimaryException22.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList58);
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str9, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str10, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "");
        org.junit.Assert.assertEquals(throwable21.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];" + "'", str27, "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "retry_on_primary_exception" + "'", str28, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "retry_on_primary_exception" + "'", str35, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray51);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test8360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8360");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        retryOnPrimaryException2.setShard(shardId3);
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "");
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.Index index16 = retryOnPrimaryException11.getIndex();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException11.setShard(shardId17);
        org.elasticsearch.index.Index index19 = retryOnPrimaryException11.getIndex();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException11);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertNull(index19);
        org.junit.Assert.assertNull(strList23);
    }

    @Test
    public void test8361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8361");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", throwable2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.Index index13 = retryOnPrimaryException8.getIndex();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException8);
        retryOnPrimaryException3.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException14.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "");
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.Index index26 = retryOnPrimaryException21.getIndex();
        java.lang.Throwable throwable27 = retryOnPrimaryException21.unwrapCause();
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException21.getHeaderKeys();
        org.elasticsearch.index.Index index29 = null;
        retryOnPrimaryException21.setIndex(index29);
        java.lang.Throwable throwable31 = retryOnPrimaryException21.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String str33 = retryOnPrimaryException21.toString();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.Throwable throwable35 = retryOnPrimaryException14.unwrapCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder36 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params37 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder38 = retryOnPrimaryException14.toXContent(xContentBuilder36, params37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index13);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(index26);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "");
        org.junit.Assert.assertEquals(throwable27.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "");
        org.junit.Assert.assertEquals(throwable31.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "RetryOnPrimaryException[]" + "'", str33, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable35.toString(), "RetryOnPrimaryException[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(params37);
    }

    @Test
    public void test8362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8362");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException2.setShard("hi!", (int) ' ');
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable22 = retryOnPrimaryException2.unwrapCause();
        java.lang.Throwable throwable23 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable22.toString(), "[hi!][[hi!][32]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.toString(), "[hi!][[hi!][32]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8363");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("", 0);
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str16 = retryOnPrimaryException8.getResourceType();
        java.lang.Throwable throwable17 = retryOnPrimaryException8.getRootCause();
        java.lang.Throwable[] throwableArray18 = retryOnPrimaryException8.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable20 = retryOnPrimaryException19.getRootCause();
        retryOnPrimaryException19.setIndex("RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]");
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException19);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test8364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8364");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException14);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable throwable22 = retryOnPrimaryException20.unwrapCause();
        retryOnPrimaryException20.setIndex("rest.exception.cause.skip");
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId26 = retryOnPrimaryException20.getShardId();
        boolean boolean27 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = retryOnPrimaryException20.guessRootCauses();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str7, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
    }

    @Test
    public void test8365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8365");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray4 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId5 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getResourceId();
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray4);
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertNull(strList8);
    }

    @Test
    public void test8366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8366");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException7.setShard("", 0);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException7.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray18 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException7.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray18);
        retryOnPrimaryException3.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray18);
        org.elasticsearch.index.shard.ShardId shardId21 = retryOnPrimaryException3.getShardId();
        org.elasticsearch.index.Index index22 = retryOnPrimaryException3.getIndex();
        retryOnPrimaryException3.setIndex("[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNull(index22);
    }

    @Test
    public void test8367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8367");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException6.setIndex(index10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        retryOnPrimaryException15.setShard(shardId16);
        java.util.Set<java.lang.String> strSet18 = retryOnPrimaryException15.getHeaderKeys();
        java.lang.Throwable throwable19 = retryOnPrimaryException15.getRootCause();
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable19);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable19.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test8368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8368");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "rest.exception.stacktrace.skip");
        retryOnPrimaryException5.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = retryOnPrimaryException5.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "RetryOnPrimaryException[]");
        retryOnPrimaryException5.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str15 = retryOnPrimaryException5.getDetailedMessage();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException5.getHeader("retry_on_primary_exception");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException24.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String str27 = retryOnPrimaryException24.toString();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "");
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException34.addSuppressed((java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException34);
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        java.util.List<java.lang.String> strList43 = retryOnPrimaryException24.getHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException5.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String str45 = retryOnPrimaryException24.toString();
        java.lang.Throwable throwable46 = retryOnPrimaryException24.getRootCause();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str27, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str45, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable46.toString(), "RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8369");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str8 = retryOnPrimaryException7.toString();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException7);
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException7.getHeader("");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str8, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test8370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8370");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException6.setIndex(index7);
        java.lang.String str9 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray10 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.Index index12 = retryOnPrimaryException11.getIndex();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder14 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params15 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder16 = retryOnPrimaryException11.toXContent(xContentBuilder14, params15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "retry_on_primary_exception" + "'", str9, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNull(index12);
        org.junit.Assert.assertNotNull(params15);
    }

    @Test
    public void test8371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8371");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        retryOnPrimaryException2.setShard(shardId4);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.Index index16 = retryOnPrimaryException14.getIndex();
        org.elasticsearch.index.Index index17 = retryOnPrimaryException14.getIndex();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        java.lang.Throwable throwable21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable21);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("", 0);
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException26);
        java.util.List<java.lang.String> strList32 = retryOnPrimaryException26.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray37 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException26.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray37);
        retryOnPrimaryException22.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray37);
        org.elasticsearch.index.Index index40 = null;
        retryOnPrimaryException22.setIndex(index40);
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException22.getResourceId();
        retryOnPrimaryException14.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]", strList42);
        retryOnPrimaryException2.addHeader("[][[][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strList42);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertNull(index17);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strList42);
    }

    @Test
    public void test8372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8372");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        retryOnPrimaryException2.setShard(shardId8);
        org.elasticsearch.index.Index index10 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "");
        java.lang.String str15 = retryOnPrimaryException14.getResourceType();
        java.lang.String str16 = retryOnPrimaryException14.getResourceType();
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException14.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException14);
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException14.getResourceId();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.Throwable throwable21 = retryOnPrimaryException2.unwrapCause();
        java.util.Set<java.lang.String> strSet22 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamInput streamInput23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception24 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException2, streamInput23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertNull(index10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "");
        org.junit.Assert.assertEquals(throwable21.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet22);
    }

    @Test
    public void test8373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8373");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable14 = retryOnPrimaryException4.getRootCause();
        java.lang.String str15 = retryOnPrimaryException4.getDetailedMessage();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException4.getHeader("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass18 = strList17.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(strList17);
    }

    @Test
    public void test8374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8374");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        retryOnPrimaryException2.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "RetryOnPrimaryException[]");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str12 = retryOnPrimaryException2.getDetailedMessage();
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str15 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str16 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]" + "'", str16, "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
    }

    @Test
    public void test8375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8375");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        java.lang.String str4 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.Index index13 = retryOnPrimaryException8.getIndex();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId15 = retryOnPrimaryException8.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = retryOnPrimaryException8.guessRootCauses();
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException8.getHeaderKeys();
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException8.getResourceId();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.stacktrace.skip");
        retryOnPrimaryException22.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException22.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = retryOnPrimaryException22.guessRootCauses();
        java.lang.String str28 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str29 = retryOnPrimaryException22.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "");
        java.lang.String str34 = retryOnPrimaryException33.getResourceType();
        java.lang.String str35 = retryOnPrimaryException33.getResourceType();
        java.lang.Throwable[] throwableArray36 = retryOnPrimaryException33.getSuppressed();
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException33.getHeader("RetryOnPrimaryException[]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "hi!");
        org.elasticsearch.index.Index index44 = null;
        retryOnPrimaryException43.setIndex(index44);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        java.lang.Throwable throwable49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable49);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "hi!");
        retryOnPrimaryException54.setShard("", 0);
        boolean boolean58 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException54);
        java.util.List<java.lang.String> strList60 = retryOnPrimaryException54.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray65 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException54.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray65);
        retryOnPrimaryException50.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray65);
        retryOnPrimaryException43.setResources("retry_on_primary_exception", strArray65);
        retryOnPrimaryException33.setResources("", strArray65);
        retryOnPrimaryException22.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray65);
        org.elasticsearch.rest.RestStatus restStatus71 = retryOnPrimaryException22.status();
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput73 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException22.writeTo(streamOutput73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "retry_on_primary_exception" + "'", str4, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId5);
        org.junit.Assert.assertNull(index13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "retry_on_primary_exception" + "'", str28, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str29, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + restStatus71 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus71.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8376");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException5.setIndex("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        retryOnPrimaryException5.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
        retryOnPrimaryException5.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test8377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8377");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException6.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId12 = retryOnPrimaryException11.getShardId();
        java.lang.Throwable throwable13 = retryOnPrimaryException11.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException11.status();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNull(shardId12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable13.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
    }

    @Test
    public void test8378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8378");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException7.getShardId();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException7.getResourceId();
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException7.getResourceId();
        java.lang.String str11 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable throwable12 = retryOnPrimaryException7.unwrapCause();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException7.getHeader("RetryOnPrimaryException[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "retry_on_primary_exception" + "'", str11, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable12.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test8379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8379");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException13.getHeader("rest.exception.stacktrace.skip");
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException13.setShard(shardId17);
        java.lang.Throwable throwable19 = retryOnPrimaryException13.getRootCause();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable19.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8380");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setShard("", (int) ' ');
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException4);
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test8381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8381");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray3 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
    }

    @Test
    public void test8382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8382");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.stacktrace.skip");
        retryOnPrimaryException6.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException10.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException10.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException10);
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException14.getHeader("[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        java.util.List<java.lang.String> strList24 = retryOnPrimaryException23.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException23);
        java.lang.String str26 = retryOnPrimaryException23.toString();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "hi!");
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "");
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "hi!");
        retryOnPrimaryException36.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        java.util.List<java.lang.String> strList42 = null;
        retryOnPrimaryException39.addHeader("hi!", strList42);
        retryOnPrimaryException32.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "", (java.lang.Throwable) retryOnPrimaryException39);
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException45.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray48);
        retryOnPrimaryException23.setResources("rest.exception.stacktrace.skip", strArray48);
        java.lang.String str51 = retryOnPrimaryException23.toString();
        java.lang.Throwable throwable52 = retryOnPrimaryException23.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable52);
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray55 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.Throwable throwable56 = retryOnPrimaryException14.getRootCause();
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str26, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str51, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable52);
        org.junit.Assert.assertEquals(throwable52.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable52.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable52.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray55);
        org.junit.Assert.assertNotNull(throwable56);
        org.junit.Assert.assertEquals(throwable56.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable56.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable56.toString(), "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
    }

    @Test
    public void test8383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8383");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.util.List<java.lang.String> strList12 = null;
        retryOnPrimaryException9.addHeader("hi!", strList12);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable15 = retryOnPrimaryException9.unwrapCause();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8384");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("", 0);
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException8.setIndex(index12);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException8);
        retryOnPrimaryException8.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        retryOnPrimaryException17.setShard(shardId18);
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.stacktrace.skip");
        retryOnPrimaryException26.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray30 = retryOnPrimaryException26.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "RetryOnPrimaryException[]");
        retryOnPrimaryException26.addSuppressed((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = retryOnPrimaryException33.guessRootCauses();
        java.util.List<java.lang.String> strList37 = retryOnPrimaryException33.getHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        retryOnPrimaryException41.setShard("", 0);
        org.elasticsearch.index.Index index45 = null;
        retryOnPrimaryException41.setIndex(index45);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        java.lang.Throwable throwable50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable50);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "hi!");
        retryOnPrimaryException55.setShard("", 0);
        boolean boolean59 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException55);
        java.util.List<java.lang.String> strList61 = retryOnPrimaryException55.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray66 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException55.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray66);
        retryOnPrimaryException51.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray66);
        retryOnPrimaryException41.setResources("", strArray66);
        retryOnPrimaryException33.setResources("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", strArray66);
        retryOnPrimaryException17.setResources("[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray66);
        java.lang.Throwable throwable72 = retryOnPrimaryException17.unwrapCause();
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray30);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(throwable72);
        org.junit.Assert.assertEquals(throwable72.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable72.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable72.toString(), "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test8385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8385");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        java.lang.String str3 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "retry_on_primary_exception" + "'", str3, "retry_on_primary_exception");
    }

    @Test
    public void test8386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8386");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.stacktrace.skip");
        retryOnPrimaryException6.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException10.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException12.getSuppressed();
        java.lang.String str14 = retryOnPrimaryException12.toString();
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException12);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];" + "'", str14, "RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
    }

    @Test
    public void test8387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8387");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException11.status();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException11.setShard(shardId13);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException11);
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException15.writeTo(streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test8388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8388");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException11.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException19);
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException19.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId23 = retryOnPrimaryException22.getShardId();
        org.elasticsearch.index.shard.ShardId shardId24 = retryOnPrimaryException22.getShardId();
        retryOnPrimaryException22.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray27 = retryOnPrimaryException22.getSuppressed();
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str29 = retryOnPrimaryException22.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "");
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "hi!");
        retryOnPrimaryException33.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.Index index38 = retryOnPrimaryException33.getIndex();
        java.lang.Throwable throwable39 = retryOnPrimaryException33.unwrapCause();
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        retryOnPrimaryException44.setShard("", 0);
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException44);
        java.util.List<java.lang.String> strList50 = retryOnPrimaryException44.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray55 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException44.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray55);
        retryOnPrimaryException33.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray55);
        retryOnPrimaryException22.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray55);
        retryOnPrimaryException13.setResources("rest.exception.cause.skip", strArray55);
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "[][[][0]] RetryOnPrimaryException[hi!]");
        java.lang.String str63 = retryOnPrimaryException62.toString();
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException62);
        java.lang.Throwable throwable65 = retryOnPrimaryException62.getRootCause();
        boolean boolean66 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException62);
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(index38);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "");
        org.junit.Assert.assertEquals(throwable39.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]" + "'", str63, "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]");
        org.junit.Assert.assertNotNull(throwable65);
        org.junit.Assert.assertEquals(throwable65.getLocalizedMessage(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable65.getMessage(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable65.toString(), "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test8389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8389");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable11 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", throwable11);
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException12.getShardId();
        java.lang.String str14 = retryOnPrimaryException12.getDetailedMessage();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException12.getHeader("[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][35]] RetryOnPrimaryException[RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]]");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        retryOnPrimaryException23.setShard("", 0);
        org.elasticsearch.index.Index index27 = null;
        retryOnPrimaryException23.setIndex(index27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException23);
        java.lang.Throwable[] throwableArray30 = retryOnPrimaryException23.getSuppressed();
        java.util.Set<java.lang.String> strSet31 = retryOnPrimaryException23.getHeaderKeys();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException23);
        java.lang.String str33 = retryOnPrimaryException32.getDetailedMessage();
        java.lang.Throwable throwable34 = retryOnPrimaryException32.unwrapCause();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        java.lang.Class<?> wildcardClass36 = retryOnPrimaryException12.getClass();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str14, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test8390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8390");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test8391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8391");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException2.getShardId();
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException2.getShardId();
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.Index index14 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str16 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[[[hi!][[hi!][-1]] RetryOnPrimaryException[]] RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str16, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
    }

    @Test
    public void test8392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8392");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException9.setShard("rest.exception.stacktrace.skip", (int) (short) 0);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str14 = retryOnPrimaryException9.getDetailedMessage();
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException9.getSuppressed();
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str14, "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test8393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8393");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException11.status();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException11.setShard(shardId13);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable throwable16 = retryOnPrimaryException15.getRootCause();
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException15.status();
        org.elasticsearch.index.Index index18 = retryOnPrimaryException15.getIndex();
        java.lang.Throwable throwable19 = retryOnPrimaryException15.unwrapCause();
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index18);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test8394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8394");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("", 0);
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException8.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException16);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable throwable19 = retryOnPrimaryException16.unwrapCause();
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test8395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8395");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        java.lang.String str8 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        retryOnPrimaryException4.setShard(shardId9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str12 = retryOnPrimaryException4.getResourceType();
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test8396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8396");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable[] throwableArray11 = retryOnPrimaryException7.getSuppressed();
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException7.getResourceId();
        java.lang.String str13 = retryOnPrimaryException7.getDetailedMessage();
        java.lang.Throwable throwable14 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException7.addSuppressed(throwable14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str13, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test8397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8397");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.rest.RestStatus restStatus3 = retryOnPrimaryException2.status();
        java.lang.String str4 = retryOnPrimaryException2.getResourceType();
        java.lang.String str5 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable6 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        java.lang.String str9 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable10 = retryOnPrimaryException2.unwrapCause();
        org.junit.Assert.assertTrue("'" + restStatus3 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus3.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[]" + "'", str5, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test8398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8398");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        java.lang.Throwable throwable15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable15);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        retryOnPrimaryException20.setShard("", 0);
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        java.util.List<java.lang.String> strList26 = retryOnPrimaryException20.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray31 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException20.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray31);
        retryOnPrimaryException16.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray31);
        retryOnPrimaryException11.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray31);
        retryOnPrimaryException11.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]");
        java.lang.Throwable throwable37 = retryOnPrimaryException11.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", throwable37);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = retryOnPrimaryException38.guessRootCauses();
        java.lang.Throwable throwable40 = retryOnPrimaryException38.unwrapCause();
        retryOnPrimaryException38.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable37.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.toString(), "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test8399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8399");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException13.setShard("", 0);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException13.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray24 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException13.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray24);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray24);
        java.lang.Throwable throwable27 = retryOnPrimaryException2.getRootCause();
        retryOnPrimaryException2.setShard("[[hi!][[hi!][-1]] RetryOnPrimaryException[]] RetryOnPrimaryException[]", (int) (byte) -1);
        java.util.Set<java.lang.String> strSet31 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus32 = retryOnPrimaryException2.status();
        java.lang.Class<?> wildcardClass33 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "[[[hi!][[hi!][-1]] RetryOnPrimaryException[]] RetryOnPrimaryException[]][[[[hi!][[hi!][-1]] RetryOnPrimaryException[]] RetryOnPrimaryException[]][-1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "");
        org.junit.Assert.assertEquals(throwable27.toString(), "[[[hi!][[hi!][-1]] RetryOnPrimaryException[]] RetryOnPrimaryException[]][[[[hi!][[hi!][-1]] RetryOnPrimaryException[]] RetryOnPrimaryException[]][-1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertTrue("'" + restStatus32 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus32.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test8400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8400");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip");
        retryOnPrimaryException4.setShard("rest.exception.stacktrace.skip", 0);
        java.lang.Throwable throwable8 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
    }

    @Test
    public void test8401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8401");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        java.lang.String str4 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str9 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "RetryOnPrimaryException[]" + "'", str9, "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
    }

    @Test
    public void test8402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8402");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        retryOnPrimaryException20.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException20.guessRootCauses();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        retryOnPrimaryException20.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList31);
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException20.getHeader("hi!");
        java.lang.String str36 = retryOnPrimaryException20.toString();
        java.lang.String str37 = retryOnPrimaryException20.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "hi!");
        retryOnPrimaryException47.setShard("", 0);
        boolean boolean51 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray52 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.rest.RestStatus restStatus54 = retryOnPrimaryException47.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException55);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "hi!");
        retryOnPrimaryException60.setShard("", 0);
        java.lang.String str64 = retryOnPrimaryException60.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        retryOnPrimaryException60.setShard(shardId65);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        java.lang.Throwable throwable70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable70);
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException75 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId73, "hi!");
        retryOnPrimaryException75.setShard("", 0);
        boolean boolean79 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException75);
        java.util.List<java.lang.String> strList81 = retryOnPrimaryException75.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray86 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException75.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray86);
        retryOnPrimaryException71.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray86);
        retryOnPrimaryException60.setResources("RetryOnPrimaryException[hi!]", strArray86);
        retryOnPrimaryException55.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[hi!]", strArray86);
        retryOnPrimaryException20.addHeader("[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];", strArray86);
        retryOnPrimaryException15.setResources("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][0]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray86);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str36, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str37, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray52);
        org.junit.Assert.assertTrue("'" + restStatus54 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus54.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(strList81);
        org.junit.Assert.assertNotNull(strArray86);
    }

    @Test
    public void test8403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8403");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.Index index13 = retryOnPrimaryException12.getIndex();
        java.lang.String str14 = retryOnPrimaryException12.toString();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder15 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params16 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder17 = retryOnPrimaryException12.toXContent(xContentBuilder15, params16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];" + "'", str14, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(params16);
    }

    @Test
    public void test8404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8404");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException6.getResourceId();
        java.lang.Throwable throwable11 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][0]] RetryOnPrimaryException[hi!]", throwable11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException12.guessRootCauses();
        java.lang.String str14 = retryOnPrimaryException12.getDetailedMessage();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str14, "RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test8405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8405");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        retryOnPrimaryException15.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = retryOnPrimaryException15.guessRootCauses();
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        retryOnPrimaryException15.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList26);
        retryOnPrimaryException15.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException15.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "hi!");
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException39.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "", (java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.rest.RestStatus restStatus42 = retryOnPrimaryException41.status();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "hi!");
        retryOnPrimaryException46.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray50 = retryOnPrimaryException46.guessRootCauses();
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        retryOnPrimaryException46.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList57);
        retryOnPrimaryException41.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList57);
        retryOnPrimaryException15.addHeader("", (java.util.List<java.lang.String>) strList57);
        java.lang.String[] strArray65 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException15.setResources("RetryOnPrimaryException[]", strArray65);
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray65);
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "");
        retryOnPrimaryException71.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet75 = retryOnPrimaryException71.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId77 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException79 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId77, "hi!");
        retryOnPrimaryException79.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray83 = retryOnPrimaryException79.guessRootCauses();
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList90 = new java.util.ArrayList<java.lang.String>();
        boolean boolean91 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList90, strArray89);
        retryOnPrimaryException79.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList90);
        retryOnPrimaryException71.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList90);
        retryOnPrimaryException6.addHeader("hi!", (java.util.List<java.lang.String>) strList90);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException95 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException95.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[hi!];; RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.Set<java.lang.String> strSet98 = retryOnPrimaryException95.getHeaderKeys();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertTrue("'" + restStatus42 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus42.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray50);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray83);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + true + "'", boolean91 == true);
        org.junit.Assert.assertNotNull(strSet98);
    }

    @Test
    public void test8406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8406");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip");
        retryOnPrimaryException4.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException11.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException11.guessRootCauses();
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        retryOnPrimaryException11.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList22);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        retryOnPrimaryException28.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray32 = retryOnPrimaryException28.guessRootCauses();
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        retryOnPrimaryException28.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList39);
        retryOnPrimaryException28.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException28.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "hi!");
        java.util.List<java.lang.String> strList53 = retryOnPrimaryException52.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "", (java.lang.Throwable) retryOnPrimaryException52);
        org.elasticsearch.rest.RestStatus restStatus55 = retryOnPrimaryException54.status();
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "hi!");
        retryOnPrimaryException59.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray63 = retryOnPrimaryException59.guessRootCauses();
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        retryOnPrimaryException59.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList70);
        retryOnPrimaryException54.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList70);
        retryOnPrimaryException28.addHeader("", (java.util.List<java.lang.String>) strList70);
        java.lang.String[] strArray78 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException28.setResources("RetryOnPrimaryException[]", strArray78);
        retryOnPrimaryException11.setResources("RetryOnPrimaryException[hi!]", strArray78);
        retryOnPrimaryException4.setResources("hi!", strArray78);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException82 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str83 = retryOnPrimaryException82.toString();
        java.lang.String str84 = retryOnPrimaryException82.getResourceType();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray32);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertTrue("'" + restStatus55 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus55.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray63);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];" + "'", str83, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        org.junit.Assert.assertNull(str84);
    }

    @Test
    public void test8407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8407");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.util.List<java.lang.String> strList14 = null;
        retryOnPrimaryException11.addHeader("hi!", strList14);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException11);
        retryOnPrimaryException17.setIndex("[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]");
        java.lang.String str20 = retryOnPrimaryException17.getResourceType();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException17.writeTo(streamOutput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test8408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8408");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        retryOnPrimaryException2.setShard(shardId8);
        org.elasticsearch.index.Index index10 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "");
        java.lang.String str15 = retryOnPrimaryException14.getResourceType();
        java.lang.String str16 = retryOnPrimaryException14.getResourceType();
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException14.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException14);
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException14.getResourceId();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.Throwable throwable21 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];", (int) (short) 10);
        java.lang.String str25 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertNull(index10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "");
        org.junit.Assert.assertEquals(throwable21.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];][[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];][10]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test8409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8409");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[hi!]");
        java.lang.Throwable throwable9 = retryOnPrimaryException2.getRootCause();
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Class<?> wildcardClass11 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test8410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8410");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        java.lang.String str5 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "hi!");
        retryOnPrimaryException10.setShard("", 0);
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str17 = retryOnPrimaryException16.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable throwable19 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId21 = retryOnPrimaryException20.getShardId();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str17, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(shardId21);
    }

    @Test
    public void test8411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8411");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException6.getShardId();
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException6.getHeader("RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId28 = retryOnPrimaryException23.getShardId();
        retryOnPrimaryException23.setIndex("[hi!][[hi!][-1]] RetryOnPrimaryException[]");
        java.lang.String str31 = retryOnPrimaryException23.toString();
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException23);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException23);
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException23.getResourceId();
        java.lang.String str36 = retryOnPrimaryException23.toString();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "");
        java.lang.String str41 = retryOnPrimaryException40.getResourceType();
        java.lang.Throwable[] throwableArray42 = retryOnPrimaryException40.getSuppressed();
        java.lang.String str43 = retryOnPrimaryException40.getDetailedMessage();
        java.util.List<java.lang.String> strList44 = retryOnPrimaryException40.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.stacktrace.skip");
        retryOnPrimaryException48.setShard("rest.exception.stacktrace.skip", 0);
        java.lang.Throwable throwable52 = retryOnPrimaryException48.unwrapCause();
        java.util.List<java.lang.String> strList53 = retryOnPrimaryException48.getResourceId();
        java.lang.String str54 = retryOnPrimaryException48.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "hi!");
        retryOnPrimaryException58.setShard("", 0);
        org.elasticsearch.index.Index index62 = null;
        retryOnPrimaryException58.setIndex(index62);
        java.lang.Throwable throwable64 = retryOnPrimaryException58.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "");
        org.elasticsearch.rest.RestStatus restStatus70 = retryOnPrimaryException69.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "", (java.lang.Throwable) retryOnPrimaryException69);
        java.util.List<java.lang.String> strList73 = retryOnPrimaryException71.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str74 = retryOnPrimaryException71.toString();
        java.lang.String[] strArray79 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException71.setResources("", strArray79);
        boolean boolean81 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException71);
        java.lang.Throwable[] throwableArray82 = retryOnPrimaryException71.getSuppressed();
        retryOnPrimaryException58.addSuppressed((java.lang.Throwable) retryOnPrimaryException71);
        java.lang.Throwable throwable84 = retryOnPrimaryException71.getRootCause();
        java.util.List<java.lang.String> strList85 = retryOnPrimaryException71.getResourceId();
        retryOnPrimaryException48.addHeader("RetryOnPrimaryException[[hi!][[hi!][-1]] RetryOnPrimaryException[]]", strList85);
        retryOnPrimaryException40.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[hi!]", strList85);
        retryOnPrimaryException23.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList85);
        retryOnPrimaryException6.addHeader("", strList85);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str7, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(shardId28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[[hi!][[hi!][-1]] RetryOnPrimaryException[]] RetryOnPrimaryException[]" + "'", str31, "[[hi!][[hi!][-1]] RetryOnPrimaryException[]] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[[hi!][[hi!][-1]] RetryOnPrimaryException[]] RetryOnPrimaryException[]" + "'", str36, "[[hi!][[hi!][-1]] RetryOnPrimaryException[]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str43, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(throwable52);
        org.junit.Assert.assertEquals(throwable52.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable52.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable52.toString(), "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(throwable64);
        org.junit.Assert.assertEquals(throwable64.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable64.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable64.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus70 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus70.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str74, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(throwable84);
        org.junit.Assert.assertEquals(throwable84.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable84.getMessage(), "");
        org.junit.Assert.assertEquals(throwable84.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strList85);
    }

    @Test
    public void test8412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8412");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException4.setIndex(index5);
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable[] throwableArray8 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "hi!");
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException18.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.rest.RestStatus restStatus21 = retryOnPrimaryException20.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "");
        org.elasticsearch.rest.RestStatus restStatus29 = retryOnPrimaryException28.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.Throwable throwable31 = retryOnPrimaryException28.getRootCause();
        java.lang.String str32 = retryOnPrimaryException28.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "hi!");
        retryOnPrimaryException36.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray40 = retryOnPrimaryException36.guessRootCauses();
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        retryOnPrimaryException36.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException36.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException36.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "hi!");
        java.util.List<java.lang.String> strList61 = retryOnPrimaryException60.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "", (java.lang.Throwable) retryOnPrimaryException60);
        org.elasticsearch.rest.RestStatus restStatus63 = retryOnPrimaryException62.status();
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "hi!");
        retryOnPrimaryException67.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray71 = retryOnPrimaryException67.guessRootCauses();
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        retryOnPrimaryException67.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList78);
        retryOnPrimaryException62.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList78);
        retryOnPrimaryException36.addHeader("", (java.util.List<java.lang.String>) strList78);
        retryOnPrimaryException28.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList78);
        retryOnPrimaryException20.addHeader("RetryOnPrimaryException[hi!]", (java.util.List<java.lang.String>) strList78);
        retryOnPrimaryException4.addHeader("", (java.util.List<java.lang.String>) strList78);
        retryOnPrimaryException4.setShard("[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (byte) 10);
        java.lang.String str89 = retryOnPrimaryException4.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray90 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertTrue("'" + restStatus21 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus21.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus29 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus29.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "");
        org.junit.Assert.assertEquals(throwable31.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str32, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray40);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertTrue("'" + restStatus63 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus63.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray71);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][10]] RetryOnPrimaryException[hi!]" + "'", str89, "[[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][10]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray90);
    }

    @Test
    public void test8413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8413");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.stacktrace.skip");
        retryOnPrimaryException15.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException22.guessRootCauses();
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        retryOnPrimaryException22.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList33);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "hi!");
        retryOnPrimaryException39.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray43 = retryOnPrimaryException39.guessRootCauses();
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        retryOnPrimaryException39.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList50);
        retryOnPrimaryException39.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException39.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "hi!");
        java.util.List<java.lang.String> strList64 = retryOnPrimaryException63.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "", (java.lang.Throwable) retryOnPrimaryException63);
        org.elasticsearch.rest.RestStatus restStatus66 = retryOnPrimaryException65.status();
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "hi!");
        retryOnPrimaryException70.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray74 = retryOnPrimaryException70.guessRootCauses();
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        retryOnPrimaryException70.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList81);
        retryOnPrimaryException65.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList81);
        retryOnPrimaryException39.addHeader("", (java.util.List<java.lang.String>) strList81);
        java.lang.String[] strArray89 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException39.setResources("RetryOnPrimaryException[]", strArray89);
        retryOnPrimaryException22.setResources("RetryOnPrimaryException[hi!]", strArray89);
        retryOnPrimaryException15.setResources("hi!", strArray89);
        retryOnPrimaryException10.setResources("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray89);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException94 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException95 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException94);
        java.lang.String str96 = retryOnPrimaryException95.getDetailedMessage();
        java.lang.String str97 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException95);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray43);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertTrue("'" + restStatus66 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus66.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray74);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertEquals("'" + str96 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str96, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "retry_on_primary_exception" + "'", str97, "retry_on_primary_exception");
    }

    @Test
    public void test8414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8414");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test8415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8415");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.Index index9 = retryOnPrimaryException4.getIndex();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str11 = retryOnPrimaryException4.getResourceType();
        java.lang.Throwable throwable12 = retryOnPrimaryException4.getRootCause();
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "");
        org.junit.Assert.assertEquals(throwable12.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test8416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8416");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable7 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException6.guessRootCauses();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str11 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "");
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException16.getResourceId();
        org.elasticsearch.index.Index index22 = retryOnPrimaryException16.getIndex();
        java.lang.Throwable throwable23 = retryOnPrimaryException16.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException16);
        java.lang.String str25 = retryOnPrimaryException24.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "hi!");
        retryOnPrimaryException29.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.Index index34 = retryOnPrimaryException29.getIndex();
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "hi!");
        retryOnPrimaryException38.setShard("", 0);
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray43 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray44 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        retryOnPrimaryException38.setShard(shardId45);
        retryOnPrimaryException29.addSuppressed((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "");
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "hi!");
        retryOnPrimaryException53.addSuppressed((java.lang.Throwable) retryOnPrimaryException56);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        java.lang.Throwable throwable62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable62);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "hi!");
        retryOnPrimaryException67.setShard("", 0);
        boolean boolean71 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException67);
        java.util.List<java.lang.String> strList73 = retryOnPrimaryException67.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray78 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException67.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray78);
        retryOnPrimaryException63.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray78);
        retryOnPrimaryException58.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray78);
        retryOnPrimaryException38.addHeader("[][[][0]] RetryOnPrimaryException[hi!]", strArray78);
        retryOnPrimaryException24.setResources("rest.exception.stacktrace.skip", strArray78);
        java.lang.String str84 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException24);
        java.util.Set<java.lang.String> strSet85 = retryOnPrimaryException24.getHeaderKeys();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.util.List<java.lang.String> strList88 = retryOnPrimaryException24.getHeader("RetryOnPrimaryException[[[hi!][[hi!][-1]] RetryOnPrimaryException[]] RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "retry_on_primary_exception" + "'", str11, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(index22);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "");
        org.junit.Assert.assertEquals(throwable23.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(index34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray43);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray44);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "retry_on_primary_exception" + "'", str84, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet85);
        org.junit.Assert.assertNull(strList88);
    }

    @Test
    public void test8417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8417");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId10 = retryOnPrimaryException9.getShardId();
        org.elasticsearch.index.shard.ShardId shardId11 = retryOnPrimaryException9.getShardId();
        retryOnPrimaryException9.setIndex("retry_on_primary_exception");
        java.lang.Throwable[] throwableArray14 = retryOnPrimaryException9.getSuppressed();
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str16 = retryOnPrimaryException9.getResourceType();
        java.lang.Throwable throwable17 = retryOnPrimaryException9.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        retryOnPrimaryException9.setShard(shardId18);
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException9.getHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable23 = retryOnPrimaryException9.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException9.status();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable17.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable23.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8418");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException6.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId12 = retryOnPrimaryException11.getShardId();
        java.lang.Throwable throwable13 = retryOnPrimaryException11.getRootCause();
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException11.status();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNull(shardId12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable13.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8419");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException11.setShard("rest.exception.stacktrace.skip", (int) (short) 0);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable throwable16 = retryOnPrimaryException11.unwrapCause();
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable16);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, throwable16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable16.toString(), "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
    }

    @Test
    public void test8420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8420");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        org.elasticsearch.index.Index index6 = null;
        retryOnPrimaryException2.setIndex(index6);
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str10 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable[] throwableArray11 = retryOnPrimaryException2.getSuppressed();
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test8421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8421");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException6.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str12 = retryOnPrimaryException6.getResourceType();
        retryOnPrimaryException6.setShard("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (-1));
        java.lang.String str16 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException24.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "", (java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String str27 = retryOnPrimaryException24.toString();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "hi!");
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "");
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        retryOnPrimaryException37.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        java.util.List<java.lang.String> strList43 = null;
        retryOnPrimaryException40.addHeader("hi!", strList43);
        retryOnPrimaryException33.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", (java.lang.Throwable) retryOnPrimaryException40);
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException46.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray49);
        retryOnPrimaryException24.setResources("rest.exception.stacktrace.skip", strArray49);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException24);
        java.util.List<java.lang.String> strList53 = retryOnPrimaryException24.getResourceId();
        retryOnPrimaryException6.addHeader("hi!", strList53);
        boolean boolean55 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str16, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str27, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test8422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8422");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String str9 = retryOnPrimaryException7.getResourceType();
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException16);
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException16.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.Index index28 = retryOnPrimaryException23.getIndex();
        java.lang.Throwable throwable29 = retryOnPrimaryException23.getRootCause();
        retryOnPrimaryException23.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        retryOnPrimaryException23.setShard(shardId32);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        org.elasticsearch.index.Index index38 = null;
        retryOnPrimaryException37.setIndex(index38);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        java.lang.Throwable throwable43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable43);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "hi!");
        retryOnPrimaryException48.setShard("", 0);
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException48);
        java.util.List<java.lang.String> strList54 = retryOnPrimaryException48.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray59 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException48.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray59);
        retryOnPrimaryException44.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray59);
        retryOnPrimaryException37.setResources("retry_on_primary_exception", strArray59);
        java.util.List<java.lang.String> strList63 = retryOnPrimaryException37.getResourceId();
        retryOnPrimaryException23.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", strList63);
        retryOnPrimaryException19.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strList63);
        retryOnPrimaryException7.addHeader("RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]", strList63);
        retryOnPrimaryException7.setShard("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", 10);
        retryOnPrimaryException7.setShard("RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (byte) 10);
        boolean boolean73 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable throwable74 = retryOnPrimaryException7.unwrapCause();
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(index28);
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "");
        org.junit.Assert.assertEquals(throwable29.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(strList63);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(throwable74);
        org.junit.Assert.assertEquals(throwable74.getLocalizedMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable74.getMessage(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable74.toString(), "[RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
    }

    @Test
    public void test8423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8423");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[hi!]");
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[hi!]");
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable21 = retryOnPrimaryException2.unwrapCause();
        java.lang.Throwable throwable22 = retryOnPrimaryException2.unwrapCause();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable21.toString(), "[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable22.toString(), "[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8424");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        retryOnPrimaryException2.setShard("rest.exception.stacktrace.skip", 0);
        java.lang.Throwable throwable6 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder8 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params9 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder10 = retryOnPrimaryException2.toXContent(xContentBuilder8, params9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(params9);
    }

    @Test
    public void test8425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8425");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException9.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException9.guessRootCauses();
        org.elasticsearch.index.Index index12 = retryOnPrimaryException9.getIndex();
        java.lang.String str13 = retryOnPrimaryException9.toString();
        java.lang.Throwable throwable14 = retryOnPrimaryException9.unwrapCause();
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException9);
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException9.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "");
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException23.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "", (java.lang.Throwable) retryOnPrimaryException23);
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException25.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str28 = retryOnPrimaryException25.toString();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "hi!");
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "");
        retryOnPrimaryException36.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet40 = retryOnPrimaryException36.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        retryOnPrimaryException44.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray48 = retryOnPrimaryException44.guessRootCauses();
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        retryOnPrimaryException44.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException36.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException32.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException25.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException9.addHeader("[[RetryOnPrimaryException[]][[RetryOnPrimaryException[]][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException2.addHeader("[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[hi!]", (java.util.List<java.lang.String>) strList55);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNull(index12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str13, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str28, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray48);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
    }

    @Test
    public void test8426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8426");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.toString();
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index9 = retryOnPrimaryException4.getIndex();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId11 = retryOnPrimaryException4.getShardId();
        java.lang.String str12 = retryOnPrimaryException4.toString();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str7, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str12, "RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8427");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException2.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException26.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", (java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.rest.RestStatus restStatus29 = retryOnPrimaryException28.status();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "hi!");
        retryOnPrimaryException33.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = retryOnPrimaryException33.guessRootCauses();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        retryOnPrimaryException33.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList44);
        retryOnPrimaryException28.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList44);
        retryOnPrimaryException2.addHeader("", (java.util.List<java.lang.String>) strList44);
        java.lang.String[] strArray52 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[]", strArray52);
        java.lang.String str54 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean55 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertTrue("'" + restStatus29 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus29.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "retry_on_primary_exception" + "'", str54, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test8428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8428");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException13.setShard("", 0);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException13.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray24 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException13.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray24);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray24);
        java.lang.Throwable throwable27 = retryOnPrimaryException2.getRootCause();
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray29 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet30 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "");
        org.junit.Assert.assertEquals(throwable27.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray29);
        org.junit.Assert.assertNotNull(strSet30);
    }

    @Test
    public void test8429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8429");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException4.setIndex(index5);
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable[] throwableArray8 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        retryOnPrimaryException15.setShard("", 0);
        org.elasticsearch.index.Index index19 = null;
        retryOnPrimaryException15.setIndex(index19);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException15.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str24 = retryOnPrimaryException15.toString();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "");
        org.elasticsearch.rest.RestStatus restStatus33 = retryOnPrimaryException32.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException32);
        retryOnPrimaryException34.setShard("", 10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "", (java.lang.Throwable) retryOnPrimaryException34);
        java.lang.Throwable throwable39 = retryOnPrimaryException38.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "hi!");
        retryOnPrimaryException43.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = retryOnPrimaryException43.guessRootCauses();
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        retryOnPrimaryException43.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList54);
        retryOnPrimaryException43.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException43.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "hi!");
        java.util.List<java.lang.String> strList68 = retryOnPrimaryException67.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "", (java.lang.Throwable) retryOnPrimaryException67);
        org.elasticsearch.rest.RestStatus restStatus70 = retryOnPrimaryException69.status();
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "hi!");
        retryOnPrimaryException74.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray78 = retryOnPrimaryException74.guessRootCauses();
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        retryOnPrimaryException74.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList85);
        retryOnPrimaryException69.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList85);
        retryOnPrimaryException43.addHeader("", (java.util.List<java.lang.String>) strList85);
        java.lang.String[] strArray93 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException43.setResources("RetryOnPrimaryException[]", strArray93);
        retryOnPrimaryException38.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray93);
        retryOnPrimaryException15.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray93);
        retryOnPrimaryException4.setResources("[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray93);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray98 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        boolean boolean99 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]" + "'", str24, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus33 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus33.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "");
        org.junit.Assert.assertEquals(throwable39.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNull(strList68);
        org.junit.Assert.assertTrue("'" + restStatus70 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus70.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray78);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strArray93);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray98);
        org.junit.Assert.assertTrue("'" + boolean99 + "' != '" + false + "'", boolean99 == false);
    }

    @Test
    public void test8430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8430");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        org.elasticsearch.index.Index index3 = null;
        retryOnPrimaryException2.setIndex(index3);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        java.lang.Throwable throwable8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable8);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException13.setShard("", 0);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException13.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray24 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException13.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray24);
        retryOnPrimaryException9.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray24);
        retryOnPrimaryException2.setResources("retry_on_primary_exception", strArray24);
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "hi!");
        java.util.List<java.lang.String> strList34 = retryOnPrimaryException33.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "", (java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.rest.RestStatus restStatus36 = retryOnPrimaryException35.status();
        java.util.List<java.lang.String> strList37 = retryOnPrimaryException35.getResourceId();
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException35.getResourceId();
        java.lang.Throwable throwable39 = retryOnPrimaryException35.getRootCause();
        retryOnPrimaryException2.addSuppressed(throwable39);
        retryOnPrimaryException2.setIndex("[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.index.shard.ShardId shardId43 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertTrue("'" + restStatus36 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus36.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable39.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(shardId43);
    }

    @Test
    public void test8431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8431");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.stacktrace.skip");
        retryOnPrimaryException11.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "hi!");
        retryOnPrimaryException18.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = retryOnPrimaryException18.guessRootCauses();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException18.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList29);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "hi!");
        retryOnPrimaryException35.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = retryOnPrimaryException35.guessRootCauses();
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        retryOnPrimaryException35.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList46);
        retryOnPrimaryException35.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException35.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "hi!");
        java.util.List<java.lang.String> strList60 = retryOnPrimaryException59.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "", (java.lang.Throwable) retryOnPrimaryException59);
        org.elasticsearch.rest.RestStatus restStatus62 = retryOnPrimaryException61.status();
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "hi!");
        retryOnPrimaryException66.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray70 = retryOnPrimaryException66.guessRootCauses();
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        retryOnPrimaryException66.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList77);
        retryOnPrimaryException61.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList77);
        retryOnPrimaryException35.addHeader("", (java.util.List<java.lang.String>) strList77);
        java.lang.String[] strArray85 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException35.setResources("RetryOnPrimaryException[]", strArray85);
        retryOnPrimaryException18.setResources("RetryOnPrimaryException[hi!]", strArray85);
        retryOnPrimaryException11.setResources("hi!", strArray85);
        retryOnPrimaryException6.setResources("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray85);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException90 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray91 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException90);
        java.util.List<java.lang.String> strList92 = retryOnPrimaryException90.getResourceId();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertTrue("'" + restStatus62 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus62.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray70);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray91);
        org.junit.Assert.assertNull(strList92);
    }

    @Test
    public void test8432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8432");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException4.setIndex(index5);
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable[] throwableArray8 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str10 = retryOnPrimaryException9.getResourceType();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException9.getResourceId();
        java.lang.String str12 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException9);
        retryOnPrimaryException9.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "retry_on_primary_exception" + "'", str12, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test8433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8433");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str6 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException4.unwrapCause();
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException4.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        org.junit.Assert.assertNull(strList8);
    }

    @Test
    public void test8434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8434");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][35]] RetryOnPrimaryException[RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]]");
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException8.getShardId();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException17.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = retryOnPrimaryException17.guessRootCauses();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        retryOnPrimaryException17.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList28);
        retryOnPrimaryException17.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException17.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException41.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "", (java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.rest.RestStatus restStatus44 = retryOnPrimaryException43.status();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "hi!");
        retryOnPrimaryException48.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray52 = retryOnPrimaryException48.guessRootCauses();
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        retryOnPrimaryException48.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList59);
        retryOnPrimaryException43.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList59);
        retryOnPrimaryException17.addHeader("", (java.util.List<java.lang.String>) strList59);
        java.lang.String[] strArray67 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException17.setResources("RetryOnPrimaryException[]", strArray67);
        retryOnPrimaryException8.addHeader("rest.exception.stacktrace.skip", strArray67);
        retryOnPrimaryException4.setResources("[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray67);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray71 = retryOnPrimaryException4.guessRootCauses();
        java.util.Set<java.lang.String> strSet72 = retryOnPrimaryException4.getHeaderKeys();
        java.util.Set<java.lang.String> strSet73 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertTrue("'" + restStatus44 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus44.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray52);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(strSet73);
    }

    @Test
    public void test8435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8435");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException7.getShardId();
        java.lang.Throwable throwable9 = retryOnPrimaryException7.unwrapCause();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException7.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException7.writeTo(streamOutput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test8436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8436");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str11 = retryOnPrimaryException8.toString();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "");
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException18);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable throwable26 = retryOnPrimaryException24.unwrapCause();
        retryOnPrimaryException24.setIndex("rest.exception.cause.skip");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.index.shard.ShardId shardId31 = retryOnPrimaryException30.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray32 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        java.util.List<java.lang.String> strList41 = retryOnPrimaryException40.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "", (java.lang.Throwable) retryOnPrimaryException40);
        java.lang.String str43 = retryOnPrimaryException40.toString();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "hi!");
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException49);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "");
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "hi!");
        retryOnPrimaryException53.addSuppressed((java.lang.Throwable) retryOnPrimaryException56);
        java.util.List<java.lang.String> strList59 = null;
        retryOnPrimaryException56.addHeader("hi!", strList59);
        retryOnPrimaryException49.addSuppressed((java.lang.Throwable) retryOnPrimaryException56);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "", (java.lang.Throwable) retryOnPrimaryException56);
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException62.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray65);
        retryOnPrimaryException40.setResources("rest.exception.stacktrace.skip", strArray65);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException40);
        java.util.List<java.lang.String> strList69 = retryOnPrimaryException40.getResourceId();
        retryOnPrimaryException30.addHeader("RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]", strList69);
        java.lang.String str71 = retryOnPrimaryException30.getResourceType();
        retryOnPrimaryException30.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[hi!]", (int) (short) -1);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str11, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(shardId31);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray32);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str43, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strList69);
        org.junit.Assert.assertNull(str71);
    }

    @Test
    public void test8437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8437");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException6.setIndex(index10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str14 = retryOnPrimaryException13.getResourceType();
        java.lang.Class<?> wildcardClass15 = retryOnPrimaryException13.getClass();
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test8438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8438");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        java.lang.String str10 = retryOnPrimaryException6.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException6.setShard(shardId11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId15 = retryOnPrimaryException14.getShardId();
        java.lang.Throwable throwable16 = retryOnPrimaryException14.getRootCause();
        org.elasticsearch.common.io.stream.StreamInput streamInput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable18 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException14, streamInput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable16.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8439");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[][[][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "");
        retryOnPrimaryException11.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException11.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = retryOnPrimaryException19.guessRootCauses();
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        retryOnPrimaryException19.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList30);
        retryOnPrimaryException11.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList30);
        org.elasticsearch.rest.RestStatus restStatus34 = retryOnPrimaryException11.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = retryOnPrimaryException11.guessRootCauses();
        java.lang.Throwable throwable36 = retryOnPrimaryException11.unwrapCause();
        retryOnPrimaryException8.addSuppressed(throwable36);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "");
        java.lang.String str43 = retryOnPrimaryException42.getResourceType();
        java.lang.Throwable throwable44 = retryOnPrimaryException42.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip", throwable44);
        java.util.Set<java.lang.String> strSet46 = retryOnPrimaryException45.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "hi!");
        retryOnPrimaryException49.setShard("", 0);
        org.elasticsearch.index.Index index53 = null;
        retryOnPrimaryException49.setIndex(index53);
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException49.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException45.addSuppressed((java.lang.Throwable) retryOnPrimaryException49);
        java.util.List<java.lang.String> strList58 = retryOnPrimaryException45.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray59 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException45);
        retryOnPrimaryException45.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException45);
        retryOnPrimaryException8.setIndex("[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][100]] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertTrue("'" + restStatus34 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus34.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "");
        org.junit.Assert.assertEquals(throwable36.toString(), "[hi!][[hi!][-1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "");
        org.junit.Assert.assertEquals(throwable44.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray59);
    }

    @Test
    public void test8440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8440");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!", throwable4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = retryOnPrimaryException5.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "");
        java.lang.String str13 = retryOnPrimaryException12.getResourceType();
        java.lang.String str14 = retryOnPrimaryException12.getResourceType();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException12);
        java.lang.Throwable throwable16 = retryOnPrimaryException12.unwrapCause();
        retryOnPrimaryException5.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test8441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8441");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.Index index9 = retryOnPrimaryException4.getIndex();
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId11 = retryOnPrimaryException4.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId14 = retryOnPrimaryException13.getShardId();
        org.elasticsearch.index.shard.ShardId shardId15 = retryOnPrimaryException13.getShardId();
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNull(shardId15);
    }

    @Test
    public void test8442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8442");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException4.setIndex(index5);
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException4.status();
        java.lang.String str9 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str11 = retryOnPrimaryException10.getResourceType();
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test8443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8443");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException4.setIndex(index8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str12 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str15 = retryOnPrimaryException4.getDetailedMessage();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException4.getHeader("[RetryOnPrimaryException[hi!]] RetryOnPrimaryException[hi!]");
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException4.getHeader("[[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]][[[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]][0]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException4.status();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "retry_on_primary_exception" + "'", str12, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8444");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException6.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException6.getShardId();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "");
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.Index index17 = retryOnPrimaryException12.getIndex();
        java.lang.Throwable throwable18 = retryOnPrimaryException12.getRootCause();
        retryOnPrimaryException12.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        retryOnPrimaryException12.setShard(shardId21);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        org.elasticsearch.index.Index index27 = null;
        retryOnPrimaryException26.setIndex(index27);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        java.lang.Throwable throwable32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable32);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException37.setShard("", 0);
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException37);
        java.util.List<java.lang.String> strList43 = retryOnPrimaryException37.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray48 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException37.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray48);
        retryOnPrimaryException33.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray48);
        retryOnPrimaryException26.setResources("retry_on_primary_exception", strArray48);
        java.util.List<java.lang.String> strList52 = retryOnPrimaryException26.getResourceId();
        retryOnPrimaryException12.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", strList52);
        retryOnPrimaryException6.addHeader("[hi!] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", strList52);
        java.lang.String str55 = retryOnPrimaryException6.toString();
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException6.getResourceId();
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str7, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNull(index17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "");
        org.junit.Assert.assertEquals(throwable18.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strList52);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str55, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(strList56);
    }

    @Test
    public void test8445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8445");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException6.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str9 = retryOnPrimaryException6.toString();
        java.lang.String[] strArray14 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException6.setResources("", strArray14);
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException6.getSuppressed();
        java.lang.Throwable[] throwableArray18 = retryOnPrimaryException6.getSuppressed();
        retryOnPrimaryException6.setShard("[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]][35]] RetryOnPrimaryException[RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]]", (int) (short) -1);
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.Set<java.lang.String> strSet27 = retryOnPrimaryException26.getHeaderKeys();
        java.lang.String str28 = retryOnPrimaryException26.toString();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.stacktrace.skip");
        retryOnPrimaryException34.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "");
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "hi!");
        retryOnPrimaryException44.addSuppressed((java.lang.Throwable) retryOnPrimaryException47);
        java.util.List<java.lang.String> strList49 = retryOnPrimaryException44.getResourceId();
        org.elasticsearch.index.Index index50 = retryOnPrimaryException44.getIndex();
        java.lang.Throwable throwable51 = retryOnPrimaryException44.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "hi!");
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "");
        retryOnPrimaryException60.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet64 = retryOnPrimaryException60.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "hi!");
        retryOnPrimaryException68.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray72 = retryOnPrimaryException68.guessRootCauses();
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        retryOnPrimaryException68.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException60.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException56.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException52.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException34.addHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException26.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];", (java.util.List<java.lang.String>) strList79);
        java.lang.String str88 = retryOnPrimaryException6.getResourceType();
        boolean boolean89 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str9, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]" + "'", str28, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNull(index50);
        org.junit.Assert.assertNotNull(throwable51);
        org.junit.Assert.assertEquals(throwable51.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable51.getMessage(), "");
        org.junit.Assert.assertEquals(throwable51.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray72);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "" + "'", str88, "");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test8446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8446");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        java.lang.String str5 = retryOnPrimaryException4.getResourceType();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", throwable6);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException7.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException7.status();
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException7.status();
        java.lang.Throwable throwable11 = retryOnPrimaryException7.unwrapCause();
        java.lang.Class<?> wildcardClass12 = throwable11.getClass();
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test8447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8447");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException9.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException9.getResourceId();
        java.lang.String str13 = retryOnPrimaryException9.getDetailedMessage();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str13, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test8448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8448");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException6.getHeader("retry_on_primary_exception");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable14 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = retryOnPrimaryException19.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "", (java.lang.Throwable) retryOnPrimaryException19);
        java.util.List<java.lang.String> strList26 = retryOnPrimaryException24.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.stacktrace.skip");
        retryOnPrimaryException29.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = retryOnPrimaryException29.guessRootCauses();
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        throwable14.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", throwable14);
        java.lang.Throwable throwable37 = retryOnPrimaryException36.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = retryOnPrimaryException36.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = retryOnPrimaryException36.guessRootCauses();
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.common.io.stream.StreamInput streamInput41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception42 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException36, streamInput41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable37.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test8449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8449");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str11 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str13 = retryOnPrimaryException4.toString();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str11, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str13, "[][[][0]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8450");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        java.lang.String str5 = retryOnPrimaryException4.getResourceType();
        java.lang.Throwable[] throwableArray6 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable[] throwableArray8 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable[] throwableArray10 = retryOnPrimaryException4.getSuppressed();
        java.lang.String str11 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.Index index12 = retryOnPrimaryException4.getIndex();
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.common.io.stream.StreamInput streamInput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException15 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException4, streamInput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(index12);
        org.junit.Assert.assertNotNull(throwableArray13);
    }

    @Test
    public void test8451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8451");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException4.getShardId();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "");
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.Index index17 = retryOnPrimaryException12.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "");
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "hi!");
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.index.Index index29 = retryOnPrimaryException24.getIndex();
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException24.getHeader("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException24.setShard("[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (byte) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException35.setIndex("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];");
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        retryOnPrimaryException35.setShard("RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (int) (byte) 1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNull(index17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertNull(index29);
        org.junit.Assert.assertNull(strList31);
    }

    @Test
    public void test8452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8452");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.stacktrace.skip");
        retryOnPrimaryException13.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        retryOnPrimaryException20.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException20.guessRootCauses();
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        retryOnPrimaryException20.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList31);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException37.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = retryOnPrimaryException37.guessRootCauses();
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        retryOnPrimaryException37.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList48);
        retryOnPrimaryException37.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException37.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "hi!");
        java.util.List<java.lang.String> strList62 = retryOnPrimaryException61.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "", (java.lang.Throwable) retryOnPrimaryException61);
        org.elasticsearch.rest.RestStatus restStatus64 = retryOnPrimaryException63.status();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "hi!");
        retryOnPrimaryException68.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray72 = retryOnPrimaryException68.guessRootCauses();
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        retryOnPrimaryException68.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException63.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException37.addHeader("", (java.util.List<java.lang.String>) strList79);
        java.lang.String[] strArray87 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException37.setResources("RetryOnPrimaryException[]", strArray87);
        retryOnPrimaryException20.setResources("RetryOnPrimaryException[hi!]", strArray87);
        retryOnPrimaryException13.setResources("hi!", strArray87);
        retryOnPrimaryException8.setResources("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray87);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException92 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException8);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException93 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException92);
        java.lang.Throwable[] throwableArray94 = retryOnPrimaryException92.getSuppressed();
        java.lang.String str95 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException92);
        java.lang.String str96 = retryOnPrimaryException92.getResourceType();
        java.lang.Throwable[] throwableArray97 = retryOnPrimaryException92.getSuppressed();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNull(strList62);
        org.junit.Assert.assertTrue("'" + restStatus64 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus64.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray72);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNotNull(throwableArray94);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "retry_on_primary_exception" + "'", str95, "retry_on_primary_exception");
        org.junit.Assert.assertNull(str96);
        org.junit.Assert.assertNotNull(throwableArray97);
    }

    @Test
    public void test8453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8453");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException4.setIndex(index7);
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "hi!");
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException18.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "", (java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "", (java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException21.getSuppressed();
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String str24 = retryOnPrimaryException21.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "");
        retryOnPrimaryException28.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet32 = retryOnPrimaryException28.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "hi!");
        retryOnPrimaryException36.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray40 = retryOnPrimaryException36.guessRootCauses();
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        retryOnPrimaryException36.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException28.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException21.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList47);
        java.lang.Throwable throwable53 = retryOnPrimaryException4.unwrapCause();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray40);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(throwable53);
        org.junit.Assert.assertEquals(throwable53.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable53.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable53.toString(), "RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8454");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getHeader("retry_on_primary_exception");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable12 = retryOnPrimaryException4.getRootCause();
        java.lang.String str13 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "");
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException18.getResourceId();
        org.elasticsearch.index.Index index24 = retryOnPrimaryException18.getIndex();
        java.lang.Throwable throwable25 = retryOnPrimaryException18.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "");
        retryOnPrimaryException34.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet38 = retryOnPrimaryException34.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "hi!");
        retryOnPrimaryException42.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray46 = retryOnPrimaryException42.guessRootCauses();
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        retryOnPrimaryException42.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException34.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException30.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException26.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList53);
        java.lang.String str59 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException4.setIndex("");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(index24);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "");
        org.junit.Assert.assertEquals(throwable25.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray46);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "retry_on_primary_exception" + "'", str59, "retry_on_primary_exception");
    }

    @Test
    public void test8455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8455");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException6.setIndex(index7);
        java.lang.Throwable throwable9 = retryOnPrimaryException6.getRootCause();
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable[] throwableArray14 = retryOnPrimaryException11.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException11.guessRootCauses();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
    }

    @Test
    public void test8456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8456");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test8457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8457");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.Index index9 = retryOnPrimaryException4.getIndex();
        java.lang.Throwable throwable10 = retryOnPrimaryException4.unwrapCause();
        java.lang.Throwable throwable11 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.stacktrace.skip");
        retryOnPrimaryException17.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException17);
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException21.getResourceId();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        retryOnPrimaryException4.setShard("[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]", (int) (byte) 1);
        java.lang.String str27 = retryOnPrimaryException4.toString();
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "");
        org.elasticsearch.rest.RestStatus restStatus33 = retryOnPrimaryException32.status();
        java.lang.Throwable throwable34 = retryOnPrimaryException32.getRootCause();
        java.lang.String str35 = retryOnPrimaryException32.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "hi!");
        java.util.List<java.lang.String> strList44 = retryOnPrimaryException43.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "", (java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "", (java.lang.Throwable) retryOnPrimaryException45);
        java.lang.Throwable throwable47 = retryOnPrimaryException45.unwrapCause();
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException45);
        java.lang.Throwable throwable49 = retryOnPrimaryException45.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "");
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "hi!");
        retryOnPrimaryException53.addSuppressed((java.lang.Throwable) retryOnPrimaryException56);
        org.elasticsearch.index.Index index58 = retryOnPrimaryException53.getIndex();
        java.lang.Throwable throwable59 = retryOnPrimaryException53.getRootCause();
        retryOnPrimaryException53.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        retryOnPrimaryException53.setShard(shardId62);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "hi!");
        org.elasticsearch.index.Index index68 = null;
        retryOnPrimaryException67.setIndex(index68);
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        java.lang.Throwable throwable73 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", throwable73);
        org.elasticsearch.index.shard.ShardId shardId76 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException78 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId76, "hi!");
        retryOnPrimaryException78.setShard("", 0);
        boolean boolean82 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException78);
        java.util.List<java.lang.String> strList84 = retryOnPrimaryException78.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray89 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException78.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray89);
        retryOnPrimaryException74.setResources("[][[][0]] RetryOnPrimaryException[hi!]", strArray89);
        retryOnPrimaryException67.setResources("retry_on_primary_exception", strArray89);
        java.util.List<java.lang.String> strList93 = retryOnPrimaryException67.getResourceId();
        retryOnPrimaryException53.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", strList93);
        retryOnPrimaryException45.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strList93);
        retryOnPrimaryException32.addHeader("[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][[[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strList93);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", strList93);
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "");
        org.junit.Assert.assertEquals(throwable10.toString(), "[[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]][[[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]][1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "");
        org.junit.Assert.assertEquals(throwable11.toString(), "[[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]][[[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]][1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]][[[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]][1]] RetryOnPrimaryException[]" + "'", str27, "[[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]][[[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]][1]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + restStatus33 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus33.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str35, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "");
        org.junit.Assert.assertEquals(throwable47.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable49.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index58);
        org.junit.Assert.assertNotNull(throwable59);
        org.junit.Assert.assertEquals(throwable59.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable59.getMessage(), "");
        org.junit.Assert.assertEquals(throwable59.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strList93);
    }

    @Test
    public void test8458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8458");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException4.getShardId();
        java.lang.String str10 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException4.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test8459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8459");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        org.elasticsearch.index.Index index3 = null;
        retryOnPrimaryException2.setIndex(index3);
        java.lang.Throwable throwable5 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) (short) 100);
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException15);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException15.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException15);
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException15.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId20 = retryOnPrimaryException15.getShardId();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.Index index28 = retryOnPrimaryException23.getIndex();
        retryOnPrimaryException15.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.Throwable[] throwableArray30 = retryOnPrimaryException15.getSuppressed();
        java.lang.String str31 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.Throwable throwable32 = retryOnPrimaryException15.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = retryOnPrimaryException15.guessRootCauses();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException15.getHeaderKeys();
        java.lang.Throwable throwable35 = retryOnPrimaryException15.unwrapCause();
        retryOnPrimaryException2.addSuppressed(throwable35);
        java.lang.String str37 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable5.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip][100]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNull(shardId20);
        org.junit.Assert.assertNull(index28);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "retry_on_primary_exception" + "'", str31, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable32.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable35.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str37, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test8460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8460");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "rest.exception.stacktrace.skip");
        retryOnPrimaryException5.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = retryOnPrimaryException5.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "RetryOnPrimaryException[]");
        retryOnPrimaryException5.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str15 = retryOnPrimaryException5.getDetailedMessage();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException5.getHeader("retry_on_primary_exception");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        java.lang.String str19 = retryOnPrimaryException2.toString();
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (short) 10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "RetryOnPrimaryException[RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]]" + "'", str19, "RetryOnPrimaryException[RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]]");
    }

    @Test
    public void test8461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8461");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId3, "hi!");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.Index index7 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException2.setIndex(index10);
        java.lang.Throwable throwable12 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Class<?> wildcardClass16 = elasticsearchExceptionArray15.getClass();
        org.junit.Assert.assertNull(index7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "");
        org.junit.Assert.assertEquals(throwable12.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test8462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8462");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray3 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray4 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException2.status();
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.stacktrace.skip");
        retryOnPrimaryException9.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException9.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "RetryOnPrimaryException[]");
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = retryOnPrimaryException9.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException22.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException22.guessRootCauses();
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException22.getResourceId();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.util.List<java.lang.String> strList28 = retryOnPrimaryException9.getHeader("[] RetryOnPrimaryException[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
        java.lang.String str29 = retryOnPrimaryException9.getResourceType();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray3);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray4);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(str29);
    }

    @Test
    public void test8463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8463");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        retryOnPrimaryException2.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException9.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException9.guessRootCauses();
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        retryOnPrimaryException9.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList20);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray30 = retryOnPrimaryException26.guessRootCauses();
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        retryOnPrimaryException26.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList37);
        retryOnPrimaryException26.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException26.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "hi!");
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException50.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "", (java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.rest.RestStatus restStatus53 = retryOnPrimaryException52.status();
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "hi!");
        retryOnPrimaryException57.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray61 = retryOnPrimaryException57.guessRootCauses();
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        retryOnPrimaryException57.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList68);
        retryOnPrimaryException52.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList68);
        retryOnPrimaryException26.addHeader("", (java.util.List<java.lang.String>) strList68);
        java.lang.String[] strArray76 = new java.lang.String[] { "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", "[][[][0]] RetryOnPrimaryException[hi!]" };
        retryOnPrimaryException26.setResources("RetryOnPrimaryException[]", strArray76);
        retryOnPrimaryException9.setResources("RetryOnPrimaryException[hi!]", strArray76);
        retryOnPrimaryException2.setResources("hi!", strArray76);
        boolean boolean80 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId81 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException83 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId81, "rest.exception.stacktrace.skip");
        boolean boolean84 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException83);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException83);
        java.lang.Throwable throwable86 = retryOnPrimaryException83.unwrapCause();
        retryOnPrimaryException83.setIndex("");
        java.lang.String str89 = retryOnPrimaryException83.getDetailedMessage();
        java.lang.Throwable throwable90 = retryOnPrimaryException83.getRootCause();
        boolean boolean91 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException83);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray30);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertTrue("'" + restStatus53 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus53.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray61);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(throwable86);
        org.junit.Assert.assertEquals(throwable86.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable86.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable86.toString(), "[] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str89, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertNotNull(throwable90);
        org.junit.Assert.assertEquals(throwable90.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable90.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable90.toString(), "[] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test8464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8464");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException6.setIndex(index10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "");
        org.elasticsearch.rest.RestStatus restStatus21 = retryOnPrimaryException20.status();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "hi!");
        java.util.List<java.lang.String> strList28 = retryOnPrimaryException27.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", (java.lang.Throwable) retryOnPrimaryException27);
        java.lang.String str30 = retryOnPrimaryException27.toString();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "");
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        retryOnPrimaryException37.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException37);
        retryOnPrimaryException27.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "");
        org.elasticsearch.rest.RestStatus restStatus51 = retryOnPrimaryException50.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "", (java.lang.Throwable) retryOnPrimaryException50);
        java.util.List<java.lang.String> strList54 = retryOnPrimaryException52.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str55 = retryOnPrimaryException52.toString();
        java.lang.String[] strArray60 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException52.setResources("", strArray60);
        retryOnPrimaryException43.addHeader("RetryOnPrimaryException[hi!]", strArray60);
        retryOnPrimaryException20.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray60);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId65 = retryOnPrimaryException64.getShardId();
        retryOnPrimaryException15.addSuppressed((java.lang.Throwable) retryOnPrimaryException64);
        boolean boolean67 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray68 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException15.setIndex("[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]] RetryOnPrimaryException[hi!]");
        java.util.List<java.lang.String> strList71 = retryOnPrimaryException15.getResourceId();
        org.junit.Assert.assertTrue("'" + restStatus21 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus21.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str30, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus51 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus51.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str55, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNull(shardId65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray68);
        org.junit.Assert.assertNull(strList71);
    }

    @Test
    public void test8465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8465");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "");
        retryOnPrimaryException2.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet6 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "hi!");
        retryOnPrimaryException10.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException10.guessRootCauses();
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        retryOnPrimaryException10.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList21);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList21);
        org.elasticsearch.rest.RestStatus restStatus25 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet27 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException2, streamOutput28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + restStatus25 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus25.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertNotNull(strSet27);
    }

    @Test
    public void test8466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8466");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException7);
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.index.Index index10 = retryOnPrimaryException4.getIndex();
        java.lang.Throwable throwable11 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException12.getSuppressed();
        java.lang.Throwable throwable14 = retryOnPrimaryException12.getRootCause();
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(index10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test8467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8467");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        java.lang.String str7 = retryOnPrimaryException6.getResourceType();
        java.lang.Throwable throwable8 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip", throwable8);
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException9.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException9);
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException12.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        retryOnPrimaryException12.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test8468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8468");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.elasticsearch.common.io.stream.StreamInput streamInput3 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable4 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test8469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8469");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException7.getShardId();
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException7.getShardId();
        retryOnPrimaryException7.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId12 = retryOnPrimaryException7.getShardId();
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException7);
        retryOnPrimaryException7.setShard("[RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[RetryOnPrimaryException[[][[][0]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][-1]] RetryOnPrimaryException[hi!]", (-1));
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder17 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params18 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder19 = retryOnPrimaryException7.toXContent(xContentBuilder17, params18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNull(shardId12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(params18);
    }

    @Test
    public void test8470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8470");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("retry_on_primary_exception");
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getResourceId();
        java.lang.String str10 = retryOnPrimaryException2.toString();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]]");
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str10, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(shardId13);
    }

    @Test
    public void test8471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8471");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.util.List<java.lang.String> strList16 = null;
        retryOnPrimaryException13.addHeader("hi!", strList16);
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException13);
        java.lang.Throwable throwable20 = retryOnPrimaryException13.getRootCause();
        java.lang.String str21 = retryOnPrimaryException13.getDetailedMessage();
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException13.guessRootCauses();
        org.elasticsearch.index.Index index25 = null;
        retryOnPrimaryException13.setIndex(index25);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "");
        org.elasticsearch.rest.RestStatus restStatus32 = retryOnPrimaryException31.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "", (java.lang.Throwable) retryOnPrimaryException31);
        java.lang.String str34 = retryOnPrimaryException33.getDetailedMessage();
        retryOnPrimaryException33.setShard("[][[][0]] RetryOnPrimaryException[hi!]", (int) (short) 100);
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException33);
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException33);
        java.lang.String str40 = retryOnPrimaryException33.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException33);
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException33);
        java.lang.Throwable throwable43 = retryOnPrimaryException33.unwrapCause();
        java.util.List<java.lang.String> strList44 = retryOnPrimaryException33.getResourceId();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertTrue("'" + restStatus32 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus32.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str34, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "");
        org.junit.Assert.assertEquals(throwable43.toString(), "[[][[][0]] RetryOnPrimaryException[hi!]][[[][[][0]] RetryOnPrimaryException[hi!]][100]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(strList44);
    }

    @Test
    public void test8472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8472");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.util.List<java.lang.String> strList14 = null;
        retryOnPrimaryException11.addHeader("hi!", strList14);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable throwable18 = retryOnPrimaryException11.getRootCause();
        java.lang.String str19 = retryOnPrimaryException11.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "");
        org.elasticsearch.rest.RestStatus restStatus26 = retryOnPrimaryException25.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "", (java.lang.Throwable) retryOnPrimaryException25);
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException27.getHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str30 = retryOnPrimaryException27.toString();
        java.lang.String[] strArray35 = new java.lang.String[] { "RetryOnPrimaryException[]", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " };
        retryOnPrimaryException27.setResources("", strArray35);
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException27);
        java.lang.Throwable[] throwableArray38 = retryOnPrimaryException27.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "");
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "hi!");
        retryOnPrimaryException42.addSuppressed((java.lang.Throwable) retryOnPrimaryException45);
        org.elasticsearch.index.Index index47 = retryOnPrimaryException42.getIndex();
        java.lang.Throwable throwable48 = retryOnPrimaryException42.getRootCause();
        retryOnPrimaryException42.setIndex("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray51 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException42);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "hi!");
        java.util.List<java.lang.String> strList58 = retryOnPrimaryException57.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "", (java.lang.Throwable) retryOnPrimaryException57);
        java.lang.String str60 = retryOnPrimaryException57.toString();
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "hi!");
        boolean boolean67 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException66);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "");
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "hi!");
        retryOnPrimaryException70.addSuppressed((java.lang.Throwable) retryOnPrimaryException73);
        java.util.List<java.lang.String> strList76 = null;
        retryOnPrimaryException73.addHeader("hi!", strList76);
        retryOnPrimaryException66.addSuppressed((java.lang.Throwable) retryOnPrimaryException73);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException79 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "", (java.lang.Throwable) retryOnPrimaryException73);
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException79.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray82);
        retryOnPrimaryException57.setResources("rest.exception.stacktrace.skip", strArray82);
        retryOnPrimaryException42.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray82);
        retryOnPrimaryException27.addHeader("rest.exception.cause.skip", strArray82);
        retryOnPrimaryException11.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", strArray82);
        java.lang.String str88 = retryOnPrimaryException11.getResourceType();
        boolean boolean89 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str19, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + restStatus26 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus26.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];" + "'", str30, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNull(index47);
        org.junit.Assert.assertNotNull(throwable48);
        org.junit.Assert.assertEquals(throwable48.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable48.getMessage(), "");
        org.junit.Assert.assertEquals(throwable48.toString(), "[RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray51);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str60, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str88, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test8473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8473");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.String str6 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        java.lang.Throwable[] throwableArray9 = retryOnPrimaryException4.getSuppressed();
        java.lang.Throwable throwable10 = retryOnPrimaryException4.getRootCause();
        java.lang.Throwable[] throwableArray11 = throwable10.getSuppressed();
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]" + "'", str6, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test8474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8474");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException9);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test8475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8475");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable[] throwableArray9 = retryOnPrimaryException4.getSuppressed();
        retryOnPrimaryException4.setIndex("[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[rest.exception.stacktrace.skip];");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test8476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8476");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        java.lang.String str3 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable[] throwableArray6 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException2, streamOutput7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];" + "'", str3, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];]");
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(throwableArray6);
    }

    @Test
    public void test8477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8477");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.util.List<java.lang.String> strList12 = null;
        retryOnPrimaryException9.addHeader("hi!", strList12);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException9.getHeaderKeys();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException9.getHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.Set<java.lang.String> strSet18 = retryOnPrimaryException9.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(strSet18);
    }

    @Test
    public void test8478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8478");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException8.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str11 = retryOnPrimaryException8.toString();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "");
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException18);
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable throwable26 = retryOnPrimaryException24.unwrapCause();
        retryOnPrimaryException24.setIndex("rest.exception.cause.skip");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray31 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId32 = retryOnPrimaryException30.getShardId();
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "hi!");
        org.elasticsearch.index.Index index40 = null;
        retryOnPrimaryException39.setIndex(index40);
        java.lang.String str42 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException39);
        java.lang.Throwable[] throwableArray43 = retryOnPrimaryException39.getSuppressed();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "RetryOnPrimaryException[]", (java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "hi!");
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "");
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "hi!");
        retryOnPrimaryException52.addSuppressed((java.lang.Throwable) retryOnPrimaryException55);
        java.util.List<java.lang.String> strList58 = null;
        retryOnPrimaryException55.addHeader("hi!", strList58);
        retryOnPrimaryException48.addSuppressed((java.lang.Throwable) retryOnPrimaryException55);
        org.elasticsearch.index.shard.ShardId shardId61 = retryOnPrimaryException48.getShardId();
        retryOnPrimaryException39.addSuppressed((java.lang.Throwable) retryOnPrimaryException48);
        retryOnPrimaryException30.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        java.util.Set<java.lang.String> strSet64 = retryOnPrimaryException39.getHeaderKeys();
        java.util.List<java.lang.String> strList65 = retryOnPrimaryException39.getResourceId();
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str11, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray31);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "retry_on_primary_exception" + "'", str42, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNull(shardId61);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertNull(strList65);
    }

    @Test
    public void test8479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8479");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException2.status();
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.Throwable throwable19 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable19.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8480");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.List<java.lang.String> strList3 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "");
        java.lang.String str12 = retryOnPrimaryException11.getResourceType();
        java.lang.String str13 = retryOnPrimaryException11.getResourceType();
        retryOnPrimaryException11.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (-1));
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.stacktrace.skip");
        retryOnPrimaryException21.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException21);
        retryOnPrimaryException25.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "RetryOnPrimaryException[[][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; RetryOnPrimaryException[]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; [][[][10]] RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "hi!");
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "");
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        retryOnPrimaryException38.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.util.List<java.lang.String> strList44 = null;
        retryOnPrimaryException41.addHeader("hi!", strList44);
        retryOnPrimaryException34.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.util.Set<java.lang.String> strSet47 = retryOnPrimaryException41.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        retryOnPrimaryException41.setShard(shardId48);
        java.lang.String str50 = retryOnPrimaryException41.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "");
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "hi!");
        retryOnPrimaryException54.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        org.elasticsearch.index.Index index59 = retryOnPrimaryException54.getIndex();
        java.lang.Throwable throwable60 = retryOnPrimaryException54.unwrapCause();
        java.lang.String str61 = retryOnPrimaryException54.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus62 = retryOnPrimaryException54.status();
        org.elasticsearch.index.Index index63 = retryOnPrimaryException54.getIndex();
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "");
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "hi!");
        retryOnPrimaryException67.addSuppressed((java.lang.Throwable) retryOnPrimaryException70);
        org.elasticsearch.index.Index index72 = retryOnPrimaryException67.getIndex();
        java.lang.Throwable throwable73 = retryOnPrimaryException67.unwrapCause();
        boolean boolean74 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException67);
        org.elasticsearch.index.shard.ShardId shardId76 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException78 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId76, "hi!");
        retryOnPrimaryException78.setShard("", 0);
        boolean boolean82 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException78);
        java.util.List<java.lang.String> strList84 = retryOnPrimaryException78.getHeader("retry_on_primary_exception");
        java.lang.String[] strArray89 = new java.lang.String[] { "[][[][0]] RetryOnPrimaryException[hi!]", "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" };
        retryOnPrimaryException78.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", strArray89);
        retryOnPrimaryException67.setResources("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray89);
        retryOnPrimaryException54.addHeader("RetryOnPrimaryException[[retry_on_primary_exception] RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];]", strArray89);
        retryOnPrimaryException41.setResources("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", strArray89);
        retryOnPrimaryException30.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", strArray89);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[[[hi!][[hi!][-1]] RetryOnPrimaryException[]] RetryOnPrimaryException[]]; nested: RetryOnPrimaryException[hi!];", strArray89);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray96 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable97 = retryOnPrimaryException2.unwrapCause();
        java.lang.Throwable[] throwableArray98 = throwable97.getSuppressed();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str50, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index59);
        org.junit.Assert.assertNotNull(throwable60);
        org.junit.Assert.assertEquals(throwable60.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable60.getMessage(), "");
        org.junit.Assert.assertEquals(throwable60.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertTrue("'" + restStatus62 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus62.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index63);
        org.junit.Assert.assertNull(index72);
        org.junit.Assert.assertNotNull(throwable73);
        org.junit.Assert.assertEquals(throwable73.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable73.getMessage(), "");
        org.junit.Assert.assertEquals(throwable73.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + false + "'", boolean82 == false);
        org.junit.Assert.assertNull(strList84);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray96);
        org.junit.Assert.assertNotNull(throwable97);
        org.junit.Assert.assertEquals(throwable97.getLocalizedMessage(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable97.getMessage(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertEquals(throwable97.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]");
        org.junit.Assert.assertNotNull(throwableArray98);
    }

    @Test
    public void test8481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8481");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException8);
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException8.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException8.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test8482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8482");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException6.guessRootCauses();
        java.lang.Throwable throwable16 = retryOnPrimaryException6.getRootCause();
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException6.getHeaderKeys();
        java.lang.String str18 = retryOnPrimaryException6.toString();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("", 0);
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        retryOnPrimaryException21.setShard(shardId27);
        java.lang.String str29 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException21);
        retryOnPrimaryException21.setIndex("");
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.Throwable[] throwableArray33 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.common.io.stream.StreamInput streamInput34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException35 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException6, streamInput34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable16.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str18, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "retry_on_primary_exception" + "'", str29, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray33);
    }

    @Test
    public void test8483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8483");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test8484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8484");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "");
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException14);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable throwable22 = retryOnPrimaryException20.unwrapCause();
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str24 = retryOnPrimaryException20.toString();
        java.lang.String str25 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable[] throwableArray27 = retryOnPrimaryException20.getSuppressed();
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException20.getHeaderKeys();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str7, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.stacktrace.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];" + "'", str24, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "retry_on_primary_exception" + "'", str25, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(strSet28);
    }

    @Test
    public void test8485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8485");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        java.lang.String str5 = retryOnPrimaryException4.getResourceType();
        java.lang.String str6 = retryOnPrimaryException4.getResourceType();
        java.lang.Throwable[] throwableArray7 = retryOnPrimaryException4.getSuppressed();
        java.lang.Throwable throwable8 = retryOnPrimaryException4.unwrapCause();
        retryOnPrimaryException4.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException4.status();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "");
        org.junit.Assert.assertEquals(throwable8.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8486");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.toString();
        java.lang.Throwable[] throwableArray8 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getResourceId();
        java.lang.Throwable throwable11 = retryOnPrimaryException4.unwrapCause();
        java.lang.String str12 = retryOnPrimaryException4.getResourceType();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str7, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test8487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8487");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        retryOnPrimaryException4.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList15);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "");
        java.lang.String str24 = retryOnPrimaryException23.getResourceType();
        java.lang.Throwable throwable25 = retryOnPrimaryException23.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip", throwable25);
        boolean boolean27 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable25);
        retryOnPrimaryException18.addSuppressed(throwable25);
        retryOnPrimaryException18.setIndex("[RetryOnPrimaryException[hi!]][[RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[hi!]");
        java.lang.Throwable throwable31 = retryOnPrimaryException18.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray32 = retryOnPrimaryException18.guessRootCauses();
        java.util.List<java.lang.String> strList34 = retryOnPrimaryException18.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException18.getResourceId();
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "");
        org.junit.Assert.assertEquals(throwable25.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable31.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray32);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test8488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8488");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException8.setShard("", 10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable13 = retryOnPrimaryException12.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId14 = retryOnPrimaryException12.getShardId();
        java.lang.Throwable throwable15 = retryOnPrimaryException12.unwrapCause();
        java.lang.String str16 = retryOnPrimaryException12.getResourceType();
        java.lang.String str17 = retryOnPrimaryException12.getResourceType();
        java.util.Set<java.lang.String> strSet18 = retryOnPrimaryException12.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException12);
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "");
        org.junit.Assert.assertEquals(throwable13.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[]; nested: RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
    }

    @Test
    public void test8489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8489");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException4.setIndex(index7);
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str11 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.String str12 = retryOnPrimaryException4.toString();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str11, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str12, "RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8490");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", (java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) '#');
        java.lang.Throwable[] throwableArray10 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException4.status();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test8491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8491");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[hi!]");
        retryOnPrimaryException2.setShard("hi!", (int) ' ');
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException26.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "", (java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.rest.RestStatus restStatus29 = retryOnPrimaryException28.status();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "hi!");
        retryOnPrimaryException33.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = retryOnPrimaryException33.guessRootCauses();
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        retryOnPrimaryException33.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList44);
        retryOnPrimaryException28.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList44);
        retryOnPrimaryException2.addHeader("", (java.util.List<java.lang.String>) strList44);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        retryOnPrimaryException2.setShard(shardId49);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray51 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Class<?> wildcardClass52 = elasticsearchExceptionArray51.getClass();
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertTrue("'" + restStatus29 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus29.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test8492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8492");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("", 0);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str9 = retryOnPrimaryException2.toString();
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder13 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params14 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder15 = retryOnPrimaryException2.toXContent(xContentBuilder13, params14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str9, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(params14);
    }

    @Test
    public void test8493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8493");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        java.lang.String str5 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "hi!");
        retryOnPrimaryException10.setShard("", 0);
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str17 = retryOnPrimaryException16.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable throwable19 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable21 = retryOnPrimaryException20.unwrapCause();
        org.elasticsearch.index.Index index22 = retryOnPrimaryException20.getIndex();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setShard("", (int) ' ');
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException29);
        java.lang.Throwable throwable34 = retryOnPrimaryException29.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "", (java.lang.Throwable) retryOnPrimaryException29);
        retryOnPrimaryException20.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];" + "'", str17, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]");
        org.junit.Assert.assertEquals(throwable21.toString(), "RetryOnPrimaryException[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]]; nested: RetryOnPrimaryException[];");
        org.junit.Assert.assertNull(index22);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "[][[][32]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test8494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8494");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.stacktrace.skip");
        retryOnPrimaryException6.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException10.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", (java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "hi!");
        retryOnPrimaryException18.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = retryOnPrimaryException18.guessRootCauses();
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException18.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList29);
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException18.getHeader("hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]", (java.lang.Throwable) retryOnPrimaryException18);
        java.lang.String str35 = retryOnPrimaryException18.toString();
        java.lang.String str36 = retryOnPrimaryException18.getResourceType();
        java.lang.Throwable throwable37 = retryOnPrimaryException18.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.index.Index index45 = retryOnPrimaryException43.getIndex();
        org.elasticsearch.index.Index index46 = retryOnPrimaryException43.getIndex();
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "hi!");
        java.util.List<java.lang.String> strList53 = retryOnPrimaryException52.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "", (java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String str55 = retryOnPrimaryException52.toString();
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "hi!");
        boolean boolean62 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException61);
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "");
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "hi!");
        retryOnPrimaryException65.addSuppressed((java.lang.Throwable) retryOnPrimaryException68);
        java.util.List<java.lang.String> strList71 = null;
        retryOnPrimaryException68.addHeader("hi!", strList71);
        retryOnPrimaryException61.addSuppressed((java.lang.Throwable) retryOnPrimaryException68);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "", (java.lang.Throwable) retryOnPrimaryException68);
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!" };
        retryOnPrimaryException74.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray77);
        retryOnPrimaryException52.setResources("rest.exception.stacktrace.skip", strArray77);
        java.lang.String str80 = retryOnPrimaryException52.toString();
        java.lang.Throwable throwable81 = retryOnPrimaryException52.getRootCause();
        java.util.List<java.lang.String> strList82 = retryOnPrimaryException52.getResourceId();
        retryOnPrimaryException43.addHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[];", strList82);
        retryOnPrimaryException18.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", strList82);
        retryOnPrimaryException12.addHeader("[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[rest.exception.stacktrace.skip]; nested: RetryOnPrimaryException[hi!];][100]] RetryOnPrimaryException[]", strList82);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[][[][0]] RetryOnPrimaryException[hi!]" + "'", str35, "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable37.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index45);
        org.junit.Assert.assertNull(index46);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str55, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str80, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable81);
        org.junit.Assert.assertEquals(throwable81.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable81.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable81.toString(), "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strList82);
    }

    @Test
    public void test8495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8495");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("", 0);
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException13.getHeader("rest.exception.stacktrace.skip");
        java.lang.Throwable[] throwableArray16 = retryOnPrimaryException13.getSuppressed();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException13.getResourceId();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException13);
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException13.getResourceId();
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(strList19);
    }

    @Test
    public void test8496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8496");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "");
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException8.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException8);
        java.lang.Throwable throwable11 = retryOnPrimaryException8.getRootCause();
        java.lang.Throwable throwable12 = retryOnPrimaryException8.unwrapCause();
        retryOnPrimaryException2.addSuppressed(throwable12);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "");
        org.junit.Assert.assertEquals(throwable12.toString(), "RetryOnPrimaryException[]");
    }

    @Test
    public void test8497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8497");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.toString();
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException13.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException13.guessRootCauses();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", (java.lang.Throwable) retryOnPrimaryException13);
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException18.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException18.status();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "");
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "hi!");
        retryOnPrimaryException28.addSuppressed((java.lang.Throwable) retryOnPrimaryException31);
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException28.getResourceId();
        org.elasticsearch.index.Index index34 = retryOnPrimaryException28.getIndex();
        java.lang.Throwable throwable35 = retryOnPrimaryException28.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "");
        retryOnPrimaryException44.setShard("hi!", (int) (short) -1);
        java.util.Set<java.lang.String> strSet48 = retryOnPrimaryException44.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "hi!");
        retryOnPrimaryException52.setShard("", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray56 = retryOnPrimaryException52.guessRootCauses();
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "retry_on_primary_exception", "", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        retryOnPrimaryException52.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException44.addHeader("RetryOnPrimaryException[RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException40.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException36.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException18.addHeader("RetryOnPrimaryException[]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException18.setShard("[retry_on_primary_exception][[retry_on_primary_exception][100]] RetryOnPrimaryException[hi!]", (int) 'a');
        retryOnPrimaryException18.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: RetryOnPrimaryException[]; nested: RetryOnPrimaryException[];");
        java.util.List<java.lang.String> strList75 = retryOnPrimaryException18.getResourceId();
        java.lang.Throwable throwable76 = retryOnPrimaryException18.getRootCause();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[hi!]" + "'", str7, "RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(index34);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "");
        org.junit.Assert.assertEquals(throwable35.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray56);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNull(strList75);
        org.junit.Assert.assertNotNull(throwable76);
        org.junit.Assert.assertEquals(throwable76.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable76.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable76.toString(), "[][[][0]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test8498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8498");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException4.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException6.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException6.status();
        java.lang.Throwable[] throwableArray9 = retryOnPrimaryException6.getSuppressed();
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test8499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8499");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        org.elasticsearch.index.shard.ShardId shardId3 = null;
        retryOnPrimaryException2.setShard(shardId3);
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId6 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "");
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException13.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "", (java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = retryOnPrimaryException15.guessRootCauses();
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test8500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest16.test8500");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "");
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[hi!]", (java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException8.setShard("", 10);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException8);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException12.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException12.status();
        org.elasticsearch.index.Index index16 = retryOnPrimaryException12.getIndex();
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index16);
    }
}

