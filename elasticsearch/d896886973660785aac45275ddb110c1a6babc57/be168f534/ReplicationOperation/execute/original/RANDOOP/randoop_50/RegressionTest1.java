import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest1 {

    public static boolean debug = false;

    @Test
    public void test0501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0501");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.common.io.stream.StreamInput streamInput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception9 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException4, streamInput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0502");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index27 = retryOnPrimaryException26.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "hi!");
        retryOnPrimaryException32.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        retryOnPrimaryException39.setIndex("");
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException39.setResources("", strArray48);
        retryOnPrimaryException32.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray48);
        java.lang.String str51 = retryOnPrimaryException32.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index55 = retryOnPrimaryException54.getIndex();
        retryOnPrimaryException32.addSuppressed((java.lang.Throwable) retryOnPrimaryException54);
        retryOnPrimaryException54.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet63 = retryOnPrimaryException62.getHeaderKeys();
        java.lang.Throwable throwable64 = retryOnPrimaryException62.getRootCause();
        java.lang.String[] strArray70 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        retryOnPrimaryException62.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList71);
        retryOnPrimaryException54.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList71);
        retryOnPrimaryException26.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList71);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str51, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index55);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNotNull(throwable64);
        org.junit.Assert.assertEquals(throwable64.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable64.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable64.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
    }

    @Test
    public void test0503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0503");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.unwrapCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable15);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0504");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        retryOnPrimaryException11.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray42);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        java.util.Set<java.lang.String> strSet50 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet51 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput52 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(strSet51);
    }

    @Test
    public void test0505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0505");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable[] throwableArray18 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable throwable19 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0506");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        org.elasticsearch.index.Index index23 = null;
        retryOnPrimaryException4.setIndex(index23);
        java.lang.Throwable throwable25 = retryOnPrimaryException4.unwrapCause();
        java.lang.Throwable throwable26 = retryOnPrimaryException4.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable25.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test0507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0507");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException2.getShardId();
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray9 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException11 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(throwableArray9);
    }

    @Test
    public void test0508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0508");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable18 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test0509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0509");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        java.lang.Throwable throwable24 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable26 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0510");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        java.lang.Throwable throwable11 = retryOnPrimaryException2.unwrapCause();
        java.lang.Class<?> wildcardClass12 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0511");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException4.status();
        java.lang.String str25 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.String str26 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!");
        retryOnPrimaryException30.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        retryOnPrimaryException37.setIndex("");
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException37.setResources("", strArray46);
        retryOnPrimaryException30.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray46);
        java.lang.Throwable[] throwableArray49 = retryOnPrimaryException30.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus50 = retryOnPrimaryException30.status();
        java.lang.String str51 = retryOnPrimaryException30.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet56 = retryOnPrimaryException55.getHeaderKeys();
        java.lang.Throwable throwable57 = retryOnPrimaryException55.getRootCause();
        java.lang.String[] strArray63 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        retryOnPrimaryException55.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList64);
        java.util.List<java.lang.String> strList68 = null;
        retryOnPrimaryException55.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList68);
        boolean boolean70 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException55);
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "hi!");
        retryOnPrimaryException74.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId79 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException81 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId79, "rest.exception.cause.skip");
        retryOnPrimaryException81.setIndex("");
        java.lang.String[] strArray90 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException81.setResources("", strArray90);
        retryOnPrimaryException74.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray90);
        retryOnPrimaryException55.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray90);
        retryOnPrimaryException30.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray90);
        retryOnPrimaryException4.addHeader("retry_on_primary_exception", strArray90);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str26, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertTrue("'" + restStatus50 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus50.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str51, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNotNull(throwable57);
        org.junit.Assert.assertEquals(throwable57.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable57.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable57.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(strArray90);
    }

    @Test
    public void test0512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0512");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getResourceType();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamInput streamInput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable11 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0513");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str9 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test0514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0514");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        java.lang.Throwable throwable24 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.cause.skip");
        retryOnPrimaryException27.setIndex("");
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray31 = retryOnPrimaryException27.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId32 = retryOnPrimaryException27.getShardId();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray34 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException27);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray31);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray34);
    }

    @Test
    public void test0515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0515");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable28 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        java.lang.Throwable throwable35 = retryOnPrimaryException34.unwrapCause();
        java.lang.String[] strArray39 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        retryOnPrimaryException34.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList40);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        retryOnPrimaryException46.setIndex("");
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        retryOnPrimaryException52.setIndex("");
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException52.setResources("", strArray61);
        java.lang.String str63 = retryOnPrimaryException52.toString();
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String str65 = retryOnPrimaryException46.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        retryOnPrimaryException46.setShard(shardId66);
        java.lang.String[] strArray78 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        retryOnPrimaryException46.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException34.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList79);
        java.util.List<java.lang.String> strList84 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray85 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.toString(), "[[] RetryOnPrimaryException[rest.exception.cause.skip]][[[] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str63, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray85);
    }

    @Test
    public void test0516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0516");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str18 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        java.lang.String str41 = retryOnPrimaryException22.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index45 = retryOnPrimaryException44.getIndex();
        retryOnPrimaryException22.addSuppressed((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.index.Index index47 = retryOnPrimaryException44.getIndex();
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "rest.exception.cause.skip");
        retryOnPrimaryException51.setIndex("");
        java.lang.Throwable[] throwableArray54 = retryOnPrimaryException51.getSuppressed();
        java.lang.String[] strArray59 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException51.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray59);
        retryOnPrimaryException44.setResources("hi!", strArray59);
        retryOnPrimaryException2.addHeader("", strArray59);
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index67 = retryOnPrimaryException66.getIndex();
        java.lang.String str68 = retryOnPrimaryException66.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "hi!");
        retryOnPrimaryException72.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId77 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException79 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId77, "rest.exception.cause.skip");
        retryOnPrimaryException79.setIndex("");
        java.lang.String[] strArray88 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException79.setResources("", strArray88);
        retryOnPrimaryException72.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray88);
        retryOnPrimaryException66.setResources("", strArray88);
        retryOnPrimaryException2.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray88);
        java.lang.String str93 = retryOnPrimaryException2.toString();
        org.elasticsearch.common.io.stream.StreamInput streamInput94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException95 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException2, streamInput94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str18, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str41, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index45);
        org.junit.Assert.assertNull(index47);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNull(index67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str68, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str93, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0517");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        java.lang.Throwable[] throwableArray16 = retryOnPrimaryException13.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.Class<?> wildcardClass18 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0518");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException14.setResources("", strArray23);
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String str26 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.Throwable throwable27 = retryOnPrimaryException14.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String str29 = retryOnPrimaryException14.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput30 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException14.writeTo(streamOutput30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "retry_on_primary_exception" + "'", str26, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str29, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test0519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0519");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index27 = retryOnPrimaryException26.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.Index index29 = retryOnPrimaryException26.getIndex();
        java.lang.String str30 = retryOnPrimaryException26.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertNull(index29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str30, "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0520");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.common.io.stream.StreamInput streamInput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException4, streamInput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0521");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamInput streamInput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException2, streamInput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
    }

    @Test
    public void test0522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0522");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException4.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList13);
        java.util.List<java.lang.String> strList17 = null;
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList17);
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str20 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        retryOnPrimaryException31.setIndex("");
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException31.setResources("", strArray40);
        retryOnPrimaryException24.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray40);
        retryOnPrimaryException4.setResources("rest.exception.stacktrace.skip", strArray40);
        org.elasticsearch.index.Index index44 = retryOnPrimaryException4.getIndex();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str20, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNull(index44);
    }

    @Test
    public void test0523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0523");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setIndex("hi!");
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Class<?> wildcardClass24 = retryOnPrimaryException4.getClass();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test0524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0524");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException7.unwrapCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException7.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray26);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable38 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception40 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException2, streamOutput39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0525");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        retryOnPrimaryException4.setShard(shardId8);
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException14.setResources("", strArray23);
        retryOnPrimaryException4.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray23);
        org.elasticsearch.index.Index index26 = null;
        retryOnPrimaryException4.setIndex(index26);
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException4.status();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test0526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0526");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray28 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("rest.exception.cause.skip", strArray28);
        retryOnPrimaryException2.setShard("", (int) (short) 1);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput33 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray28);
    }

    @Test
    public void test0527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0527");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        retryOnPrimaryException4.setShard(shardId8);
        java.lang.String str10 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.Index index11 = null;
        retryOnPrimaryException4.setIndex(index11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        java.lang.String[] strArray28 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        retryOnPrimaryException21.setShard(shardId30);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray32 = retryOnPrimaryException21.guessRootCauses();
        java.lang.String str33 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException21);
        java.lang.Throwable throwable35 = retryOnPrimaryException21.unwrapCause();
        retryOnPrimaryException21.setIndex("rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        retryOnPrimaryException41.setIndex("");
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException41.setResources("", strArray50);
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "hi!");
        retryOnPrimaryException56.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "rest.exception.cause.skip");
        retryOnPrimaryException63.setIndex("");
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException63.setResources("", strArray72);
        retryOnPrimaryException56.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray72);
        retryOnPrimaryException41.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray72);
        retryOnPrimaryException21.setResources("hi!", strArray72);
        retryOnPrimaryException4.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray72);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str10, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "retry_on_primary_exception" + "'", str33, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strArray72);
    }

    @Test
    public void test0528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0528");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        java.lang.String str12 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.common.io.stream.StreamInput streamInput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException16 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test0529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0529");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        retryOnPrimaryException4.setIndex("rest.exception.cause.skip");
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException4.status();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test0530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0530");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index27 = retryOnPrimaryException26.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException4.getSuppressed();
        java.lang.String str30 = retryOnPrimaryException4.getResourceType();
        java.lang.Throwable[] throwableArray31 = retryOnPrimaryException4.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str30, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray31);
    }

    @Test
    public void test0531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0531");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException8.getHeaderKeys();
        retryOnPrimaryException8.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException19.setIndex(index22);
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException19.status();
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        throwable5.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "retry_on_primary_exception");
        java.lang.String str32 = retryOnPrimaryException31.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException31);
        java.lang.Throwable throwable34 = retryOnPrimaryException31.getRootCause();
        retryOnPrimaryException31.setIndex("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.common.io.stream.StreamInput streamInput38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable39 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException19, streamInput38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str32, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable34.toString(), "[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[retry_on_primary_exception]");
    }

    @Test
    public void test0532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0532");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable28 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        java.lang.Throwable throwable35 = retryOnPrimaryException34.unwrapCause();
        java.lang.String[] strArray39 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        retryOnPrimaryException34.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList40);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        retryOnPrimaryException46.setIndex("");
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        retryOnPrimaryException52.setIndex("");
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException52.setResources("", strArray61);
        java.lang.String str63 = retryOnPrimaryException52.toString();
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String str65 = retryOnPrimaryException46.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        retryOnPrimaryException46.setShard(shardId66);
        java.lang.String[] strArray78 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        retryOnPrimaryException46.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException34.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList79);
        java.util.List<java.lang.String> strList84 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId85 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException87 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId85, "rest.exception.cause.skip");
        retryOnPrimaryException87.setIndex("");
        java.lang.Throwable[] throwableArray90 = retryOnPrimaryException87.getSuppressed();
        java.lang.String[] strArray95 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException87.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray95);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException87);
        org.elasticsearch.rest.RestStatus restStatus98 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.toString(), "[[] RetryOnPrimaryException[rest.exception.cause.skip]][[[] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str63, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertTrue("'" + restStatus98 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus98.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test0533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0533");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException13 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException2, streamOutput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
    }

    @Test
    public void test0534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0534");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "retry_on_primary_exception");
        java.lang.String str10 = retryOnPrimaryException9.toString();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("", strArray29);
        java.lang.String str31 = retryOnPrimaryException20.toString();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str33 = retryOnPrimaryException14.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        retryOnPrimaryException14.setShard(shardId34);
        java.lang.String[] strArray46 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        retryOnPrimaryException14.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException9.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", 0);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder55 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params56 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder57 = retryOnPrimaryException2.toXContent(xContentBuilder55, params56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str10, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str31, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(params56);
    }

    @Test
    public void test0535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0535");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        java.lang.String[] strArray22 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        retryOnPrimaryException15.setShard(shardId24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException15.guessRootCauses();
        java.lang.String str27 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.Throwable throwable29 = retryOnPrimaryException15.unwrapCause();
        retryOnPrimaryException15.setIndex("rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "rest.exception.cause.skip");
        retryOnPrimaryException35.setIndex("");
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException35.setResources("", strArray44);
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "hi!");
        retryOnPrimaryException50.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        retryOnPrimaryException57.setIndex("");
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException57.setResources("", strArray66);
        retryOnPrimaryException50.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray66);
        retryOnPrimaryException35.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray66);
        retryOnPrimaryException15.setResources("hi!", strArray66);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray66);
        org.elasticsearch.common.io.stream.StreamInput streamInput72 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException73 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "retry_on_primary_exception" + "'", str27, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strArray66);
    }

    @Test
    public void test0536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0536");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException4.setIndex(index7);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getHeader("");
        java.lang.String str11 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        retryOnPrimaryException16.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException23.setResources("", strArray32);
        retryOnPrimaryException16.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray32);
        java.lang.String str35 = retryOnPrimaryException16.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index39 = retryOnPrimaryException38.getIndex();
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.Index index41 = retryOnPrimaryException38.getIndex();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        retryOnPrimaryException45.setIndex("");
        java.lang.Throwable[] throwableArray48 = retryOnPrimaryException45.getSuppressed();
        java.lang.String[] strArray53 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException45.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray53);
        retryOnPrimaryException38.setResources("hi!", strArray53);
        retryOnPrimaryException4.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray53);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray57 = retryOnPrimaryException4.guessRootCauses();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str35, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index39);
        org.junit.Assert.assertNull(index41);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray57);
    }

    @Test
    public void test0537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0537");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException2.getResourceId();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass21 = strList20.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strList20);
    }

    @Test
    public void test0538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0538");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable[] throwableArray27 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str28 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable29 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.toString(), "[[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];][[[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test0539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0539");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet38 = retryOnPrimaryException37.getHeaderKeys();
        retryOnPrimaryException37.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "");
        retryOnPrimaryException37.addSuppressed((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.rest.RestStatus restStatus46 = retryOnPrimaryException44.status();
        java.lang.String[] strArray51 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException44.setResources("rest.exception.cause.skip", strArray51);
        retryOnPrimaryException9.addHeader("", strArray51);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder54 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params55 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder56 = retryOnPrimaryException9.toXContent(xContentBuilder54, params55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + restStatus46 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus46.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(params55);
    }

    @Test
    public void test0540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0540");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Class<?> wildcardClass7 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test0541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0541");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str6 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder7 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params8 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder9 = retryOnPrimaryException2.toXContent(xContentBuilder7, params8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(params8);
    }

    @Test
    public void test0542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0542");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.index.Index index19 = null;
        retryOnPrimaryException2.setIndex(index19);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.io.stream.StreamInput streamInput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception23 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException2, streamInput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test0543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0543");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray37);
        java.lang.String str40 = retryOnPrimaryException21.getDetailedMessage();
        java.lang.String str41 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String str42 = retryOnPrimaryException21.getDetailedMessage();
        org.elasticsearch.index.Index index43 = null;
        retryOnPrimaryException21.setIndex(index43);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.cause.skip");
        retryOnPrimaryException48.setIndex("");
        java.lang.Throwable[] throwableArray51 = retryOnPrimaryException48.getSuppressed();
        java.lang.String[] strArray56 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException48.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray56);
        retryOnPrimaryException21.addHeader("hi!", strArray56);
        retryOnPrimaryException2.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray56);
        org.elasticsearch.common.io.stream.StreamInput streamInput60 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException61 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str40, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "retry_on_primary_exception" + "'", str41, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str42, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNotNull(strArray56);
    }

    @Test
    public void test0544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0544");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException38 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException24, streamOutput37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0545");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException11.setIndex(index14);
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException11.status();
        java.lang.Throwable throwable17 = retryOnPrimaryException11.getRootCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException22.getHeaderKeys();
        java.lang.Throwable throwable24 = retryOnPrimaryException22.getRootCause();
        java.lang.String[] strArray30 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        retryOnPrimaryException22.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList31);
        retryOnPrimaryException11.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList31);
        java.lang.String str35 = retryOnPrimaryException11.getDetailedMessage();
        java.lang.Throwable throwable36 = retryOnPrimaryException11.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str35, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0546");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        retryOnPrimaryException16.setIndex("");
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException16.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable throwable21 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable[] throwableArray22 = throwable21.getSuppressed();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test0547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0547");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        retryOnPrimaryException10.setIndex("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException10.getHeaderKeys();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test0548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0548");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str18 = retryOnPrimaryException2.getResourceType();
        java.lang.String str19 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.common.io.stream.StreamInput streamInput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable21 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test0549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0549");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        java.lang.String str11 = retryOnPrimaryException10.toString();
        org.elasticsearch.common.io.stream.StreamInput streamInput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable13 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException10, streamInput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str11, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test0550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0550");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable4);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable4);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable4);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0551");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.rest.RestStatus restStatus13 = retryOnPrimaryException11.status();
        retryOnPrimaryException11.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 0);
        java.lang.Throwable throwable17 = retryOnPrimaryException11.getRootCause();
        retryOnPrimaryException11.setIndex("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + restStatus13 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus13.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "");
        org.junit.Assert.assertEquals(throwable17.toString(), "[hi!][[hi!][0]] RetryOnPrimaryException[]");
    }

    @Test
    public void test0552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0552");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        java.lang.Throwable throwable40 = retryOnPrimaryException39.unwrapCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        java.util.Set<java.lang.String> strSet42 = retryOnPrimaryException39.getHeaderKeys();
        java.lang.String[] strArray44 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException39.addHeader("rest.exception.cause.skip", strArray44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet42);
    }

    @Test
    public void test0553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0553");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        java.lang.String str15 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.String str16 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException4.status();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException4.status();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str16, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test0554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0554");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str6 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str6, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId7);
    }

    @Test
    public void test0555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0555");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
    }

    @Test
    public void test0556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0556");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.Throwable throwable6 = retryOnPrimaryException2.getRootCause();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.common.io.stream.StreamInput streamInput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException11 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable6.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test0557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0557");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.index.shard.ShardId shardId11 = retryOnPrimaryException4.getShardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(shardId11);
    }

    @Test
    public void test0558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0558");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException2.status();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException2.setIndex(index8);
        org.elasticsearch.index.shard.ShardId shardId10 = retryOnPrimaryException2.getShardId();
        java.lang.Throwable throwable11 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder12 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params13 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder14 = retryOnPrimaryException2.toXContent(xContentBuilder12, params13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(params13);
    }

    @Test
    public void test0559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0559");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable4);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
    }

    @Test
    public void test0560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0560");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.Index index14 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str23 = retryOnPrimaryException19.getDetailedMessage();
        java.lang.Throwable throwable24 = retryOnPrimaryException19.unwrapCause();
        java.util.List<java.lang.String> strList26 = retryOnPrimaryException19.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException19.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.Throwable[] throwableArray33 = retryOnPrimaryException30.getSuppressed();
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        java.lang.Throwable throwable44 = retryOnPrimaryException43.unwrapCause();
        java.lang.String[] strArray48 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        retryOnPrimaryException43.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList49);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        java.lang.String[] strArray62 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException55.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        retryOnPrimaryException43.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray62);
        retryOnPrimaryException38.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        retryOnPrimaryException30.setResources("retry_on_primary_exception", strArray62);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray68 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Class<?> wildcardClass69 = elasticsearchExceptionArray68.getClass();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray68);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0561");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip");
        retryOnPrimaryException17.setIndex("");
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException17.setResources("", strArray26);
        java.lang.String str28 = retryOnPrimaryException17.toString();
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "hi!");
        retryOnPrimaryException33.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str37 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException33);
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException33);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException33);
        retryOnPrimaryException4.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str28, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "retry_on_primary_exception" + "'", str37, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test0562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0562");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException2.getSuppressed();
        java.lang.Class<?> wildcardClass23 = throwableArray22.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0563");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.cause.skip");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException6.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray13);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException6.setShard(shardId15);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException6.guessRootCauses();
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.Index index20 = null;
        retryOnPrimaryException19.setIndex(index20);
        java.lang.String str22 = retryOnPrimaryException19.getResourceType();
        java.lang.Throwable throwable23 = retryOnPrimaryException19.getRootCause();
        java.lang.Throwable[] throwableArray24 = retryOnPrimaryException19.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray24);
    }

    @Test
    public void test0564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0564");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException24.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable throwable34 = retryOnPrimaryException32.getRootCause();
        java.lang.String[] strArray40 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        retryOnPrimaryException32.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList41);
        retryOnPrimaryException24.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList41);
        java.lang.String str45 = retryOnPrimaryException24.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException47 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException24, streamOutput46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str45, "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0565");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        java.lang.String str15 = retryOnPrimaryException4.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = retryOnPrimaryException4.guessRootCauses();
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable18 = retryOnPrimaryException4.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str15, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0566");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException7.unwrapCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException7.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray26);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder30 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params31 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder32 = retryOnPrimaryException2.toXContent(xContentBuilder30, params31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(params31);
    }

    @Test
    public void test0567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0567");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.Index index14 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str23 = retryOnPrimaryException19.getDetailedMessage();
        java.lang.Throwable throwable24 = retryOnPrimaryException19.unwrapCause();
        java.util.List<java.lang.String> strList26 = retryOnPrimaryException19.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException19.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.Throwable[] throwableArray33 = retryOnPrimaryException30.getSuppressed();
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        java.lang.Throwable throwable44 = retryOnPrimaryException43.unwrapCause();
        java.lang.String[] strArray48 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        retryOnPrimaryException43.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList49);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        java.lang.String[] strArray62 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException55.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        retryOnPrimaryException43.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray62);
        retryOnPrimaryException38.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        retryOnPrimaryException30.setResources("retry_on_primary_exception", strArray62);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        java.util.Set<java.lang.String> strSet68 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput69 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException70 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamOutput69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strSet68);
    }

    @Test
    public void test0568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0568");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray10);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable13 = retryOnPrimaryException2.unwrapCause();
        java.lang.Class<?> wildcardClass14 = throwable13.getClass();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0569");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        java.lang.String str39 = retryOnPrimaryException28.toString();
        retryOnPrimaryException22.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String str41 = retryOnPrimaryException22.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        retryOnPrimaryException22.setShard(shardId42);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray44 = retryOnPrimaryException22.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        retryOnPrimaryException22.setShard(shardId45);
        java.lang.String str47 = retryOnPrimaryException22.getDetailedMessage();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.util.Set<java.lang.String> strSet49 = retryOnPrimaryException22.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamInput streamInput50 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException22, streamInput50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str39, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str47, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strSet49);
    }

    @Test
    public void test0570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0570");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str13 = retryOnPrimaryException10.getResourceType();
        retryOnPrimaryException10.setShard("rest.exception.stacktrace.skip", 1);
        java.lang.Class<?> wildcardClass17 = retryOnPrimaryException10.getClass();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0571");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException4.getHeaderKeys();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException4.getHeader("rest.exception.cause.skip");
        org.elasticsearch.index.Index index15 = null;
        retryOnPrimaryException4.setIndex(index15);
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String str33 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        retryOnPrimaryException21.setShard(shardId34);
        org.elasticsearch.index.shard.ShardId shardId36 = retryOnPrimaryException21.getShardId();
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet42 = retryOnPrimaryException41.getHeaderKeys();
        java.lang.Throwable throwable43 = retryOnPrimaryException41.getRootCause();
        java.lang.String[] strArray49 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        retryOnPrimaryException41.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList50);
        retryOnPrimaryException21.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList50);
        retryOnPrimaryException4.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList50);
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException4.getResourceId();
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder57 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params58 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder59 = retryOnPrimaryException4.toXContent(xContentBuilder57, params58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "retry_on_primary_exception" + "'", str33, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(params58);
    }

    @Test
    public void test0572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0572");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        java.lang.String str33 = retryOnPrimaryException14.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index37 = retryOnPrimaryException36.getIndex();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        retryOnPrimaryException36.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet45 = retryOnPrimaryException44.getHeaderKeys();
        java.lang.Throwable throwable46 = retryOnPrimaryException44.getRootCause();
        java.lang.String[] strArray52 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        retryOnPrimaryException44.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException36.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList53);
        org.elasticsearch.rest.RestStatus restStatus58 = retryOnPrimaryException2.status();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder59 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params60 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder61 = retryOnPrimaryException2.toXContent(xContentBuilder59, params60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index37);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + restStatus58 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus58.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(params60);
    }

    @Test
    public void test0573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0573");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        java.lang.String[] strArray22 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        retryOnPrimaryException15.setShard(shardId24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException15.guessRootCauses();
        java.lang.String str27 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException15);
        java.lang.Throwable throwable29 = retryOnPrimaryException15.unwrapCause();
        retryOnPrimaryException15.setIndex("rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "rest.exception.cause.skip");
        retryOnPrimaryException35.setIndex("");
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException35.setResources("", strArray44);
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "hi!");
        retryOnPrimaryException50.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        retryOnPrimaryException57.setIndex("");
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException57.setResources("", strArray66);
        retryOnPrimaryException50.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray66);
        retryOnPrimaryException35.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray66);
        retryOnPrimaryException15.setResources("hi!", strArray66);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray66);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception73 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException2, streamOutput72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "retry_on_primary_exception" + "'", str27, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strArray66);
    }

    @Test
    public void test0574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0574");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        java.lang.Throwable throwable40 = retryOnPrimaryException39.unwrapCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        java.lang.Throwable throwable42 = retryOnPrimaryException39.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput43 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException39.writeTo(streamOutput43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0575");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.Index index27 = retryOnPrimaryException24.getIndex();
        java.lang.String str28 = retryOnPrimaryException24.toString();
        java.lang.Throwable throwable29 = retryOnPrimaryException24.getRootCause();
        java.lang.String str30 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable29);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str28, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "retry_on_primary_exception" + "'", str30, "retry_on_primary_exception");
    }

    @Test
    public void test0576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0576");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        java.lang.Throwable throwable40 = retryOnPrimaryException39.unwrapCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput42 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0577");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException4.setShard(shardId6);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(strList5);
    }

    @Test
    public void test0578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0578");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("", strArray21);
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException12.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput34 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException12, streamOutput34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strList33);
    }

    @Test
    public void test0579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0579");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException2.setIndex(index8);
        java.lang.Throwable[] throwableArray10 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.io.stream.StreamInput streamInput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException12 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwableArray10);
    }

    @Test
    public void test0580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0580");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.util.Set<java.lang.String> strSet6 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException4.status();
        java.lang.Throwable throwable8 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = retryOnPrimaryException4.guessRootCauses();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
    }

    @Test
    public void test0581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0581");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        retryOnPrimaryException10.setIndex("");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException10.setResources("", strArray19);
        java.lang.String str21 = retryOnPrimaryException10.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str23 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        retryOnPrimaryException4.setShard(shardId24);
        java.lang.String[] strArray36 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        retryOnPrimaryException4.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList37);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "hi!");
        retryOnPrimaryException42.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        retryOnPrimaryException49.setIndex("");
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException49.setResources("", strArray58);
        retryOnPrimaryException42.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray58);
        java.lang.String str61 = retryOnPrimaryException42.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index65 = retryOnPrimaryException64.getIndex();
        retryOnPrimaryException42.addSuppressed((java.lang.Throwable) retryOnPrimaryException64);
        org.elasticsearch.index.Index index67 = null;
        retryOnPrimaryException42.setIndex(index67);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException42);
        retryOnPrimaryException4.setShard("RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 100);
        java.lang.Throwable throwable73 = retryOnPrimaryException4.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, throwable73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str21, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str61, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index65);
        org.junit.Assert.assertNotNull(throwable73);
        org.junit.Assert.assertEquals(throwable73.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable73.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable73.toString(), "[RetryOnPrimaryException[rest.exception.cause.skip]][[RetryOnPrimaryException[rest.exception.cause.skip]][100]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0582");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException2, streamOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test0583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0583");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException7.unwrapCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException7.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray26);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        retryOnPrimaryException32.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 10);
        org.elasticsearch.common.io.stream.StreamInput streamInput40 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable41 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException32, streamInput40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(throwableArray35);
    }

    @Test
    public void test0584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0584");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index27 = retryOnPrimaryException26.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.rest.RestStatus restStatus29 = retryOnPrimaryException4.status();
        java.lang.Throwable throwable30 = retryOnPrimaryException4.unwrapCause();
        retryOnPrimaryException4.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) '4');
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertTrue("'" + restStatus29 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus29.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable30.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][52]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test0585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0585");
        java.lang.Throwable throwable0 = null;
        org.elasticsearch.common.io.stream.StreamOutput streamOutput1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable2 = org.elasticsearch.ElasticsearchException.writeStackTraces(throwable0, streamOutput1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0586");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray28 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("rest.exception.cause.skip", strArray28);
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        org.elasticsearch.rest.RestStatus restStatus32 = retryOnPrimaryException2.status();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder33 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params34 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder35 = retryOnPrimaryException2.toXContent(xContentBuilder33, params34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + restStatus32 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus32.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(params34);
    }

    @Test
    public void test0587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0587");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str10 = retryOnPrimaryException6.getDetailedMessage();
        java.lang.Throwable throwable11 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable11);
        org.elasticsearch.index.Index index13 = null;
        retryOnPrimaryException12.setIndex(index13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0588");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.String[] strArray27 = new java.lang.String[] { "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[rest.exception.cause.skip]", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[rest.exception.cause.skip]", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        retryOnPrimaryException4.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList28);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException32 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException4, streamOutput31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0589");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException2.status();
        java.lang.String str21 = retryOnPrimaryException2.toString();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder22 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params23 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder24 = retryOnPrimaryException2.toXContent(xContentBuilder22, params23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str21, "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(params23);
    }

    @Test
    public void test0590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0590");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        java.lang.String str33 = retryOnPrimaryException14.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index37 = retryOnPrimaryException36.getIndex();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        retryOnPrimaryException36.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet45 = retryOnPrimaryException44.getHeaderKeys();
        java.lang.Throwable throwable46 = retryOnPrimaryException44.getRootCause();
        java.lang.String[] strArray52 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        retryOnPrimaryException44.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException36.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList53);
        org.elasticsearch.common.io.stream.StreamInput streamInput58 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException2, streamInput58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index37);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test0591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0591");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("", strArray21);
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "hi!");
        retryOnPrimaryException27.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        retryOnPrimaryException34.setIndex("");
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException34.setResources("", strArray43);
        retryOnPrimaryException27.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray43);
        retryOnPrimaryException12.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray43);
        retryOnPrimaryException7.addHeader("", strArray43);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "hi!");
        retryOnPrimaryException51.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str55 = retryOnPrimaryException51.getDetailedMessage();
        java.lang.Throwable throwable56 = retryOnPrimaryException51.unwrapCause();
        java.util.List<java.lang.String> strList58 = retryOnPrimaryException51.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str59 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException51);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "rest.exception.cause.skip");
        retryOnPrimaryException63.setIndex("");
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException63.setResources("", strArray72);
        boolean boolean74 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException63);
        java.lang.String str75 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException63);
        org.elasticsearch.index.shard.ShardId shardId76 = null;
        retryOnPrimaryException63.setShard(shardId76);
        org.elasticsearch.index.shard.ShardId shardId78 = retryOnPrimaryException63.getShardId();
        boolean boolean79 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException63);
        org.elasticsearch.index.shard.ShardId shardId81 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException83 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId81, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet84 = retryOnPrimaryException83.getHeaderKeys();
        java.lang.Throwable throwable85 = retryOnPrimaryException83.getRootCause();
        java.lang.String[] strArray91 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList92 = new java.util.ArrayList<java.lang.String>();
        boolean boolean93 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList92, strArray91);
        retryOnPrimaryException83.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList92);
        retryOnPrimaryException63.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList92);
        retryOnPrimaryException51.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList92);
        retryOnPrimaryException7.addHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList92);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str55, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable56);
        org.junit.Assert.assertEquals(throwable56.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable56.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable56.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "retry_on_primary_exception" + "'", str59, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "retry_on_primary_exception" + "'", str75, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId78);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNotNull(strSet84);
        org.junit.Assert.assertNotNull(throwable85);
        org.junit.Assert.assertEquals(throwable85.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable85.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable85.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + true + "'", boolean93 == true);
    }

    @Test
    public void test0592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0592");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet25 = retryOnPrimaryException24.getHeaderKeys();
        java.lang.Throwable throwable26 = retryOnPrimaryException24.getRootCause();
        java.lang.String[] strArray32 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        retryOnPrimaryException24.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList33);
        retryOnPrimaryException4.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList33);
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable38 = retryOnPrimaryException4.unwrapCause();
        java.lang.String str39 = retryOnPrimaryException4.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str39, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0593");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException11.setIndex(index14);
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException11.status();
        java.lang.Throwable throwable17 = retryOnPrimaryException11.getRootCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable throwable19 = retryOnPrimaryException4.unwrapCause();
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable22 = retryOnPrimaryException4.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0594");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        retryOnPrimaryException4.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException4.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException4.getResourceId();
        retryOnPrimaryException4.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(strList25);
    }

    @Test
    public void test0595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0595");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder6 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params7 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder8 = retryOnPrimaryException2.toXContent(xContentBuilder6, params7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(params7);
    }

    @Test
    public void test0596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0596");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
    }

    @Test
    public void test0597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0597");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException4.getShardId();
        java.lang.Throwable[] throwableArray8 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "retry_on_primary_exception");
        java.lang.String str15 = retryOnPrimaryException14.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String str17 = retryOnPrimaryException14.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet22 = retryOnPrimaryException21.getHeaderKeys();
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "");
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        org.elasticsearch.index.Index index35 = null;
        retryOnPrimaryException32.setIndex(index35);
        org.elasticsearch.rest.RestStatus restStatus37 = retryOnPrimaryException32.status();
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String[] strArray43 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException32.addHeader("rest.exception.stacktrace.skip", strArray43);
        retryOnPrimaryException14.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray43);
        retryOnPrimaryException4.setResources("[hi!][[hi!][0]] RetryOnPrimaryException[]", strArray43);
        java.lang.String str47 = retryOnPrimaryException4.getResourceType();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(throwableArray8);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str15, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + restStatus37 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus37.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[hi!][[hi!][0]] RetryOnPrimaryException[]" + "'", str47, "[hi!][[hi!][0]] RetryOnPrimaryException[]");
    }

    @Test
    public void test0598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0598");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException11.setIndex(index14);
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException11.status();
        java.lang.Throwable throwable17 = retryOnPrimaryException11.getRootCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable throwable19 = retryOnPrimaryException4.unwrapCause();
        java.lang.String str20 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        retryOnPrimaryException31.setIndex("");
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException31.setResources("", strArray40);
        retryOnPrimaryException24.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray40);
        java.lang.String str43 = retryOnPrimaryException24.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index47 = retryOnPrimaryException46.getIndex();
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.index.Index index49 = retryOnPrimaryException46.getIndex();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        retryOnPrimaryException53.setIndex("");
        java.lang.Throwable[] throwableArray56 = retryOnPrimaryException53.getSuppressed();
        java.lang.String[] strArray61 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException53.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray61);
        retryOnPrimaryException46.setResources("hi!", strArray61);
        retryOnPrimaryException4.addHeader("", strArray61);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index69 = retryOnPrimaryException68.getIndex();
        java.lang.String str70 = retryOnPrimaryException68.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "hi!");
        retryOnPrimaryException74.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId79 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException81 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId79, "rest.exception.cause.skip");
        retryOnPrimaryException81.setIndex("");
        java.lang.String[] strArray90 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException81.setResources("", strArray90);
        retryOnPrimaryException74.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray90);
        retryOnPrimaryException68.setResources("", strArray90);
        retryOnPrimaryException4.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray90);
        java.lang.String str95 = retryOnPrimaryException4.toString();
        boolean boolean96 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str20, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str43, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index47);
        org.junit.Assert.assertNull(index49);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNull(index69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str70, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertEquals("'" + str95 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str95, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test0599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0599");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException2.setIndex(index22);
        java.lang.Throwable throwable24 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.common.io.stream.StreamInput streamInput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable26 = org.elasticsearch.ElasticsearchException.readStackTrace(throwable24, streamInput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0600");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        retryOnPrimaryException2.setIndex("");
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        retryOnPrimaryException18.setIndex("");
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException18.setResources("", strArray27);
        java.lang.String str29 = retryOnPrimaryException18.toString();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        java.lang.String str31 = retryOnPrimaryException12.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        retryOnPrimaryException12.setShard(shardId32);
        java.lang.String[] strArray44 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        retryOnPrimaryException12.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList45);
        retryOnPrimaryException2.addHeader("hi!", (java.util.List<java.lang.String>) strList45);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        retryOnPrimaryException2.setShard(shardId49);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "hi!");
        retryOnPrimaryException53.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str57 = retryOnPrimaryException53.getDetailedMessage();
        java.lang.Throwable throwable58 = retryOnPrimaryException53.unwrapCause();
        java.lang.String str59 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.index.Index index60 = null;
        retryOnPrimaryException53.setIndex(index60);
        java.util.List<java.lang.String> strList63 = retryOnPrimaryException53.getHeader("RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.rest.RestStatus restStatus64 = retryOnPrimaryException53.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        java.lang.String str66 = retryOnPrimaryException53.getDetailedMessage();
        java.lang.String[] strArray68 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException53.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str29, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str57, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable58);
        org.junit.Assert.assertEquals(throwable58.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable58.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable58.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "retry_on_primary_exception" + "'", str59, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertTrue("'" + restStatus64 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus64.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str66, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test0601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0601");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        java.lang.Throwable throwable10 = retryOnPrimaryException9.unwrapCause();
        java.lang.String[] strArray14 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        retryOnPrimaryException9.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList15);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        java.lang.String[] strArray28 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        retryOnPrimaryException9.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray28);
        retryOnPrimaryException4.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException34.getHeaderKeys();
        java.util.Set<java.lang.String> strSet36 = retryOnPrimaryException34.getHeaderKeys();
        java.lang.Throwable[] throwableArray37 = retryOnPrimaryException34.getSuppressed();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException34);
        retryOnPrimaryException34.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 10);
        java.lang.Throwable throwable42 = retryOnPrimaryException34.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0602");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException2.setIndex(index22);
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str25 = retryOnPrimaryException2.toString();
        org.elasticsearch.common.io.stream.StreamInput streamInput26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception27 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException2, streamInput26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str25, "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0603");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        retryOnPrimaryException10.setIndex("");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException10.setResources("", strArray19);
        java.lang.String str21 = retryOnPrimaryException10.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str23 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        retryOnPrimaryException4.setShard(shardId24);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        retryOnPrimaryException28.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "rest.exception.cause.skip");
        retryOnPrimaryException35.setIndex("");
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException35.setResources("", strArray44);
        retryOnPrimaryException28.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray44);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException28.getSuppressed();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.index.shard.ShardId shardId49 = retryOnPrimaryException4.getShardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str21, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNull(shardId49);
    }

    @Test
    public void test0604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0604");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException4.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable throwable12 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus13 = retryOnPrimaryException4.status();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException4.getHeaderKeys();
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet19 = retryOnPrimaryException18.getHeaderKeys();
        java.lang.Throwable throwable20 = retryOnPrimaryException18.getRootCause();
        java.lang.String[] strArray26 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        retryOnPrimaryException18.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList27);
        java.util.List<java.lang.String> strList31 = null;
        retryOnPrimaryException18.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList31);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException37.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        retryOnPrimaryException44.setIndex("");
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException44.setResources("", strArray53);
        retryOnPrimaryException37.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray53);
        retryOnPrimaryException18.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray53);
        java.util.List<java.lang.String> strList58 = retryOnPrimaryException18.getHeader("");
        java.lang.Throwable throwable59 = retryOnPrimaryException18.unwrapCause();
        retryOnPrimaryException4.addSuppressed(throwable59);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus13 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus13.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(throwable59);
        org.junit.Assert.assertEquals(throwable59.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable59.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable59.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0605");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException6.setIndex(index7);
        org.elasticsearch.index.Index index9 = null;
        retryOnPrimaryException6.setIndex(index9);
        java.lang.String str11 = retryOnPrimaryException6.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException6.status();
        org.elasticsearch.common.io.stream.StreamInput streamInput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException14 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException6, streamInput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test0606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0606");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str10 = retryOnPrimaryException6.getDetailedMessage();
        java.lang.Throwable throwable11 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable11);
        org.elasticsearch.index.Index index13 = retryOnPrimaryException12.getIndex();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException12);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException12.setIndex(index16);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        retryOnPrimaryException23.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str27 = retryOnPrimaryException23.getDetailedMessage();
        java.lang.Throwable throwable28 = retryOnPrimaryException23.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable28);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = retryOnPrimaryException33.guessRootCauses();
        java.util.Set<java.lang.String> strSet38 = retryOnPrimaryException33.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "rest.exception.cause.skip");
        retryOnPrimaryException42.setIndex("");
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException42.setResources("", strArray51);
        boolean boolean53 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException42);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "hi!");
        retryOnPrimaryException57.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "rest.exception.cause.skip");
        retryOnPrimaryException64.setIndex("");
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException64.setResources("", strArray73);
        retryOnPrimaryException57.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray73);
        retryOnPrimaryException42.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray73);
        retryOnPrimaryException33.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray73);
        retryOnPrimaryException29.setResources("hi!", strArray73);
        retryOnPrimaryException12.addHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", strArray73);
        java.util.List<java.lang.String> strList80 = retryOnPrimaryException12.getResourceId();
        java.lang.String str81 = retryOnPrimaryException12.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str81, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test0607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0607");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable throwable27 = retryOnPrimaryException24.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index32 = retryOnPrimaryException31.getIndex();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        retryOnPrimaryException36.setIndex("");
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "rest.exception.cause.skip");
        retryOnPrimaryException42.setIndex("");
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException42.setResources("", strArray51);
        java.lang.String str53 = retryOnPrimaryException42.toString();
        retryOnPrimaryException36.addSuppressed((java.lang.Throwable) retryOnPrimaryException42);
        java.lang.String str55 = retryOnPrimaryException36.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        retryOnPrimaryException36.setShard(shardId56);
        java.lang.String[] strArray68 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        retryOnPrimaryException36.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList69);
        retryOnPrimaryException31.addHeader("", (java.util.List<java.lang.String>) strList69);
        retryOnPrimaryException24.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList69);
        retryOnPrimaryException24.setIndex("rest.exception.stacktrace.skip");
        retryOnPrimaryException24.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", 100);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput79 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException80 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException24, streamOutput79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][100]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index32);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str53, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
    }

    @Test
    public void test0608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0608");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException2.setIndex(index8);
        java.lang.String str10 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test0609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0609");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str18 = retryOnPrimaryException2.getResourceType();
        java.lang.String str19 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException2.getResourceId();
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test0610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0610");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException11.setIndex(index14);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet20 = retryOnPrimaryException19.getHeaderKeys();
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "");
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException26.status();
        java.lang.String[] strArray33 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException26.setResources("rest.exception.cause.skip", strArray33);
        retryOnPrimaryException11.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray33);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray33);
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamInput streamInput38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException39 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strSet37);
    }

    @Test
    public void test0611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0611");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        retryOnPrimaryException7.setIndex("");
        retryOnPrimaryException7.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException7.writeTo(streamOutput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
    }

    @Test
    public void test0612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0612");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException13.setIndex(index16);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException13.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.String[] strArray24 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException13.addHeader("rest.exception.stacktrace.skip", strArray24);
        java.lang.Throwable throwable26 = retryOnPrimaryException13.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = retryOnPrimaryException13.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamInput streamInput28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException29 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException13, streamInput28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
    }

    @Test
    public void test0613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0613");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index16 = retryOnPrimaryException15.getIndex();
        java.lang.String str17 = retryOnPrimaryException15.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray37);
        retryOnPrimaryException15.setResources("", strArray37);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str17, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray37);
    }

    @Test
    public void test0614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0614");
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException0 = null;
        org.elasticsearch.common.io.stream.StreamOutput streamOutput1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException0, streamOutput1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0615");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        retryOnPrimaryException10.setIndex("");
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException10.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip");
        retryOnPrimaryException17.setIndex("");
        org.elasticsearch.index.Index index20 = null;
        retryOnPrimaryException17.setIndex(index20);
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException17.status();
        java.lang.Throwable throwable23 = retryOnPrimaryException17.getRootCause();
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet29 = retryOnPrimaryException28.getHeaderKeys();
        java.lang.Throwable throwable30 = retryOnPrimaryException28.getRootCause();
        java.lang.String[] strArray36 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        retryOnPrimaryException28.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList37);
        retryOnPrimaryException17.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList37);
        retryOnPrimaryException2.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList37);
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "hi!");
        retryOnPrimaryException45.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        retryOnPrimaryException52.setIndex("");
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException52.setResources("", strArray61);
        retryOnPrimaryException45.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray61);
        java.lang.Throwable[] throwableArray64 = retryOnPrimaryException45.getSuppressed();
        boolean boolean65 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException45);
        java.lang.String str66 = retryOnPrimaryException45.getDetailedMessage();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException45);
        org.elasticsearch.common.io.stream.StreamInput streamInput68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable69 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException45, streamInput68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable30.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str66, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test0616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0616");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException13.setIndex(index16);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException13.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.String[] strArray24 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException13.addHeader("rest.exception.stacktrace.skip", strArray24);
        java.lang.Throwable throwable26 = retryOnPrimaryException13.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = retryOnPrimaryException13.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable29 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException13, streamOutput28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
    }

    @Test
    public void test0617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0617");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        java.lang.Throwable throwable41 = retryOnPrimaryException40.unwrapCause();
        java.lang.String[] strArray45 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        retryOnPrimaryException40.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList46);
        org.elasticsearch.rest.RestStatus restStatus49 = retryOnPrimaryException40.status();
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        java.util.Set<java.lang.String> strSet51 = retryOnPrimaryException40.getHeaderKeys();
        java.lang.Class<?> wildcardClass52 = strSet51.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + restStatus49 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus49.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0618");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet26 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput27 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSet26);
    }

    @Test
    public void test0619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0619");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
    }

    @Test
    public void test0620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0620");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException7.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str11 = retryOnPrimaryException7.getDetailedMessage();
        java.lang.Throwable throwable12 = retryOnPrimaryException7.unwrapCause();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException7.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException7.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        retryOnPrimaryException18.setIndex("");
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException18.getSuppressed();
        retryOnPrimaryException7.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        boolean boolean27 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        java.lang.Throwable throwable32 = retryOnPrimaryException31.unwrapCause();
        java.lang.String[] strArray36 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        retryOnPrimaryException31.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList37);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        java.lang.String[] strArray50 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException43.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray50);
        retryOnPrimaryException31.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray50);
        retryOnPrimaryException26.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray50);
        retryOnPrimaryException18.setResources("retry_on_primary_exception", strArray50);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strArray50);
        java.lang.Class<?> wildcardClass56 = strArray50.getClass();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str11, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test0621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0621");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str13 = retryOnPrimaryException10.getResourceType();
        java.lang.String str14 = retryOnPrimaryException10.getDetailedMessage();
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException10.getSuppressed();
        org.elasticsearch.common.io.stream.StreamInput streamInput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable17 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException10, streamInput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str14, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray15);
    }

    @Test
    public void test0622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0622");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str5 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception8 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException2, streamOutput7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "retry_on_primary_exception" + "'", str5, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
    }

    @Test
    public void test0623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0623");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException2.status();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamInput streamInput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException23 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0624");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException17.setIndex(index18);
        java.lang.String str20 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException17.writeTo(streamOutput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "retry_on_primary_exception" + "'", str20, "retry_on_primary_exception");
    }

    @Test
    public void test0625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0625");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet6 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        java.lang.Class<?> wildcardClass8 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0626");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str9 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder10 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params11 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder12 = retryOnPrimaryException2.toXContent(xContentBuilder10, params11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(params11);
    }

    @Test
    public void test0627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0627");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str20 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str20, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test0628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0628");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.String[] strArray27 = new java.lang.String[] { "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[rest.exception.cause.skip]", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[rest.exception.cause.skip]", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        retryOnPrimaryException4.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList28);
        org.elasticsearch.common.io.stream.StreamInput streamInput31 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException4, streamInput31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0629");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index14 = retryOnPrimaryException13.getIndex();
        java.lang.String str15 = retryOnPrimaryException13.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        retryOnPrimaryException13.setResources("", strArray35);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.rest.RestStatus restStatus40 = retryOnPrimaryException2.status();
        java.lang.String[] strArray42 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.addHeader("[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[] RetryOnPrimaryException[rest.exception.cause.skip]]", strArray42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + restStatus40 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus40.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test0630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0630");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        java.lang.Throwable throwable2 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, throwable2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test0631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0631");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.index.Index index19 = null;
        retryOnPrimaryException2.setIndex(index19);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test0632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0632");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        java.lang.Class<?> wildcardClass9 = throwable8.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0633");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0634");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str15 = retryOnPrimaryException2.getResourceType();
        java.lang.Class<?> wildcardClass16 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0635");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException2.getShardId();
        java.lang.String str14 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId15 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId15);
    }

    @Test
    public void test0636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0636");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str13 = retryOnPrimaryException10.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException10.writeTo(streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str13, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test0637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0637");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException2.getResourceId();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str22 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable23 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        java.lang.String[] strArray35 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        retryOnPrimaryException28.setShard(shardId37);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = retryOnPrimaryException28.guessRootCauses();
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.Throwable throwable42 = retryOnPrimaryException28.unwrapCause();
        retryOnPrimaryException28.setIndex("rest.exception.cause.skip");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder46 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params47 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder48 = retryOnPrimaryException28.toXContent(xContentBuilder46, params47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(params47);
    }

    @Test
    public void test0638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0638");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException2.status();
        org.elasticsearch.common.io.stream.StreamInput streamInput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException10 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test0639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0639");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        java.lang.String str17 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException2.status();
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException2.getSuppressed();
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test0640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0640");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamInput streamInput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException10 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test0641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0641");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException24.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable throwable34 = retryOnPrimaryException32.getRootCause();
        java.lang.String[] strArray40 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        retryOnPrimaryException32.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList41);
        retryOnPrimaryException24.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList41);
        java.lang.String str45 = retryOnPrimaryException24.toString();
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Class<?> wildcardClass47 = retryOnPrimaryException24.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str45, "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test0642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0642");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable28 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = retryOnPrimaryException33.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        retryOnPrimaryException41.setIndex("");
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = retryOnPrimaryException41.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.cause.skip");
        retryOnPrimaryException48.setIndex("");
        org.elasticsearch.index.Index index51 = null;
        retryOnPrimaryException48.setIndex(index51);
        org.elasticsearch.rest.RestStatus restStatus53 = retryOnPrimaryException48.status();
        java.lang.Throwable throwable54 = retryOnPrimaryException48.getRootCause();
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet60 = retryOnPrimaryException59.getHeaderKeys();
        java.lang.Throwable throwable61 = retryOnPrimaryException59.getRootCause();
        java.lang.String[] strArray67 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        retryOnPrimaryException59.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList68);
        retryOnPrimaryException48.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList68);
        retryOnPrimaryException33.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList68);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList68);
        retryOnPrimaryException2.setIndex("[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.common.io.stream.StreamInput streamInput76 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable77 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.toString(), "[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertTrue("'" + restStatus53 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus53.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable54);
        org.junit.Assert.assertEquals(throwable54.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable54.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable54.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertNotNull(throwable61);
        org.junit.Assert.assertEquals(throwable61.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable61.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable61.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
    }

    @Test
    public void test0643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0643");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        retryOnPrimaryException2.setResources("rest.exception.stacktrace.skip", strArray38);
        org.elasticsearch.index.Index index42 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable[] throwableArray43 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.io.stream.StreamInput streamInput44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable45 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNull(index42);
        org.junit.Assert.assertNotNull(throwableArray43);
    }

    @Test
    public void test0644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0644");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.Index index27 = null;
        retryOnPrimaryException2.setIndex(index27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        retryOnPrimaryException2.setShard(shardId29);
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput32 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test0645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0645");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        java.lang.Throwable throwable19 = retryOnPrimaryException4.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0646");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test0647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0647");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        retryOnPrimaryException8.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray24);
        java.lang.String str27 = retryOnPrimaryException8.getDetailedMessage();
        java.lang.String str28 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str29 = retryOnPrimaryException8.getDetailedMessage();
        org.elasticsearch.index.Index index30 = null;
        retryOnPrimaryException8.setIndex(index30);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "rest.exception.cause.skip");
        retryOnPrimaryException35.setIndex("");
        java.lang.Throwable[] throwableArray38 = retryOnPrimaryException35.getSuppressed();
        java.lang.String[] strArray43 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException35.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray43);
        retryOnPrimaryException8.addHeader("hi!", strArray43);
        retryOnPrimaryException2.addHeader("", strArray43);
        java.lang.String str47 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "retry_on_primary_exception" + "'", str28, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str29, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str47, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test0648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0648");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder22 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder24 = retryOnPrimaryException2.toXContent(xContentBuilder22, params23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
    }

    @Test
    public void test0649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0649");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException7.unwrapCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException7.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray26);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable38 = retryOnPrimaryException2.unwrapCause();
        java.util.Set<java.lang.String> strSet39 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet39);
    }

    @Test
    public void test0650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0650");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        retryOnPrimaryException10.setIndex("");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException10.setResources("", strArray19);
        java.lang.String str21 = retryOnPrimaryException10.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str23 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        retryOnPrimaryException4.setShard(shardId24);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        retryOnPrimaryException28.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "rest.exception.cause.skip");
        retryOnPrimaryException35.setIndex("");
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException35.setResources("", strArray44);
        retryOnPrimaryException28.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray44);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException28.getSuppressed();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        java.util.List<java.lang.String> strList50 = retryOnPrimaryException28.getHeader("RetryOnPrimaryException[retry_on_primary_exception]");
        java.util.List<java.lang.String> strList52 = retryOnPrimaryException28.getHeader("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str21, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNull(strList52);
    }

    @Test
    public void test0651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0651");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder7 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params8 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder9 = retryOnPrimaryException2.toXContent(xContentBuilder7, params8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(params8);
    }

    @Test
    public void test0652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0652");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException11.setIndex(index14);
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException11.status();
        java.lang.Throwable throwable17 = retryOnPrimaryException11.getRootCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable throwable19 = retryOnPrimaryException4.unwrapCause();
        java.lang.String str20 = retryOnPrimaryException4.getResourceType();
        java.lang.String str21 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "hi!");
        retryOnPrimaryException25.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException32.setResources("", strArray41);
        retryOnPrimaryException25.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray41);
        java.lang.Throwable[] throwableArray44 = retryOnPrimaryException25.getSuppressed();
        java.lang.String[] strArray51 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException25.setResources("rest.exception.cause.skip", strArray51);
        retryOnPrimaryException4.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray51);
        java.util.List<java.lang.String> strList54 = retryOnPrimaryException4.getResourceId();
        retryOnPrimaryException4.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][-1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNull(strList54);
    }

    @Test
    public void test0653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0653");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
    }

    @Test
    public void test0654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0654");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("", strArray21);
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        retryOnPrimaryException12.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.lang.Class<?> wildcardClass34 = retryOnPrimaryException12.getClass();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test0655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0655");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Class<?> wildcardClass13 = retryOnPrimaryException4.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test0656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0656");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder18 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params19 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder20 = retryOnPrimaryException2.toXContent(xContentBuilder18, params19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(params19);
    }

    @Test
    public void test0657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0657");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        retryOnPrimaryException26.setShard(shardId47);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable52 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException26, streamOutput51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test0658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0658");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        retryOnPrimaryException10.setIndex("");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException10.setResources("", strArray19);
        java.lang.String str21 = retryOnPrimaryException10.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str23 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        retryOnPrimaryException4.setShard(shardId24);
        java.lang.Throwable throwable26 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = retryOnPrimaryException29.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId34 = retryOnPrimaryException29.getShardId();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str21, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNull(shardId34);
    }

    @Test
    public void test0659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0659");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException7.unwrapCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException7.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray26);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        retryOnPrimaryException32.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 10);
        java.lang.Throwable throwable40 = retryOnPrimaryException32.unwrapCause();
        java.lang.Class<?> wildcardClass41 = retryOnPrimaryException32.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0660");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String[] strArray39 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
    }

    @Test
    public void test0661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0661");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException13.setIndex(index16);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException13.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.Throwable[] throwableArray20 = retryOnPrimaryException13.getSuppressed();
        java.lang.Class<?> wildcardClass21 = throwableArray20.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test0662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0662");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.unwrapCause();
        java.lang.Throwable[] throwableArray16 = throwable15.getSuppressed();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray16);
    }

    @Test
    public void test0663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0663");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        retryOnPrimaryException4.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str8 = retryOnPrimaryException4.toString();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str8, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0664");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException4.getHeaderKeys();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException4.getHeader("rest.exception.cause.skip");
        org.elasticsearch.index.Index index15 = null;
        retryOnPrimaryException4.setIndex(index15);
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String str33 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        retryOnPrimaryException21.setShard(shardId34);
        org.elasticsearch.index.shard.ShardId shardId36 = retryOnPrimaryException21.getShardId();
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet42 = retryOnPrimaryException41.getHeaderKeys();
        java.lang.Throwable throwable43 = retryOnPrimaryException41.getRootCause();
        java.lang.String[] strArray49 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        retryOnPrimaryException41.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList50);
        retryOnPrimaryException21.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList50);
        retryOnPrimaryException4.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList50);
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException4.getResourceId();
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.common.io.stream.StreamInput streamInput57 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException4, streamInput57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "retry_on_primary_exception" + "'", str33, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
    }

    @Test
    public void test0665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0665");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str8, "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0666");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException11.setIndex(index14);
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException11.status();
        java.lang.Throwable throwable17 = retryOnPrimaryException11.getRootCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable throwable19 = retryOnPrimaryException4.unwrapCause();
        java.lang.String str20 = retryOnPrimaryException4.toString();
        java.lang.String str21 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str20, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "retry_on_primary_exception" + "'", str21, "retry_on_primary_exception");
    }

    @Test
    public void test0667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0667");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.lang.String str14 = retryOnPrimaryException2.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0668");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String[] strArray15 = new java.lang.String[] { "rest.exception.stacktrace.skip", "", "rest.exception.stacktrace.skip", "hi!", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", "RetryOnPrimaryException[rest.exception.cause.skip]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        retryOnPrimaryException2.addHeader("", (java.util.List<java.lang.String>) strList16);
        retryOnPrimaryException2.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", 1);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException23 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException2, streamOutput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
    }

    @Test
    public void test0669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0669");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        retryOnPrimaryException2.setResources("rest.exception.stacktrace.skip", strArray38);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException43 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamOutput42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray38);
    }

    @Test
    public void test0670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0670");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str18 = retryOnPrimaryException2.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str18, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0671");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Class<?> wildcardClass19 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test0672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0672");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException2, streamOutput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test0673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0673");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException13.setResources("", strArray22);
        retryOnPrimaryException2.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray22);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder25 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params26 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder27 = retryOnPrimaryException2.toXContent(xContentBuilder25, params26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(params26);
    }

    @Test
    public void test0674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0674");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        org.elasticsearch.common.io.stream.StreamInput streamInput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException2, streamInput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test0675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0675");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
    }

    @Test
    public void test0676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0676");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index9 = null;
        retryOnPrimaryException2.setIndex(index9);
        org.elasticsearch.common.io.stream.StreamInput streamInput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException2, streamInput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
    }

    @Test
    public void test0677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0677");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException4.getHeaderKeys();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException4.getHeader("rest.exception.cause.skip");
        org.elasticsearch.index.Index index15 = null;
        retryOnPrimaryException4.setIndex(index15);
        retryOnPrimaryException4.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (int) (byte) 0);
        retryOnPrimaryException4.setShard("RetryOnPrimaryException[retry_on_primary_exception]", 0);
        org.elasticsearch.common.io.stream.StreamInput streamInput23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable24 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException4, streamInput23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test0678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0678");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable6 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException11.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str15 = retryOnPrimaryException11.getDetailedMessage();
        java.lang.Throwable throwable16 = retryOnPrimaryException11.unwrapCause();
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException11.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable throwable21 = retryOnPrimaryException11.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index26 = retryOnPrimaryException25.getIndex();
        java.lang.String str27 = retryOnPrimaryException25.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "hi!");
        retryOnPrimaryException31.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        retryOnPrimaryException38.setIndex("");
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException38.setResources("", strArray47);
        retryOnPrimaryException31.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray47);
        retryOnPrimaryException25.setResources("", strArray47);
        retryOnPrimaryException11.setResources("rest.exception.cause.skip", strArray47);
        retryOnPrimaryException2.addHeader("[hi!][[hi!][0]] RetryOnPrimaryException[]", strArray47);
        java.lang.Class<?> wildcardClass53 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable16.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable21.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test0679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0679");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray10);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        retryOnPrimaryException20.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        retryOnPrimaryException20.setShard(shardId24);
        java.lang.String str26 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable throwable27 = retryOnPrimaryException20.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.Throwable[] throwableArray33 = retryOnPrimaryException30.getSuppressed();
        java.lang.String[] strArray38 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException30.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray38);
        java.util.Set<java.lang.String> strSet40 = retryOnPrimaryException30.getHeaderKeys();
        java.lang.Throwable throwable41 = retryOnPrimaryException30.unwrapCause();
        java.lang.String str42 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable41);
        retryOnPrimaryException20.addSuppressed(throwable41);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", throwable41);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index49 = retryOnPrimaryException48.getIndex();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        retryOnPrimaryException53.setIndex("");
        boolean boolean56 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "rest.exception.cause.skip");
        retryOnPrimaryException59.setIndex("");
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException59.setResources("", strArray68);
        java.lang.String str70 = retryOnPrimaryException59.toString();
        retryOnPrimaryException53.addSuppressed((java.lang.Throwable) retryOnPrimaryException59);
        java.lang.String str72 = retryOnPrimaryException53.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        retryOnPrimaryException53.setShard(shardId73);
        java.lang.String[] strArray85 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        retryOnPrimaryException53.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList86);
        retryOnPrimaryException48.addHeader("", (java.util.List<java.lang.String>) strList86);
        retryOnPrimaryException44.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (java.util.List<java.lang.String>) strList86);
        retryOnPrimaryException2.addHeader("[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList86);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder92 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params93 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder94 = retryOnPrimaryException2.toXContent(xContentBuilder92, params93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "retry_on_primary_exception" + "'", str26, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable27.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "retry_on_primary_exception" + "'", str42, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index49);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str70, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(params93);
    }

    @Test
    public void test0680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0680");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        retryOnPrimaryException4.setShard(shardId8);
        java.lang.String str10 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.Index index11 = null;
        retryOnPrimaryException4.setIndex(index11);
        java.lang.String str13 = retryOnPrimaryException4.getResourceType();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException4.getHeaderKeys();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str10, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test0681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0681");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable throwable10 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException16.getHeaderKeys();
        java.lang.Throwable throwable18 = retryOnPrimaryException16.getRootCause();
        java.lang.String[] strArray24 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        retryOnPrimaryException16.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList25);
        java.util.List<java.lang.String> strList29 = null;
        retryOnPrimaryException16.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList29);
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "hi!");
        retryOnPrimaryException35.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "rest.exception.cause.skip");
        retryOnPrimaryException42.setIndex("");
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException42.setResources("", strArray51);
        retryOnPrimaryException35.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray51);
        retryOnPrimaryException16.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray51);
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException16.getHeader("");
        java.lang.Throwable throwable57 = retryOnPrimaryException16.unwrapCause();
        retryOnPrimaryException2.addSuppressed(throwable57);
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "rest.exception.cause.skip");
        retryOnPrimaryException62.setIndex("");
        boolean boolean65 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException62);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.cause.skip");
        retryOnPrimaryException68.setIndex("");
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException68.setResources("", strArray77);
        java.lang.String str79 = retryOnPrimaryException68.toString();
        retryOnPrimaryException62.addSuppressed((java.lang.Throwable) retryOnPrimaryException68);
        java.lang.String str81 = retryOnPrimaryException62.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId82 = null;
        retryOnPrimaryException62.setShard(shardId82);
        java.lang.String[] strArray94 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList95 = new java.util.ArrayList<java.lang.String>();
        boolean boolean96 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList95, strArray94);
        retryOnPrimaryException62.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList95);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList95);
        java.lang.Class<?> wildcardClass99 = strList95.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(throwable57);
        org.junit.Assert.assertEquals(throwable57.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable57.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable57.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str79, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test0682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0682");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        org.elasticsearch.index.Index index3 = null;
        retryOnPrimaryException2.setIndex(index3);
        retryOnPrimaryException2.setIndex("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList8);
    }

    @Test
    public void test0683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0683");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("", strArray28);
        retryOnPrimaryException12.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        java.lang.String str31 = retryOnPrimaryException12.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index35 = retryOnPrimaryException34.getIndex();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.index.Index index37 = null;
        retryOnPrimaryException12.setIndex(index37);
        java.lang.String str39 = retryOnPrimaryException12.getResourceType();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.Throwable[] throwableArray41 = retryOnPrimaryException2.getSuppressed();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str31, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index35);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str39, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray41);
    }

    @Test
    public void test0684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0684");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable[] throwableArray18 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception20 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException2, streamOutput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test0685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0685");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException2.getResourceId();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        java.lang.String str26 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test0686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0686");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        java.lang.String str33 = retryOnPrimaryException14.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index37 = retryOnPrimaryException36.getIndex();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.Index index39 = retryOnPrimaryException36.getIndex();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        retryOnPrimaryException43.setIndex("");
        java.lang.Throwable[] throwableArray46 = retryOnPrimaryException43.getSuppressed();
        java.lang.String[] strArray51 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException43.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray51);
        retryOnPrimaryException36.setResources("hi!", strArray51);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray51);
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "rest.exception.cause.skip");
        retryOnPrimaryException58.setIndex("");
        org.elasticsearch.index.Index index61 = null;
        retryOnPrimaryException58.setIndex(index61);
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet67 = retryOnPrimaryException66.getHeaderKeys();
        retryOnPrimaryException66.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "");
        retryOnPrimaryException66.addSuppressed((java.lang.Throwable) retryOnPrimaryException73);
        org.elasticsearch.rest.RestStatus restStatus75 = retryOnPrimaryException73.status();
        java.lang.String[] strArray80 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException73.setResources("rest.exception.cause.skip", strArray80);
        retryOnPrimaryException58.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray80);
        retryOnPrimaryException2.setResources("rest.exception.cause.skip", strArray80);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput84 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException85 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamOutput84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index37);
        org.junit.Assert.assertNull(index39);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertTrue("'" + restStatus75 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus75.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray80);
    }

    @Test
    public void test0687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0687");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String str38 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        retryOnPrimaryException26.setShard(shardId39);
        org.elasticsearch.index.shard.ShardId shardId41 = retryOnPrimaryException26.getShardId();
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable throwable43 = retryOnPrimaryException26.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus44 = retryOnPrimaryException26.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray46 = retryOnPrimaryException26.guessRootCauses();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "retry_on_primary_exception" + "'", str38, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus44 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus44.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray46);
    }

    @Test
    public void test0688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0688");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "hi!");
        retryOnPrimaryException10.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip");
        retryOnPrimaryException17.setIndex("");
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException17.setResources("", strArray26);
        retryOnPrimaryException10.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException2.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "hi!");
        retryOnPrimaryException32.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        retryOnPrimaryException39.setIndex("");
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException39.setResources("", strArray48);
        retryOnPrimaryException32.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray48);
        java.lang.String str51 = retryOnPrimaryException32.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index55 = retryOnPrimaryException54.getIndex();
        retryOnPrimaryException32.addSuppressed((java.lang.Throwable) retryOnPrimaryException54);
        org.elasticsearch.index.Index index57 = retryOnPrimaryException54.getIndex();
        java.lang.String str58 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException54);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException54);
        java.lang.Class<?> wildcardClass60 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str51, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index55);
        org.junit.Assert.assertNull(index57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "retry_on_primary_exception" + "'", str58, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test0689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0689");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("hi!", (int) (short) 1);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index13 = retryOnPrimaryException12.getIndex();
        java.lang.String str14 = retryOnPrimaryException12.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "hi!");
        retryOnPrimaryException18.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.cause.skip");
        retryOnPrimaryException25.setIndex("");
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException25.setResources("", strArray34);
        retryOnPrimaryException18.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray34);
        retryOnPrimaryException12.setResources("", strArray34);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strArray34);
        org.elasticsearch.common.io.stream.StreamInput streamInput39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable40 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(index13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str14, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray34);
    }

    @Test
    public void test0690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0690");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable6 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException2.getShardId();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        java.lang.Class<?> wildcardClass9 = throwable8.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0691");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        retryOnPrimaryException4.setShard(shardId18);
        retryOnPrimaryException4.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
    }

    @Test
    public void test0692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0692");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str14 = retryOnPrimaryException10.getResourceType();
        java.lang.Throwable throwable15 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder16 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params17 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder18 = retryOnPrimaryException10.toXContent(xContentBuilder16, params17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(params17);
    }

    @Test
    public void test0693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0693");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index9 = null;
        retryOnPrimaryException2.setIndex(index9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException2.getResourceId();
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str8, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
    }

    @Test
    public void test0694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0694");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException2.getShardId();
        java.lang.String str14 = retryOnPrimaryException2.getResourceType();
        java.lang.String str15 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Class<?> wildcardClass16 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test0695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0695");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable11 = retryOnPrimaryException2.getRootCause();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList15);
    }

    @Test
    public void test0696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0696");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException4.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList13);
        java.util.List<java.lang.String> strList17 = null;
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList17);
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str30 = retryOnPrimaryException26.getDetailedMessage();
        java.lang.Throwable throwable31 = retryOnPrimaryException26.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable31);
        org.elasticsearch.index.Index index33 = retryOnPrimaryException32.getIndex();
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException32);
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException32);
        java.lang.Throwable[] throwableArray36 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        retryOnPrimaryException4.setIndex("hi!");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray40 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        retryOnPrimaryException43.setIndex("");
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException43.setResources("", strArray52);
        boolean boolean54 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        retryOnPrimaryException57.setIndex("");
        java.lang.Throwable[] throwableArray60 = retryOnPrimaryException57.getSuppressed();
        retryOnPrimaryException43.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        retryOnPrimaryException43.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str30, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable31.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray40);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(throwableArray60);
    }

    @Test
    public void test0697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0697");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.String str10 = retryOnPrimaryException4.getDetailedMessage();
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        retryOnPrimaryException15.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str19 = retryOnPrimaryException15.getDetailedMessage();
        java.lang.Throwable throwable20 = retryOnPrimaryException15.unwrapCause();
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException15.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable throwable23 = retryOnPrimaryException15.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException15.status();
        java.lang.Throwable throwable25 = retryOnPrimaryException15.getRootCause();
        java.lang.Throwable throwable26 = retryOnPrimaryException15.unwrapCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str19, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable25.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test0698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0698");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = null;
        retryOnPrimaryException10.setIndex(index11);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException14 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException10, streamOutput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test0699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0699");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable16 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index20 = retryOnPrimaryException19.getIndex();
        java.lang.String str21 = retryOnPrimaryException19.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index26 = retryOnPrimaryException25.getIndex();
        java.lang.String str27 = retryOnPrimaryException25.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "hi!");
        retryOnPrimaryException31.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        retryOnPrimaryException38.setIndex("");
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException38.setResources("", strArray47);
        retryOnPrimaryException31.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray47);
        retryOnPrimaryException25.setResources("", strArray47);
        retryOnPrimaryException19.setResources("", strArray47);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray52 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException19);
        java.util.List<java.lang.String> strList53 = retryOnPrimaryException19.getResourceId();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet58 = retryOnPrimaryException57.getHeaderKeys();
        java.util.Set<java.lang.String> strSet59 = retryOnPrimaryException57.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus60 = retryOnPrimaryException57.status();
        java.lang.Throwable throwable61 = retryOnPrimaryException57.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId62 = retryOnPrimaryException57.getShardId();
        java.lang.Throwable throwable63 = retryOnPrimaryException57.unwrapCause();
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        java.lang.Class<?> wildcardClass65 = retryOnPrimaryException19.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertTrue("'" + restStatus60 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus60.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable61);
        org.junit.Assert.assertEquals(throwable61.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable61.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable61.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId62);
        org.junit.Assert.assertNotNull(throwable63);
        org.junit.Assert.assertEquals(throwable63.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable63.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable63.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test0700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0700");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable28 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = retryOnPrimaryException33.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        retryOnPrimaryException41.setIndex("");
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = retryOnPrimaryException41.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.cause.skip");
        retryOnPrimaryException48.setIndex("");
        org.elasticsearch.index.Index index51 = null;
        retryOnPrimaryException48.setIndex(index51);
        org.elasticsearch.rest.RestStatus restStatus53 = retryOnPrimaryException48.status();
        java.lang.Throwable throwable54 = retryOnPrimaryException48.getRootCause();
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet60 = retryOnPrimaryException59.getHeaderKeys();
        java.lang.Throwable throwable61 = retryOnPrimaryException59.getRootCause();
        java.lang.String[] strArray67 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        retryOnPrimaryException59.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList68);
        retryOnPrimaryException48.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList68);
        retryOnPrimaryException33.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList68);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList68);
        retryOnPrimaryException2.setIndex("[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder76 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params77 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder78 = retryOnPrimaryException2.toXContent(xContentBuilder76, params77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.toString(), "[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertTrue("'" + restStatus53 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus53.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable54);
        org.junit.Assert.assertEquals(throwable54.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable54.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable54.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertNotNull(throwable61);
        org.junit.Assert.assertEquals(throwable61.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable61.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable61.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(params77);
    }

    @Test
    public void test0701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0701");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray3 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder4 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params5 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder6 = retryOnPrimaryException2.toXContent(xContentBuilder4, params5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray3);
        org.junit.Assert.assertNotNull(params5);
    }

    @Test
    public void test0702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0702");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        retryOnPrimaryException2.setShard("hi!", (int) ' ');
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception10 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException2, streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
    }

    @Test
    public void test0703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0703");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException14.getHeaderKeys();
        java.lang.Throwable throwable16 = retryOnPrimaryException14.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable16);
        retryOnPrimaryException2.addSuppressed(throwable16);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder20 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder22 = retryOnPrimaryException2.toXContent(xContentBuilder20, params21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
    }

    @Test
    public void test0704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0704");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable[] throwableArray27 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str28 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable29 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str30 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable29);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "retry_on_primary_exception" + "'", str30, "retry_on_primary_exception");
    }

    @Test
    public void test0705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0705");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (short) 0);
        java.lang.String str17 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str17, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0706");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable19 = retryOnPrimaryException2.unwrapCause();
        java.util.Set<java.lang.String> strSet20 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamInput streamInput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException22 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet20);
    }

    @Test
    public void test0707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0707");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str20 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test0708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0708");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException17.setIndex(index18);
        java.lang.Throwable throwable20 = retryOnPrimaryException17.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException17.writeTo(streamOutput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
    }

    @Test
    public void test0709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0709");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException11.getHeaderKeys();
        retryOnPrimaryException11.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "");
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        org.elasticsearch.index.Index index25 = null;
        retryOnPrimaryException22.setIndex(index25);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException22.status();
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray33 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException22.addHeader("rest.exception.stacktrace.skip", strArray33);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray33);
        org.elasticsearch.common.io.stream.StreamInput streamInput36 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException37 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException4, streamInput36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray33);
    }

    @Test
    public void test0710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0710");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput28 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
    }

    @Test
    public void test0711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0711");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException11.setIndex(index14);
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException11.status();
        java.lang.Throwable throwable17 = retryOnPrimaryException11.getRootCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException22.getHeaderKeys();
        java.lang.Throwable throwable24 = retryOnPrimaryException22.getRootCause();
        java.lang.String[] strArray30 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        retryOnPrimaryException22.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList31);
        retryOnPrimaryException11.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList31);
        java.lang.String str35 = retryOnPrimaryException11.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId36 = retryOnPrimaryException11.getShardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str35, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId36);
    }

    @Test
    public void test0712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0712");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        retryOnPrimaryException4.setShard(shardId8);
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable11 = retryOnPrimaryException4.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test0713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0713");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index14 = retryOnPrimaryException13.getIndex();
        java.lang.String str15 = retryOnPrimaryException13.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        retryOnPrimaryException13.setResources("", strArray35);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.util.Set<java.lang.String> strSet40 = retryOnPrimaryException13.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = retryOnPrimaryException13.guessRootCauses();
        retryOnPrimaryException13.setShard("[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]", 10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException13);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
    }

    @Test
    public void test0714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0714");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException11.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException11.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException11.writeTo(streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
    }

    @Test
    public void test0715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0715");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        java.lang.String str12 = retryOnPrimaryException2.toString();
        java.lang.String str13 = retryOnPrimaryException2.toString();
        java.lang.Throwable[] throwableArray14 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder15 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params16 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder17 = retryOnPrimaryException2.toXContent(xContentBuilder15, params16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str12, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(params16);
    }

    @Test
    public void test0716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0716");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException4.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.index.shard.ShardId shardId16 = retryOnPrimaryException4.getShardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNull(shardId16);
    }

    @Test
    public void test0717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0717");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        retryOnPrimaryException9.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 0);
        java.lang.Class<?> wildcardClass15 = retryOnPrimaryException9.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test0718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0718");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index14 = retryOnPrimaryException13.getIndex();
        java.lang.String str15 = retryOnPrimaryException13.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        retryOnPrimaryException13.setResources("", strArray35);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.util.List<java.lang.String> strList41 = retryOnPrimaryException13.getHeader("rest.exception.stacktrace.skip");
        java.lang.Throwable[] throwableArray42 = retryOnPrimaryException13.getSuppressed();
        java.lang.String str43 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder44 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params45 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder46 = retryOnPrimaryException13.toXContent(xContentBuilder44, params45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "retry_on_primary_exception" + "'", str43, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(params45);
    }

    @Test
    public void test0719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0719");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException2.status();
        org.elasticsearch.common.io.stream.StreamInput streamInput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException9 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test0720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0720");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable9 = retryOnPrimaryException2.getRootCause();
        java.lang.Class<?> wildcardClass10 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0721");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException12 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test0722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0722");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable11 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId12 = retryOnPrimaryException2.getShardId();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = shardId12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId12);
    }

    @Test
    public void test0723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0723");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException2.getResourceId();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.elasticsearch.common.io.stream.StreamInput streamInput26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable27 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertNotNull(strList23);
    }

    @Test
    public void test0724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0724");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        java.lang.String str37 = retryOnPrimaryException26.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        java.lang.Throwable throwable42 = retryOnPrimaryException41.unwrapCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String[] strArray47 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException41.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "hi!");
        retryOnPrimaryException53.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "rest.exception.cause.skip");
        retryOnPrimaryException60.setIndex("");
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException60.setResources("", strArray69);
        retryOnPrimaryException53.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray69);
        retryOnPrimaryException49.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray69);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder73 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params74 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder75 = retryOnPrimaryException49.toXContent(xContentBuilder73, params74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str37, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertNotNull(params74);
    }

    @Test
    public void test0725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0725");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", throwable2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException9.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str13 = retryOnPrimaryException9.getDetailedMessage();
        java.lang.Throwable throwable14 = retryOnPrimaryException9.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable14);
        org.elasticsearch.index.Index index16 = retryOnPrimaryException15.getIndex();
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException15.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray30);
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strArray30);
        org.elasticsearch.index.shard.ShardId shardId34 = retryOnPrimaryException3.getShardId();
        org.elasticsearch.index.Index index35 = retryOnPrimaryException3.getIndex();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput36 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException3.writeTo(streamOutput36);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNull(index35);
    }

    @Test
    public void test0726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0726");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException10.getResourceId();
        retryOnPrimaryException10.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException18 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException10, streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test0727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0727");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str10 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.Index index11 = retryOnPrimaryException2.getIndex();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(index11);
    }

    @Test
    public void test0728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0728");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        retryOnPrimaryException8.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray24);
        retryOnPrimaryException2.setResources("", strArray24);
        org.elasticsearch.index.Index index28 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        org.elasticsearch.rest.RestStatus restStatus31 = retryOnPrimaryException2.status();
        org.elasticsearch.index.Index index32 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput33 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNull(index28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertTrue("'" + restStatus31 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus31.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index32);
    }

    @Test
    public void test0729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0729");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.cause.skip");
        retryOnPrimaryException6.setIndex("");
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!", (java.lang.Throwable) retryOnPrimaryException6);
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException6.getHeaderKeys();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException6.getHeader("rest.exception.cause.skip");
        org.elasticsearch.index.Index index17 = null;
        retryOnPrimaryException6.setIndex(index17);
        java.util.Set<java.lang.String> strSet19 = retryOnPrimaryException6.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException23.setResources("", strArray32);
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.String str35 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        retryOnPrimaryException23.setShard(shardId36);
        org.elasticsearch.index.shard.ShardId shardId38 = retryOnPrimaryException23.getShardId();
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet44 = retryOnPrimaryException43.getHeaderKeys();
        java.lang.Throwable throwable45 = retryOnPrimaryException43.getRootCause();
        java.lang.String[] strArray51 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        retryOnPrimaryException43.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList52);
        retryOnPrimaryException23.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList52);
        retryOnPrimaryException6.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList52);
        java.util.List<java.lang.String> strList57 = retryOnPrimaryException6.getResourceId();
        java.util.List<java.lang.String> strList58 = retryOnPrimaryException6.getResourceId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "retry_on_primary_exception" + "'", str35, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNull(strList58);
    }

    @Test
    public void test0730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0730");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId11 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(shardId11);
    }

    @Test
    public void test0731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0731");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException2.guessRootCauses();
        retryOnPrimaryException2.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 0);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder21 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params22 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder23 = retryOnPrimaryException2.toXContent(xContentBuilder21, params22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]][[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(params22);
    }

    @Test
    public void test0732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0732");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        org.elasticsearch.index.Index index21 = null;
        retryOnPrimaryException2.setIndex(index21);
        java.lang.Throwable throwable23 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str25 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception27 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException2, streamOutput26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str25, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0733");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        java.lang.Throwable[] throwableArray12 = retryOnPrimaryException10.getSuppressed();
        java.lang.String str13 = retryOnPrimaryException10.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException10, streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str13, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test0734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0734");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index27 = retryOnPrimaryException26.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException26.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException34.getHeaderKeys();
        java.lang.Throwable throwable36 = retryOnPrimaryException34.getRootCause();
        java.lang.String[] strArray42 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        retryOnPrimaryException34.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList43);
        retryOnPrimaryException26.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList43);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = retryOnPrimaryException26.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index52 = retryOnPrimaryException51.getIndex();
        java.util.List<java.lang.String> strList53 = retryOnPrimaryException51.getResourceId();
        java.lang.Throwable throwable54 = retryOnPrimaryException51.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus55 = retryOnPrimaryException51.status();
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index60 = retryOnPrimaryException59.getIndex();
        java.lang.String str61 = retryOnPrimaryException59.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index66 = retryOnPrimaryException65.getIndex();
        java.lang.String str67 = retryOnPrimaryException65.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "hi!");
        retryOnPrimaryException71.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId76 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException78 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId76, "rest.exception.cause.skip");
        retryOnPrimaryException78.setIndex("");
        java.lang.String[] strArray87 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException78.setResources("", strArray87);
        retryOnPrimaryException71.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray87);
        retryOnPrimaryException65.setResources("", strArray87);
        retryOnPrimaryException59.setResources("", strArray87);
        retryOnPrimaryException51.setResources("", strArray87);
        retryOnPrimaryException26.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strArray87);
        java.lang.String str94 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException26);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertNull(index52);
        org.junit.Assert.assertNull(strList53);
        org.junit.Assert.assertNotNull(throwable54);
        org.junit.Assert.assertEquals(throwable54.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable54.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable54.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus55 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus55.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str61, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str67, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "retry_on_primary_exception" + "'", str94, "retry_on_primary_exception");
    }

    @Test
    public void test0735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0735");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException4.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.Throwable[] throwableArray18 = retryOnPrimaryException15.getSuppressed();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(throwableArray18);
    }

    @Test
    public void test0736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0736");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException4.setIndex(index10);
        java.lang.String str12 = retryOnPrimaryException4.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str12, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0737");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("rest.exception.stacktrace.skip");
        java.lang.Throwable[] throwableArray10 = retryOnPrimaryException2.getSuppressed();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(throwableArray10);
    }

    @Test
    public void test0738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0738");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        java.lang.String str37 = retryOnPrimaryException26.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        java.lang.Throwable throwable42 = retryOnPrimaryException41.unwrapCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String[] strArray47 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException41.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException41);
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException41.getHeader("");
        java.lang.Throwable throwable52 = retryOnPrimaryException41.getRootCause();
        java.lang.String str53 = retryOnPrimaryException41.toString();
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str37, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(throwable52);
        org.junit.Assert.assertEquals(throwable52.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable52.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable52.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str53, "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0739");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable18 = retryOnPrimaryException4.unwrapCause();
        retryOnPrimaryException4.setIndex("rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "hi!");
        retryOnPrimaryException39.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        retryOnPrimaryException46.setIndex("");
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException46.setResources("", strArray55);
        retryOnPrimaryException39.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray55);
        retryOnPrimaryException24.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray55);
        retryOnPrimaryException4.setResources("hi!", strArray55);
        java.util.List<java.lang.String> strList61 = retryOnPrimaryException4.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        boolean boolean62 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable63 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder64 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params65 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder66 = retryOnPrimaryException4.toXContent(xContentBuilder64, params65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(throwable63);
        org.junit.Assert.assertEquals(throwable63.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable63.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable63.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(params65);
    }

    @Test
    public void test0740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0740");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException8.getHeaderKeys();
        retryOnPrimaryException8.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException19.setIndex(index22);
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException19.status();
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        throwable5.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String str27 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable5);
        java.lang.Class<?> wildcardClass28 = throwable5.getClass();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "retry_on_primary_exception" + "'", str27, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0741");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray10);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder12 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params13 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder14 = retryOnPrimaryException2.toXContent(xContentBuilder12, params13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(params13);
    }

    @Test
    public void test0742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0742");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray37);
        retryOnPrimaryException2.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray37);
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamInput streamInput42 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException43 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test0743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0743");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable16 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index20 = retryOnPrimaryException19.getIndex();
        java.lang.String str21 = retryOnPrimaryException19.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index26 = retryOnPrimaryException25.getIndex();
        java.lang.String str27 = retryOnPrimaryException25.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "hi!");
        retryOnPrimaryException31.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        retryOnPrimaryException38.setIndex("");
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException38.setResources("", strArray47);
        retryOnPrimaryException31.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray47);
        retryOnPrimaryException25.setResources("", strArray47);
        retryOnPrimaryException19.setResources("", strArray47);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray52 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException19);
        java.util.List<java.lang.String> strList53 = retryOnPrimaryException19.getResourceId();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet58 = retryOnPrimaryException57.getHeaderKeys();
        java.util.Set<java.lang.String> strSet59 = retryOnPrimaryException57.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus60 = retryOnPrimaryException57.status();
        java.lang.Throwable throwable61 = retryOnPrimaryException57.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId62 = retryOnPrimaryException57.getShardId();
        java.lang.Throwable throwable63 = retryOnPrimaryException57.unwrapCause();
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        retryOnPrimaryException57.setIndex("[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        retryOnPrimaryException57.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", 10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertTrue("'" + restStatus60 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus60.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable61);
        org.junit.Assert.assertEquals(throwable61.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable61.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable61.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]][[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId62);
        org.junit.Assert.assertNotNull(throwable63);
        org.junit.Assert.assertEquals(throwable63.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable63.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable63.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]][[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0744");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str18 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        java.lang.String str41 = retryOnPrimaryException22.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index45 = retryOnPrimaryException44.getIndex();
        retryOnPrimaryException22.addSuppressed((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.index.Index index47 = retryOnPrimaryException44.getIndex();
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "rest.exception.cause.skip");
        retryOnPrimaryException51.setIndex("");
        java.lang.Throwable[] throwableArray54 = retryOnPrimaryException51.getSuppressed();
        java.lang.String[] strArray59 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException51.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray59);
        retryOnPrimaryException44.setResources("hi!", strArray59);
        retryOnPrimaryException2.addHeader("", strArray59);
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index67 = retryOnPrimaryException66.getIndex();
        java.lang.String str68 = retryOnPrimaryException66.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "hi!");
        retryOnPrimaryException72.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId77 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException79 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId77, "rest.exception.cause.skip");
        retryOnPrimaryException79.setIndex("");
        java.lang.String[] strArray88 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException79.setResources("", strArray88);
        retryOnPrimaryException72.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray88);
        retryOnPrimaryException66.setResources("", strArray88);
        retryOnPrimaryException2.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray88);
        java.lang.String str93 = retryOnPrimaryException2.toString();
        java.lang.Class<?> wildcardClass94 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str18, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str41, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index45);
        org.junit.Assert.assertNull(index47);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNull(index67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str68, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str93, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test0745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0745");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException9.guessRootCauses();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException9.getHeaderKeys();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId16 = retryOnPrimaryException9.getShardId();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(shardId16);
    }

    @Test
    public void test0746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0746");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder22 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params23 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder24 = retryOnPrimaryException2.toXContent(xContentBuilder22, params23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(params23);
    }

    @Test
    public void test0747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0747");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException13.setResources("", strArray22);
        retryOnPrimaryException6.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray22);
        java.lang.Throwable[] throwableArray25 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        java.lang.String str39 = retryOnPrimaryException28.toString();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        java.lang.Throwable throwable44 = retryOnPrimaryException43.unwrapCause();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        java.lang.String[] strArray49 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException43.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray49);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException43);
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException51);
        java.lang.Throwable throwable53 = retryOnPrimaryException51.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str39, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(throwable53);
        org.junit.Assert.assertEquals(throwable53.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable53.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable53.toString(), "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
    }

    @Test
    public void test0748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0748");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        retryOnPrimaryException10.setIndex("");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException10.setResources("", strArray19);
        java.lang.String str21 = retryOnPrimaryException10.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str23 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        retryOnPrimaryException4.setShard(shardId24);
        java.lang.String[] strArray36 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        retryOnPrimaryException4.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList37);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "hi!");
        retryOnPrimaryException43.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        retryOnPrimaryException43.setShard(shardId47);
        java.util.Set<java.lang.String> strSet49 = retryOnPrimaryException43.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        retryOnPrimaryException53.setIndex("");
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException53.setResources("", strArray62);
        retryOnPrimaryException43.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray62);
        retryOnPrimaryException4.setResources("", strArray62);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str21, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(strArray62);
    }

    @Test
    public void test0749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0749");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.String str24 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str25 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException4.guessRootCauses();
        java.lang.Throwable throwable27 = retryOnPrimaryException4.getRootCause();
        java.lang.Throwable throwable28 = retryOnPrimaryException4.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, throwable28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "retry_on_primary_exception" + "'", str24, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable27.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test0750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0750");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("", strArray21);
        retryOnPrimaryException2.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray21);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test0751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0751");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("hi!", (int) (short) 1);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException2.status();
        java.lang.String str11 = retryOnPrimaryException2.toString();
        org.elasticsearch.common.io.stream.StreamInput streamInput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable13 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str11, "[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0752");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException4.status();
        java.lang.String str25 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.String str26 = retryOnPrimaryException4.getResourceType();
        java.lang.String str27 = retryOnPrimaryException4.toString();
        retryOnPrimaryException4.setShard("RetryOnPrimaryException[]", (int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str26, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str27, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test0753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0753");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index10 = retryOnPrimaryException9.getIndex();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("", strArray29);
        java.lang.String str31 = retryOnPrimaryException20.toString();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str33 = retryOnPrimaryException14.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        retryOnPrimaryException14.setShard(shardId34);
        java.lang.String[] strArray46 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        retryOnPrimaryException14.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException9.addHeader("", (java.util.List<java.lang.String>) strList47);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException55.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException55);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray58 = retryOnPrimaryException57.guessRootCauses();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray61 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException57);
        java.lang.String str62 = retryOnPrimaryException57.toString();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str31, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray58);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];" + "'", str62, "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
    }

    @Test
    public void test0754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0754");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str10 = retryOnPrimaryException6.getDetailedMessage();
        java.lang.Throwable throwable11 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable11);
        retryOnPrimaryException12.setIndex("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test0755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0755");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        retryOnPrimaryException4.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (short) 10);
        java.lang.String str27 = retryOnPrimaryException4.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test0756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0756");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException4.setIndex(index7);
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException4.getResourceId();
        java.lang.Throwable throwable10 = retryOnPrimaryException4.getRootCause();
        java.lang.String str11 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable10);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "retry_on_primary_exception" + "'", str11, "retry_on_primary_exception");
    }

    @Test
    public void test0757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0757");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray10);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        retryOnPrimaryException20.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        retryOnPrimaryException20.setShard(shardId24);
        java.lang.String str26 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable throwable27 = retryOnPrimaryException20.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.Throwable[] throwableArray33 = retryOnPrimaryException30.getSuppressed();
        java.lang.String[] strArray38 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException30.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray38);
        java.util.Set<java.lang.String> strSet40 = retryOnPrimaryException30.getHeaderKeys();
        java.lang.Throwable throwable41 = retryOnPrimaryException30.unwrapCause();
        java.lang.String str42 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable41);
        retryOnPrimaryException20.addSuppressed(throwable41);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", throwable41);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index49 = retryOnPrimaryException48.getIndex();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        retryOnPrimaryException53.setIndex("");
        boolean boolean56 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "rest.exception.cause.skip");
        retryOnPrimaryException59.setIndex("");
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException59.setResources("", strArray68);
        java.lang.String str70 = retryOnPrimaryException59.toString();
        retryOnPrimaryException53.addSuppressed((java.lang.Throwable) retryOnPrimaryException59);
        java.lang.String str72 = retryOnPrimaryException53.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        retryOnPrimaryException53.setShard(shardId73);
        java.lang.String[] strArray85 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        retryOnPrimaryException53.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList86);
        retryOnPrimaryException48.addHeader("", (java.util.List<java.lang.String>) strList86);
        retryOnPrimaryException44.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (java.util.List<java.lang.String>) strList86);
        retryOnPrimaryException2.addHeader("[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList86);
        org.elasticsearch.common.io.stream.StreamInput streamInput92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable93 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "retry_on_primary_exception" + "'", str26, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable27.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "retry_on_primary_exception" + "'", str42, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index49);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str70, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
    }

    @Test
    public void test0758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0758");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        java.lang.String str39 = retryOnPrimaryException28.toString();
        retryOnPrimaryException22.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String str41 = retryOnPrimaryException22.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        retryOnPrimaryException22.setShard(shardId42);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray44 = retryOnPrimaryException22.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        retryOnPrimaryException22.setShard(shardId45);
        java.lang.String str47 = retryOnPrimaryException22.getDetailedMessage();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.util.Set<java.lang.String> strSet49 = retryOnPrimaryException22.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput50 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException22.writeTo(streamOutput50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str39, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str47, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strSet49);
    }

    @Test
    public void test0759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0759");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Throwable throwable10 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.io.stream.StreamInput streamInput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable12 = org.elasticsearch.ElasticsearchException.readStackTrace(throwable10, streamInput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test0760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0760");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "retry_on_primary_exception");
        java.lang.String str26 = retryOnPrimaryException25.toString();
        org.elasticsearch.index.Index index27 = null;
        retryOnPrimaryException25.setIndex(index27);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.lang.String[] strArray39 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException32.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray39);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        retryOnPrimaryException32.setShard(shardId41);
        java.util.Set<java.lang.String> strSet43 = retryOnPrimaryException32.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "hi!");
        retryOnPrimaryException49.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str53 = retryOnPrimaryException49.getDetailedMessage();
        java.lang.Throwable throwable54 = retryOnPrimaryException49.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable54);
        org.elasticsearch.index.Index index56 = retryOnPrimaryException55.getIndex();
        java.lang.String str57 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException55);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "rest.exception.cause.skip");
        retryOnPrimaryException61.setIndex("");
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException61.setResources("", strArray70);
        retryOnPrimaryException55.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray70);
        retryOnPrimaryException32.addHeader("retry_on_primary_exception", strArray70);
        retryOnPrimaryException25.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray70);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray70);
        java.lang.String str76 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder77 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params78 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder79 = retryOnPrimaryException2.toXContent(xContentBuilder77, params78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str26, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str53, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable54);
        org.junit.Assert.assertEquals(throwable54.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable54.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable54.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "retry_on_primary_exception" + "'", str57, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "retry_on_primary_exception" + "'", str76, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(params78);
    }

    @Test
    public void test0761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0761");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str25 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setShard("rest.exception.stacktrace.skip", 100);
        retryOnPrimaryException2.setShard("retry_on_primary_exception", (int) (byte) 10);
        java.lang.Throwable throwable32 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.addSuppressed(throwable32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str25, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0762");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException2.setIndex(index22);
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray25 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Class<?> wildcardClass26 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0763");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        retryOnPrimaryException2.setIndex("");
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        retryOnPrimaryException18.setIndex("");
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException18.setResources("", strArray27);
        java.lang.String str29 = retryOnPrimaryException18.toString();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        java.lang.String str31 = retryOnPrimaryException12.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        retryOnPrimaryException12.setShard(shardId32);
        java.lang.String[] strArray44 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        retryOnPrimaryException12.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList45);
        retryOnPrimaryException2.addHeader("hi!", (java.util.List<java.lang.String>) strList45);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamInput streamInput50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException51 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str29, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
    }

    @Test
    public void test0764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0764");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str14 = retryOnPrimaryException10.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException10.status();
        retryOnPrimaryException10.setShard("[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) 10);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test0765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0765");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        retryOnPrimaryException10.setIndex("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException10.writeTo(streamOutput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test0766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0766");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.Index index24 = null;
        retryOnPrimaryException2.setIndex(index24);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder26 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params27 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder28 = retryOnPrimaryException2.toXContent(xContentBuilder26, params27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(params27);
    }

    @Test
    public void test0767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0767");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index14 = retryOnPrimaryException13.getIndex();
        java.lang.String str15 = retryOnPrimaryException13.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        retryOnPrimaryException13.setResources("", strArray35);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.rest.RestStatus restStatus40 = retryOnPrimaryException2.status();
        java.lang.Class<?> wildcardClass41 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + restStatus40 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus40.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test0768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0768");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str13 = retryOnPrimaryException10.toString();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException10.getHeaderKeys();
        retryOnPrimaryException10.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("", strArray29);
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str32 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        retryOnPrimaryException20.setShard(shardId33);
        org.elasticsearch.index.shard.ShardId shardId35 = retryOnPrimaryException20.getShardId();
        retryOnPrimaryException20.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException20.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "retry_on_primary_exception");
        java.lang.String str44 = retryOnPrimaryException43.toString();
        org.elasticsearch.index.Index index45 = null;
        retryOnPrimaryException43.setIndex(index45);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "rest.exception.cause.skip");
        java.lang.String[] strArray57 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException50.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray57);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        retryOnPrimaryException50.setShard(shardId59);
        java.util.Set<java.lang.String> strSet61 = retryOnPrimaryException50.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "hi!");
        retryOnPrimaryException67.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str71 = retryOnPrimaryException67.getDetailedMessage();
        java.lang.Throwable throwable72 = retryOnPrimaryException67.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable72);
        org.elasticsearch.index.Index index74 = retryOnPrimaryException73.getIndex();
        java.lang.String str75 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException73);
        org.elasticsearch.index.shard.ShardId shardId77 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException79 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId77, "rest.exception.cause.skip");
        retryOnPrimaryException79.setIndex("");
        java.lang.String[] strArray88 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException79.setResources("", strArray88);
        retryOnPrimaryException73.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray88);
        retryOnPrimaryException50.addHeader("retry_on_primary_exception", strArray88);
        retryOnPrimaryException43.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray88);
        retryOnPrimaryException20.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray88);
        retryOnPrimaryException10.setResources("RetryOnPrimaryException[retry_on_primary_exception]", strArray88);
        retryOnPrimaryException10.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 0);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput98 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException10.writeTo(streamOutput98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str13, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "retry_on_primary_exception" + "'", str32, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str44, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str71, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable72);
        org.junit.Assert.assertEquals(throwable72.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable72.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable72.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "retry_on_primary_exception" + "'", str75, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray88);
    }

    @Test
    public void test0769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0769");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.lang.String str13 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str14 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId16 = retryOnPrimaryException2.getShardId();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.common.io.stream.StreamInput streamInput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable19 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(strList17);
    }

    @Test
    public void test0770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0770");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.cause.skip");
        retryOnPrimaryException6.setIndex("");
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!", (java.lang.Throwable) retryOnPrimaryException6);
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException6.getHeaderKeys();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException6.getHeader("rest.exception.cause.skip");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test0771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0771");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException2.getResourceId();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamInput streamInput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException2, streamInput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test0772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0772");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.cause.skip");
        retryOnPrimaryException27.setIndex("");
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException27);
        retryOnPrimaryException27.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "hi!", (java.lang.Throwable) retryOnPrimaryException27);
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException27.getHeaderKeys();
        java.lang.String[] strArray50 = new java.lang.String[] { "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[rest.exception.cause.skip]", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[rest.exception.cause.skip]", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        retryOnPrimaryException27.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList51);
        retryOnPrimaryException2.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (java.util.List<java.lang.String>) strList51);
        org.elasticsearch.rest.RestStatus restStatus55 = retryOnPrimaryException2.status();
        java.util.List<java.lang.String> strList57 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.elasticsearch.rest.RestStatus restStatus58 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + restStatus55 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus55.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertTrue("'" + restStatus58 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus58.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test0773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0773");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable[] throwableArray7 = retryOnPrimaryException6.getSuppressed();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test0774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0774");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException11.setIndex(index14);
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException11.status();
        java.lang.Throwable throwable17 = retryOnPrimaryException11.getRootCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0775");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.index.shard.ShardId shardId4 = retryOnPrimaryException2.getShardId();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass5 = shardId4.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(shardId4);
    }

    @Test
    public void test0776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0776");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.stacktrace.skip", throwable11);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException16.getHeaderKeys();
        retryOnPrimaryException16.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        retryOnPrimaryException31.setIndex("");
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException31.setResources("", strArray40);
        retryOnPrimaryException24.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray40);
        java.lang.String str43 = retryOnPrimaryException24.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index47 = retryOnPrimaryException46.getIndex();
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException46);
        retryOnPrimaryException46.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet55 = retryOnPrimaryException54.getHeaderKeys();
        java.lang.Throwable throwable56 = retryOnPrimaryException54.getRootCause();
        java.lang.String[] strArray62 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        retryOnPrimaryException54.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException46.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException16.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException12.addHeader("hi!", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException4.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList63);
        org.elasticsearch.rest.RestStatus restStatus70 = retryOnPrimaryException4.status();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput71 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable72 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException4, streamOutput71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str43, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index47);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(throwable56);
        org.junit.Assert.assertEquals(throwable56.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + restStatus70 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus70.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test0777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0777");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index27 = retryOnPrimaryException26.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray29 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.rest.RestStatus restStatus30 = retryOnPrimaryException26.status();
        java.lang.Throwable throwable31 = retryOnPrimaryException26.unwrapCause();
        org.elasticsearch.index.Index index32 = retryOnPrimaryException26.getIndex();
        java.lang.String str33 = retryOnPrimaryException26.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray29);
        org.junit.Assert.assertTrue("'" + restStatus30 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus30.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test0778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0778");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        retryOnPrimaryException9.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 0);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "hi!");
        retryOnPrimaryException18.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.cause.skip");
        retryOnPrimaryException25.setIndex("");
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException25.setResources("", strArray34);
        retryOnPrimaryException18.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray34);
        java.lang.Throwable[] throwableArray37 = retryOnPrimaryException18.getSuppressed();
        java.lang.String[] strArray44 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException18.setResources("rest.exception.cause.skip", strArray44);
        retryOnPrimaryException9.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray44);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "rest.exception.cause.skip");
        java.lang.String[] strArray57 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException50.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray57);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index62 = retryOnPrimaryException61.getIndex();
        java.lang.String str63 = retryOnPrimaryException61.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "hi!");
        retryOnPrimaryException67.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "rest.exception.cause.skip");
        retryOnPrimaryException74.setIndex("");
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException74.setResources("", strArray83);
        retryOnPrimaryException67.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray83);
        retryOnPrimaryException61.setResources("", strArray83);
        retryOnPrimaryException50.addSuppressed((java.lang.Throwable) retryOnPrimaryException61);
        java.util.Set<java.lang.String> strSet88 = retryOnPrimaryException61.getHeaderKeys();
        java.lang.Throwable throwable89 = retryOnPrimaryException61.getRootCause();
        java.util.List<java.lang.String> strList90 = retryOnPrimaryException61.getResourceId();
        retryOnPrimaryException9.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strList90);
        java.util.List<java.lang.String> strList93 = retryOnPrimaryException9.getHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput94 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException9.writeTo(streamOutput94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNull(index62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str63, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strSet88);
        org.junit.Assert.assertNotNull(throwable89);
        org.junit.Assert.assertEquals(throwable89.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable89.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable89.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNull(strList93);
    }

    @Test
    public void test0779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0779");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str18 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index19 = null;
        retryOnPrimaryException2.setIndex(index19);
        retryOnPrimaryException2.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 0);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]][[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str18, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0780");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.index.shard.ShardId shardId15 = retryOnPrimaryException4.getShardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(shardId15);
    }

    @Test
    public void test0781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0781");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        retryOnPrimaryException4.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException4.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "retry_on_primary_exception");
        java.lang.String str28 = retryOnPrimaryException27.toString();
        org.elasticsearch.index.Index index29 = null;
        retryOnPrimaryException27.setIndex(index29);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        java.lang.String[] strArray41 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException34.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray41);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        retryOnPrimaryException34.setShard(shardId43);
        java.util.Set<java.lang.String> strSet45 = retryOnPrimaryException34.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "hi!");
        retryOnPrimaryException51.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str55 = retryOnPrimaryException51.getDetailedMessage();
        java.lang.Throwable throwable56 = retryOnPrimaryException51.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable56);
        org.elasticsearch.index.Index index58 = retryOnPrimaryException57.getIndex();
        java.lang.String str59 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException57);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "rest.exception.cause.skip");
        retryOnPrimaryException63.setIndex("");
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException63.setResources("", strArray72);
        retryOnPrimaryException57.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray72);
        retryOnPrimaryException34.addHeader("retry_on_primary_exception", strArray72);
        retryOnPrimaryException27.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray72);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray72);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str28, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str55, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable56);
        org.junit.Assert.assertEquals(throwable56.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable56.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable56.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "retry_on_primary_exception" + "'", str59, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray72);
    }

    @Test
    public void test0782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0782");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet26 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str27 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput28 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test0783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0783");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable18 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.io.stream.StreamInput streamInput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException20 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0784");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId22 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException2, streamOutput23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(shardId22);
    }

    @Test
    public void test0785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0785");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index9 = null;
        retryOnPrimaryException2.setIndex(index9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException2.getResourceId();
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        retryOnPrimaryException16.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str20 = retryOnPrimaryException16.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        retryOnPrimaryException31.setIndex("");
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException31.setResources("", strArray40);
        retryOnPrimaryException24.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray40);
        retryOnPrimaryException16.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray40);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "hi!");
        retryOnPrimaryException46.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        retryOnPrimaryException53.setIndex("");
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException53.setResources("", strArray62);
        retryOnPrimaryException46.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        java.lang.String str65 = retryOnPrimaryException46.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index69 = retryOnPrimaryException68.getIndex();
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException68);
        org.elasticsearch.index.Index index71 = retryOnPrimaryException68.getIndex();
        java.lang.String str72 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException68);
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException68);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.util.Set<java.lang.String> strSet75 = retryOnPrimaryException16.getHeaderKeys();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str8, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str20, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str65, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index69);
        org.junit.Assert.assertNull(index71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "retry_on_primary_exception" + "'", str72, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet75);
    }

    @Test
    public void test0786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0786");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamInput streamInput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException15 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
    }

    @Test
    public void test0787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0787");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(strList25);
    }

    @Test
    public void test0788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0788");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        retryOnPrimaryException8.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray24);
        retryOnPrimaryException2.setResources("", strArray24);
        org.elasticsearch.index.Index index28 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        org.elasticsearch.rest.RestStatus restStatus31 = retryOnPrimaryException2.status();
        org.elasticsearch.index.Index index32 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder33 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params34 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder35 = retryOnPrimaryException2.toXContent(xContentBuilder33, params34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNull(index28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertTrue("'" + restStatus31 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus31.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index32);
        org.junit.Assert.assertNotNull(params34);
    }

    @Test
    public void test0789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0789");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException13.setResources("", strArray22);
        retryOnPrimaryException6.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray22);
        java.lang.Throwable[] throwableArray25 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        java.lang.String str39 = retryOnPrimaryException28.toString();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        java.lang.Throwable throwable44 = retryOnPrimaryException43.unwrapCause();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        java.lang.String[] strArray49 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException43.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray49);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException43);
        java.lang.Throwable throwable52 = retryOnPrimaryException51.getRootCause();
        java.lang.Throwable throwable53 = retryOnPrimaryException51.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str39, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(throwable52);
        org.junit.Assert.assertEquals(throwable52.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable52.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable52.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable53);
        org.junit.Assert.assertEquals(throwable53.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable53.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable53.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0790");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test0791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0791");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.Index index4 = retryOnPrimaryException2.getIndex();
        retryOnPrimaryException2.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 10);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        retryOnPrimaryException11.setShard(shardId24);
        java.lang.String str26 = retryOnPrimaryException11.getDetailedMessage();
        java.lang.Throwable[] throwableArray27 = retryOnPrimaryException11.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        java.lang.String[] strArray37 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException30.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray37);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index42 = retryOnPrimaryException41.getIndex();
        java.lang.String str43 = retryOnPrimaryException41.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "hi!");
        retryOnPrimaryException47.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        retryOnPrimaryException54.setIndex("");
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException54.setResources("", strArray63);
        retryOnPrimaryException47.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray63);
        retryOnPrimaryException41.setResources("", strArray63);
        retryOnPrimaryException30.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.rest.RestStatus restStatus68 = retryOnPrimaryException30.status();
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        java.util.List<java.lang.String> strList70 = retryOnPrimaryException30.getResourceId();
        retryOnPrimaryException2.addHeader("[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]", strList70);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput72 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(index4);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str26, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(index42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str43, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + restStatus68 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus68.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strList70);
    }

    @Test
    public void test0792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0792");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.util.Set<java.lang.String> strSet6 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable[] throwableArray7 = retryOnPrimaryException4.getSuppressed();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException4.getHeader("rest.exception.cause.skip");
        java.lang.String str10 = retryOnPrimaryException4.getDetailedMessage();
        retryOnPrimaryException4.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable13 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip");
        retryOnPrimaryException17.setIndex("");
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException17.setResources("", strArray26);
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.String str29 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        retryOnPrimaryException17.setShard(shardId30);
        org.elasticsearch.index.shard.ShardId shardId32 = retryOnPrimaryException17.getShardId();
        retryOnPrimaryException17.setShard("hi!", (int) '4');
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "hi!");
        retryOnPrimaryException39.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        retryOnPrimaryException39.setShard(shardId43);
        java.util.Set<java.lang.String> strSet45 = retryOnPrimaryException39.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        retryOnPrimaryException49.setIndex("");
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException49.setResources("", strArray58);
        retryOnPrimaryException39.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray58);
        retryOnPrimaryException17.setResources("rest.exception.stacktrace.skip", strArray58);
        retryOnPrimaryException4.addHeader("hi!", strArray58);
        java.lang.String str63 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "retry_on_primary_exception" + "'", str29, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "retry_on_primary_exception" + "'", str63, "retry_on_primary_exception");
    }

    @Test
    public void test0793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0793");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        java.lang.String[] strArray34 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        retryOnPrimaryException2.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList35);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        retryOnPrimaryException40.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        retryOnPrimaryException47.setIndex("");
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException47.setResources("", strArray56);
        retryOnPrimaryException40.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray56);
        java.lang.String str59 = retryOnPrimaryException40.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index63 = retryOnPrimaryException62.getIndex();
        retryOnPrimaryException40.addSuppressed((java.lang.Throwable) retryOnPrimaryException62);
        org.elasticsearch.index.Index index65 = null;
        retryOnPrimaryException40.setIndex(index65);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.index.Index index68 = null;
        retryOnPrimaryException40.setIndex(index68);
        org.elasticsearch.common.io.stream.StreamInput streamInput70 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable71 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException40, streamInput70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str59, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index63);
    }

    @Test
    public void test0794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0794");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        java.lang.String str17 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setShard("[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (short) 1);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test0795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0795");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException8.getHeaderKeys();
        retryOnPrimaryException8.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException19.setIndex(index22);
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException19.status();
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        throwable5.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder27 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params28 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder29 = retryOnPrimaryException19.toXContent(xContentBuilder27, params28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(params28);
    }

    @Test
    public void test0796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0796");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", 0);
        org.elasticsearch.common.io.stream.StreamInput streamInput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable22 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]][[[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test0797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0797");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String[] strArray17 = new java.lang.String[] { "rest.exception.stacktrace.skip", "", "rest.exception.stacktrace.skip", "hi!", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", "RetryOnPrimaryException[rest.exception.cause.skip]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        retryOnPrimaryException4.addHeader("", (java.util.List<java.lang.String>) strList18);
        retryOnPrimaryException4.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", 1);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test0798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0798");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        retryOnPrimaryException10.setIndex("");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException10.setResources("", strArray19);
        java.lang.String str21 = retryOnPrimaryException10.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str23 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        retryOnPrimaryException4.setShard(shardId24);
        java.lang.Throwable throwable26 = retryOnPrimaryException4.getRootCause();
        java.lang.String str27 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.String str28 = retryOnPrimaryException4.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str21, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test0799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0799");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException4.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList13);
        java.util.List<java.lang.String> strList17 = null;
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList17);
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        boolean boolean27 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException30.setResources("", strArray39);
        java.lang.String str41 = retryOnPrimaryException30.toString();
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.String str43 = retryOnPrimaryException24.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        retryOnPrimaryException24.setShard(shardId44);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray46 = retryOnPrimaryException24.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        retryOnPrimaryException24.setShard(shardId47);
        java.lang.String str49 = retryOnPrimaryException24.getDetailedMessage();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray51 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str52 = retryOnPrimaryException4.getResourceType();
        java.lang.String str53 = retryOnPrimaryException4.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str41, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str49, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str53, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test0800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0800");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        retryOnPrimaryException9.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 0);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "hi!");
        retryOnPrimaryException18.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.cause.skip");
        retryOnPrimaryException25.setIndex("");
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException25.setResources("", strArray34);
        retryOnPrimaryException18.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray34);
        java.lang.Throwable[] throwableArray37 = retryOnPrimaryException18.getSuppressed();
        java.lang.String[] strArray44 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException18.setResources("rest.exception.cause.skip", strArray44);
        retryOnPrimaryException9.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray44);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "rest.exception.cause.skip");
        java.lang.String[] strArray57 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException50.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray57);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index62 = retryOnPrimaryException61.getIndex();
        java.lang.String str63 = retryOnPrimaryException61.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "hi!");
        retryOnPrimaryException67.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "rest.exception.cause.skip");
        retryOnPrimaryException74.setIndex("");
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException74.setResources("", strArray83);
        retryOnPrimaryException67.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray83);
        retryOnPrimaryException61.setResources("", strArray83);
        retryOnPrimaryException50.addSuppressed((java.lang.Throwable) retryOnPrimaryException61);
        java.util.Set<java.lang.String> strSet88 = retryOnPrimaryException61.getHeaderKeys();
        java.lang.Throwable throwable89 = retryOnPrimaryException61.getRootCause();
        java.util.List<java.lang.String> strList90 = retryOnPrimaryException61.getResourceId();
        retryOnPrimaryException9.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strList90);
        java.lang.String str92 = retryOnPrimaryException9.getResourceType();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNull(index62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str63, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strSet88);
        org.junit.Assert.assertNotNull(throwable89);
        org.junit.Assert.assertEquals(throwable89.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable89.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable89.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str92, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test0801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0801");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.Index index14 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException2, streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
    }

    @Test
    public void test0802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0802");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        java.lang.String str9 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId10 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException14.setResources("", strArray23);
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.Throwable[] throwableArray31 = retryOnPrimaryException28.getSuppressed();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        retryOnPrimaryException14.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        org.elasticsearch.index.Index index36 = null;
        retryOnPrimaryException14.setIndex(index36);
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException14.getResourceId();
        retryOnPrimaryException2.addHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", strList38);
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput41 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str9, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test0803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0803");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("", strArray28);
        retryOnPrimaryException12.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        java.lang.Throwable[] throwableArray31 = retryOnPrimaryException12.getSuppressed();
        java.lang.String[] strArray38 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("rest.exception.cause.skip", strArray38);
        retryOnPrimaryException2.addHeader("", strArray38);
        java.lang.Throwable[] throwableArray41 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str42 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.rest.RestStatus restStatus43 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray44 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder45 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params46 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder47 = retryOnPrimaryException2.toXContent(xContentBuilder45, params46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str42, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + restStatus43 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus43.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray44);
        org.junit.Assert.assertNotNull(params46);
    }

    @Test
    public void test0804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0804");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String[] strArray8 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException4.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
    }

    @Test
    public void test0805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0805");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId48 = retryOnPrimaryException2.getShardId();
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable50 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable[] throwableArray51 = throwable50.getSuppressed();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(throwable50);
        org.junit.Assert.assertEquals(throwable50.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable50.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable50.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray51);
    }

    @Test
    public void test0806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0806");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Class<?> wildcardClass14 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test0807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0807");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("retry_on_primary_exception");
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getResourceId();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0808");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        java.lang.Throwable throwable26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.stacktrace.skip", throwable26);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet32 = retryOnPrimaryException31.getHeaderKeys();
        retryOnPrimaryException31.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "hi!");
        retryOnPrimaryException39.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        retryOnPrimaryException46.setIndex("");
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException46.setResources("", strArray55);
        retryOnPrimaryException39.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray55);
        java.lang.String str58 = retryOnPrimaryException39.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index62 = retryOnPrimaryException61.getIndex();
        retryOnPrimaryException39.addSuppressed((java.lang.Throwable) retryOnPrimaryException61);
        retryOnPrimaryException61.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet70 = retryOnPrimaryException69.getHeaderKeys();
        java.lang.Throwable throwable71 = retryOnPrimaryException69.getRootCause();
        java.lang.String[] strArray77 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        retryOnPrimaryException69.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList78);
        retryOnPrimaryException61.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList78);
        retryOnPrimaryException31.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList78);
        retryOnPrimaryException27.addHeader("hi!", (java.util.List<java.lang.String>) strList78);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        boolean boolean85 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput86 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException27.writeTo(streamOutput86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str58, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index62);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertNotNull(throwable71);
        org.junit.Assert.assertEquals(throwable71.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable71.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable71.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test0809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0809");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str16 = retryOnPrimaryException12.getDetailedMessage();
        java.lang.Throwable throwable17 = retryOnPrimaryException12.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable17);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException22.guessRootCauses();
        java.util.Set<java.lang.String> strSet27 = retryOnPrimaryException22.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        retryOnPrimaryException31.setIndex("");
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException31.setResources("", strArray40);
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "hi!");
        retryOnPrimaryException46.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        retryOnPrimaryException53.setIndex("");
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException53.setResources("", strArray62);
        retryOnPrimaryException46.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        retryOnPrimaryException31.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        retryOnPrimaryException22.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray62);
        retryOnPrimaryException18.setResources("hi!", strArray62);
        retryOnPrimaryException4.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray62);
        java.lang.Class<?> wildcardClass69 = strArray62.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str16, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test0810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0810");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable16 = retryOnPrimaryException2.getRootCause();
        java.lang.String str17 = retryOnPrimaryException2.toString();
        retryOnPrimaryException2.setShard("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (short) 100);
        java.lang.String[] strArray22 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];", strArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.toString(), "[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]][100]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str17, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0811");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index27 = retryOnPrimaryException26.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException26.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException34.getHeaderKeys();
        java.lang.Throwable throwable36 = retryOnPrimaryException34.getRootCause();
        java.lang.String[] strArray42 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        retryOnPrimaryException34.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList43);
        retryOnPrimaryException26.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList43);
        java.util.List<java.lang.String> strList48 = retryOnPrimaryException26.getHeader("hi!");
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException26);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test0812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0812");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException11.getHeaderKeys();
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException11.getHeaderKeys();
        java.lang.Throwable[] throwableArray14 = retryOnPrimaryException11.getSuppressed();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException11.getHeader("rest.exception.cause.skip");
        throwable8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.util.List<java.lang.String> strList19 = null;
        retryOnPrimaryException11.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strList19);
        retryOnPrimaryException11.setIndex("RetryOnPrimaryException[]");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder23 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params24 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder25 = retryOnPrimaryException11.toXContent(xContentBuilder23, params24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(params24);
    }

    @Test
    public void test0813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0813");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException24.status();
        java.lang.Class<?> wildcardClass29 = restStatus28.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0814");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.common.io.stream.StreamInput streamInput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException11 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test0815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0815");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException7.unwrapCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException7.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray26);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        retryOnPrimaryException32.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 10);
        java.lang.Throwable throwable40 = retryOnPrimaryException32.unwrapCause();
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException32.getHeader("[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList42);
    }

    @Test
    public void test0816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0816");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException14.setResources("", strArray23);
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String str26 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.Throwable throwable27 = retryOnPrimaryException14.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder30 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params31 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder32 = retryOnPrimaryException2.toXContent(xContentBuilder30, params31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "retry_on_primary_exception" + "'", str26, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(params31);
    }

    @Test
    public void test0817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0817");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException4.setIndex(index7);
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException4.getResourceId();
        java.lang.Throwable throwable10 = retryOnPrimaryException4.getRootCause();
        java.lang.String str11 = retryOnPrimaryException4.toString();
        retryOnPrimaryException4.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str11, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0818");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray16);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        retryOnPrimaryException9.setShard(shardId18);
        java.util.Set<java.lang.String> strSet20 = retryOnPrimaryException9.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str30 = retryOnPrimaryException26.getDetailedMessage();
        java.lang.Throwable throwable31 = retryOnPrimaryException26.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable31);
        org.elasticsearch.index.Index index33 = retryOnPrimaryException32.getIndex();
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        retryOnPrimaryException38.setIndex("");
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException38.setResources("", strArray47);
        retryOnPrimaryException32.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray47);
        retryOnPrimaryException9.addHeader("retry_on_primary_exception", strArray47);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray47);
        org.elasticsearch.index.Index index52 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.common.io.stream.StreamInput streamInput53 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException2, streamInput53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str30, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable31.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNull(index52);
    }

    @Test
    public void test0819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0819");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str4 = retryOnPrimaryException2.getResourceType();
        java.lang.Class<?> wildcardClass5 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test0820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0820");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException4.getHeader("");
        java.lang.Throwable throwable10 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException13.getHeaderKeys();
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException13.getHeaderKeys();
        java.lang.Throwable[] throwableArray16 = retryOnPrimaryException13.getSuppressed();
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException13.getHeader("rest.exception.cause.skip");
        throwable10.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.util.List<java.lang.String> strList21 = null;
        retryOnPrimaryException13.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strList21);
        retryOnPrimaryException13.setIndex("RetryOnPrimaryException[]");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(strList18);
    }

    @Test
    public void test0821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0821");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "retry_on_primary_exception");
        java.lang.String str20 = retryOnPrimaryException19.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "hi!");
        retryOnPrimaryException27.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str31 = retryOnPrimaryException27.getDetailedMessage();
        java.lang.Throwable throwable32 = retryOnPrimaryException27.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable32);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        retryOnPrimaryException37.setIndex("");
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = retryOnPrimaryException37.guessRootCauses();
        java.util.Set<java.lang.String> strSet42 = retryOnPrimaryException37.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        retryOnPrimaryException46.setIndex("");
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException46.setResources("", strArray55);
        boolean boolean57 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "hi!");
        retryOnPrimaryException61.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.cause.skip");
        retryOnPrimaryException68.setIndex("");
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException68.setResources("", strArray77);
        retryOnPrimaryException61.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray77);
        retryOnPrimaryException46.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray77);
        retryOnPrimaryException37.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray77);
        retryOnPrimaryException33.setResources("hi!", strArray77);
        retryOnPrimaryException19.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray77);
        retryOnPrimaryException2.addHeader("", strArray77);
        java.lang.String str85 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable86 = retryOnPrimaryException2.getRootCause();
        java.lang.String str87 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput88 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str20, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str31, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable32.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str85, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable86);
        org.junit.Assert.assertEquals(throwable86.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable86.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable86.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str87, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test0822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0822");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str25 = retryOnPrimaryException4.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test0823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0823");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index5 = retryOnPrimaryException4.getIndex();
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        java.lang.Throwable throwable7 = retryOnPrimaryException4.unwrapCause();
        retryOnPrimaryException4.setIndex("rest.exception.cause.skip");
        java.lang.String str10 = retryOnPrimaryException4.getResourceType();
        java.lang.Throwable throwable11 = retryOnPrimaryException4.unwrapCause();
        retryOnPrimaryException4.setIndex("");
        retryOnPrimaryException4.setShard("", (int) (short) 0);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        retryOnPrimaryException19.setShard(shardId28);
        java.lang.String str30 = retryOnPrimaryException19.getDetailedMessage();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(index5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.toString(), "[][[][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[][[][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str30, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test0824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0824");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        retryOnPrimaryException2.setResources("rest.exception.stacktrace.skip", strArray38);
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str43 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable44 = retryOnPrimaryException2.unwrapCause();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str43, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0825");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        java.lang.String str9 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId10 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException14.setResources("", strArray23);
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.Throwable[] throwableArray31 = retryOnPrimaryException28.getSuppressed();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        retryOnPrimaryException14.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        org.elasticsearch.index.Index index36 = null;
        retryOnPrimaryException14.setIndex(index36);
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException14.getResourceId();
        retryOnPrimaryException2.addHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", strList38);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder40 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params41 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder42 = retryOnPrimaryException2.toXContent(xContentBuilder40, params41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str9, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId10);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(strList38);
        org.junit.Assert.assertNotNull(params41);
    }

    @Test
    public void test0826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0826");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        retryOnPrimaryException11.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray42);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str48 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet52 = retryOnPrimaryException51.getHeaderKeys();
        java.lang.Throwable throwable53 = retryOnPrimaryException51.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = retryOnPrimaryException51.guessRootCauses();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException51);
        org.elasticsearch.index.shard.ShardId shardId56 = retryOnPrimaryException51.getShardId();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "retry_on_primary_exception" + "'", str48, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(throwable53);
        org.junit.Assert.assertEquals(throwable53.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable53.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable53.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertNull(shardId56);
    }

    @Test
    public void test0827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0827");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.index.Index index19 = null;
        retryOnPrimaryException2.setIndex(index19);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index26 = retryOnPrimaryException25.getIndex();
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException25.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet32 = retryOnPrimaryException31.getHeaderKeys();
        java.lang.Throwable throwable33 = retryOnPrimaryException31.getRootCause();
        java.lang.String[] strArray39 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        retryOnPrimaryException31.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList40);
        retryOnPrimaryException25.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList40);
        retryOnPrimaryException2.addHeader("hi!", (java.util.List<java.lang.String>) strList40);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNull(index26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable33.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
    }

    @Test
    public void test0828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0828");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.String[] strArray27 = new java.lang.String[] { "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[rest.exception.cause.skip]", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[rest.exception.cause.skip]", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        retryOnPrimaryException4.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList28);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput31 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException4.writeTo(streamOutput31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test0829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0829");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str9 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Class<?> wildcardClass10 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "retry_on_primary_exception" + "'", str9, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test0830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0830");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable[] throwableArray27 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str28 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable29 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setShard("[hi!][[hi!][0]] RetryOnPrimaryException[]", (int) (byte) -1);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder33 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params34 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder35 = retryOnPrimaryException2.toXContent(xContentBuilder33, params34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.toString(), "[[hi!][[hi!][0]] RetryOnPrimaryException[]][[[hi!][[hi!][0]] RetryOnPrimaryException[]][-1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(params34);
    }

    @Test
    public void test0831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0831");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        java.lang.String[] strArray34 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        retryOnPrimaryException2.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList35);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        retryOnPrimaryException40.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        retryOnPrimaryException47.setIndex("");
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException47.setResources("", strArray56);
        retryOnPrimaryException40.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray56);
        java.lang.String str59 = retryOnPrimaryException40.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index63 = retryOnPrimaryException62.getIndex();
        retryOnPrimaryException40.addSuppressed((java.lang.Throwable) retryOnPrimaryException62);
        org.elasticsearch.index.Index index65 = null;
        retryOnPrimaryException40.setIndex(index65);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 100);
        java.lang.Throwable throwable71 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.io.stream.StreamInput streamInput72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException73 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str59, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index63);
        org.junit.Assert.assertNotNull(throwable71);
        org.junit.Assert.assertEquals(throwable71.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable71.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable71.toString(), "[RetryOnPrimaryException[rest.exception.cause.skip]][[RetryOnPrimaryException[rest.exception.cause.skip]][100]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0832");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException13.setIndex(index16);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException13.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.String[] strArray24 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException13.addHeader("rest.exception.stacktrace.skip", strArray24);
        java.lang.Throwable throwable26 = retryOnPrimaryException13.getRootCause();
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException13.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.stacktrace.skip", throwable31);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException36.getHeaderKeys();
        retryOnPrimaryException36.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        retryOnPrimaryException44.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "rest.exception.cause.skip");
        retryOnPrimaryException51.setIndex("");
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException51.setResources("", strArray60);
        retryOnPrimaryException44.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray60);
        java.lang.String str63 = retryOnPrimaryException44.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index67 = retryOnPrimaryException66.getIndex();
        retryOnPrimaryException44.addSuppressed((java.lang.Throwable) retryOnPrimaryException66);
        retryOnPrimaryException66.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet75 = retryOnPrimaryException74.getHeaderKeys();
        java.lang.Throwable throwable76 = retryOnPrimaryException74.getRootCause();
        java.lang.String[] strArray82 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        retryOnPrimaryException74.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList83);
        retryOnPrimaryException66.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList83);
        retryOnPrimaryException36.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList83);
        retryOnPrimaryException32.addHeader("hi!", (java.util.List<java.lang.String>) strList83);
        retryOnPrimaryException13.addHeader("", (java.util.List<java.lang.String>) strList83);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput90 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException13.writeTo(streamOutput90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str63, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index67);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNotNull(throwable76);
        org.junit.Assert.assertEquals(throwable76.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable76.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable76.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
    }

    @Test
    public void test0833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0833");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException7.unwrapCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException7.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray26);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        retryOnPrimaryException32.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 10);
        java.util.List<java.lang.String> strList41 = retryOnPrimaryException32.getHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.common.io.stream.StreamInput streamInput42 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable43 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException32, streamInput42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNull(strList41);
    }

    @Test
    public void test0834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0834");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException8.getHeaderKeys();
        java.lang.Throwable throwable10 = retryOnPrimaryException8.getRootCause();
        java.lang.String[] strArray16 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        retryOnPrimaryException8.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList17);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList17);
        org.elasticsearch.index.Index index21 = retryOnPrimaryException2.getIndex();
        java.util.Set<java.lang.String> strSet22 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception24 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException2, streamOutput23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(index21);
        org.junit.Assert.assertNotNull(strSet22);
    }

    @Test
    public void test0835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0835");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.Index index4 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception6 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException2, streamOutput5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(index4);
    }

    @Test
    public void test0836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0836");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "retry_on_primary_exception");
        java.lang.String str20 = retryOnPrimaryException19.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "hi!");
        retryOnPrimaryException27.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str31 = retryOnPrimaryException27.getDetailedMessage();
        java.lang.Throwable throwable32 = retryOnPrimaryException27.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable32);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        retryOnPrimaryException37.setIndex("");
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = retryOnPrimaryException37.guessRootCauses();
        java.util.Set<java.lang.String> strSet42 = retryOnPrimaryException37.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        retryOnPrimaryException46.setIndex("");
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException46.setResources("", strArray55);
        boolean boolean57 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "hi!");
        retryOnPrimaryException61.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.cause.skip");
        retryOnPrimaryException68.setIndex("");
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException68.setResources("", strArray77);
        retryOnPrimaryException61.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray77);
        retryOnPrimaryException46.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray77);
        retryOnPrimaryException37.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray77);
        retryOnPrimaryException33.setResources("hi!", strArray77);
        retryOnPrimaryException19.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray77);
        retryOnPrimaryException2.addHeader("", strArray77);
        java.util.List<java.lang.String> strList85 = retryOnPrimaryException2.getResourceId();
        java.lang.Class<?> wildcardClass86 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str20, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str31, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable32.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test0837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0837");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable6 = retryOnPrimaryException2.getRootCause();
        java.lang.String str7 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder9 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params10 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder11 = retryOnPrimaryException2.toXContent(xContentBuilder9, params10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(params10);
    }

    @Test
    public void test0838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0838");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.Index index27 = null;
        retryOnPrimaryException2.setIndex(index27);
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder30 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params31 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder32 = retryOnPrimaryException2.toXContent(xContentBuilder30, params31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(params31);
    }

    @Test
    public void test0839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0839");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index9 = null;
        retryOnPrimaryException2.setIndex(index9);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str12 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "retry_on_primary_exception" + "'", str12, "retry_on_primary_exception");
    }

    @Test
    public void test0840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0840");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        retryOnPrimaryException16.setIndex("");
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException16.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException22 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException16, streamOutput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test0841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0841");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        retryOnPrimaryException2.setShard("hi!", (int) ' ');
        java.lang.Throwable[] throwableArray9 = retryOnPrimaryException2.getSuppressed();
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable11 = retryOnPrimaryException2.unwrapCause();
        java.lang.Class<?> wildcardClass12 = throwable11.getClass();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[hi!][[hi!][32]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test0842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0842");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable throwable10 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable13 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable13.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
    }

    @Test
    public void test0843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0843");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable23 = retryOnPrimaryException2.getRootCause();
        java.util.Set<java.lang.String> strSet24 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "hi!");
        retryOnPrimaryException29.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str33 = retryOnPrimaryException29.getDetailedMessage();
        java.lang.Throwable throwable34 = retryOnPrimaryException29.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable34);
        org.elasticsearch.index.Index index36 = retryOnPrimaryException35.getIndex();
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException35);
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.index.Index index39 = null;
        retryOnPrimaryException35.setIndex(index39);
        retryOnPrimaryException35.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        java.util.List<java.lang.String> strList43 = retryOnPrimaryException35.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId44 = retryOnPrimaryException35.getShardId();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder46 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params47 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder48 = retryOnPrimaryException35.toXContent(xContentBuilder46, params47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable34.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(params47);
    }

    @Test
    public void test0844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0844");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException13.setIndex(index16);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException13.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.common.io.stream.StreamInput streamInput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException21 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException13, streamInput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test0845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0845");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable28 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        java.lang.Throwable throwable35 = retryOnPrimaryException34.unwrapCause();
        java.lang.String[] strArray39 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        retryOnPrimaryException34.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList40);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        retryOnPrimaryException46.setIndex("");
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        retryOnPrimaryException52.setIndex("");
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException52.setResources("", strArray61);
        java.lang.String str63 = retryOnPrimaryException52.toString();
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String str65 = retryOnPrimaryException46.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        retryOnPrimaryException46.setShard(shardId66);
        java.lang.String[] strArray78 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        retryOnPrimaryException46.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException34.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList79);
        java.util.List<java.lang.String> strList84 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId85 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException87 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId85, "rest.exception.cause.skip");
        retryOnPrimaryException87.setIndex("");
        java.lang.Throwable[] throwableArray90 = retryOnPrimaryException87.getSuppressed();
        java.lang.String[] strArray95 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException87.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray95);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException87);
        org.elasticsearch.rest.RestStatus restStatus98 = retryOnPrimaryException87.status();
        java.util.Set<java.lang.String> strSet99 = retryOnPrimaryException87.getHeaderKeys();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.toString(), "[[] RetryOnPrimaryException[rest.exception.cause.skip]][[[] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str63, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertTrue("'" + restStatus98 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus98.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet99);
    }

    @Test
    public void test0846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0846");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        java.lang.String str9 = retryOnPrimaryException2.toString();
        java.lang.Throwable[] throwableArray10 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str9, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
    }

    @Test
    public void test0847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0847");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Class<?> wildcardClass9 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test0848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0848");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        java.lang.String str7 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException4.getShardId();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str7, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0849");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.cause.skip");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException6.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray13);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException6.setShard(shardId15);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException6.guessRootCauses();
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        retryOnPrimaryException6.setShard(shardId20);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
    }

    @Test
    public void test0850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0850");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("rest.exception.stacktrace.skip", (int) (short) 0);
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", 1);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException2, streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
    }

    @Test
    public void test0851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0851");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
    }

    @Test
    public void test0852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0852");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException2.status();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder9 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params10 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder11 = retryOnPrimaryException2.toXContent(xContentBuilder9, params10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(params10);
    }

    @Test
    public void test0853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0853");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException11.setIndex(index14);
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException11.status();
        java.lang.Throwable throwable17 = retryOnPrimaryException11.getRootCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable20 = retryOnPrimaryException4.unwrapCause();
        java.lang.Throwable[] throwableArray21 = throwable20.getSuppressed();
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable20);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, throwable20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test0854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0854");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException8.getHeaderKeys();
        java.lang.Throwable throwable10 = retryOnPrimaryException8.getRootCause();
        java.lang.String[] strArray16 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        retryOnPrimaryException8.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList17);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList17);
        org.elasticsearch.index.Index index21 = retryOnPrimaryException2.getIndex();
        java.util.Set<java.lang.String> strSet22 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Class<?> wildcardClass23 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(index21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0855");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.cause.skip");
        retryOnPrimaryException27.setIndex("");
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException27);
        retryOnPrimaryException27.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "hi!", (java.lang.Throwable) retryOnPrimaryException27);
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException27.getHeaderKeys();
        java.lang.String[] strArray50 = new java.lang.String[] { "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[rest.exception.cause.skip]", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[rest.exception.cause.skip]", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        retryOnPrimaryException27.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList51);
        retryOnPrimaryException2.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (java.util.List<java.lang.String>) strList51);
        org.elasticsearch.rest.RestStatus restStatus55 = retryOnPrimaryException2.status();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException57 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException2, streamOutput56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + restStatus55 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus55.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test0856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0856");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index12 = retryOnPrimaryException11.getIndex();
        java.lang.String str13 = retryOnPrimaryException11.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index18 = retryOnPrimaryException17.getIndex();
        java.lang.String str19 = retryOnPrimaryException17.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        retryOnPrimaryException23.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException30.setResources("", strArray39);
        retryOnPrimaryException23.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray39);
        retryOnPrimaryException17.setResources("", strArray39);
        retryOnPrimaryException11.setResources("", strArray39);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray39);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        retryOnPrimaryException47.setIndex("");
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        retryOnPrimaryException53.setIndex("");
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException53.setResources("", strArray62);
        java.lang.String str64 = retryOnPrimaryException53.toString();
        retryOnPrimaryException47.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        java.lang.String str66 = retryOnPrimaryException47.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        retryOnPrimaryException47.setShard(shardId67);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray69 = retryOnPrimaryException47.guessRootCauses();
        java.util.List<java.lang.String> strList71 = retryOnPrimaryException47.getHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.Class<?> wildcardClass73 = retryOnPrimaryException47.getClass();
        org.junit.Assert.assertNull(index12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str19, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str64, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray69);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test0857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0857");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException13.setIndex(index16);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException13.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.String[] strArray24 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException13.addHeader("rest.exception.stacktrace.skip", strArray24);
        java.lang.Throwable throwable26 = retryOnPrimaryException13.getRootCause();
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException13.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        java.lang.Throwable throwable31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.stacktrace.skip", throwable31);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException36.getHeaderKeys();
        retryOnPrimaryException36.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        retryOnPrimaryException44.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "rest.exception.cause.skip");
        retryOnPrimaryException51.setIndex("");
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException51.setResources("", strArray60);
        retryOnPrimaryException44.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray60);
        java.lang.String str63 = retryOnPrimaryException44.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index67 = retryOnPrimaryException66.getIndex();
        retryOnPrimaryException44.addSuppressed((java.lang.Throwable) retryOnPrimaryException66);
        retryOnPrimaryException66.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet75 = retryOnPrimaryException74.getHeaderKeys();
        java.lang.Throwable throwable76 = retryOnPrimaryException74.getRootCause();
        java.lang.String[] strArray82 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        retryOnPrimaryException74.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList83);
        retryOnPrimaryException66.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList83);
        retryOnPrimaryException36.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList83);
        retryOnPrimaryException32.addHeader("hi!", (java.util.List<java.lang.String>) strList83);
        retryOnPrimaryException13.addHeader("", (java.util.List<java.lang.String>) strList83);
        boolean boolean90 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        retryOnPrimaryException13.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", 0);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder94 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params95 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder96 = retryOnPrimaryException13.toXContent(xContentBuilder94, params95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str63, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index67);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertNotNull(throwable76);
        org.junit.Assert.assertEquals(throwable76.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable76.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable76.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertTrue("'" + boolean90 + "' != '" + false + "'", boolean90 == false);
        org.junit.Assert.assertNotNull(params95);
    }

    @Test
    public void test0858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0858");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str13 = retryOnPrimaryException10.toString();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException10.getHeaderKeys();
        retryOnPrimaryException10.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("", strArray29);
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str32 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        retryOnPrimaryException20.setShard(shardId33);
        org.elasticsearch.index.shard.ShardId shardId35 = retryOnPrimaryException20.getShardId();
        retryOnPrimaryException20.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException20.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "retry_on_primary_exception");
        java.lang.String str44 = retryOnPrimaryException43.toString();
        org.elasticsearch.index.Index index45 = null;
        retryOnPrimaryException43.setIndex(index45);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "rest.exception.cause.skip");
        java.lang.String[] strArray57 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException50.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray57);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        retryOnPrimaryException50.setShard(shardId59);
        java.util.Set<java.lang.String> strSet61 = retryOnPrimaryException50.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "hi!");
        retryOnPrimaryException67.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str71 = retryOnPrimaryException67.getDetailedMessage();
        java.lang.Throwable throwable72 = retryOnPrimaryException67.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable72);
        org.elasticsearch.index.Index index74 = retryOnPrimaryException73.getIndex();
        java.lang.String str75 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException73);
        org.elasticsearch.index.shard.ShardId shardId77 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException79 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId77, "rest.exception.cause.skip");
        retryOnPrimaryException79.setIndex("");
        java.lang.String[] strArray88 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException79.setResources("", strArray88);
        retryOnPrimaryException73.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray88);
        retryOnPrimaryException50.addHeader("retry_on_primary_exception", strArray88);
        retryOnPrimaryException43.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray88);
        retryOnPrimaryException20.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray88);
        retryOnPrimaryException10.setResources("RetryOnPrimaryException[retry_on_primary_exception]", strArray88);
        retryOnPrimaryException10.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 0);
        java.lang.Class<?> wildcardClass98 = retryOnPrimaryException10.getClass();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str13, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "retry_on_primary_exception" + "'", str32, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str44, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str71, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable72);
        org.junit.Assert.assertEquals(throwable72.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable72.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable72.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "retry_on_primary_exception" + "'", str75, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test0859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0859");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamInput streamInput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException11 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
    }

    @Test
    public void test0860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0860");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException4.setShard(shardId6);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(strList5);
    }

    @Test
    public void test0861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0861");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable21 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException4.status();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test0862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0862");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException4.getHeaderKeys();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException4.getHeader("rest.exception.cause.skip");
        org.elasticsearch.index.Index index15 = null;
        retryOnPrimaryException4.setIndex(index15);
        retryOnPrimaryException4.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (int) (byte) 0);
        retryOnPrimaryException4.setShard("RetryOnPrimaryException[retry_on_primary_exception]", 0);
        java.lang.Class<?> wildcardClass23 = retryOnPrimaryException4.getClass();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test0863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0863");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException8.getHeaderKeys();
        retryOnPrimaryException8.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException19.setIndex(index22);
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException19.status();
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        throwable5.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = retryOnPrimaryException19.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput28 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException19.writeTo(streamOutput28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
    }

    @Test
    public void test0864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0864");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index10 = retryOnPrimaryException9.getIndex();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("", strArray29);
        java.lang.String str31 = retryOnPrimaryException20.toString();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str33 = retryOnPrimaryException14.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        retryOnPrimaryException14.setShard(shardId34);
        java.lang.String[] strArray46 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        retryOnPrimaryException14.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException9.addHeader("", (java.util.List<java.lang.String>) strList47);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException55.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException55);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray58 = retryOnPrimaryException57.guessRootCauses();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray61 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException57);
        org.elasticsearch.index.shard.ShardId shardId62 = retryOnPrimaryException57.getShardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput63 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException57.writeTo(streamOutput63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str31, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray58);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray61);
        org.junit.Assert.assertNull(shardId62);
    }

    @Test
    public void test0865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0865");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId48 = retryOnPrimaryException2.getShardId();
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet55 = retryOnPrimaryException54.getHeaderKeys();
        java.lang.Throwable throwable56 = retryOnPrimaryException54.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException54);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        java.lang.Throwable[] throwableArray59 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder60 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params61 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder62 = retryOnPrimaryException2.toXContent(xContentBuilder60, params61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(throwable56);
        org.junit.Assert.assertEquals(throwable56.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(params61);
    }

    @Test
    public void test0866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0866");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException4.status();
        java.lang.String str25 = retryOnPrimaryException4.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test0867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0867");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = retryOnPrimaryException4.guessRootCauses();
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0868");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        retryOnPrimaryException2.setShard(shardId25);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Class<?> wildcardClass28 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test0869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0869");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        java.lang.String str33 = retryOnPrimaryException14.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index37 = retryOnPrimaryException36.getIndex();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.Index index39 = retryOnPrimaryException36.getIndex();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        retryOnPrimaryException43.setIndex("");
        java.lang.Throwable[] throwableArray46 = retryOnPrimaryException43.getSuppressed();
        java.lang.String[] strArray51 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException43.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray51);
        retryOnPrimaryException36.setResources("hi!", strArray51);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray51);
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "rest.exception.cause.skip");
        retryOnPrimaryException58.setIndex("");
        org.elasticsearch.index.Index index61 = null;
        retryOnPrimaryException58.setIndex(index61);
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet67 = retryOnPrimaryException66.getHeaderKeys();
        retryOnPrimaryException66.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "");
        retryOnPrimaryException66.addSuppressed((java.lang.Throwable) retryOnPrimaryException73);
        org.elasticsearch.rest.RestStatus restStatus75 = retryOnPrimaryException73.status();
        java.lang.String[] strArray80 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException73.setResources("rest.exception.cause.skip", strArray80);
        retryOnPrimaryException58.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray80);
        retryOnPrimaryException2.setResources("rest.exception.cause.skip", strArray80);
        java.util.List<java.lang.String> strList85 = retryOnPrimaryException2.getHeader("[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId86 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index37);
        org.junit.Assert.assertNull(index39);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertTrue("'" + restStatus75 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus75.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertNull(shardId86);
    }

    @Test
    public void test0870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0870");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str11 = retryOnPrimaryException9.toString();
        org.elasticsearch.common.io.stream.StreamInput streamInput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException13 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException9, streamInput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[]" + "'", str11, "RetryOnPrimaryException[]");
    }

    @Test
    public void test0871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0871");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable[] throwableArray27 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str28 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable29 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str30 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str30, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test0872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0872");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        retryOnPrimaryException26.setShard(shardId47);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable throwable50 = retryOnPrimaryException26.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable52 = org.elasticsearch.ElasticsearchException.writeStackTraces(throwable50, streamOutput51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertNotNull(throwable50);
        org.junit.Assert.assertEquals(throwable50.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable50.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable50.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test0873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0873");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException2.setIndex(index8);
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0874");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException2.setIndex(index8);
        java.lang.String str10 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable11 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder12 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params13 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder14 = retryOnPrimaryException2.toXContent(xContentBuilder12, params13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str10, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(params13);
    }

    @Test
    public void test0875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0875");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        retryOnPrimaryException16.setIndex("");
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException16.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable throwable21 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable22 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0876");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException13.setResources("", strArray22);
        retryOnPrimaryException6.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray22);
        java.lang.Throwable[] throwableArray25 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        java.lang.String str39 = retryOnPrimaryException28.toString();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        java.lang.Throwable throwable44 = retryOnPrimaryException43.unwrapCause();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        java.lang.String[] strArray49 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException43.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray49);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException43);
        java.lang.Throwable throwable52 = retryOnPrimaryException51.getRootCause();
        boolean boolean53 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable52);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "rest.exception.cause.skip");
        java.lang.Throwable throwable57 = retryOnPrimaryException56.unwrapCause();
        java.lang.String[] strArray61 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        retryOnPrimaryException56.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList62);
        org.elasticsearch.rest.RestStatus restStatus65 = retryOnPrimaryException56.status();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.cause.skip");
        retryOnPrimaryException68.setIndex("");
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException68.setResources("", strArray77);
        boolean boolean79 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException68);
        java.lang.String str80 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException68);
        java.lang.Throwable throwable81 = retryOnPrimaryException68.getRootCause();
        retryOnPrimaryException56.addSuppressed((java.lang.Throwable) retryOnPrimaryException68);
        java.lang.Throwable throwable83 = retryOnPrimaryException56.getRootCause();
        throwable52.addSuppressed(throwable83);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str39, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(throwable52);
        org.junit.Assert.assertEquals(throwable52.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable52.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable52.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(throwable57);
        org.junit.Assert.assertEquals(throwable57.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable57.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable57.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + restStatus65 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus65.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "retry_on_primary_exception" + "'", str80, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable81);
        org.junit.Assert.assertEquals(throwable81.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable81.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable81.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable83);
        org.junit.Assert.assertEquals(throwable83.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable83.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable83.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0877");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException17.setIndex(index18);
        java.lang.String str20 = retryOnPrimaryException17.getResourceType();
        retryOnPrimaryException17.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = retryOnPrimaryException17.guessRootCauses();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
    }

    @Test
    public void test0878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0878");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException24.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable throwable34 = retryOnPrimaryException32.getRootCause();
        java.lang.String[] strArray40 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        retryOnPrimaryException32.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList41);
        retryOnPrimaryException24.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList41);
        java.util.List<java.lang.String> strList46 = retryOnPrimaryException24.getHeader("hi!");
        java.lang.Throwable throwable47 = retryOnPrimaryException24.unwrapCause();
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException50 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException24, streamOutput49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable47.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test0879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0879");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index12 = retryOnPrimaryException11.getIndex();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        retryOnPrimaryException16.setIndex("");
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException22.setResources("", strArray31);
        java.lang.String str33 = retryOnPrimaryException22.toString();
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str35 = retryOnPrimaryException16.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        retryOnPrimaryException16.setShard(shardId36);
        java.lang.String[] strArray48 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        retryOnPrimaryException16.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList49);
        retryOnPrimaryException11.addHeader("", (java.util.List<java.lang.String>) strList49);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList58 = retryOnPrimaryException57.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException57);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray60 = retryOnPrimaryException59.guessRootCauses();
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException59);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException59);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str33, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray60);
    }

    @Test
    public void test0880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0880");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("rest.exception.stacktrace.skip", (int) (short) 0);
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test0881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0881");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException24.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable throwable34 = retryOnPrimaryException32.getRootCause();
        java.lang.String[] strArray40 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        retryOnPrimaryException32.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList41);
        retryOnPrimaryException24.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList41);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = retryOnPrimaryException24.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray46 = retryOnPrimaryException24.guessRootCauses();
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException24.getSuppressed();
        java.lang.Class<?> wildcardClass48 = throwableArray47.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray46);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test0882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0882");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException17.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        retryOnPrimaryException17.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray33);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray33);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException38 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException2, streamOutput37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray33);
    }

    @Test
    public void test0883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0883");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.util.List<java.lang.String> strList48 = retryOnPrimaryException26.getHeader("RetryOnPrimaryException[retry_on_primary_exception]");
        java.util.List<java.lang.String> strList50 = retryOnPrimaryException26.getHeader("");
        org.elasticsearch.common.io.stream.StreamInput streamInput51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException52 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException26, streamInput51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNull(strList50);
    }

    @Test
    public void test0884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0884");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        java.lang.String[] strArray34 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        retryOnPrimaryException2.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList35);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        retryOnPrimaryException40.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        retryOnPrimaryException47.setIndex("");
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException47.setResources("", strArray56);
        retryOnPrimaryException40.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray56);
        java.lang.String str59 = retryOnPrimaryException40.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index63 = retryOnPrimaryException62.getIndex();
        retryOnPrimaryException40.addSuppressed((java.lang.Throwable) retryOnPrimaryException62);
        org.elasticsearch.index.Index index65 = null;
        retryOnPrimaryException40.setIndex(index65);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 100);
        java.util.Set<java.lang.String> strSet71 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder72 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder74 = retryOnPrimaryException2.toXContent(xContentBuilder72, params73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str59, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index63);
        org.junit.Assert.assertNotNull(strSet71);
    }

    @Test
    public void test0885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0885");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray37);
        retryOnPrimaryException2.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray37);
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet47 = retryOnPrimaryException46.getHeaderKeys();
        retryOnPrimaryException46.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "hi!");
        retryOnPrimaryException54.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "rest.exception.cause.skip");
        retryOnPrimaryException61.setIndex("");
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException61.setResources("", strArray70);
        retryOnPrimaryException54.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray70);
        java.lang.String str73 = retryOnPrimaryException54.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId74, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index77 = retryOnPrimaryException76.getIndex();
        retryOnPrimaryException54.addSuppressed((java.lang.Throwable) retryOnPrimaryException76);
        retryOnPrimaryException76.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId82 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException84 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId82, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet85 = retryOnPrimaryException84.getHeaderKeys();
        java.lang.Throwable throwable86 = retryOnPrimaryException84.getRootCause();
        java.lang.String[] strArray92 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList93 = new java.util.ArrayList<java.lang.String>();
        boolean boolean94 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList93, strArray92);
        retryOnPrimaryException84.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList93);
        retryOnPrimaryException76.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList93);
        retryOnPrimaryException46.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList93);
        retryOnPrimaryException2.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList93);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray99 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str73, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index77);
        org.junit.Assert.assertNotNull(strSet85);
        org.junit.Assert.assertNotNull(throwable86);
        org.junit.Assert.assertEquals(throwable86.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable86.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable86.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray92);
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + true + "'", boolean94 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray99);
    }

    @Test
    public void test0886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0886");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
    }

    @Test
    public void test0887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0887");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!");
        retryOnPrimaryException30.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        retryOnPrimaryException37.setIndex("");
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException37.setResources("", strArray46);
        retryOnPrimaryException30.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray46);
        java.lang.String str49 = retryOnPrimaryException30.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index53 = retryOnPrimaryException52.getIndex();
        retryOnPrimaryException30.addSuppressed((java.lang.Throwable) retryOnPrimaryException52);
        retryOnPrimaryException52.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet61 = retryOnPrimaryException60.getHeaderKeys();
        java.lang.Throwable throwable62 = retryOnPrimaryException60.getRootCause();
        java.lang.String[] strArray68 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        retryOnPrimaryException60.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList69);
        retryOnPrimaryException52.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList69);
        retryOnPrimaryException24.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList69);
        org.elasticsearch.index.shard.ShardId shardId74 = retryOnPrimaryException24.getShardId();
        org.elasticsearch.index.Index index75 = retryOnPrimaryException24.getIndex();
        java.lang.String str76 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput77 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable78 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException24, streamOutput77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str49, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index53);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertNotNull(throwable62);
        org.junit.Assert.assertEquals(throwable62.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable62.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable62.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(shardId74);
        org.junit.Assert.assertNull(index75);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "retry_on_primary_exception" + "'", str76, "retry_on_primary_exception");
    }

    @Test
    public void test0888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0888");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        java.lang.String str26 = retryOnPrimaryException15.toString();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "hi!");
        retryOnPrimaryException31.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str35 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException31);
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException31);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException31);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        java.lang.String str40 = retryOnPrimaryException2.toString();
        org.elasticsearch.common.io.stream.StreamInput streamInput41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable42 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str26, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "retry_on_primary_exception" + "'", str35, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[RetryOnPrimaryException[retry_on_primary_exception]][[RetryOnPrimaryException[retry_on_primary_exception]][10]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str40, "[RetryOnPrimaryException[retry_on_primary_exception]][[RetryOnPrimaryException[retry_on_primary_exception]][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0889");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index27 = retryOnPrimaryException26.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException26.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException34.getHeaderKeys();
        java.lang.Throwable throwable36 = retryOnPrimaryException34.getRootCause();
        java.lang.String[] strArray42 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        retryOnPrimaryException34.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList43);
        retryOnPrimaryException26.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList43);
        java.util.List<java.lang.String> strList48 = retryOnPrimaryException26.getHeader("hi!");
        java.lang.Throwable throwable49 = retryOnPrimaryException26.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable49.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0890");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index9 = retryOnPrimaryException8.getIndex();
        java.lang.String str10 = retryOnPrimaryException8.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        retryOnPrimaryException8.setResources("", strArray30);
        retryOnPrimaryException2.setResources("", strArray30);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.common.io.stream.StreamInput streamInput37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable38 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNotNull(strList36);
    }

    @Test
    public void test0891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0891");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.stacktrace.skip", throwable11);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException16.getHeaderKeys();
        retryOnPrimaryException16.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        retryOnPrimaryException31.setIndex("");
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException31.setResources("", strArray40);
        retryOnPrimaryException24.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray40);
        java.lang.String str43 = retryOnPrimaryException24.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index47 = retryOnPrimaryException46.getIndex();
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException46);
        retryOnPrimaryException46.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet55 = retryOnPrimaryException54.getHeaderKeys();
        java.lang.Throwable throwable56 = retryOnPrimaryException54.getRootCause();
        java.lang.String[] strArray62 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        retryOnPrimaryException54.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException46.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException16.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException12.addHeader("hi!", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException4.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList63);
        org.elasticsearch.rest.RestStatus restStatus70 = retryOnPrimaryException4.status();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder71 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params72 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder73 = retryOnPrimaryException4.toXContent(xContentBuilder71, params72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str43, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index47);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(throwable56);
        org.junit.Assert.assertEquals(throwable56.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + restStatus70 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus70.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(params72);
    }

    @Test
    public void test0892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0892");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable throwable37 = retryOnPrimaryException24.unwrapCause();
        java.lang.Throwable throwable38 = retryOnPrimaryException24.unwrapCause();
        java.lang.String str39 = retryOnPrimaryException24.getDetailedMessage();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder40 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params41 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder42 = retryOnPrimaryException24.toXContent(xContentBuilder40, params41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str39, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(params41);
    }

    @Test
    public void test0893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0893");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException4.getHeader("");
        org.elasticsearch.index.Index index10 = null;
        retryOnPrimaryException4.setIndex(index10);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test0894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0894");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "retry_on_primary_exception");
        java.lang.String str7 = retryOnPrimaryException6.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable9 = retryOnPrimaryException6.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str7, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
    }

    @Test
    public void test0895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0895");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable7 = retryOnPrimaryException4.unwrapCause();
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable7);
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable7);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test0896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0896");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException2.status();
        java.lang.Class<?> wildcardClass8 = restStatus7.getClass();
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test0897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0897");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException22.getHeaderKeys();
        java.lang.Throwable throwable24 = retryOnPrimaryException22.getRootCause();
        java.lang.String[] strArray30 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        retryOnPrimaryException22.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList31);
        retryOnPrimaryException2.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList31);
        java.lang.Throwable throwable35 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet39 = retryOnPrimaryException38.getHeaderKeys();
        java.lang.Throwable throwable40 = retryOnPrimaryException38.getRootCause();
        java.lang.String[] strArray46 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        retryOnPrimaryException38.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList47);
        java.util.List<java.lang.String> strList51 = null;
        retryOnPrimaryException38.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList51);
        boolean boolean53 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException38);
        retryOnPrimaryException38.setIndex("retry_on_primary_exception");
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException38.getResourceId();
        boolean boolean57 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException38);
        java.lang.String str58 = retryOnPrimaryException38.getResourceType();
        java.lang.Throwable throwable59 = retryOnPrimaryException38.getRootCause();
        throwable35.addSuppressed((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput61 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable62 = org.elasticsearch.ElasticsearchException.writeStackTraces(throwable35, streamOutput61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(throwable59);
        org.junit.Assert.assertEquals(throwable59.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable59.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable59.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0898");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        java.lang.String str33 = retryOnPrimaryException14.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index37 = retryOnPrimaryException36.getIndex();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        retryOnPrimaryException36.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet45 = retryOnPrimaryException44.getHeaderKeys();
        java.lang.Throwable throwable46 = retryOnPrimaryException44.getRootCause();
        java.lang.String[] strArray52 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        retryOnPrimaryException44.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException36.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList53);
        java.lang.String str58 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId59 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray60 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet61 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index37);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "retry_on_primary_exception" + "'", str58, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId59);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray60);
        org.junit.Assert.assertNotNull(strSet61);
    }

    @Test
    public void test0899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0899");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable11 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String str27 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        retryOnPrimaryException15.setShard(shardId28);
        org.elasticsearch.index.shard.ShardId shardId30 = retryOnPrimaryException15.getShardId();
        retryOnPrimaryException15.setShard("hi!", (int) '4');
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException37.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        retryOnPrimaryException37.setShard(shardId41);
        java.util.Set<java.lang.String> strSet43 = retryOnPrimaryException37.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        retryOnPrimaryException47.setIndex("");
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException47.setResources("", strArray56);
        retryOnPrimaryException37.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray56);
        retryOnPrimaryException15.setResources("rest.exception.stacktrace.skip", strArray56);
        retryOnPrimaryException2.addHeader("hi!", strArray56);
        java.lang.String str61 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder62 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params63 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder64 = retryOnPrimaryException2.toXContent(xContentBuilder62, params63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "retry_on_primary_exception" + "'", str27, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "retry_on_primary_exception" + "'", str61, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(params63);
    }

    @Test
    public void test0900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0900");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray19);
        retryOnPrimaryException2.setResources("rest.exception.stacktrace.skip", strArray19);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder22 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params23 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder24 = retryOnPrimaryException2.toXContent(xContentBuilder22, params23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(params23);
    }

    @Test
    public void test0901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0901");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str21 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable22 = retryOnPrimaryException9.getRootCause();
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId24 = retryOnPrimaryException9.getShardId();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        retryOnPrimaryException28.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "rest.exception.cause.skip");
        retryOnPrimaryException35.setIndex("");
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException35.setResources("", strArray44);
        retryOnPrimaryException28.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray44);
        java.lang.String str47 = retryOnPrimaryException28.getDetailedMessage();
        java.lang.String str48 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String str49 = retryOnPrimaryException28.getDetailedMessage();
        org.elasticsearch.index.Index index50 = null;
        retryOnPrimaryException28.setIndex(index50);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        retryOnPrimaryException55.setIndex("");
        java.lang.Throwable[] throwableArray58 = retryOnPrimaryException55.getSuppressed();
        java.lang.String[] strArray63 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException55.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray63);
        retryOnPrimaryException28.addHeader("hi!", strArray63);
        retryOnPrimaryException9.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray63);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray63);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "retry_on_primary_exception" + "'", str21, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str47, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "retry_on_primary_exception" + "'", str48, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str49, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(strArray63);
    }

    @Test
    public void test0902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0902");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable16 = retryOnPrimaryException2.getRootCause();
        java.lang.String str17 = retryOnPrimaryException2.toString();
        retryOnPrimaryException2.setIndex("[hi!][[hi!][0]] RetryOnPrimaryException[]");
        java.lang.String str20 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.common.io.stream.StreamInput streamInput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException22 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.toString(), "[[hi!][[hi!][0]] RetryOnPrimaryException[]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str17, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
    }

    @Test
    public void test0903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0903");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable16 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index20 = retryOnPrimaryException19.getIndex();
        java.lang.String str21 = retryOnPrimaryException19.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index26 = retryOnPrimaryException25.getIndex();
        java.lang.String str27 = retryOnPrimaryException25.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "hi!");
        retryOnPrimaryException31.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        retryOnPrimaryException38.setIndex("");
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException38.setResources("", strArray47);
        retryOnPrimaryException31.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray47);
        retryOnPrimaryException25.setResources("", strArray47);
        retryOnPrimaryException19.setResources("", strArray47);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray52 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException19);
        java.util.List<java.lang.String> strList53 = retryOnPrimaryException19.getResourceId();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet58 = retryOnPrimaryException57.getHeaderKeys();
        java.util.Set<java.lang.String> strSet59 = retryOnPrimaryException57.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus60 = retryOnPrimaryException57.status();
        java.lang.Throwable throwable61 = retryOnPrimaryException57.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId62 = retryOnPrimaryException57.getShardId();
        java.lang.Throwable throwable63 = retryOnPrimaryException57.unwrapCause();
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        java.lang.String str65 = retryOnPrimaryException19.getResourceType();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertTrue("'" + restStatus60 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus60.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable61);
        org.junit.Assert.assertEquals(throwable61.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable61.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable61.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId62);
        org.junit.Assert.assertNotNull(throwable63);
        org.junit.Assert.assertEquals(throwable63.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable63.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable63.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
    }

    @Test
    public void test0904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0904");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException2.status();
        org.elasticsearch.index.Index index6 = null;
        retryOnPrimaryException2.setIndex(index6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
    }

    @Test
    public void test0905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0905");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable[] throwableArray9 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder10 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params11 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder12 = retryOnPrimaryException2.toXContent(xContentBuilder10, params11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(params11);
    }

    @Test
    public void test0906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0906");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.lang.String str13 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str14 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId16 = retryOnPrimaryException2.getShardId();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException2.getResourceId();
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.rest.RestStatus restStatus19 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        retryOnPrimaryException23.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        retryOnPrimaryException23.setShard(shardId27);
        java.util.Set<java.lang.String> strSet29 = retryOnPrimaryException23.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException23.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray42);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray42);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput46 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable47 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + restStatus19 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus19.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strArray42);
    }

    @Test
    public void test0907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0907");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException24);
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder39 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params40 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder41 = retryOnPrimaryException24.toXContent(xContentBuilder39, params40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(params40);
    }

    @Test
    public void test0908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0908");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test0909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0909");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index16 = retryOnPrimaryException15.getIndex();
        java.lang.String str17 = retryOnPrimaryException15.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray37);
        retryOnPrimaryException15.setResources("", strArray37);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        java.util.Set<java.lang.String> strSet42 = retryOnPrimaryException15.getHeaderKeys();
        java.lang.Throwable throwable43 = retryOnPrimaryException15.getRootCause();
        java.util.List<java.lang.String> strList44 = retryOnPrimaryException15.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "hi!");
        retryOnPrimaryException47.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        retryOnPrimaryException54.setIndex("");
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException54.setResources("", strArray63);
        retryOnPrimaryException47.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray63);
        java.lang.String str66 = retryOnPrimaryException47.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index70 = retryOnPrimaryException69.getIndex();
        retryOnPrimaryException47.addSuppressed((java.lang.Throwable) retryOnPrimaryException69);
        retryOnPrimaryException69.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId75 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException77 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId75, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet78 = retryOnPrimaryException77.getHeaderKeys();
        java.lang.Throwable throwable79 = retryOnPrimaryException77.getRootCause();
        java.lang.String[] strArray85 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        retryOnPrimaryException77.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList86);
        retryOnPrimaryException69.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList86);
        java.lang.String str90 = retryOnPrimaryException69.toString();
        retryOnPrimaryException15.addSuppressed((java.lang.Throwable) retryOnPrimaryException69);
        java.lang.String str92 = retryOnPrimaryException15.getResourceType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str17, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str66, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index70);
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertNotNull(throwable79);
        org.junit.Assert.assertEquals(throwable79.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable79.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable79.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str90, "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
    }

    @Test
    public void test0910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0910");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable12 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index17 = retryOnPrimaryException16.getIndex();
        java.lang.String str18 = retryOnPrimaryException16.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        retryOnPrimaryException16.setResources("", strArray38);
        retryOnPrimaryException2.setResources("rest.exception.cause.skip", strArray38);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder43 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params44 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder45 = retryOnPrimaryException2.toXContent(xContentBuilder43, params44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(params44);
    }

    @Test
    public void test0911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0911");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable11 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId12 = retryOnPrimaryException2.getShardId();
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId14 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException16 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamOutput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId14);
    }

    @Test
    public void test0912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0912");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet38 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet39 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder40 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params41 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder42 = retryOnPrimaryException2.toXContent(xContentBuilder40, params41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(params41);
    }

    @Test
    public void test0913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0913");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str10 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder11 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params12 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder13 = retryOnPrimaryException2.toXContent(xContentBuilder11, params12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(params12);
    }

    @Test
    public void test0914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0914");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.Throwable throwable6 = retryOnPrimaryException2.getRootCause();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getResourceId();
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable6.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strList8);
    }

    @Test
    public void test0915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0915");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        java.lang.String str9 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        retryOnPrimaryException2.setShard(shardId10);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test0916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0916");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str28 = retryOnPrimaryException24.getDetailedMessage();
        java.lang.Throwable throwable29 = retryOnPrimaryException24.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable29);
        org.elasticsearch.index.Index index31 = retryOnPrimaryException30.getIndex();
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable[] throwableArray34 = retryOnPrimaryException30.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable[] throwableArray36 = retryOnPrimaryException30.getSuppressed();
        org.elasticsearch.common.io.stream.StreamInput streamInput37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception38 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException30, streamInput37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(throwableArray36);
    }

    @Test
    public void test0917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0917");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable28 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        java.lang.Throwable throwable35 = retryOnPrimaryException34.unwrapCause();
        java.lang.String[] strArray39 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        retryOnPrimaryException34.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList40);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        retryOnPrimaryException46.setIndex("");
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        retryOnPrimaryException52.setIndex("");
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException52.setResources("", strArray61);
        java.lang.String str63 = retryOnPrimaryException52.toString();
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String str65 = retryOnPrimaryException46.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        retryOnPrimaryException46.setShard(shardId66);
        java.lang.String[] strArray78 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        retryOnPrimaryException46.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException34.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList79);
        java.util.List<java.lang.String> strList84 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId85 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException87 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId85, "rest.exception.cause.skip");
        retryOnPrimaryException87.setIndex("");
        java.lang.Throwable[] throwableArray90 = retryOnPrimaryException87.getSuppressed();
        java.lang.String[] strArray95 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException87.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray95);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException87);
        java.lang.String str98 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str99 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.toString(), "[[] RetryOnPrimaryException[rest.exception.cause.skip]][[[] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str63, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str98, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str99, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0918");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String str27 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet28);
    }

    @Test
    public void test0919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0919");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException11.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        retryOnPrimaryException18.setIndex("");
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException18.setResources("", strArray27);
        retryOnPrimaryException11.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray27);
        java.lang.Throwable[] throwableArray30 = retryOnPrimaryException11.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        java.lang.String str44 = retryOnPrimaryException33.toString();
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.cause.skip");
        java.lang.Throwable throwable49 = retryOnPrimaryException48.unwrapCause();
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException48);
        java.lang.String[] strArray54 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException48.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray54);
        java.lang.String str56 = retryOnPrimaryException48.getDetailedMessage();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException48);
        java.lang.String str58 = retryOnPrimaryException48.getDetailedMessage();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str8, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str44, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable49.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str56, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str58, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test0920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0920");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable[] throwableArray18 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException2.getSuppressed();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test0921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0921");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException12.getSuppressed();
        java.lang.String[] strArray20 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException12.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray20);
        java.util.Set<java.lang.String> strSet22 = retryOnPrimaryException12.getHeaderKeys();
        java.lang.Throwable throwable23 = retryOnPrimaryException12.unwrapCause();
        java.lang.String str24 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable23);
        retryOnPrimaryException2.addSuppressed(throwable23);
        java.lang.Class<?> wildcardClass26 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "retry_on_primary_exception" + "'", str24, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test0922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0922");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str10 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test0923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0923");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException8.getHeaderKeys();
        java.lang.Throwable throwable10 = retryOnPrimaryException8.getRootCause();
        java.lang.String[] strArray16 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        retryOnPrimaryException8.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList17);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList17);
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable22 = retryOnPrimaryException2.unwrapCause();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0924");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str18 = retryOnPrimaryException2.toString();
        org.elasticsearch.rest.RestStatus restStatus19 = retryOnPrimaryException2.status();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str18, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus19 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus19.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test0925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0925");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.lang.String str14 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException17.setShard("rest.exception.cause.skip", (int) (byte) 1);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException17);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
    }

    @Test
    public void test0926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0926");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        retryOnPrimaryException4.setShard(shardId8);
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable11 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException14.getSuppressed();
        java.lang.String[] strArray22 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException14.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray22);
        java.util.Set<java.lang.String> strSet24 = retryOnPrimaryException14.getHeaderKeys();
        java.lang.Throwable throwable25 = retryOnPrimaryException14.unwrapCause();
        java.lang.String str26 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable25);
        retryOnPrimaryException4.addSuppressed(throwable25);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", throwable25);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index33 = retryOnPrimaryException32.getIndex();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        retryOnPrimaryException37.setIndex("");
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        retryOnPrimaryException43.setIndex("");
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException43.setResources("", strArray52);
        java.lang.String str54 = retryOnPrimaryException43.toString();
        retryOnPrimaryException37.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        java.lang.String str56 = retryOnPrimaryException37.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        retryOnPrimaryException37.setShard(shardId57);
        java.lang.String[] strArray69 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        retryOnPrimaryException37.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList70);
        retryOnPrimaryException32.addHeader("", (java.util.List<java.lang.String>) strList70);
        retryOnPrimaryException28.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (java.util.List<java.lang.String>) strList70);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray75 = retryOnPrimaryException28.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput76 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException28.writeTo(streamOutput76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "retry_on_primary_exception" + "'", str26, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index33);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str54, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray75);
    }

    @Test
    public void test0927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0927");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId5 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId5);
    }

    @Test
    public void test0928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0928");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("");
        retryOnPrimaryException2.setShard("", (int) (short) 0);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip");
        java.lang.String[] strArray24 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException17.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray24);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        retryOnPrimaryException17.setShard(shardId26);
        java.lang.String str28 = retryOnPrimaryException17.getDetailedMessage();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index34 = retryOnPrimaryException33.getIndex();
        java.lang.String str35 = retryOnPrimaryException33.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index40 = retryOnPrimaryException39.getIndex();
        java.lang.String str41 = retryOnPrimaryException39.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "hi!");
        retryOnPrimaryException45.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        retryOnPrimaryException52.setIndex("");
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException52.setResources("", strArray61);
        retryOnPrimaryException45.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray61);
        retryOnPrimaryException39.setResources("", strArray61);
        retryOnPrimaryException33.setResources("", strArray61);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray66 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException33);
        java.util.List<java.lang.String> strList67 = retryOnPrimaryException33.getResourceId();
        retryOnPrimaryException17.addHeader("[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strList67);
        boolean boolean69 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException17);
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "[][[][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.toString(), "[][[][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str35, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str41, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray66);
        org.junit.Assert.assertNotNull(strList67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test0929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0929");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        java.lang.String str37 = retryOnPrimaryException26.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        java.lang.Throwable throwable42 = retryOnPrimaryException41.unwrapCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String[] strArray47 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException41.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException41);
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException41.getHeader("");
        java.lang.Throwable throwable52 = retryOnPrimaryException41.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput53 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException41.writeTo(streamOutput53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str37, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(throwable52);
        org.junit.Assert.assertEquals(throwable52.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable52.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable52.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0930");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable throwable28 = retryOnPrimaryException24.unwrapCause();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable28.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0931");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus6 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        java.lang.String str12 = retryOnPrimaryException10.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index17 = retryOnPrimaryException16.getIndex();
        java.lang.String str18 = retryOnPrimaryException16.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        retryOnPrimaryException16.setResources("", strArray38);
        retryOnPrimaryException10.setResources("", strArray38);
        retryOnPrimaryException2.setResources("", strArray38);
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index45 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder46 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params47 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder48 = retryOnPrimaryException2.toXContent(xContentBuilder46, params47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus6 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus6.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(index45);
        org.junit.Assert.assertNotNull(params47);
    }

    @Test
    public void test0932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0932");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test0933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0933");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str18 = retryOnPrimaryException2.toString();
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str18, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test0934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0934");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        retryOnPrimaryException11.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray42);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str48 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str49 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "retry_on_primary_exception" + "'", str48, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str49, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0935");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "retry_on_primary_exception");
        java.lang.String str20 = retryOnPrimaryException19.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "hi!");
        retryOnPrimaryException27.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str31 = retryOnPrimaryException27.getDetailedMessage();
        java.lang.Throwable throwable32 = retryOnPrimaryException27.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable32);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        retryOnPrimaryException37.setIndex("");
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = retryOnPrimaryException37.guessRootCauses();
        java.util.Set<java.lang.String> strSet42 = retryOnPrimaryException37.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        retryOnPrimaryException46.setIndex("");
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException46.setResources("", strArray55);
        boolean boolean57 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "hi!");
        retryOnPrimaryException61.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.cause.skip");
        retryOnPrimaryException68.setIndex("");
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException68.setResources("", strArray77);
        retryOnPrimaryException61.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray77);
        retryOnPrimaryException46.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray77);
        retryOnPrimaryException37.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray77);
        retryOnPrimaryException33.setResources("hi!", strArray77);
        retryOnPrimaryException19.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray77);
        retryOnPrimaryException2.addHeader("", strArray77);
        java.lang.String str85 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable86 = retryOnPrimaryException2.getRootCause();
        java.lang.String str87 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable88 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable[] throwableArray89 = retryOnPrimaryException2.getSuppressed();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str20, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str31, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable32.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str85, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable86);
        org.junit.Assert.assertEquals(throwable86.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable86.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable86.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str87, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable88);
        org.junit.Assert.assertEquals(throwable88.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable88.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable88.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray89);
    }

    @Test
    public void test0936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0936");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId21 = retryOnPrimaryException4.getShardId();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable23 = retryOnPrimaryException4.unwrapCause();
        java.lang.Throwable[] throwableArray24 = retryOnPrimaryException4.getSuppressed();
        java.lang.Class<?> wildcardClass25 = throwableArray24.getClass();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0937");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable throwable10 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException16.getHeaderKeys();
        java.lang.Throwable throwable18 = retryOnPrimaryException16.getRootCause();
        java.lang.String[] strArray24 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        retryOnPrimaryException16.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList25);
        java.util.List<java.lang.String> strList29 = null;
        retryOnPrimaryException16.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList29);
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "hi!");
        retryOnPrimaryException35.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "rest.exception.cause.skip");
        retryOnPrimaryException42.setIndex("");
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException42.setResources("", strArray51);
        retryOnPrimaryException35.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray51);
        retryOnPrimaryException16.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray51);
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException16.getHeader("");
        java.lang.Throwable throwable57 = retryOnPrimaryException16.unwrapCause();
        retryOnPrimaryException2.addSuppressed(throwable57);
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "rest.exception.cause.skip");
        retryOnPrimaryException62.setIndex("");
        boolean boolean65 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException62);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.cause.skip");
        retryOnPrimaryException68.setIndex("");
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException68.setResources("", strArray77);
        java.lang.String str79 = retryOnPrimaryException68.toString();
        retryOnPrimaryException62.addSuppressed((java.lang.Throwable) retryOnPrimaryException68);
        java.lang.String str81 = retryOnPrimaryException62.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId82 = null;
        retryOnPrimaryException62.setShard(shardId82);
        java.lang.String[] strArray94 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList95 = new java.util.ArrayList<java.lang.String>();
        boolean boolean96 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList95, strArray94);
        retryOnPrimaryException62.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList95);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList95);
        java.lang.Throwable[] throwableArray99 = retryOnPrimaryException2.getSuppressed();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(throwable57);
        org.junit.Assert.assertEquals(throwable57.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable57.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable57.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str79, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertNotNull(throwableArray99);
    }

    @Test
    public void test0938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0938");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray16);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        retryOnPrimaryException9.setShard(shardId18);
        java.util.Set<java.lang.String> strSet20 = retryOnPrimaryException9.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str30 = retryOnPrimaryException26.getDetailedMessage();
        java.lang.Throwable throwable31 = retryOnPrimaryException26.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable31);
        org.elasticsearch.index.Index index33 = retryOnPrimaryException32.getIndex();
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        retryOnPrimaryException38.setIndex("");
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException38.setResources("", strArray47);
        retryOnPrimaryException32.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray47);
        retryOnPrimaryException9.addHeader("retry_on_primary_exception", strArray47);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray47);
        java.lang.String str52 = retryOnPrimaryException2.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput53 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable54 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str30, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable31.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str52, "RetryOnPrimaryException[retry_on_primary_exception]");
    }

    @Test
    public void test0939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0939");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("hi!", (int) (byte) 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable23 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder24 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params25 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder26 = retryOnPrimaryException2.toXContent(xContentBuilder24, params25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.toString(), "[hi!][[hi!][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(params25);
    }

    @Test
    public void test0940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0940");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.util.Set<java.lang.String> strSet6 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable[] throwableArray7 = retryOnPrimaryException4.getSuppressed();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException4.getHeader("rest.exception.cause.skip");
        java.lang.String str10 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable[] throwableArray11 = retryOnPrimaryException4.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwableArray11);
    }

    @Test
    public void test0941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0941");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Throwable throwable10 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.addSuppressed(throwable11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: Cannot suppress a null exception.");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test0942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0942");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.lang.String str13 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str14 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException2.status();
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException2.status();
        java.lang.String str17 = retryOnPrimaryException2.getResourceType();
        java.lang.Class<?> wildcardClass18 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str17, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test0943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0943");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        java.lang.Throwable throwable40 = retryOnPrimaryException39.unwrapCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        java.lang.String[] strArray45 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException39.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray45);
        retryOnPrimaryException39.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        java.lang.String str49 = retryOnPrimaryException39.getResourceType();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception51 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException39, streamOutput50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test0944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0944");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException17.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        retryOnPrimaryException17.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray33);
        java.lang.String str36 = retryOnPrimaryException17.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index40 = retryOnPrimaryException39.getIndex();
        retryOnPrimaryException17.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray42 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray43 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        retryOnPrimaryException47.setIndex("");
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        retryOnPrimaryException53.setIndex("");
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException53.setResources("", strArray62);
        java.lang.String str64 = retryOnPrimaryException53.toString();
        retryOnPrimaryException47.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        java.lang.String str66 = retryOnPrimaryException47.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        retryOnPrimaryException47.setShard(shardId67);
        java.lang.String[] strArray79 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        retryOnPrimaryException47.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList80);
        retryOnPrimaryException17.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];", (java.util.List<java.lang.String>) strList80);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList80);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str36, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index40);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray42);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray43);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str64, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test0945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0945");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException8.getHeaderKeys();
        retryOnPrimaryException8.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException19.setIndex(index22);
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException19.status();
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        throwable5.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        java.util.Set<java.lang.String> strSet27 = retryOnPrimaryException19.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet31 = retryOnPrimaryException30.getHeaderKeys();
        java.lang.Throwable throwable32 = retryOnPrimaryException30.getRootCause();
        java.lang.String[] strArray38 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        retryOnPrimaryException30.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList39);
        java.util.List<java.lang.String> strList43 = null;
        retryOnPrimaryException30.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList43);
        java.lang.String str45 = retryOnPrimaryException30.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus46 = retryOnPrimaryException30.status();
        org.elasticsearch.index.Index index47 = retryOnPrimaryException30.getIndex();
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException30);
        retryOnPrimaryException30.setIndex("retry_on_primary_exception");
        java.lang.Class<?> wildcardClass52 = retryOnPrimaryException30.getClass();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + restStatus46 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus46.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test0946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0946");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException4.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList13);
        java.util.List<java.lang.String> strList17 = null;
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList17);
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str30 = retryOnPrimaryException26.getDetailedMessage();
        java.lang.Throwable throwable31 = retryOnPrimaryException26.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable31);
        org.elasticsearch.index.Index index33 = retryOnPrimaryException32.getIndex();
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException32);
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException32);
        java.lang.Throwable[] throwableArray36 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        retryOnPrimaryException4.setIndex("hi!");
        java.util.Set<java.lang.String> strSet40 = retryOnPrimaryException4.getHeaderKeys();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str30, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable31.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index33);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(throwableArray36);
        org.junit.Assert.assertNotNull(strSet40);
    }

    @Test
    public void test0947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0947");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException4.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList13);
        java.util.List<java.lang.String> strList17 = null;
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList17);
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", 0);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "[[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]][[[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test0948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0948");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        java.lang.String str18 = retryOnPrimaryException2.getResourceType();
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException2, streamOutput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
    }

    @Test
    public void test0949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0949");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException24.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable throwable34 = retryOnPrimaryException32.getRootCause();
        java.lang.String[] strArray40 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        retryOnPrimaryException32.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList41);
        retryOnPrimaryException24.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList41);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = retryOnPrimaryException24.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray46 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String str47 = retryOnPrimaryException24.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamInput streamInput48 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException49 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException24, streamInput48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str47, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test0950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0950");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Throwable throwable10 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder11 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params12 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder13 = retryOnPrimaryException2.toXContent(xContentBuilder11, params12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(params12);
    }

    @Test
    public void test0951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0951");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.common.io.stream.StreamInput streamInput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception14 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException4, streamInput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test0952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0952");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException7.unwrapCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException7.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray26);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = retryOnPrimaryException32.guessRootCauses();
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException32);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
    }

    @Test
    public void test0953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0953");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str28 = retryOnPrimaryException24.getDetailedMessage();
        java.lang.Throwable throwable29 = retryOnPrimaryException24.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable29);
        org.elasticsearch.index.Index index31 = retryOnPrimaryException30.getIndex();
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable[] throwableArray34 = retryOnPrimaryException30.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        retryOnPrimaryException2.setIndex("hi!");
        java.util.Set<java.lang.String> strSet38 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput39 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(strSet38);
    }

    @Test
    public void test0954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0954");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException9.guessRootCauses();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException9.getHeaderKeys();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.common.io.stream.StreamInput streamInput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable17 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException9, streamInput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test0955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0955");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        org.elasticsearch.index.Index index21 = null;
        retryOnPrimaryException2.setIndex(index21);
        java.lang.Throwable throwable23 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.Index index24 = null;
        retryOnPrimaryException2.setIndex(index24);
        org.elasticsearch.rest.RestStatus restStatus26 = retryOnPrimaryException2.status();
        java.lang.String str27 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus26 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus26.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "retry_on_primary_exception" + "'", str27, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNull(strList30);
    }

    @Test
    public void test0956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0956");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        java.lang.Class<?> wildcardClass33 = strList29.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test0957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0957");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        retryOnPrimaryException4.setIndex("rest.exception.stacktrace.skip");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test0958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0958");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (short) 0);
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException2.status();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test0959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0959");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.Index index6 = null;
        retryOnPrimaryException4.setIndex(index6);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
    }

    @Test
    public void test0960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0960");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        retryOnPrimaryException7.setIndex("");
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException7.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException7.writeTo(streamOutput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test0961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0961");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        retryOnPrimaryException11.setShard(shardId20);
        throwable8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable[] throwableArray23 = throwable8.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable8);
        java.lang.Class<?> wildcardClass25 = elasticsearchExceptionArray24.getClass();
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test0962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0962");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        retryOnPrimaryException2.setShard("hi!", (int) ' ');
        java.lang.Throwable[] throwableArray9 = retryOnPrimaryException2.getSuppressed();
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable11 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException13 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamOutput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[hi!][[hi!][32]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0963");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str18 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        java.lang.String str41 = retryOnPrimaryException22.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index45 = retryOnPrimaryException44.getIndex();
        retryOnPrimaryException22.addSuppressed((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.index.Index index47 = retryOnPrimaryException44.getIndex();
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "rest.exception.cause.skip");
        retryOnPrimaryException51.setIndex("");
        java.lang.Throwable[] throwableArray54 = retryOnPrimaryException51.getSuppressed();
        java.lang.String[] strArray59 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException51.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray59);
        retryOnPrimaryException44.setResources("hi!", strArray59);
        retryOnPrimaryException2.addHeader("", strArray59);
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index67 = retryOnPrimaryException66.getIndex();
        java.lang.String str68 = retryOnPrimaryException66.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "hi!");
        retryOnPrimaryException72.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId77 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException79 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId77, "rest.exception.cause.skip");
        retryOnPrimaryException79.setIndex("");
        java.lang.String[] strArray88 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException79.setResources("", strArray88);
        retryOnPrimaryException72.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray88);
        retryOnPrimaryException66.setResources("", strArray88);
        retryOnPrimaryException2.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray88);
        java.lang.String str93 = retryOnPrimaryException2.toString();
        java.lang.String str94 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str18, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str41, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index45);
        org.junit.Assert.assertNull(index47);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNull(index67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str68, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str93, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str94, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0964");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index27 = retryOnPrimaryException26.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException26.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException34.getHeaderKeys();
        java.lang.Throwable throwable36 = retryOnPrimaryException34.getRootCause();
        java.lang.String[] strArray42 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        retryOnPrimaryException34.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList43);
        retryOnPrimaryException26.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList43);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = retryOnPrimaryException26.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray48 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray48);
    }

    @Test
    public void test0965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0965");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("hi!", (int) (short) 1);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Throwable throwable14 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable14.toString(), "[RetryOnPrimaryException[retry_on_primary_exception]][[RetryOnPrimaryException[retry_on_primary_exception]][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0966");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        retryOnPrimaryException9.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 0);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "hi!");
        retryOnPrimaryException18.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.cause.skip");
        retryOnPrimaryException25.setIndex("");
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException25.setResources("", strArray34);
        retryOnPrimaryException18.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray34);
        java.lang.Throwable[] throwableArray37 = retryOnPrimaryException18.getSuppressed();
        java.lang.String[] strArray44 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException18.setResources("rest.exception.cause.skip", strArray44);
        retryOnPrimaryException9.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray44);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "rest.exception.cause.skip");
        java.lang.String[] strArray57 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException50.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray57);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index62 = retryOnPrimaryException61.getIndex();
        java.lang.String str63 = retryOnPrimaryException61.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "hi!");
        retryOnPrimaryException67.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "rest.exception.cause.skip");
        retryOnPrimaryException74.setIndex("");
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException74.setResources("", strArray83);
        retryOnPrimaryException67.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray83);
        retryOnPrimaryException61.setResources("", strArray83);
        retryOnPrimaryException50.addSuppressed((java.lang.Throwable) retryOnPrimaryException61);
        java.util.Set<java.lang.String> strSet88 = retryOnPrimaryException61.getHeaderKeys();
        java.lang.Throwable throwable89 = retryOnPrimaryException61.getRootCause();
        java.util.List<java.lang.String> strList90 = retryOnPrimaryException61.getResourceId();
        retryOnPrimaryException9.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strList90);
        retryOnPrimaryException9.setShard("[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (short) 0);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder95 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params96 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder97 = retryOnPrimaryException9.toXContent(xContentBuilder95, params96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNull(index62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str63, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strSet88);
        org.junit.Assert.assertNotNull(throwable89);
        org.junit.Assert.assertEquals(throwable89.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable89.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable89.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertNotNull(params96);
    }

    @Test
    public void test0967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0967");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str10 = retryOnPrimaryException6.getDetailedMessage();
        java.lang.Throwable throwable11 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable11);
        org.elasticsearch.index.Index index13 = retryOnPrimaryException12.getIndex();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String str15 = retryOnPrimaryException12.toString();
        java.util.Set<java.lang.String> strSet16 = retryOnPrimaryException12.getHeaderKeys();
        retryOnPrimaryException12.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.rest.RestStatus restStatus19 = retryOnPrimaryException12.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = retryOnPrimaryException12.guessRootCauses();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str15, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertTrue("'" + restStatus19 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus19.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
    }

    @Test
    public void test0968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0968");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException11.getHeaderKeys();
        retryOnPrimaryException11.setShard("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (short) 100);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder16 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params17 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder18 = retryOnPrimaryException11.toXContent(xContentBuilder16, params17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(params17);
    }

    @Test
    public void test0969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0969");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        java.lang.String str14 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException16 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamOutput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
    }

    @Test
    public void test0970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0970");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        java.lang.String str19 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable20 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException22 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamOutput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "" + "'", str19, "");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.toString(), "[RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0971");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.stacktrace.skip", throwable10);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet16 = retryOnPrimaryException15.getHeaderKeys();
        retryOnPrimaryException15.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        retryOnPrimaryException23.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException30.setResources("", strArray39);
        retryOnPrimaryException23.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray39);
        java.lang.String str42 = retryOnPrimaryException23.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index46 = retryOnPrimaryException45.getIndex();
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException45);
        retryOnPrimaryException45.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet54 = retryOnPrimaryException53.getHeaderKeys();
        java.lang.Throwable throwable55 = retryOnPrimaryException53.getRootCause();
        java.lang.String[] strArray61 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        retryOnPrimaryException53.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList62);
        retryOnPrimaryException45.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList62);
        retryOnPrimaryException15.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList62);
        retryOnPrimaryException11.addHeader("hi!", (java.util.List<java.lang.String>) strList62);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList62);
        java.lang.Throwable[] throwableArray69 = retryOnPrimaryException2.getSuppressed();
        java.lang.Class<?> wildcardClass70 = throwableArray69.getClass();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str42, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index46);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(throwable55);
        org.junit.Assert.assertEquals(throwable55.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable55.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable55.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(throwableArray69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test0972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0972");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception23 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException2, streamOutput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test0973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0973");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList7);
    }

    @Test
    public void test0974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0974");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException24.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable throwable34 = retryOnPrimaryException32.getRootCause();
        java.lang.String[] strArray40 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        retryOnPrimaryException32.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList41);
        retryOnPrimaryException24.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList41);
        org.elasticsearch.rest.RestStatus restStatus45 = retryOnPrimaryException24.status();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput46 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException47 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException24, streamOutput46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertTrue("'" + restStatus45 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus45.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test0975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0975");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.Index index14 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str23 = retryOnPrimaryException19.getDetailedMessage();
        java.lang.Throwable throwable24 = retryOnPrimaryException19.unwrapCause();
        java.util.List<java.lang.String> strList26 = retryOnPrimaryException19.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException19.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.Throwable[] throwableArray33 = retryOnPrimaryException30.getSuppressed();
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        java.lang.Throwable throwable44 = retryOnPrimaryException43.unwrapCause();
        java.lang.String[] strArray48 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        retryOnPrimaryException43.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList49);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        java.lang.String[] strArray62 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException55.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        retryOnPrimaryException43.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray62);
        retryOnPrimaryException38.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        retryOnPrimaryException30.setResources("retry_on_primary_exception", strArray62);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        java.util.Set<java.lang.String> strSet68 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray71 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray72 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput73 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception74 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException2, streamOutput73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray71);
        org.junit.Assert.assertNotNull(throwableArray72);
    }

    @Test
    public void test0976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0976");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException7.unwrapCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException7.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray26);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        retryOnPrimaryException32.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 10);
        java.lang.String str40 = retryOnPrimaryException32.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][10]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str40, "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0977");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        retryOnPrimaryException4.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException4.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        java.lang.Throwable throwable28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.stacktrace.skip", throwable28);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException33.getHeaderKeys();
        retryOnPrimaryException33.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        retryOnPrimaryException41.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.cause.skip");
        retryOnPrimaryException48.setIndex("");
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException48.setResources("", strArray57);
        retryOnPrimaryException41.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray57);
        java.lang.String str60 = retryOnPrimaryException41.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index64 = retryOnPrimaryException63.getIndex();
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException63);
        retryOnPrimaryException63.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet72 = retryOnPrimaryException71.getHeaderKeys();
        java.lang.Throwable throwable73 = retryOnPrimaryException71.getRootCause();
        java.lang.String[] strArray79 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        retryOnPrimaryException71.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList80);
        retryOnPrimaryException63.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList80);
        retryOnPrimaryException33.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList80);
        retryOnPrimaryException29.addHeader("hi!", (java.util.List<java.lang.String>) strList80);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str60, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index64);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertNotNull(throwable73);
        org.junit.Assert.assertEquals(throwable73.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable73.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable73.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
    }

    @Test
    public void test0978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0978");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        java.lang.Throwable throwable11 = retryOnPrimaryException2.unwrapCause();
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder13 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params14 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder15 = retryOnPrimaryException2.toXContent(xContentBuilder13, params14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(params14);
    }

    @Test
    public void test0979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0979");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus6 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        java.lang.String str12 = retryOnPrimaryException10.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index17 = retryOnPrimaryException16.getIndex();
        java.lang.String str18 = retryOnPrimaryException16.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        retryOnPrimaryException16.setResources("", strArray38);
        retryOnPrimaryException10.setResources("", strArray38);
        retryOnPrimaryException2.setResources("", strArray38);
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index45 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable46 = retryOnPrimaryException2.getRootCause();
        java.lang.String str47 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput48 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception49 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException2, streamOutput48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus6 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus6.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(index45);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "retry_on_primary_exception" + "'", str47, "retry_on_primary_exception");
    }

    @Test
    public void test0980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0980");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index27 = retryOnPrimaryException26.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index27);
    }

    @Test
    public void test0981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0981");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index5 = retryOnPrimaryException4.getIndex();
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException10.getHeaderKeys();
        java.lang.Throwable throwable12 = retryOnPrimaryException10.getRootCause();
        java.lang.String[] strArray18 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        retryOnPrimaryException10.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList19);
        retryOnPrimaryException4.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList19);
        org.elasticsearch.index.Index index23 = retryOnPrimaryException4.getIndex();
        java.util.Set<java.lang.String> strSet24 = retryOnPrimaryException4.getHeaderKeys();
        retryOnPrimaryException4.setIndex("[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException32);
        retryOnPrimaryException32.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!", (java.lang.Throwable) retryOnPrimaryException32);
        java.util.Set<java.lang.String> strSet40 = retryOnPrimaryException32.getHeaderKeys();
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException32.getHeader("rest.exception.cause.skip");
        org.elasticsearch.index.Index index43 = null;
        retryOnPrimaryException32.setIndex(index43);
        java.util.Set<java.lang.String> strSet45 = retryOnPrimaryException32.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        retryOnPrimaryException49.setIndex("");
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException49.setResources("", strArray58);
        boolean boolean60 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.String str61 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException49);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        retryOnPrimaryException49.setShard(shardId62);
        org.elasticsearch.index.shard.ShardId shardId64 = retryOnPrimaryException49.getShardId();
        boolean boolean65 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException49);
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet70 = retryOnPrimaryException69.getHeaderKeys();
        java.lang.Throwable throwable71 = retryOnPrimaryException69.getRootCause();
        java.lang.String[] strArray77 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        retryOnPrimaryException69.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList78);
        retryOnPrimaryException49.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList78);
        retryOnPrimaryException32.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList78);
        retryOnPrimaryException4.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", (java.util.List<java.lang.String>) strList78);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(index5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable12.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNull(index23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "retry_on_primary_exception" + "'", str61, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertNotNull(throwable71);
        org.junit.Assert.assertEquals(throwable71.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable71.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable71.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
    }

    @Test
    public void test0982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0982");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        java.lang.String str7 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException2.setIndex(index8);
        java.lang.Throwable throwable10 = retryOnPrimaryException2.unwrapCause();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0983");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
    }

    @Test
    public void test0984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0984");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException24);
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException24.getHeaderKeys();
        java.lang.Class<?> wildcardClass29 = retryOnPrimaryException24.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test0985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0985");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        java.lang.Throwable throwable24 = retryOnPrimaryException2.getRootCause();
        java.lang.String str25 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str26 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput27 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str26, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test0986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0986");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable6 = retryOnPrimaryException2.getRootCause();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable6);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test0987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0987");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray12 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray12);
    }

    @Test
    public void test0988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0988");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0989");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException2.setIndex(index8);
        java.lang.String str10 = retryOnPrimaryException2.toString();
        java.lang.String str11 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        java.lang.String str32 = retryOnPrimaryException21.toString();
        retryOnPrimaryException15.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String str34 = retryOnPrimaryException15.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        retryOnPrimaryException15.setShard(shardId35);
        java.lang.String[] strArray47 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        retryOnPrimaryException15.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList48);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "hi!");
        retryOnPrimaryException54.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        retryOnPrimaryException54.setShard(shardId58);
        java.util.Set<java.lang.String> strSet60 = retryOnPrimaryException54.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "rest.exception.cause.skip");
        retryOnPrimaryException64.setIndex("");
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException64.setResources("", strArray73);
        retryOnPrimaryException54.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray73);
        retryOnPrimaryException15.setResources("", strArray73);
        retryOnPrimaryException2.addHeader("[][[][1]] RetryOnPrimaryException[hi!]", strArray73);
        java.lang.String[] strArray79 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", strArray79);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str10, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str11, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str32, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertNotNull(strArray73);
    }

    @Test
    public void test0990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0990");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        retryOnPrimaryException2.setIndex("");
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        retryOnPrimaryException18.setIndex("");
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException18.setResources("", strArray27);
        java.lang.String str29 = retryOnPrimaryException18.toString();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        java.lang.String str31 = retryOnPrimaryException12.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        retryOnPrimaryException12.setShard(shardId32);
        java.lang.String[] strArray44 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        retryOnPrimaryException12.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList45);
        retryOnPrimaryException2.addHeader("hi!", (java.util.List<java.lang.String>) strList45);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str50 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable[] throwableArray52 = retryOnPrimaryException2.getSuppressed();
        retryOnPrimaryException2.setShard("[hi!][[hi!][0]] RetryOnPrimaryException[]", (int) (short) 0);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str29, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "retry_on_primary_exception" + "'", str50, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(throwableArray52);
    }

    @Test
    public void test0991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0991");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable20 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.common.io.stream.StreamInput streamInput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException25 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNull(strList23);
    }

    @Test
    public void test0992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0992");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        java.lang.String str37 = retryOnPrimaryException26.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        java.lang.Throwable throwable42 = retryOnPrimaryException41.unwrapCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String[] strArray47 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException41.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray47);
        retryOnPrimaryException41.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        java.lang.String str51 = retryOnPrimaryException41.getResourceType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str37, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test0993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0993");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.index.shard.ShardId shardId15 = retryOnPrimaryException4.getShardId();
        java.lang.String str16 = retryOnPrimaryException4.getDetailedMessage();
        retryOnPrimaryException4.setIndex("[hi!][[hi!][0]] RetryOnPrimaryException[]");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str16, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test0994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0994");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.lang.String str14 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet16 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Class<?> wildcardClass17 = strSet16.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test0995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0995");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.lang.String str14 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException17.setShard("rest.exception.cause.skip", (int) (byte) 1);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.common.io.stream.StreamInput streamInput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException23 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException17, streamInput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test0996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0996");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder11 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params12 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder13 = retryOnPrimaryException2.toXContent(xContentBuilder11, params12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(params12);
    }

    @Test
    public void test0997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0997");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        java.lang.String str33 = retryOnPrimaryException14.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index37 = retryOnPrimaryException36.getIndex();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.Index index39 = retryOnPrimaryException36.getIndex();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        retryOnPrimaryException43.setIndex("");
        java.lang.Throwable[] throwableArray46 = retryOnPrimaryException43.getSuppressed();
        java.lang.String[] strArray51 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException43.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray51);
        retryOnPrimaryException36.setResources("hi!", strArray51);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray51);
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "rest.exception.cause.skip");
        retryOnPrimaryException58.setIndex("");
        org.elasticsearch.index.Index index61 = null;
        retryOnPrimaryException58.setIndex(index61);
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet67 = retryOnPrimaryException66.getHeaderKeys();
        retryOnPrimaryException66.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "");
        retryOnPrimaryException66.addSuppressed((java.lang.Throwable) retryOnPrimaryException73);
        org.elasticsearch.rest.RestStatus restStatus75 = retryOnPrimaryException73.status();
        java.lang.String[] strArray80 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException73.setResources("rest.exception.cause.skip", strArray80);
        retryOnPrimaryException58.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray80);
        retryOnPrimaryException2.setResources("rest.exception.cause.skip", strArray80);
        java.util.List<java.lang.String> strList85 = retryOnPrimaryException2.getHeader("[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput86 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException87 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamOutput86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index37);
        org.junit.Assert.assertNull(index39);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertTrue("'" + restStatus75 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus75.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNull(strList85);
    }

    @Test
    public void test0998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0998");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
    }

    @Test
    public void test0999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test0999");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException13.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str17 = retryOnPrimaryException13.getDetailedMessage();
        java.lang.Throwable throwable18 = retryOnPrimaryException13.unwrapCause();
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException13.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable throwable21 = retryOnPrimaryException13.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException13.status();
        java.lang.Throwable throwable23 = retryOnPrimaryException13.getRootCause();
        java.lang.Throwable throwable24 = retryOnPrimaryException13.unwrapCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.Throwable[] throwableArray26 = retryOnPrimaryException13.getSuppressed();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str17, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable21.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray26);
    }

    @Test
    public void test1000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest1.test1000");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException22.getHeaderKeys();
        java.lang.Throwable throwable24 = retryOnPrimaryException22.getRootCause();
        java.lang.String[] strArray30 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        retryOnPrimaryException22.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList31);
        retryOnPrimaryException2.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList31);
        java.lang.Throwable throwable35 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str36 = retryOnPrimaryException2.toString();
        java.lang.Class<?> wildcardClass37 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str36, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass37);
    }
}

