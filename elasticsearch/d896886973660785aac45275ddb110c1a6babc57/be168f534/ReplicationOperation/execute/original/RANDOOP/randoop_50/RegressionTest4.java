import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest4 {

    public static boolean debug = false;

    @Test
    public void test2001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2001");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test2002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2002");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException10.setIndex(index14);
        retryOnPrimaryException10.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException10.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException10.getShardId();
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException10.getResourceId();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNull(strList20);
    }

    @Test
    public void test2003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2003");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str5 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "retry_on_primary_exception" + "'", str5, "retry_on_primary_exception");
    }

    @Test
    public void test2004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2004");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("hi!", (int) (short) 1);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test2005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2005");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
    }

    @Test
    public void test2006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2006");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        retryOnPrimaryException9.setIndex("rest.exception.cause.skip");
        java.lang.String str14 = retryOnPrimaryException9.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId15 = retryOnPrimaryException9.getShardId();
        java.lang.String str16 = retryOnPrimaryException9.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.lang.Throwable throwable21 = retryOnPrimaryException20.unwrapCause();
        java.lang.String[] strArray25 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        retryOnPrimaryException20.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList26);
        org.elasticsearch.rest.RestStatus restStatus29 = retryOnPrimaryException20.status();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException32.setResources("", strArray41);
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String str44 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException32);
        java.lang.Throwable throwable45 = retryOnPrimaryException32.getRootCause();
        retryOnPrimaryException20.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "rest.exception.cause.skip");
        retryOnPrimaryException50.setIndex("");
        boolean boolean53 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException50);
        retryOnPrimaryException50.setShard("hi!", (int) (short) 1);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index61 = retryOnPrimaryException60.getIndex();
        java.lang.String str62 = retryOnPrimaryException60.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "hi!");
        retryOnPrimaryException66.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "rest.exception.cause.skip");
        retryOnPrimaryException73.setIndex("");
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException73.setResources("", strArray82);
        retryOnPrimaryException66.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray82);
        retryOnPrimaryException60.setResources("", strArray82);
        retryOnPrimaryException50.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strArray82);
        retryOnPrimaryException32.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray82);
        retryOnPrimaryException9.addHeader("[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]", strArray82);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder89 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params90 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder91 = retryOnPrimaryException9.toXContent(xContentBuilder89, params90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str14, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + restStatus29 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus29.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "retry_on_primary_exception" + "'", str44, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(index61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str62, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(params90);
    }

    @Test
    public void test2007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2007");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException2.status();
        java.lang.String str28 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray29 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet31 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.lang.Class<?> wildcardClass34 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray29);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test2008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2008");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        java.lang.Throwable throwable40 = retryOnPrimaryException39.unwrapCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        java.lang.String[] strArray45 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException39.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray45);
        java.lang.String str47 = retryOnPrimaryException39.getDetailedMessage();
        java.lang.Throwable throwable48 = retryOnPrimaryException39.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId49 = retryOnPrimaryException39.getShardId();
        org.elasticsearch.common.io.stream.StreamInput streamInput50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException51 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException39, streamInput50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str47, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable48);
        org.junit.Assert.assertEquals(throwable48.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable48.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable48.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId49);
    }

    @Test
    public void test2009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2009");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException2.getResourceId();
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getResourceId();
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable24 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
    }

    @Test
    public void test2010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2010");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        retryOnPrimaryException10.setIndex("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        retryOnPrimaryException10.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2011");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException11.setIndex(index14);
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException11.status();
        java.lang.Throwable throwable17 = retryOnPrimaryException11.getRootCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable throwable19 = retryOnPrimaryException4.unwrapCause();
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable22 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        org.elasticsearch.index.Index index29 = null;
        retryOnPrimaryException26.setIndex(index29);
        java.util.List<java.lang.String> strList32 = retryOnPrimaryException26.getHeader("");
        java.lang.String str33 = retryOnPrimaryException26.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray34 = retryOnPrimaryException26.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "hi!");
        retryOnPrimaryException38.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        retryOnPrimaryException45.setIndex("");
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException45.setResources("", strArray54);
        retryOnPrimaryException38.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray54);
        java.lang.String str57 = retryOnPrimaryException38.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index61 = retryOnPrimaryException60.getIndex();
        retryOnPrimaryException38.addSuppressed((java.lang.Throwable) retryOnPrimaryException60);
        retryOnPrimaryException60.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet69 = retryOnPrimaryException68.getHeaderKeys();
        java.lang.Throwable throwable70 = retryOnPrimaryException68.getRootCause();
        java.lang.String[] strArray76 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList77 = new java.util.ArrayList<java.lang.String>();
        boolean boolean78 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList77, strArray76);
        retryOnPrimaryException68.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList77);
        retryOnPrimaryException60.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList77);
        retryOnPrimaryException26.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList77);
        retryOnPrimaryException4.addHeader("", (java.util.List<java.lang.String>) strList77);
        java.util.List<java.lang.String> strList83 = retryOnPrimaryException4.getResourceId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray34);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str57, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index61);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertNotNull(throwable70);
        org.junit.Assert.assertEquals(throwable70.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable70.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable70.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + true + "'", boolean78 == true);
        org.junit.Assert.assertNull(strList83);
    }

    @Test
    public void test2012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2012");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException13.setIndex(index16);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException13.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.Throwable throwable20 = retryOnPrimaryException13.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet24 = retryOnPrimaryException23.getHeaderKeys();
        java.util.Set<java.lang.String> strSet25 = retryOnPrimaryException23.getHeaderKeys();
        java.lang.Throwable[] throwableArray26 = retryOnPrimaryException23.getSuppressed();
        java.util.List<java.lang.String> strList28 = retryOnPrimaryException23.getHeader("rest.exception.cause.skip");
        java.lang.String str29 = retryOnPrimaryException23.getDetailedMessage();
        retryOnPrimaryException23.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable32 = retryOnPrimaryException23.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId33 = retryOnPrimaryException23.getShardId();
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException23.getSuppressed();
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException23);
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException23.getHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder40 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params41 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder42 = retryOnPrimaryException23.toXContent(xContentBuilder40, params41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str29, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(params41);
    }

    @Test
    public void test2013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2013");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        java.lang.String str17 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException2.status();
        java.util.Set<java.lang.String> strSet19 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Class<?> wildcardClass20 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2014");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable20 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
    }

    @Test
    public void test2015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2015");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        retryOnPrimaryException11.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray42);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray48 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet53 = retryOnPrimaryException52.getHeaderKeys();
        retryOnPrimaryException52.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "");
        retryOnPrimaryException52.addSuppressed((java.lang.Throwable) retryOnPrimaryException59);
        java.util.List<java.lang.String> strList61 = retryOnPrimaryException52.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "rest.exception.cause.skip");
        java.lang.Throwable throwable66 = retryOnPrimaryException65.unwrapCause();
        java.lang.String[] strArray70 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        retryOnPrimaryException65.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList71);
        org.elasticsearch.index.shard.ShardId shardId75 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException77 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId75, "rest.exception.cause.skip");
        java.lang.String[] strArray84 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException77.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray84);
        retryOnPrimaryException65.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray84);
        retryOnPrimaryException52.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray84);
        retryOnPrimaryException2.addHeader("[RetryOnPrimaryException[retry_on_primary_exception]][[RetryOnPrimaryException[retry_on_primary_exception]][10]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray84);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput89 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException90 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException2, streamOutput89);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(throwable66);
        org.junit.Assert.assertEquals(throwable66.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable66.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable66.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strArray84);
    }

    @Test
    public void test2016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2016");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str10 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable11 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException2.getResourceId();
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Class<?> wildcardClass14 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2017");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index15 = retryOnPrimaryException14.getIndex();
        java.lang.String str16 = retryOnPrimaryException14.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        retryOnPrimaryException20.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.cause.skip");
        retryOnPrimaryException27.setIndex("");
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException27.setResources("", strArray36);
        retryOnPrimaryException20.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray36);
        retryOnPrimaryException14.setResources("", strArray36);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strArray36);
        java.lang.String str41 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList48 = retryOnPrimaryException47.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.rest.RestStatus restStatus50 = retryOnPrimaryException49.status();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet55 = retryOnPrimaryException54.getHeaderKeys();
        java.lang.Throwable throwable56 = retryOnPrimaryException54.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray57 = retryOnPrimaryException54.guessRootCauses();
        java.util.List<java.lang.String> strList59 = retryOnPrimaryException54.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "rest.exception.cause.skip");
        retryOnPrimaryException63.setIndex("");
        org.elasticsearch.index.Index index66 = null;
        retryOnPrimaryException63.setIndex(index66);
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet72 = retryOnPrimaryException71.getHeaderKeys();
        retryOnPrimaryException71.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId76 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException78 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId76, "");
        retryOnPrimaryException71.addSuppressed((java.lang.Throwable) retryOnPrimaryException78);
        org.elasticsearch.rest.RestStatus restStatus80 = retryOnPrimaryException78.status();
        java.lang.String[] strArray85 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException78.setResources("rest.exception.cause.skip", strArray85);
        retryOnPrimaryException63.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray85);
        retryOnPrimaryException54.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray85);
        retryOnPrimaryException49.setResources("RetryOnPrimaryException[retry_on_primary_exception]", strArray85);
        retryOnPrimaryException4.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray85);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(index15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str16, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str41, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertTrue("'" + restStatus50 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus50.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(throwable56);
        org.junit.Assert.assertEquals(throwable56.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray57);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertTrue("'" + restStatus80 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus80.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray85);
    }

    @Test
    public void test2018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2018");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.Index index11 = null;
        retryOnPrimaryException2.setIndex(index11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        retryOnPrimaryException16.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str20 = retryOnPrimaryException16.getDetailedMessage();
        java.lang.Throwable throwable21 = retryOnPrimaryException16.unwrapCause();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.Index index23 = null;
        retryOnPrimaryException16.setIndex(index23);
        java.util.List<java.lang.String> strList26 = retryOnPrimaryException16.getHeader("RetryOnPrimaryException[rest.exception.cause.skip]");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Class<?> wildcardClass28 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str20, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable21.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test2019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2019");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException2.getShardId();
        java.lang.String str14 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setIndex("[hi!][[hi!][0]] RetryOnPrimaryException[]");
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.common.io.stream.StreamInput streamInput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException20 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str14, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2020");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        java.lang.String str33 = retryOnPrimaryException14.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index37 = retryOnPrimaryException36.getIndex();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        retryOnPrimaryException36.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet45 = retryOnPrimaryException44.getHeaderKeys();
        java.lang.Throwable throwable46 = retryOnPrimaryException44.getRootCause();
        java.lang.String[] strArray52 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        retryOnPrimaryException44.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException36.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList53);
        org.elasticsearch.rest.RestStatus restStatus58 = retryOnPrimaryException2.status();
        org.elasticsearch.rest.RestStatus restStatus59 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray60 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Class<?> wildcardClass61 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index37);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertTrue("'" + restStatus58 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus58.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus59 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus59.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test2021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2021");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder15 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder17 = retryOnPrimaryException2.toXContent(xContentBuilder15, params16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
    }

    @Test
    public void test2022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2022");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException17.setIndex(index18);
        java.lang.String str20 = retryOnPrimaryException17.getResourceType();
        java.lang.Class<?> wildcardClass21 = retryOnPrimaryException17.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2023");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index14 = retryOnPrimaryException13.getIndex();
        java.lang.String str15 = retryOnPrimaryException13.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        retryOnPrimaryException13.setResources("", strArray35);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.util.List<java.lang.String> strList41 = retryOnPrimaryException13.getHeader("rest.exception.stacktrace.skip");
        org.elasticsearch.index.Index index42 = null;
        retryOnPrimaryException13.setIndex(index42);
        java.util.List<java.lang.String> strList45 = retryOnPrimaryException13.getHeader("[RetryOnPrimaryException[retry_on_primary_exception]][[RetryOnPrimaryException[retry_on_primary_exception]][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.lang.String str46 = retryOnPrimaryException13.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException13.writeTo(streamOutput47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNull(strList41);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str46, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2024");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.lang.String str13 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str14 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId16 = retryOnPrimaryException2.getShardId();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException2.getResourceId();
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str19 = retryOnPrimaryException2.getResourceType();
        java.lang.String str20 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str20, "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2025");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable[] throwableArray14 = retryOnPrimaryException10.getSuppressed();
        java.lang.Throwable throwable15 = retryOnPrimaryException10.getRootCause();
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException10.status();
        retryOnPrimaryException10.setShard("rest.exception.stacktrace.skip", 0);
        java.lang.Throwable[] throwableArray20 = retryOnPrimaryException10.getSuppressed();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable15.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test2026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2026");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable28 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException2.getResourceId();
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.elasticsearch.common.io.stream.StreamInput streamInput32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException33 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strList29);
        org.junit.Assert.assertNull(strList31);
    }

    @Test
    public void test2027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2027");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String[] strArray15 = new java.lang.String[] { "rest.exception.stacktrace.skip", "", "rest.exception.stacktrace.skip", "hi!", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", "RetryOnPrimaryException[rest.exception.cause.skip]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        retryOnPrimaryException2.addHeader("", (java.util.List<java.lang.String>) strList16);
        retryOnPrimaryException2.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", 1);
        java.lang.String str22 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException28);
        retryOnPrimaryException28.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!", (java.lang.Throwable) retryOnPrimaryException28);
        java.util.Set<java.lang.String> strSet36 = retryOnPrimaryException28.getHeaderKeys();
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException28.getHeader("rest.exception.cause.skip");
        org.elasticsearch.index.Index index39 = null;
        retryOnPrimaryException28.setIndex(index39);
        java.util.Set<java.lang.String> strSet41 = retryOnPrimaryException28.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        retryOnPrimaryException45.setIndex("");
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException45.setResources("", strArray54);
        boolean boolean56 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException45);
        java.lang.String str57 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException45);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        retryOnPrimaryException45.setShard(shardId58);
        org.elasticsearch.index.shard.ShardId shardId60 = retryOnPrimaryException45.getShardId();
        boolean boolean61 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException45);
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet66 = retryOnPrimaryException65.getHeaderKeys();
        java.lang.Throwable throwable67 = retryOnPrimaryException65.getRootCause();
        java.lang.String[] strArray73 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        retryOnPrimaryException65.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList74);
        retryOnPrimaryException45.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList74);
        retryOnPrimaryException28.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList74);
        retryOnPrimaryException2.addHeader("[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][10]] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList74);
        org.elasticsearch.common.io.stream.StreamInput streamInput80 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable81 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str22, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "retry_on_primary_exception" + "'", str57, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strSet66);
        org.junit.Assert.assertNotNull(throwable67);
        org.junit.Assert.assertEquals(throwable67.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable67.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable67.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
    }

    @Test
    public void test2028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2028");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray10 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException2.getResourceId();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable13 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip");
        retryOnPrimaryException17.setIndex("");
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException17.setResources("", strArray26);
        java.lang.String str28 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "hi!");
        retryOnPrimaryException32.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        retryOnPrimaryException39.setIndex("");
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException39.setResources("", strArray48);
        retryOnPrimaryException32.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray48);
        java.lang.String str51 = retryOnPrimaryException32.getDetailedMessage();
        java.lang.String str52 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String str53 = retryOnPrimaryException32.getDetailedMessage();
        org.elasticsearch.index.Index index54 = null;
        retryOnPrimaryException32.setIndex(index54);
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "rest.exception.cause.skip");
        retryOnPrimaryException59.setIndex("");
        java.lang.Throwable[] throwableArray62 = retryOnPrimaryException59.getSuppressed();
        java.lang.String[] strArray67 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException59.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray67);
        retryOnPrimaryException32.addHeader("hi!", strArray67);
        retryOnPrimaryException17.setResources("[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray67);
        retryOnPrimaryException2.setResources("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][0]] RetryOnPrimaryException[retry_on_primary_exception]", strArray67);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable13.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "retry_on_primary_exception" + "'", str28, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str51, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "retry_on_primary_exception" + "'", str52, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str53, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(strArray67);
    }

    @Test
    public void test2029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2029");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException11.setIndex(index14);
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException11.status();
        java.lang.Throwable throwable17 = retryOnPrimaryException11.getRootCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException22.getHeaderKeys();
        java.lang.Throwable throwable24 = retryOnPrimaryException22.getRootCause();
        java.lang.String[] strArray30 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        retryOnPrimaryException22.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList31);
        retryOnPrimaryException11.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList31);
        java.lang.String str35 = retryOnPrimaryException11.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        retryOnPrimaryException39.setIndex("");
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException39.setResources("", strArray48);
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException39);
        java.lang.String str51 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        retryOnPrimaryException39.setShard(shardId52);
        org.elasticsearch.index.shard.ShardId shardId54 = retryOnPrimaryException39.getShardId();
        retryOnPrimaryException39.setShard("hi!", (int) '4');
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "hi!");
        retryOnPrimaryException61.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        retryOnPrimaryException61.setShard(shardId65);
        java.util.Set<java.lang.String> strSet67 = retryOnPrimaryException61.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "rest.exception.cause.skip");
        retryOnPrimaryException71.setIndex("");
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException71.setResources("", strArray80);
        retryOnPrimaryException61.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray80);
        retryOnPrimaryException39.setResources("rest.exception.stacktrace.skip", strArray80);
        retryOnPrimaryException11.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray80);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str35, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "retry_on_primary_exception" + "'", str51, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId54);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNotNull(strArray80);
    }

    @Test
    public void test2030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2030");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("", strArray21);
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException12.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        retryOnPrimaryException12.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.rest.RestStatus restStatus36 = retryOnPrimaryException12.status();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        retryOnPrimaryException41.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str45 = retryOnPrimaryException41.getDetailedMessage();
        java.lang.Throwable throwable46 = retryOnPrimaryException41.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable46);
        org.elasticsearch.index.Index index48 = retryOnPrimaryException47.getIndex();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException47);
        retryOnPrimaryException47.setIndex("retry_on_primary_exception");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertTrue("'" + restStatus36 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus36.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str45, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable46.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index48);
    }

    @Test
    public void test2031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2031");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet25 = retryOnPrimaryException24.getHeaderKeys();
        java.lang.Throwable throwable26 = retryOnPrimaryException24.getRootCause();
        java.lang.String[] strArray32 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        retryOnPrimaryException24.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList33);
        retryOnPrimaryException4.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList33);
        java.lang.String str37 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "retry_on_primary_exception" + "'", str37, "retry_on_primary_exception");
    }

    @Test
    public void test2032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2032");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException7.guessRootCauses();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder10 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params11 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder12 = retryOnPrimaryException7.toXContent(xContentBuilder10, params11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(params11);
    }

    @Test
    public void test2033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2033");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.cause.skip]");
        java.lang.Class<?> wildcardClass3 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test2034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2034");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        retryOnPrimaryException16.setIndex("");
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException16.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        org.elasticsearch.index.Index index24 = null;
        retryOnPrimaryException2.setIndex(index24);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        retryOnPrimaryException28.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "rest.exception.cause.skip");
        retryOnPrimaryException35.setIndex("");
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException35.setResources("", strArray44);
        retryOnPrimaryException28.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray44);
        java.lang.String str47 = retryOnPrimaryException28.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index51 = retryOnPrimaryException50.getIndex();
        retryOnPrimaryException28.addSuppressed((java.lang.Throwable) retryOnPrimaryException50);
        retryOnPrimaryException50.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet59 = retryOnPrimaryException58.getHeaderKeys();
        java.lang.Throwable throwable60 = retryOnPrimaryException58.getRootCause();
        java.lang.String[] strArray66 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        retryOnPrimaryException58.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList67);
        retryOnPrimaryException50.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList67);
        java.lang.String str71 = retryOnPrimaryException50.toString();
        boolean boolean72 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.rest.RestStatus restStatus73 = retryOnPrimaryException50.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException50);
        java.lang.Class<?> wildcardClass75 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str47, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index51);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertNotNull(throwable60);
        org.junit.Assert.assertEquals(throwable60.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable60.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable60.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str71, "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
        org.junit.Assert.assertTrue("'" + restStatus73 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus73.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test2035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2035");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable[] throwableArray7 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str8 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder9 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params10 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder11 = retryOnPrimaryException2.toXContent(xContentBuilder9, params10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(params10);
    }

    @Test
    public void test2036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2036");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        java.lang.Throwable[] throwableArray16 = retryOnPrimaryException13.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index22 = retryOnPrimaryException21.getIndex();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException32.setResources("", strArray41);
        java.lang.String str43 = retryOnPrimaryException32.toString();
        retryOnPrimaryException26.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String str45 = retryOnPrimaryException26.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        retryOnPrimaryException26.setShard(shardId46);
        java.lang.String[] strArray58 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        retryOnPrimaryException26.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList59);
        retryOnPrimaryException21.addHeader("", (java.util.List<java.lang.String>) strList59);
        retryOnPrimaryException13.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList59);
        java.util.List<java.lang.String> strList64 = retryOnPrimaryException13.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException66 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException13, streamOutput65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(index22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str43, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList64);
    }

    @Test
    public void test2037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2037");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException2.status();
        java.lang.String str28 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable throwable34 = retryOnPrimaryException32.getRootCause();
        java.lang.String[] strArray40 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        retryOnPrimaryException32.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList41);
        java.lang.String str44 = retryOnPrimaryException32.toString();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "hi!");
        retryOnPrimaryException47.setShard("rest.exception.cause.skip", (int) (byte) 1);
        retryOnPrimaryException32.addSuppressed((java.lang.Throwable) retryOnPrimaryException47);
        java.util.Set<java.lang.String> strSet52 = retryOnPrimaryException47.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "rest.exception.cause.skip");
        retryOnPrimaryException56.setIndex("");
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException56.setResources("", strArray65);
        retryOnPrimaryException47.addHeader("[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[] RetryOnPrimaryException[rest.exception.cause.skip]]", strArray65);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray65);
        boolean boolean69 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str44, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
    }

    @Test
    public void test2038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2038");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput37 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2039");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException4.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.Throwable[] throwableArray18 = retryOnPrimaryException15.getSuppressed();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException4.status();
        java.lang.Throwable throwable21 = retryOnPrimaryException4.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable21.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2040");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.String str24 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str25 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable26 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException4.status();
        java.lang.String str28 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray29 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus30 = retryOnPrimaryException4.status();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "retry_on_primary_exception" + "'", str24, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray29);
        org.junit.Assert.assertTrue("'" + restStatus30 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus30.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2041");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index27 = retryOnPrimaryException26.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException26.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException34.getHeaderKeys();
        java.lang.Throwable throwable36 = retryOnPrimaryException34.getRootCause();
        java.lang.String[] strArray42 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        retryOnPrimaryException34.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList43);
        retryOnPrimaryException26.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList43);
        java.util.List<java.lang.String> strList48 = retryOnPrimaryException26.getHeader("hi!");
        java.lang.Throwable throwable49 = retryOnPrimaryException26.unwrapCause();
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        retryOnPrimaryException53.setIndex("");
        org.elasticsearch.index.Index index56 = null;
        retryOnPrimaryException53.setIndex(index56);
        java.util.List<java.lang.String> strList58 = retryOnPrimaryException53.getResourceId();
        java.lang.Throwable throwable59 = retryOnPrimaryException53.getRootCause();
        java.lang.String str60 = retryOnPrimaryException53.toString();
        org.elasticsearch.index.shard.ShardId shardId61 = retryOnPrimaryException53.getShardId();
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "rest.exception.cause.skip");
        retryOnPrimaryException65.setIndex("");
        java.lang.String[] strArray74 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException65.setResources("", strArray74);
        boolean boolean76 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException65);
        org.elasticsearch.index.shard.ShardId shardId77 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException79 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId77, "rest.exception.cause.skip");
        retryOnPrimaryException79.setIndex("");
        java.lang.Throwable[] throwableArray82 = retryOnPrimaryException79.getSuppressed();
        retryOnPrimaryException65.addSuppressed((java.lang.Throwable) retryOnPrimaryException79);
        retryOnPrimaryException65.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        org.elasticsearch.index.Index index87 = null;
        retryOnPrimaryException65.setIndex(index87);
        java.util.List<java.lang.String> strList89 = retryOnPrimaryException65.getResourceId();
        retryOnPrimaryException53.addHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", strList89);
        java.lang.String str91 = retryOnPrimaryException53.toString();
        retryOnPrimaryException26.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException93 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.cause.skip]", (java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput94 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException93.writeTo(streamOutput94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNull(strList48);
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable49.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(throwable59);
        org.junit.Assert.assertEquals(throwable59.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable59.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable59.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str60, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId61);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(strList89);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str91, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2042");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.Index index27 = retryOnPrimaryException24.getIndex();
        java.lang.String str28 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException24);
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException24.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException31 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException24, streamOutput30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "retry_on_primary_exception" + "'", str28, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList29);
    }

    @Test
    public void test2043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2043");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        java.lang.Throwable throwable18 = retryOnPrimaryException2.unwrapCause();
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test2044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2044");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.util.Set<java.lang.String> strSet6 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable[] throwableArray7 = retryOnPrimaryException4.getSuppressed();
        retryOnPrimaryException4.setIndex("");
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException4.getHeaderKeys();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test2045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2045");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        retryOnPrimaryException2.setShard("[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 100);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
    }

    @Test
    public void test2046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2046");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        retryOnPrimaryException2.setShard("[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) -1);
        java.lang.String str14 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]][-1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]][-1]] RetryOnPrimaryException[hi!]" + "'", str14, "[[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]][-1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2047");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String[] strArray21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.addHeader("[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[retry_on_primary_exception]", strArray21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
    }

    @Test
    public void test2048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2048");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str28 = retryOnPrimaryException24.getDetailedMessage();
        java.lang.Throwable throwable29 = retryOnPrimaryException24.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable29);
        org.elasticsearch.index.Index index31 = retryOnPrimaryException30.getIndex();
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable[] throwableArray34 = retryOnPrimaryException30.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        retryOnPrimaryException2.setIndex("hi!");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        retryOnPrimaryException41.setIndex("");
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException41.setResources("", strArray50);
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        retryOnPrimaryException55.setIndex("");
        java.lang.Throwable[] throwableArray58 = retryOnPrimaryException55.getSuppressed();
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException55);
        retryOnPrimaryException41.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String str64 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.rest.RestStatus restStatus65 = retryOnPrimaryException2.status();
        java.lang.Class<?> wildcardClass66 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str64, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + restStatus65 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus65.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2049");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index27 = retryOnPrimaryException26.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException4.getSuppressed();
        java.lang.String str30 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable31 = retryOnPrimaryException4.unwrapCause();
        retryOnPrimaryException4.setShard("[hi!][[hi!][0]] RetryOnPrimaryException[]", (int) (byte) -1);
        retryOnPrimaryException4.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.lang.Throwable throwable37 = retryOnPrimaryException4.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, throwable37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str30, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable31.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]][[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]][-1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable37.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]][[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]][-1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2050");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException2.status();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException2.getHeader("[[hi!][[hi!][0]] RetryOnPrimaryException[]][[[hi!][[hi!][0]] RetryOnPrimaryException[]][100]] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(strList23);
    }

    @Test
    public void test2051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2051");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        java.lang.String str37 = retryOnPrimaryException26.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        java.lang.Throwable throwable42 = retryOnPrimaryException41.unwrapCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String[] strArray47 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException41.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException41);
        java.lang.Throwable throwable50 = retryOnPrimaryException49.getRootCause();
        java.lang.Throwable throwable51 = retryOnPrimaryException49.getRootCause();
        retryOnPrimaryException49.setIndex("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.lang.Throwable[] throwableArray54 = retryOnPrimaryException49.getSuppressed();
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str37, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(throwable50);
        org.junit.Assert.assertEquals(throwable50.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable50.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable50.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable51);
        org.junit.Assert.assertEquals(throwable51.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable51.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable51.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray54);
    }

    @Test
    public void test2052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2052");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray37);
        retryOnPrimaryException2.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray37);
        org.elasticsearch.index.Index index41 = retryOnPrimaryException2.getIndex();
        java.lang.String str42 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId43 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.Index index44 = retryOnPrimaryException2.getIndex();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(index41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str42, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNull(index44);
    }

    @Test
    public void test2053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2053");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        java.lang.String str26 = retryOnPrimaryException15.toString();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException2.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder31 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params32 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder33 = retryOnPrimaryException2.toXContent(xContentBuilder31, params32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str26, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(params32);
    }

    @Test
    public void test2054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2054");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException2.status();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException2.setIndex(index8);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
    }

    @Test
    public void test2055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2055");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index5 = retryOnPrimaryException4.getIndex();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(index5);
    }

    @Test
    public void test2056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2056");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        java.lang.String str18 = retryOnPrimaryException2.getResourceType();
        java.lang.Class<?> wildcardClass19 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test2057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2057");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException2.getShardId();
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str12 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str12, "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2058");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder7 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder9 = retryOnPrimaryException2.toXContent(xContentBuilder7, params8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test2059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2059");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip");
        retryOnPrimaryException17.setIndex("");
        java.lang.Throwable[] throwableArray20 = retryOnPrimaryException17.getSuppressed();
        java.lang.String[] strArray25 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException17.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray25);
        retryOnPrimaryException2.setResources("[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]", strArray25);
        org.elasticsearch.index.Index index28 = retryOnPrimaryException2.getIndex();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNull(index28);
    }

    @Test
    public void test2060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2060");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        java.lang.String str33 = retryOnPrimaryException9.getDetailedMessage();
        java.lang.Throwable throwable34 = retryOnPrimaryException9.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        retryOnPrimaryException37.setIndex("");
        org.elasticsearch.index.Index index40 = null;
        retryOnPrimaryException37.setIndex(index40);
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException37.getResourceId();
        java.lang.Throwable throwable43 = retryOnPrimaryException37.getRootCause();
        java.lang.String str44 = retryOnPrimaryException37.toString();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException37);
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException37);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str44, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test2061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2061");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        retryOnPrimaryException10.setIndex("");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException10.setResources("", strArray19);
        java.lang.String str21 = retryOnPrimaryException10.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str23 = retryOnPrimaryException4.getResourceType();
        retryOnPrimaryException4.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList28 = retryOnPrimaryException4.getHeader("retry_on_primary_exception");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str21, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(strList28);
    }

    @Test
    public void test2062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2062");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        java.lang.String[] strArray16 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException9.setResources("rest.exception.cause.skip", strArray16);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        retryOnPrimaryException9.setShard("RetryOnPrimaryException[retry_on_primary_exception]", (int) (byte) 10);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException9.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str24 = retryOnPrimaryException9.getDetailedMessage();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str24, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test2063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2063");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.Index index11 = null;
        retryOnPrimaryException2.setIndex(index11);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder13 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder15 = retryOnPrimaryException2.toXContent(xContentBuilder13, params14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test2064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2064");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        java.lang.String str17 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable19 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder20 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder22 = retryOnPrimaryException2.toXContent(xContentBuilder20, params21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2065");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable8 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        retryOnPrimaryException13.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!", (java.lang.Throwable) retryOnPrimaryException13);
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException13.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException13.status();
        retryOnPrimaryException13.setIndex("");
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException13.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException13.guessRootCauses();
        throwable8.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.String str29 = retryOnPrimaryException13.getDetailedMessage();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str29, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2066");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        retryOnPrimaryException2.setShard(shardId25);
        java.lang.String str27 = retryOnPrimaryException2.getDetailedMessage();
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException2.getHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "rest.exception.cause.skip");
        retryOnPrimaryException35.setIndex("");
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException35);
        retryOnPrimaryException35.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "hi!", (java.lang.Throwable) retryOnPrimaryException35);
        java.util.Set<java.lang.String> strSet43 = retryOnPrimaryException35.getHeaderKeys();
        java.util.List<java.lang.String> strList45 = retryOnPrimaryException35.getHeader("rest.exception.cause.skip");
        org.elasticsearch.index.Index index46 = null;
        retryOnPrimaryException35.setIndex(index46);
        java.util.Set<java.lang.String> strSet48 = retryOnPrimaryException35.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        retryOnPrimaryException52.setIndex("");
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException52.setResources("", strArray61);
        boolean boolean63 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String str64 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException52);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        retryOnPrimaryException52.setShard(shardId65);
        org.elasticsearch.index.shard.ShardId shardId67 = retryOnPrimaryException52.getShardId();
        boolean boolean68 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException52);
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet73 = retryOnPrimaryException72.getHeaderKeys();
        java.lang.Throwable throwable74 = retryOnPrimaryException72.getRootCause();
        java.lang.String[] strArray80 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        retryOnPrimaryException72.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList81);
        retryOnPrimaryException52.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList81);
        retryOnPrimaryException35.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList81);
        retryOnPrimaryException2.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (java.util.List<java.lang.String>) strList81);
        boolean boolean87 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "retry_on_primary_exception" + "'", str64, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertNotNull(throwable74);
        org.junit.Assert.assertEquals(throwable74.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable74.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable74.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + false + "'", boolean87 == false);
    }

    @Test
    public void test2067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2067");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException2.setIndex(index8);
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test2068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2068");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamInput streamInput7 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException8 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
    }

    @Test
    public void test2069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2069");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = null;
        retryOnPrimaryException10.setIndex(index11);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index17 = retryOnPrimaryException16.getIndex();
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException16.getResourceId();
        java.lang.Throwable throwable19 = retryOnPrimaryException16.unwrapCause();
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException16.getHeader("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = retryOnPrimaryException24.guessRootCauses();
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException24.getHeaderKeys();
        java.lang.Throwable throwable38 = retryOnPrimaryException24.getRootCause();
        retryOnPrimaryException16.addSuppressed(throwable38);
        org.elasticsearch.index.Index index40 = retryOnPrimaryException16.getIndex();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        retryOnPrimaryException44.setIndex("");
        boolean boolean47 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray48 = retryOnPrimaryException44.guessRootCauses();
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray50 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        java.lang.String[] strArray61 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException54.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray61);
        retryOnPrimaryException44.setResources("rest.exception.stacktrace.skip", strArray61);
        retryOnPrimaryException16.addHeader("rest.exception.cause.skip", strArray61);
        retryOnPrimaryException10.setResources("RetryOnPrimaryException[rest.exception.cause.skip]", strArray61);
        org.elasticsearch.common.io.stream.StreamInput streamInput66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception67 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException10, streamInput66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index17);
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray50);
        org.junit.Assert.assertNotNull(strArray61);
    }

    @Test
    public void test2070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2070");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        throwable9.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.Throwable throwable14 = retryOnPrimaryException12.unwrapCause();
        org.elasticsearch.common.io.stream.StreamInput streamInput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException12, streamInput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[[] RetryOnPrimaryException[rest.exception.cause.skip]]");
    }

    @Test
    public void test2071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2071");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException17.setIndex(index18);
        java.lang.String str20 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.Throwable throwable21 = retryOnPrimaryException17.getRootCause();
        org.elasticsearch.common.io.stream.StreamInput streamInput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable23 = org.elasticsearch.ElasticsearchException.readStackTrace(throwable21, streamInput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "retry_on_primary_exception" + "'", str20, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2072");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
    }

    @Test
    public void test2073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2073");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId14 = retryOnPrimaryException2.getShardId();
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException2.getHeaderKeys();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test2074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2074");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("hi!", (int) (byte) 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        java.lang.String[] strArray35 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        retryOnPrimaryException28.setShard(shardId37);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = retryOnPrimaryException28.guessRootCauses();
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.Throwable throwable42 = retryOnPrimaryException28.unwrapCause();
        retryOnPrimaryException28.setIndex("rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.cause.skip");
        retryOnPrimaryException48.setIndex("");
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException48.setResources("", strArray57);
        boolean boolean59 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "hi!");
        retryOnPrimaryException63.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "rest.exception.cause.skip");
        retryOnPrimaryException70.setIndex("");
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException70.setResources("", strArray79);
        retryOnPrimaryException63.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray79);
        retryOnPrimaryException48.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray79);
        retryOnPrimaryException28.setResources("hi!", strArray79);
        retryOnPrimaryException2.setResources("retry_on_primary_exception", strArray79);
        java.util.List<java.lang.String> strList85 = retryOnPrimaryException2.getResourceId();
        java.lang.Class<?> wildcardClass86 = strList85.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test2075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2075");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        throwable9.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        java.lang.Throwable throwable17 = retryOnPrimaryException16.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        java.util.List<java.lang.String> strList33 = null;
        retryOnPrimaryException20.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList33);
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        retryOnPrimaryException20.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "hi!");
        retryOnPrimaryException42.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str46 = retryOnPrimaryException42.getDetailedMessage();
        java.lang.Throwable throwable47 = retryOnPrimaryException42.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable47);
        org.elasticsearch.index.Index index49 = retryOnPrimaryException48.getIndex();
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException48);
        boolean boolean51 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException48);
        java.lang.Throwable[] throwableArray52 = retryOnPrimaryException48.getSuppressed();
        retryOnPrimaryException20.addSuppressed((java.lang.Throwable) retryOnPrimaryException48);
        java.util.List<java.lang.String> strList54 = retryOnPrimaryException20.getResourceId();
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.util.Set<java.lang.String> strSet56 = retryOnPrimaryException20.getHeaderKeys();
        throwable9.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        retryOnPrimaryException20.setShard("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", 0);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder61 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params62 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder63 = retryOnPrimaryException20.toXContent(xContentBuilder61, params62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str46, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable47.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(throwableArray52);
        org.junit.Assert.assertNull(strList54);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNotNull(params62);
    }

    @Test
    public void test2076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2076");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException4.getResourceId();
        retryOnPrimaryException4.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 1);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException4.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test2077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2077");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException13.setIndex(index16);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException13.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.Throwable throwable20 = retryOnPrimaryException13.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet24 = retryOnPrimaryException23.getHeaderKeys();
        java.util.Set<java.lang.String> strSet25 = retryOnPrimaryException23.getHeaderKeys();
        java.lang.Throwable[] throwableArray26 = retryOnPrimaryException23.getSuppressed();
        java.util.List<java.lang.String> strList28 = retryOnPrimaryException23.getHeader("rest.exception.cause.skip");
        java.lang.String str29 = retryOnPrimaryException23.getDetailedMessage();
        retryOnPrimaryException23.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable32 = retryOnPrimaryException23.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId33 = retryOnPrimaryException23.getShardId();
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException23.getSuppressed();
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException23);
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.String str38 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.String str39 = retryOnPrimaryException23.toString();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str29, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "retry_on_primary_exception" + "'", str38, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str39, "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2078");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getResourceId();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException2.status();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2079");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException7.unwrapCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException7.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray26);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        retryOnPrimaryException32.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 10);
        java.lang.Throwable throwable40 = retryOnPrimaryException32.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception42 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException32, streamOutput41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2080");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        retryOnPrimaryException9.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 0);
        java.lang.Throwable throwable15 = retryOnPrimaryException9.unwrapCause();
        java.lang.Throwable throwable16 = retryOnPrimaryException9.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException9.writeTo(streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "");
        org.junit.Assert.assertEquals(throwable15.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "");
        org.junit.Assert.assertEquals(throwable16.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[]");
    }

    @Test
    public void test2081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2081");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        retryOnPrimaryException4.setShard("hi!", (-1));
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
    }

    @Test
    public void test2082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2082");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.common.io.stream.StreamInput streamInput38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException39 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException24, streamInput38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
    }

    @Test
    public void test2083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2083");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException9 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamOutput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2084");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        java.lang.String str33 = retryOnPrimaryException14.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index37 = retryOnPrimaryException36.getIndex();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        retryOnPrimaryException36.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet45 = retryOnPrimaryException44.getHeaderKeys();
        java.lang.Throwable throwable46 = retryOnPrimaryException44.getRootCause();
        java.lang.String[] strArray52 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        retryOnPrimaryException44.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException36.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList53);
        java.util.List<java.lang.String> strList58 = retryOnPrimaryException2.getResourceId();
        java.lang.String str59 = retryOnPrimaryException2.toString();
        boolean boolean60 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput61 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index37);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str59, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test2085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2085");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        java.lang.String str33 = retryOnPrimaryException9.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = retryOnPrimaryException9.getShardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException36 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException9, streamOutput35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId34);
    }

    @Test
    public void test2086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2086");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput4 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
    }

    @Test
    public void test2087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2087");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId14 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException2.status();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index17 = retryOnPrimaryException2.getIndex();
        java.lang.Class<?> wildcardClass18 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(index17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2088");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException4.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList13);
        java.util.List<java.lang.String> strList17 = null;
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList17);
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setIndex("retry_on_primary_exception");
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException4.getResourceId();
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str24 = retryOnPrimaryException4.getResourceType();
        java.lang.Throwable throwable25 = retryOnPrimaryException4.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2089");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str13 = retryOnPrimaryException10.toString();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException10.getHeaderKeys();
        retryOnPrimaryException10.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("", strArray29);
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str32 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        retryOnPrimaryException20.setShard(shardId33);
        org.elasticsearch.index.shard.ShardId shardId35 = retryOnPrimaryException20.getShardId();
        retryOnPrimaryException20.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException20.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "retry_on_primary_exception");
        java.lang.String str44 = retryOnPrimaryException43.toString();
        org.elasticsearch.index.Index index45 = null;
        retryOnPrimaryException43.setIndex(index45);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "rest.exception.cause.skip");
        java.lang.String[] strArray57 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException50.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray57);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        retryOnPrimaryException50.setShard(shardId59);
        java.util.Set<java.lang.String> strSet61 = retryOnPrimaryException50.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "hi!");
        retryOnPrimaryException67.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str71 = retryOnPrimaryException67.getDetailedMessage();
        java.lang.Throwable throwable72 = retryOnPrimaryException67.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable72);
        org.elasticsearch.index.Index index74 = retryOnPrimaryException73.getIndex();
        java.lang.String str75 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException73);
        org.elasticsearch.index.shard.ShardId shardId77 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException79 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId77, "rest.exception.cause.skip");
        retryOnPrimaryException79.setIndex("");
        java.lang.String[] strArray88 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException79.setResources("", strArray88);
        retryOnPrimaryException73.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray88);
        retryOnPrimaryException50.addHeader("retry_on_primary_exception", strArray88);
        retryOnPrimaryException43.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray88);
        retryOnPrimaryException20.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray88);
        retryOnPrimaryException10.setResources("RetryOnPrimaryException[retry_on_primary_exception]", strArray88);
        retryOnPrimaryException10.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 0);
        java.lang.Throwable throwable98 = retryOnPrimaryException10.getRootCause();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str13, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "retry_on_primary_exception" + "'", str32, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str44, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str71, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable72);
        org.junit.Assert.assertEquals(throwable72.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable72.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable72.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "retry_on_primary_exception" + "'", str75, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(throwable98);
        org.junit.Assert.assertEquals(throwable98.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable98.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable98.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2090");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException2.getResourceId();
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "hi!");
        retryOnPrimaryException25.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException32.setResources("", strArray41);
        retryOnPrimaryException25.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray41);
        java.lang.String str44 = retryOnPrimaryException25.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index48 = retryOnPrimaryException47.getIndex();
        retryOnPrimaryException25.addSuppressed((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.Throwable[] throwableArray50 = retryOnPrimaryException25.getSuppressed();
        java.lang.String str51 = retryOnPrimaryException25.getResourceType();
        java.util.List<java.lang.String> strList52 = retryOnPrimaryException25.getResourceId();
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strList52);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str44, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index48);
        org.junit.Assert.assertNotNull(throwableArray50);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str51, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList52);
    }

    @Test
    public void test2091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2091");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException24.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable throwable34 = retryOnPrimaryException32.getRootCause();
        java.lang.String[] strArray40 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        retryOnPrimaryException32.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList41);
        retryOnPrimaryException24.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList41);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = retryOnPrimaryException24.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray46 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException24);
        boolean boolean47 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String str48 = retryOnPrimaryException24.getDetailedMessage();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str48, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2092");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException14.setResources("", strArray23);
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String str26 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.Throwable throwable27 = retryOnPrimaryException14.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.Throwable throwable29 = retryOnPrimaryException2.getRootCause();
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "retry_on_primary_exception" + "'", str26, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
    }

    @Test
    public void test2093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2093");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.Index index27 = null;
        retryOnPrimaryException2.setIndex(index27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        retryOnPrimaryException2.setShard(shardId29);
        org.elasticsearch.index.Index index31 = null;
        retryOnPrimaryException2.setIndex(index31);
        java.lang.String str33 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "retry_on_primary_exception" + "'", str33, "retry_on_primary_exception");
    }

    @Test
    public void test2094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2094");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        java.lang.String str39 = retryOnPrimaryException28.toString();
        retryOnPrimaryException22.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String str41 = retryOnPrimaryException22.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        retryOnPrimaryException22.setShard(shardId42);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray44 = retryOnPrimaryException22.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        retryOnPrimaryException22.setShard(shardId45);
        java.lang.String str47 = retryOnPrimaryException22.getDetailedMessage();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId49 = retryOnPrimaryException2.getShardId();
        java.util.Set<java.lang.String> strSet50 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder51 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params52 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder53 = retryOnPrimaryException2.toXContent(xContentBuilder51, params52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str39, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str47, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(params52);
    }

    @Test
    public void test2095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2095");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        java.lang.String str33 = retryOnPrimaryException9.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = retryOnPrimaryException9.getShardId();
        org.elasticsearch.rest.RestStatus restStatus35 = retryOnPrimaryException9.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = retryOnPrimaryException9.guessRootCauses();
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException9.getHeaderKeys();
        java.lang.Throwable throwable38 = retryOnPrimaryException9.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId39 = retryOnPrimaryException9.getShardId();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertTrue("'" + restStatus35 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus35.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId39);
    }

    @Test
    public void test2096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2096");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable7 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test2097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2097");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException2.status();
        java.lang.String str21 = retryOnPrimaryException2.toString();
        java.lang.String str22 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str21, "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test2098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2098");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        retryOnPrimaryException2.setShard("hi!", (int) ' ');
        java.lang.Throwable[] throwableArray9 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test2099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2099");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId47 = retryOnPrimaryException2.getShardId();
        java.util.Set<java.lang.String> strSet48 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str49 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet50 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str49, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strSet50);
    }

    @Test
    public void test2100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2100");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException14 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException2, streamOutput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
    }

    @Test
    public void test2101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2101");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        retryOnPrimaryException8.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray24);
        retryOnPrimaryException2.setResources("", strArray24);
        org.elasticsearch.index.Index index28 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable29 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNull(index28);
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList31);
    }

    @Test
    public void test2102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2102");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        retryOnPrimaryException26.setShard(shardId47);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.rest.RestStatus restStatus50 = retryOnPrimaryException26.status();
        boolean boolean51 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException26);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertTrue("'" + restStatus50 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus50.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test2103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2103");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        retryOnPrimaryException7.setIndex("");
        java.lang.String str11 = retryOnPrimaryException7.toString();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException7.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException7.status();
        retryOnPrimaryException7.setIndex("[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.lang.Throwable throwable17 = retryOnPrimaryException7.unwrapCause();
        java.lang.Class<?> wildcardClass18 = retryOnPrimaryException7.getClass();
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];" + "'", str11, "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2104");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index9 = retryOnPrimaryException8.getIndex();
        java.lang.String str10 = retryOnPrimaryException8.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        retryOnPrimaryException8.setResources("", strArray30);
        retryOnPrimaryException2.setResources("", strArray30);
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str36 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput37 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException38 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException2, streamOutput37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "retry_on_primary_exception" + "'", str36, "retry_on_primary_exception");
    }

    @Test
    public void test2105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2105");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Throwable throwable25 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable26 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder27 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params28 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder29 = retryOnPrimaryException2.toXContent(xContentBuilder27, params28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable25.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(params28);
    }

    @Test
    public void test2106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2106");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        java.lang.Throwable[] throwableArray16 = retryOnPrimaryException13.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index22 = retryOnPrimaryException21.getIndex();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException32.setResources("", strArray41);
        java.lang.String str43 = retryOnPrimaryException32.toString();
        retryOnPrimaryException26.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String str45 = retryOnPrimaryException26.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        retryOnPrimaryException26.setShard(shardId46);
        java.lang.String[] strArray58 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        retryOnPrimaryException26.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList59);
        retryOnPrimaryException21.addHeader("", (java.util.List<java.lang.String>) strList59);
        retryOnPrimaryException13.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList59);
        org.elasticsearch.rest.RestStatus restStatus64 = retryOnPrimaryException13.status();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput65 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable66 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException13, streamOutput65);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(index22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str43, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertTrue("'" + restStatus64 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus64.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2107");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "retry_on_primary_exception");
        java.lang.String str10 = retryOnPrimaryException9.toString();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("", strArray29);
        java.lang.String str31 = retryOnPrimaryException20.toString();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str33 = retryOnPrimaryException14.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        retryOnPrimaryException14.setShard(shardId34);
        java.lang.String[] strArray46 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        retryOnPrimaryException14.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException9.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", 0);
        org.elasticsearch.common.io.stream.StreamInput streamInput55 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException2, streamInput55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str10, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str31, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
    }

    @Test
    public void test2108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2108");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str10 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable11 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2109");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        retryOnPrimaryException4.setIndex("hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(strList6);
    }

    @Test
    public void test2110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2110");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Throwable throwable11 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.io.stream.StreamInput streamInput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException13 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2111");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        java.lang.String str33 = retryOnPrimaryException9.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = retryOnPrimaryException9.getShardId();
        org.elasticsearch.rest.RestStatus restStatus35 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable36 = retryOnPrimaryException9.getRootCause();
        java.lang.Throwable throwable37 = retryOnPrimaryException9.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index41 = retryOnPrimaryException40.getIndex();
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException40.getResourceId();
        java.lang.Throwable throwable43 = retryOnPrimaryException40.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet47 = retryOnPrimaryException46.getHeaderKeys();
        retryOnPrimaryException46.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "");
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        retryOnPrimaryException57.setIndex("");
        org.elasticsearch.index.Index index60 = null;
        retryOnPrimaryException57.setIndex(index60);
        org.elasticsearch.rest.RestStatus restStatus62 = retryOnPrimaryException57.status();
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        throwable43.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray65 = retryOnPrimaryException57.guessRootCauses();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        boolean boolean67 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException57);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertTrue("'" + restStatus35 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus35.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + restStatus62 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus62.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test2112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2112");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.Index index27 = null;
        retryOnPrimaryException2.setIndex(index27);
        java.lang.String str29 = retryOnPrimaryException2.getResourceType();
        java.lang.String str30 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException2.getResourceId();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str29, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "retry_on_primary_exception" + "'", str30, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strList31);
    }

    @Test
    public void test2113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2113");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable[] throwableArray18 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        java.lang.Throwable throwable23 = retryOnPrimaryException22.unwrapCause();
        java.lang.String[] strArray27 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        retryOnPrimaryException22.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList28);
        java.lang.Throwable throwable31 = retryOnPrimaryException22.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray32 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str34 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.common.io.stream.StreamInput streamInput35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException36 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "" + "'", str34, "");
    }

    @Test
    public void test2114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2114");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", throwable2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException9.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str13 = retryOnPrimaryException9.getDetailedMessage();
        java.lang.Throwable throwable14 = retryOnPrimaryException9.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable14);
        org.elasticsearch.index.Index index16 = retryOnPrimaryException15.getIndex();
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException15.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray30);
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strArray30);
        org.elasticsearch.index.shard.ShardId shardId34 = retryOnPrimaryException3.getShardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException3, streamOutput35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNull(shardId34);
    }

    @Test
    public void test2115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2115");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!");
        retryOnPrimaryException30.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        retryOnPrimaryException37.setIndex("");
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException37.setResources("", strArray46);
        retryOnPrimaryException30.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray46);
        java.lang.String str49 = retryOnPrimaryException30.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index53 = retryOnPrimaryException52.getIndex();
        retryOnPrimaryException30.addSuppressed((java.lang.Throwable) retryOnPrimaryException52);
        retryOnPrimaryException52.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet61 = retryOnPrimaryException60.getHeaderKeys();
        java.lang.Throwable throwable62 = retryOnPrimaryException60.getRootCause();
        java.lang.String[] strArray68 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        retryOnPrimaryException60.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList69);
        retryOnPrimaryException52.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList69);
        retryOnPrimaryException24.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList69);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder74 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params75 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder76 = retryOnPrimaryException24.toXContent(xContentBuilder74, params75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str49, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index53);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertNotNull(throwable62);
        org.junit.Assert.assertEquals(throwable62.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable62.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable62.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(params75);
    }

    @Test
    public void test2116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2116");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException17.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        retryOnPrimaryException17.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray33);
        java.lang.String str36 = retryOnPrimaryException17.getDetailedMessage();
        java.lang.String str37 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.String str38 = retryOnPrimaryException17.getDetailedMessage();
        org.elasticsearch.index.Index index39 = null;
        retryOnPrimaryException17.setIndex(index39);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        retryOnPrimaryException44.setIndex("");
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException44.getSuppressed();
        java.lang.String[] strArray52 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException44.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray52);
        retryOnPrimaryException17.addHeader("hi!", strArray52);
        retryOnPrimaryException2.setResources("[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray52);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput56 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str36, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "retry_on_primary_exception" + "'", str37, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str38, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(strArray52);
    }

    @Test
    public void test2117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2117");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException2.getResourceId();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index29 = retryOnPrimaryException28.getIndex();
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException28.getResourceId();
        java.lang.Throwable throwable31 = retryOnPrimaryException28.unwrapCause();
        retryOnPrimaryException28.setIndex("rest.exception.cause.skip");
        java.lang.String str34 = retryOnPrimaryException28.getResourceType();
        java.lang.Throwable throwable35 = retryOnPrimaryException28.unwrapCause();
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable35);
        retryOnPrimaryException2.addSuppressed(throwable35);
        org.elasticsearch.index.shard.ShardId shardId38 = retryOnPrimaryException2.getShardId();
        java.lang.String str39 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNull(index29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(shardId38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "retry_on_primary_exception" + "'", str39, "retry_on_primary_exception");
    }

    @Test
    public void test2118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2118");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException13.setIndex(index16);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException13.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.Throwable throwable20 = retryOnPrimaryException13.getRootCause();
        java.lang.String str21 = retryOnPrimaryException13.toString();
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException13.getHeader("rest.exception.cause.skip");
        org.elasticsearch.common.io.stream.StreamInput streamInput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException25 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException13, streamInput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str21, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList23);
    }

    @Test
    public void test2119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2119");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "retry_on_primary_exception");
        java.lang.String str10 = retryOnPrimaryException9.toString();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("", strArray29);
        java.lang.String str31 = retryOnPrimaryException20.toString();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str33 = retryOnPrimaryException14.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        retryOnPrimaryException14.setShard(shardId34);
        java.lang.String[] strArray46 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        retryOnPrimaryException14.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException9.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList47);
        java.lang.String str52 = retryOnPrimaryException2.toString();
        boolean boolean53 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus54 = retryOnPrimaryException2.status();
        org.elasticsearch.rest.RestStatus restStatus55 = retryOnPrimaryException2.status();
        java.lang.String str56 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str10, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str31, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str52, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + restStatus54 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus54.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus55 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus55.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test2120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2120");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        retryOnPrimaryException9.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 0);
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable15);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable18 = org.elasticsearch.ElasticsearchException.writeStackTraces(throwable15, streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "");
        org.junit.Assert.assertEquals(throwable15.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
    }

    @Test
    public void test2121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2121");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str13 = retryOnPrimaryException10.getResourceType();
        java.lang.String str14 = retryOnPrimaryException10.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId15 = retryOnPrimaryException10.getShardId();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str14, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(shardId15);
    }

    @Test
    public void test2122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2122");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        java.lang.String str26 = retryOnPrimaryException15.toString();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String str29 = retryOnPrimaryException2.toString();
        java.lang.String str30 = retryOnPrimaryException2.toString();
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (int) (byte) 100);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder34 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params35 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder36 = retryOnPrimaryException2.toXContent(xContentBuilder34, params35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str26, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str29, "[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str30, "[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(params35);
    }

    @Test
    public void test2123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2123");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str18 = retryOnPrimaryException2.getResourceType();
        java.lang.String str19 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        retryOnPrimaryException23.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException30.setResources("", strArray39);
        retryOnPrimaryException23.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray39);
        java.lang.Throwable[] throwableArray42 = retryOnPrimaryException23.getSuppressed();
        java.lang.String[] strArray49 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException23.setResources("rest.exception.cause.skip", strArray49);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray49);
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput53 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test2124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2124");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.Throwable[] throwableArray7 = retryOnPrimaryException4.getSuppressed();
        java.lang.String[] strArray12 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException4.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray12);
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException4.getHeaderKeys();
        retryOnPrimaryException4.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        retryOnPrimaryException4.setShard("[] RetryOnPrimaryException[rest.exception.cause.skip]", (int) 'a');
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException22.setResources("", strArray31);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        retryOnPrimaryException22.setShard(shardId35);
        org.elasticsearch.index.shard.ShardId shardId37 = retryOnPrimaryException22.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        retryOnPrimaryException22.setShard("hi!", (int) (byte) 0);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray43 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray43);
    }

    @Test
    public void test2125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2125");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        org.elasticsearch.index.Index index3 = null;
        retryOnPrimaryException2.setIndex(index3);
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable[] throwableArray6 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder7 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params8 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder9 = retryOnPrimaryException2.toXContent(xContentBuilder7, params8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwableArray6);
        org.junit.Assert.assertNotNull(params8);
    }

    @Test
    public void test2126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2126");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException15.setIndex(index18);
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException15.status();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.Throwable throwable22 = retryOnPrimaryException15.getRootCause();
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable22);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, throwable22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test2127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2127");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException24.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable throwable34 = retryOnPrimaryException32.getRootCause();
        java.lang.String[] strArray40 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        retryOnPrimaryException32.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList41);
        retryOnPrimaryException24.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList41);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = retryOnPrimaryException24.guessRootCauses();
        java.lang.String str46 = retryOnPrimaryException24.getResourceType();
        java.lang.String str47 = retryOnPrimaryException24.getDetailedMessage();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str47, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2128");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.cause.skip");
        retryOnPrimaryException6.setIndex("");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException6.setResources("", strArray15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        retryOnPrimaryException6.setShard(shardId19);
        org.elasticsearch.index.shard.ShardId shardId21 = retryOnPrimaryException6.getShardId();
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet27 = retryOnPrimaryException26.getHeaderKeys();
        java.lang.Throwable throwable28 = retryOnPrimaryException26.getRootCause();
        java.lang.String[] strArray34 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        retryOnPrimaryException26.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList35);
        retryOnPrimaryException6.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList35);
        java.lang.String str39 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "hi!");
        retryOnPrimaryException43.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        retryOnPrimaryException43.setShard(shardId47);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index53 = retryOnPrimaryException52.getIndex();
        java.lang.String str54 = retryOnPrimaryException52.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index59 = retryOnPrimaryException58.getIndex();
        java.lang.String str60 = retryOnPrimaryException58.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "hi!");
        retryOnPrimaryException64.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "rest.exception.cause.skip");
        retryOnPrimaryException71.setIndex("");
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException71.setResources("", strArray80);
        retryOnPrimaryException64.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray80);
        retryOnPrimaryException58.setResources("", strArray80);
        retryOnPrimaryException52.setResources("", strArray80);
        retryOnPrimaryException43.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray80);
        retryOnPrimaryException6.setResources("[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray80);
        retryOnPrimaryException2.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray80);
        org.elasticsearch.index.shard.ShardId shardId88 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable28.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "retry_on_primary_exception" + "'", str39, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str54, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str60, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNull(shardId88);
    }

    @Test
    public void test2129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2129");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        java.lang.String str9 = retryOnPrimaryException2.toString();
        java.lang.String str10 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str9, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2130");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException17.setIndex(index18);
        java.lang.String str20 = retryOnPrimaryException17.getResourceType();
        java.lang.String str21 = retryOnPrimaryException17.toString();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder22 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params23 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder24 = retryOnPrimaryException17.toXContent(xContentBuilder22, params23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];" + "'", str21, "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.junit.Assert.assertNotNull(params23);
    }

    @Test
    public void test2131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2131");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray10);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException2.status();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        retryOnPrimaryException20.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.cause.skip");
        retryOnPrimaryException27.setIndex("");
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException27.setResources("", strArray36);
        retryOnPrimaryException20.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray36);
        java.lang.String str39 = retryOnPrimaryException20.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index43 = retryOnPrimaryException42.getIndex();
        retryOnPrimaryException20.addSuppressed((java.lang.Throwable) retryOnPrimaryException42);
        java.lang.Throwable throwable45 = retryOnPrimaryException42.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index50 = retryOnPrimaryException49.getIndex();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        retryOnPrimaryException54.setIndex("");
        boolean boolean57 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException54);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "rest.exception.cause.skip");
        retryOnPrimaryException60.setIndex("");
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException60.setResources("", strArray69);
        java.lang.String str71 = retryOnPrimaryException60.toString();
        retryOnPrimaryException54.addSuppressed((java.lang.Throwable) retryOnPrimaryException60);
        java.lang.String str73 = retryOnPrimaryException54.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        retryOnPrimaryException54.setShard(shardId74);
        java.lang.String[] strArray86 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        retryOnPrimaryException54.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList87);
        retryOnPrimaryException49.addHeader("", (java.util.List<java.lang.String>) strList87);
        retryOnPrimaryException42.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList87);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", (java.util.List<java.lang.String>) strList87);
        boolean boolean93 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 0);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str39, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index43);
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str71, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertTrue("'" + boolean93 + "' != '" + false + "'", boolean93 == false);
    }

    @Test
    public void test2132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2132");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2133");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (byte) 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        java.lang.String[] strArray37 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException30.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray37);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        retryOnPrimaryException30.setShard(shardId39);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = retryOnPrimaryException30.guessRootCauses();
        java.lang.String str42 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable throwable44 = retryOnPrimaryException30.unwrapCause();
        retryOnPrimaryException30.setIndex("rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "rest.exception.cause.skip");
        retryOnPrimaryException50.setIndex("");
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException50.setResources("", strArray59);
        boolean boolean61 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "hi!");
        retryOnPrimaryException65.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "rest.exception.cause.skip");
        retryOnPrimaryException72.setIndex("");
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException72.setResources("", strArray81);
        retryOnPrimaryException65.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray81);
        retryOnPrimaryException50.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray81);
        retryOnPrimaryException30.setResources("hi!", strArray81);
        retryOnPrimaryException4.setResources("retry_on_primary_exception", strArray81);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "retry_on_primary_exception" + "'", str42, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strArray81);
    }

    @Test
    public void test2134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2134");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException13.guessRootCauses();
        java.util.Set<java.lang.String> strSet18 = retryOnPrimaryException13.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException22.setResources("", strArray31);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException37.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        retryOnPrimaryException44.setIndex("");
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException44.setResources("", strArray53);
        retryOnPrimaryException37.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray53);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray53);
        retryOnPrimaryException13.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray53);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray53);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray59 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean60 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str61 = retryOnPrimaryException2.toString();
        java.lang.Throwable[] throwableArray62 = retryOnPrimaryException2.getSuppressed();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str61, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray62);
    }

    @Test
    public void test2135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2135");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("", strArray21);
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException12.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        retryOnPrimaryException12.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.rest.RestStatus restStatus36 = retryOnPrimaryException12.status();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        retryOnPrimaryException41.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str45 = retryOnPrimaryException41.getDetailedMessage();
        java.lang.Throwable throwable46 = retryOnPrimaryException41.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable46);
        org.elasticsearch.index.Index index48 = retryOnPrimaryException47.getIndex();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException47);
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.common.io.stream.StreamInput streamInput51 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception52 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException12, streamInput51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertTrue("'" + restStatus36 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus36.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str45, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable46.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
    }

    @Test
    public void test2136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2136");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException6.getHeaderKeys();
        java.lang.Throwable throwable8 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException9.guessRootCauses();
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException9.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        retryOnPrimaryException16.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException23.setResources("", strArray32);
        retryOnPrimaryException16.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray32);
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException16.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        retryOnPrimaryException38.setIndex("");
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException38.setResources("", strArray47);
        java.lang.String str49 = retryOnPrimaryException38.toString();
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        java.lang.Throwable throwable54 = retryOnPrimaryException53.unwrapCause();
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        java.lang.String[] strArray59 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException53.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray59);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException53);
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        java.util.List<java.lang.String> strList64 = retryOnPrimaryException53.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str49, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable54);
        org.junit.Assert.assertEquals(throwable54.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable54.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable54.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNull(strList64);
    }

    @Test
    public void test2137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2137");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        retryOnPrimaryException15.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException22.setResources("", strArray31);
        retryOnPrimaryException15.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray31);
        java.lang.String str34 = retryOnPrimaryException15.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index38 = retryOnPrimaryException37.getIndex();
        retryOnPrimaryException15.addSuppressed((java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.rest.RestStatus restStatus40 = retryOnPrimaryException15.status();
        java.lang.Throwable throwable41 = retryOnPrimaryException15.unwrapCause();
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException15.getResourceId();
        java.util.List<java.lang.String> strList43 = retryOnPrimaryException15.getResourceId();
        retryOnPrimaryException11.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strList43);
        retryOnPrimaryException11.setShard("RetryOnPrimaryException[retry_on_primary_exception]", (int) '4');
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str34, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index38);
        org.junit.Assert.assertTrue("'" + restStatus40 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus40.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable41.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
    }

    @Test
    public void test2138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2138");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.Index index16 = retryOnPrimaryException4.getIndex();
        java.lang.Throwable throwable17 = retryOnPrimaryException4.getRootCause();
        java.lang.String str18 = retryOnPrimaryException4.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2139");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable12 = retryOnPrimaryException2.getRootCause();
        java.lang.Class<?> wildcardClass13 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2140");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        retryOnPrimaryException2.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException9.getResourceId();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        java.lang.Throwable[] throwableArray16 = retryOnPrimaryException9.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException9.getResourceId();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(strList18);
    }

    @Test
    public void test2141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2141");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException4.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList13);
        java.util.List<java.lang.String> strList17 = null;
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList17);
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setIndex("retry_on_primary_exception");
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException4.getResourceId();
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str24 = retryOnPrimaryException4.getResourceType();
        java.lang.Throwable throwable25 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        java.lang.String[] strArray37 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException30.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray37);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        retryOnPrimaryException30.setShard(shardId39);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = retryOnPrimaryException30.guessRootCauses();
        java.lang.String str42 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable throwable44 = retryOnPrimaryException30.unwrapCause();
        retryOnPrimaryException30.setIndex("rest.exception.cause.skip");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.String str48 = retryOnPrimaryException30.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "retry_on_primary_exception" + "'", str42, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str48, "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2142");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable18 = retryOnPrimaryException4.unwrapCause();
        retryOnPrimaryException4.setIndex("rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "hi!");
        retryOnPrimaryException39.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        retryOnPrimaryException46.setIndex("");
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException46.setResources("", strArray55);
        retryOnPrimaryException39.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray55);
        retryOnPrimaryException24.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray55);
        retryOnPrimaryException4.setResources("hi!", strArray55);
        java.util.List<java.lang.String> strList61 = retryOnPrimaryException4.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        boolean boolean62 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        boolean boolean63 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
    }

    @Test
    public void test2143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2143");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable7 = retryOnPrimaryException4.unwrapCause();
        retryOnPrimaryException4.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException4.getHeaderKeys();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test2144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2144");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException14.setResources("", strArray23);
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String str26 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.Throwable throwable27 = retryOnPrimaryException14.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId30 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.rest.RestStatus restStatus31 = retryOnPrimaryException2.status();
        java.util.Set<java.lang.String> strSet32 = retryOnPrimaryException2.getHeaderKeys();
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "retry_on_primary_exception" + "'", str26, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertTrue("'" + restStatus31 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus31.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
    }

    @Test
    public void test2145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2145");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        retryOnPrimaryException2.setShard("hi!", (int) ' ');
        java.lang.Throwable[] throwableArray9 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException2.getHeader("");
        java.lang.String str12 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test2146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2146");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        java.lang.Throwable throwable10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.stacktrace.skip", throwable10);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet16 = retryOnPrimaryException15.getHeaderKeys();
        retryOnPrimaryException15.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        retryOnPrimaryException23.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException30.setResources("", strArray39);
        retryOnPrimaryException23.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray39);
        java.lang.String str42 = retryOnPrimaryException23.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index46 = retryOnPrimaryException45.getIndex();
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException45);
        retryOnPrimaryException45.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet54 = retryOnPrimaryException53.getHeaderKeys();
        java.lang.Throwable throwable55 = retryOnPrimaryException53.getRootCause();
        java.lang.String[] strArray61 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        retryOnPrimaryException53.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList62);
        retryOnPrimaryException45.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList62);
        retryOnPrimaryException15.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList62);
        retryOnPrimaryException11.addHeader("hi!", (java.util.List<java.lang.String>) strList62);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList62);
        java.lang.String str69 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable70 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str42, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index46);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(throwable55);
        org.junit.Assert.assertEquals(throwable55.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable55.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable55.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(throwable70);
        org.junit.Assert.assertEquals(throwable70.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable70.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable70.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2147");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        java.lang.String str26 = retryOnPrimaryException15.toString();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.io.stream.StreamInput streamInput30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException31 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str26, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray29);
    }

    @Test
    public void test2148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2148");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        java.lang.String str26 = retryOnPrimaryException15.toString();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException2.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        java.lang.Throwable throwable31 = retryOnPrimaryException2.unwrapCause();
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        retryOnPrimaryException37.setIndex("");
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        retryOnPrimaryException43.setIndex("");
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException43.setResources("", strArray52);
        java.lang.String str54 = retryOnPrimaryException43.toString();
        retryOnPrimaryException37.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        java.lang.String str56 = retryOnPrimaryException37.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        retryOnPrimaryException37.setShard(shardId57);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray59 = retryOnPrimaryException37.guessRootCauses();
        java.util.List<java.lang.String> strList61 = retryOnPrimaryException37.getHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "rest.exception.cause.skip");
        retryOnPrimaryException64.setIndex("");
        java.lang.String[] strArray73 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException64.setResources("", strArray73);
        boolean boolean75 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException64);
        java.util.List<java.lang.String> strList77 = retryOnPrimaryException64.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        boolean boolean78 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException64);
        java.util.List<java.lang.String> strList79 = retryOnPrimaryException64.getResourceId();
        retryOnPrimaryException37.addSuppressed((java.lang.Throwable) retryOnPrimaryException64);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException37);
        java.lang.String str82 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str26, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str54, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray59);
        org.junit.Assert.assertNull(strList61);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertNull(strList77);
        org.junit.Assert.assertTrue("'" + boolean78 + "' != '" + false + "'", boolean78 == false);
        org.junit.Assert.assertNotNull(strList79);
        org.junit.Assert.assertEquals("'" + str82 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str82, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2149");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId48 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId51 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertNull(shardId51);
    }

    @Test
    public void test2150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2150");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        org.elasticsearch.index.Index index3 = null;
        retryOnPrimaryException2.setIndex(index3);
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException9.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        retryOnPrimaryException16.setIndex("");
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException16.setResources("", strArray25);
        retryOnPrimaryException9.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray25);
        java.lang.String str28 = retryOnPrimaryException9.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index32 = retryOnPrimaryException31.getIndex();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.rest.RestStatus restStatus34 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable35 = retryOnPrimaryException9.unwrapCause();
        retryOnPrimaryException9.setIndex("[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        java.lang.Throwable throwable42 = retryOnPrimaryException41.unwrapCause();
        java.lang.String[] strArray46 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        retryOnPrimaryException41.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList47);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        retryOnPrimaryException53.setIndex("");
        boolean boolean56 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "rest.exception.cause.skip");
        retryOnPrimaryException59.setIndex("");
        java.lang.String[] strArray68 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException59.setResources("", strArray68);
        java.lang.String str70 = retryOnPrimaryException59.toString();
        retryOnPrimaryException53.addSuppressed((java.lang.Throwable) retryOnPrimaryException59);
        java.lang.String str72 = retryOnPrimaryException53.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        retryOnPrimaryException53.setShard(shardId73);
        java.lang.String[] strArray85 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        retryOnPrimaryException53.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList86);
        retryOnPrimaryException41.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList86);
        retryOnPrimaryException9.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList86);
        java.util.List<java.lang.String> strList91 = retryOnPrimaryException9.getResourceId();
        retryOnPrimaryException2.addHeader("[rest.exception.stacktrace.skip] RetryOnPrimaryException[rest.exception.cause.skip]", strList91);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception" + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index32);
        org.junit.Assert.assertTrue("'" + restStatus34 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus34.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable35.toString(), "[[] RetryOnPrimaryException[rest.exception.cause.skip]][[[] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + false + "'", boolean56 == false);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str70, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(strList91);
    }

    @Test
    public void test2151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2151");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException6.setIndex(index7);
        org.elasticsearch.index.Index index9 = null;
        retryOnPrimaryException6.setIndex(index9);
        java.lang.String str11 = retryOnPrimaryException6.getDetailedMessage();
        java.lang.Throwable throwable12 = retryOnPrimaryException6.unwrapCause();
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException6.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str11, "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable12.toString(), "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
    }

    @Test
    public void test2152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2152");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray25 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable27 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(throwableArray25);
    }

    @Test
    public void test2153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2153");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = retryOnPrimaryException12.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException19.setIndex(index22);
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException19.status();
        java.lang.Throwable throwable25 = retryOnPrimaryException19.getRootCause();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet31 = retryOnPrimaryException30.getHeaderKeys();
        java.lang.Throwable throwable32 = retryOnPrimaryException30.getRootCause();
        java.lang.String[] strArray38 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        retryOnPrimaryException30.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList39);
        retryOnPrimaryException19.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList39);
        retryOnPrimaryException4.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList39);
        java.util.List<java.lang.String> strList44 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "hi!");
        retryOnPrimaryException47.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        retryOnPrimaryException54.setIndex("");
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException54.setResources("", strArray63);
        retryOnPrimaryException47.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray63);
        java.lang.Throwable[] throwableArray66 = retryOnPrimaryException47.getSuppressed();
        boolean boolean67 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String str68 = retryOnPrimaryException47.getDetailedMessage();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.Throwable throwable70 = retryOnPrimaryException47.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str68, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable70);
        org.junit.Assert.assertEquals(throwable70.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable70.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable70.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2154");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException10.getResourceId();
        java.lang.String str13 = retryOnPrimaryException10.getDetailedMessage();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str13, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test2155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2155");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException2.getResourceId();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        java.lang.String str26 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "retry_on_primary_exception" + "'", str26, "retry_on_primary_exception");
    }

    @Test
    public void test2156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2156");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException14.getHeaderKeys();
        java.lang.Throwable throwable16 = retryOnPrimaryException14.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable16);
        retryOnPrimaryException2.addSuppressed(throwable16);
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (int) '#');
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][35]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2157");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException9.guessRootCauses();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException9.getHeaderKeys();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = retryOnPrimaryException9.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException22.getHeaderKeys();
        java.lang.Throwable throwable24 = retryOnPrimaryException22.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray30 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException22.addHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        retryOnPrimaryException9.setResources("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray30);
    }

    @Test
    public void test2158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2158");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException24.status();
        java.lang.Throwable throwable29 = retryOnPrimaryException24.unwrapCause();
        org.elasticsearch.index.Index index30 = retryOnPrimaryException24.getIndex();
        java.lang.String str31 = retryOnPrimaryException24.getDetailedMessage();
        retryOnPrimaryException24.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (short) 10);
        java.lang.String str35 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException24);
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException24.getResourceId();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]][[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str31, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "retry_on_primary_exception" + "'", str35, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList36);
    }

    @Test
    public void test2159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2159");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "hi!");
        retryOnPrimaryException7.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str11 = retryOnPrimaryException7.getDetailedMessage();
        java.lang.Throwable throwable12 = retryOnPrimaryException7.unwrapCause();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException7.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException7.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        retryOnPrimaryException18.setIndex("");
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException18.getSuppressed();
        retryOnPrimaryException7.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        boolean boolean27 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        java.lang.Throwable throwable32 = retryOnPrimaryException31.unwrapCause();
        java.lang.String[] strArray36 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        retryOnPrimaryException31.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList37);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        java.lang.String[] strArray50 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException43.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray50);
        retryOnPrimaryException31.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray50);
        retryOnPrimaryException26.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray50);
        retryOnPrimaryException18.setResources("retry_on_primary_exception", strArray50);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strArray50);
        java.lang.String str56 = retryOnPrimaryException2.getDetailedMessage();
        java.util.List<java.lang.String> strList58 = retryOnPrimaryException2.getHeader("[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str11, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str56, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(strList58);
    }

    @Test
    public void test2160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2160");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str18 = retryOnPrimaryException14.getDetailedMessage();
        java.lang.Throwable throwable19 = retryOnPrimaryException14.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable19);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        boolean boolean27 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = retryOnPrimaryException24.guessRootCauses();
        java.util.Set<java.lang.String> strSet29 = retryOnPrimaryException24.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "hi!");
        retryOnPrimaryException48.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        retryOnPrimaryException55.setIndex("");
        java.lang.String[] strArray64 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException55.setResources("", strArray64);
        retryOnPrimaryException48.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray64);
        retryOnPrimaryException33.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray64);
        retryOnPrimaryException24.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray64);
        retryOnPrimaryException20.setResources("hi!", strArray64);
        java.util.List<java.lang.String> strList70 = retryOnPrimaryException20.getResourceId();
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]", strList70);
        boolean boolean72 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable19.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + false + "'", boolean72 == false);
    }

    @Test
    public void test2161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2161");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        java.lang.String str37 = retryOnPrimaryException26.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "rest.exception.cause.skip");
        java.lang.Throwable throwable43 = retryOnPrimaryException42.unwrapCause();
        java.lang.String[] strArray47 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        retryOnPrimaryException42.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList48);
        org.elasticsearch.rest.RestStatus restStatus51 = retryOnPrimaryException42.status();
        retryOnPrimaryException26.addSuppressed((java.lang.Throwable) retryOnPrimaryException42);
        java.lang.String str53 = retryOnPrimaryException42.toString();
        boolean boolean54 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException42);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str37, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertTrue("'" + restStatus51 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus51.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str53, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
    }

    @Test
    public void test2162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2162");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.Index index16 = retryOnPrimaryException4.getIndex();
        java.lang.Throwable throwable17 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str25 = retryOnPrimaryException21.getDetailedMessage();
        java.lang.Throwable throwable26 = retryOnPrimaryException21.unwrapCause();
        java.util.List<java.lang.String> strList28 = retryOnPrimaryException21.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException21.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        java.lang.Throwable throwable46 = retryOnPrimaryException45.unwrapCause();
        java.lang.String[] strArray50 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        retryOnPrimaryException45.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList51);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        java.lang.String[] strArray64 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException57.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray64);
        retryOnPrimaryException45.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray64);
        retryOnPrimaryException40.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray64);
        retryOnPrimaryException32.setResources("retry_on_primary_exception", strArray64);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray64);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray70 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable72 = retryOnPrimaryException71.unwrapCause();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray70);
        org.junit.Assert.assertNotNull(throwable72);
        org.junit.Assert.assertEquals(throwable72.getLocalizedMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable72.getMessage(), "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable72.toString(), "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
    }

    @Test
    public void test2163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2163");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str14 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2164");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str22 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str22, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test2165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2165");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.Throwable throwable6 = retryOnPrimaryException2.getRootCause();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable6.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test2166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2166");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("", strArray28);
        retryOnPrimaryException12.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        java.lang.Throwable[] throwableArray31 = retryOnPrimaryException12.getSuppressed();
        java.lang.String[] strArray38 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("rest.exception.cause.skip", strArray38);
        retryOnPrimaryException2.addHeader("", strArray38);
        java.util.List<java.lang.String> strList42 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strList42);
        java.lang.String str44 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput45 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "retry_on_primary_exception" + "'", str44, "retry_on_primary_exception");
    }

    @Test
    public void test2167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2167");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index27 = retryOnPrimaryException26.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray29 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable[] throwableArray30 = retryOnPrimaryException26.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray29);
        org.junit.Assert.assertNotNull(throwableArray30);
    }

    @Test
    public void test2168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2168");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.Index index6 = null;
        retryOnPrimaryException2.setIndex(index6);
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder10 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder12 = retryOnPrimaryException2.toXContent(xContentBuilder10, params11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test2169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2169");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str22 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str22, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2170");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        java.lang.String str33 = retryOnPrimaryException9.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = retryOnPrimaryException9.getShardId();
        org.elasticsearch.rest.RestStatus restStatus35 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable36 = retryOnPrimaryException9.getRootCause();
        java.lang.Throwable throwable37 = retryOnPrimaryException9.unwrapCause();
        java.lang.String str38 = retryOnPrimaryException9.getDetailedMessage();
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException9.getHeader("[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[] RetryOnPrimaryException[rest.exception.cause.skip]]");
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException9);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertTrue("'" + restStatus35 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus35.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str38, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test2171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2171");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        java.lang.String str26 = retryOnPrimaryException15.toString();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "hi!");
        retryOnPrimaryException31.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str35 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException31);
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException31);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException31);
        retryOnPrimaryException2.setShard("[RetryOnPrimaryException[rest.exception.cause.skip]][[RetryOnPrimaryException[rest.exception.cause.skip]][100]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (short) 1);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str26, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "retry_on_primary_exception" + "'", str35, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
    }

    @Test
    public void test2172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2172");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        java.lang.String[] strArray21 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray21);
        retryOnPrimaryException2.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray21);
        org.elasticsearch.index.shard.ShardId shardId24 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable26 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNull(shardId24);
    }

    @Test
    public void test2173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2173");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable28 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("[] RetryOnPrimaryException[rest.exception.cause.skip]");
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", 0);
        java.lang.Class<?> wildcardClass34 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.toString(), "[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test2174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2174");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        java.lang.Throwable throwable41 = retryOnPrimaryException40.unwrapCause();
        java.lang.String[] strArray45 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        retryOnPrimaryException40.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList46);
        org.elasticsearch.rest.RestStatus restStatus49 = retryOnPrimaryException40.status();
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        java.lang.String str51 = retryOnPrimaryException24.toString();
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        java.lang.String[] strArray62 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException55.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        retryOnPrimaryException24.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray62);
        org.elasticsearch.rest.RestStatus restStatus65 = retryOnPrimaryException24.status();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + restStatus49 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus49.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str51, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + restStatus65 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus65.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2175");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        java.lang.String str17 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable[] throwableArray18 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        java.lang.String[] strArray28 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index33 = retryOnPrimaryException32.getIndex();
        java.lang.String str34 = retryOnPrimaryException32.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "hi!");
        retryOnPrimaryException38.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        retryOnPrimaryException45.setIndex("");
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException45.setResources("", strArray54);
        retryOnPrimaryException38.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray54);
        retryOnPrimaryException32.setResources("", strArray54);
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.rest.RestStatus restStatus59 = retryOnPrimaryException21.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        java.util.List<java.lang.String> strList61 = retryOnPrimaryException21.getResourceId();
        java.lang.String str62 = retryOnPrimaryException21.getDetailedMessage();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str17, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNull(index33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str34, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + restStatus59 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus59.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strList61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str62, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2176");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException4.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList13);
        java.util.List<java.lang.String> strList17 = null;
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList17);
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setIndex("retry_on_primary_exception");
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException4.getResourceId();
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str24 = retryOnPrimaryException4.getResourceType();
        java.lang.Throwable throwable25 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "hi!");
        retryOnPrimaryException29.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        retryOnPrimaryException36.setIndex("");
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException36.setResources("", strArray45);
        retryOnPrimaryException29.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray45);
        java.lang.String str48 = retryOnPrimaryException29.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index52 = retryOnPrimaryException51.getIndex();
        retryOnPrimaryException29.addSuppressed((java.lang.Throwable) retryOnPrimaryException51);
        retryOnPrimaryException51.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet60 = retryOnPrimaryException59.getHeaderKeys();
        java.lang.Throwable throwable61 = retryOnPrimaryException59.getRootCause();
        java.lang.String[] strArray67 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        retryOnPrimaryException59.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList68);
        retryOnPrimaryException51.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList68);
        retryOnPrimaryException4.addHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList68);
        java.lang.Throwable throwable73 = retryOnPrimaryException4.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, throwable73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str48, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index52);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertNotNull(throwable61);
        org.junit.Assert.assertEquals(throwable61.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable61.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable61.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(throwable73);
        org.junit.Assert.assertEquals(throwable73.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable73.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable73.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2177");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        java.lang.Throwable[] throwableArray16 = retryOnPrimaryException13.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index22 = retryOnPrimaryException21.getIndex();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException32.setResources("", strArray41);
        java.lang.String str43 = retryOnPrimaryException32.toString();
        retryOnPrimaryException26.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String str45 = retryOnPrimaryException26.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        retryOnPrimaryException26.setShard(shardId46);
        java.lang.String[] strArray58 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        retryOnPrimaryException26.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList59);
        retryOnPrimaryException21.addHeader("", (java.util.List<java.lang.String>) strList59);
        retryOnPrimaryException13.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList59);
        java.util.List<java.lang.String> strList64 = retryOnPrimaryException13.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus65 = retryOnPrimaryException13.status();
        java.lang.String str66 = retryOnPrimaryException13.getResourceType();
        java.lang.String str67 = retryOnPrimaryException13.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "rest.exception.cause.skip");
        java.lang.String[] strArray78 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException71.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray78);
        retryOnPrimaryException13.setResources("RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray78);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(index22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str43, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertTrue("'" + restStatus65 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus65.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str67, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray78);
    }

    @Test
    public void test2178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2178");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "retry_on_primary_exception");
        java.lang.String str7 = retryOnPrimaryException6.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str9 = retryOnPrimaryException6.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException13.getHeaderKeys();
        retryOnPrimaryException13.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "");
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        org.elasticsearch.index.Index index27 = null;
        retryOnPrimaryException24.setIndex(index27);
        org.elasticsearch.rest.RestStatus restStatus29 = retryOnPrimaryException24.status();
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String[] strArray35 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException24.addHeader("rest.exception.stacktrace.skip", strArray35);
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str7, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + restStatus29 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus29.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray35);
    }

    @Test
    public void test2179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2179");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable[] throwableArray14 = retryOnPrimaryException10.getSuppressed();
        java.lang.Throwable throwable15 = retryOnPrimaryException10.getRootCause();
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException10.status();
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException10.status();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet22 = retryOnPrimaryException21.getHeaderKeys();
        retryOnPrimaryException21.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (short) 10);
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException21.getHeaderKeys();
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException21);
        retryOnPrimaryException21.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        java.lang.String str32 = retryOnPrimaryException21.toString();
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException21.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        retryOnPrimaryException37.setIndex("");
        org.elasticsearch.index.Index index40 = null;
        retryOnPrimaryException37.setIndex(index40);
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException37.getResourceId();
        java.lang.Throwable throwable43 = retryOnPrimaryException37.getRootCause();
        java.lang.String str44 = retryOnPrimaryException37.toString();
        org.elasticsearch.index.shard.ShardId shardId45 = retryOnPrimaryException37.getShardId();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        retryOnPrimaryException49.setIndex("");
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException49.setResources("", strArray58);
        boolean boolean60 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException49);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "rest.exception.cause.skip");
        retryOnPrimaryException63.setIndex("");
        java.lang.Throwable[] throwableArray66 = retryOnPrimaryException63.getSuppressed();
        retryOnPrimaryException49.addSuppressed((java.lang.Throwable) retryOnPrimaryException63);
        retryOnPrimaryException49.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        org.elasticsearch.index.Index index71 = null;
        retryOnPrimaryException49.setIndex(index71);
        java.util.List<java.lang.String> strList73 = retryOnPrimaryException49.getResourceId();
        retryOnPrimaryException37.addHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", strList73);
        retryOnPrimaryException21.addHeader("[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[] RetryOnPrimaryException[rest.exception.cause.skip]]", strList73);
        retryOnPrimaryException10.addHeader("[RetryOnPrimaryException[rest.exception.cause.skip]][[RetryOnPrimaryException[rest.exception.cause.skip]][100]] RetryOnPrimaryException[rest.exception.cause.skip]", strList73);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable15.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][10]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str32, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str44, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(strList73);
    }

    @Test
    public void test2180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2180");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        org.elasticsearch.index.Index index21 = null;
        retryOnPrimaryException2.setIndex(index21);
        java.lang.Throwable throwable23 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str25 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str25, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList27);
    }

    @Test
    public void test2181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2181");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable throwable37 = retryOnPrimaryException24.unwrapCause();
        java.lang.Throwable throwable38 = retryOnPrimaryException24.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput39 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException24.writeTo(streamOutput39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2182");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable17 = retryOnPrimaryException4.getRootCause();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.Index index20 = null;
        retryOnPrimaryException4.setIndex(index20);
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.cause.skip]][[[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.cause.skip]][32]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test2183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2183");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable[] throwableArray27 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str28 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        retryOnPrimaryException31.setIndex("");
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = retryOnPrimaryException31.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        retryOnPrimaryException38.setIndex("");
        org.elasticsearch.index.Index index41 = null;
        retryOnPrimaryException38.setIndex(index41);
        org.elasticsearch.rest.RestStatus restStatus43 = retryOnPrimaryException38.status();
        java.lang.Throwable throwable44 = retryOnPrimaryException38.getRootCause();
        retryOnPrimaryException31.addSuppressed((java.lang.Throwable) retryOnPrimaryException38);
        java.lang.Throwable throwable46 = retryOnPrimaryException31.unwrapCause();
        java.lang.String str47 = retryOnPrimaryException31.toString();
        java.lang.String str48 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException31);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray50 = retryOnPrimaryException2.guessRootCauses();
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "hi!");
        retryOnPrimaryException56.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str60 = retryOnPrimaryException56.getDetailedMessage();
        java.lang.Throwable throwable61 = retryOnPrimaryException56.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable61);
        org.elasticsearch.index.Index index63 = retryOnPrimaryException62.getIndex();
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException62);
        boolean boolean65 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException62);
        java.util.List<java.lang.String> strList67 = retryOnPrimaryException62.getHeader("[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[] RetryOnPrimaryException[rest.exception.cause.skip]]");
        java.util.Set<java.lang.String> strSet68 = retryOnPrimaryException62.getHeaderKeys();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException62);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertTrue("'" + restStatus43 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus43.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str47, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "retry_on_primary_exception" + "'", str48, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray50);
        org.junit.Assert.assertNotNull(strList51);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str60, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable61);
        org.junit.Assert.assertEquals(throwable61.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable61.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable61.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(strList67);
        org.junit.Assert.assertNotNull(strSet68);
    }

    @Test
    public void test2184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2184");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable throwable27 = retryOnPrimaryException24.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = retryOnPrimaryException24.guessRootCauses();
        org.elasticsearch.index.Index index29 = retryOnPrimaryException24.getIndex();
        java.lang.Throwable[] throwableArray30 = retryOnPrimaryException24.getSuppressed();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput31 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException24.writeTo(streamOutput31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertNull(index29);
        org.junit.Assert.assertNotNull(throwableArray30);
    }

    @Test
    public void test2185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2185");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index9 = null;
        retryOnPrimaryException2.setIndex(index9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException2.getResourceId();
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId14 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str8, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(shardId14);
    }

    @Test
    public void test2186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2186");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException7.getHeaderKeys();
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test2187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2187");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index27 = retryOnPrimaryException26.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray29 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray30 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str31 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable32 = retryOnPrimaryException4.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray29);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str31, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable32.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2188");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", (int) (short) 0);
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (-1));
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        retryOnPrimaryException18.setIndex("");
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException18.setResources("", strArray27);
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        retryOnPrimaryException18.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        org.elasticsearch.index.Index index40 = null;
        retryOnPrimaryException18.setIndex(index40);
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException18.getResourceId();
        java.util.List<java.lang.String> strList44 = retryOnPrimaryException18.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput46 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput46);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][-1]] RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][-1]] RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList44);
    }

    @Test
    public void test2189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2189");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        retryOnPrimaryException7.setIndex("");
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException7.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable throwable13 = retryOnPrimaryException7.getRootCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException7, streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2190");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray10);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        retryOnPrimaryException2.setShard("[] RetryOnPrimaryException[rest.exception.cause.skip]", (int) 'a');
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("", strArray29);
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str32 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        retryOnPrimaryException20.setShard(shardId33);
        org.elasticsearch.index.shard.ShardId shardId35 = retryOnPrimaryException20.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException20);
        retryOnPrimaryException20.setShard("hi!", (int) (byte) 0);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable throwable41 = retryOnPrimaryException20.getRootCause();
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable41);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "retry_on_primary_exception" + "'", str32, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.toString(), "[hi!][[hi!][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test2191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2191");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException7.unwrapCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException7.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray26);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        retryOnPrimaryException32.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray40 = retryOnPrimaryException32.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamInput streamInput41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException42 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException32, streamInput41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray40);
    }

    @Test
    public void test2192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2192");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException2.getShardId();
        java.lang.String str14 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException20.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.cause.skip");
        retryOnPrimaryException27.setIndex("");
        org.elasticsearch.index.Index index30 = null;
        retryOnPrimaryException27.setIndex(index30);
        org.elasticsearch.rest.RestStatus restStatus32 = retryOnPrimaryException27.status();
        java.lang.Throwable throwable33 = retryOnPrimaryException27.getRootCause();
        retryOnPrimaryException20.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        java.lang.Throwable throwable35 = retryOnPrimaryException20.unwrapCause();
        java.lang.String str36 = retryOnPrimaryException20.getResourceType();
        java.lang.String str37 = retryOnPrimaryException20.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        retryOnPrimaryException41.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.cause.skip");
        retryOnPrimaryException48.setIndex("");
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException48.setResources("", strArray57);
        retryOnPrimaryException41.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray57);
        java.lang.Throwable[] throwableArray60 = retryOnPrimaryException41.getSuppressed();
        java.lang.String[] strArray67 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException41.setResources("rest.exception.cause.skip", strArray67);
        retryOnPrimaryException20.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray67);
        retryOnPrimaryException2.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray67);
        java.lang.Throwable throwable71 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("[RetryOnPrimaryException[retry_on_primary_exception]][[RetryOnPrimaryException[retry_on_primary_exception]][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertTrue("'" + restStatus32 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus32.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable33.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(throwableArray60);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(throwable71);
        org.junit.Assert.assertEquals(throwable71.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable71.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable71.toString(), "[[RetryOnPrimaryException[retry_on_primary_exception]][[RetryOnPrimaryException[retry_on_primary_exception]][10]] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2193");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.String[] strArray27 = new java.lang.String[] { "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[rest.exception.cause.skip]", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[rest.exception.cause.skip]", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        retryOnPrimaryException4.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList28);
        java.lang.String str31 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException4.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        java.lang.Throwable throwable34 = retryOnPrimaryException4.unwrapCause();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "retry_on_primary_exception" + "'", str31, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2194");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.elasticsearch.rest.RestStatus restStatus6 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertTrue("'" + restStatus6 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus6.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2195");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
    }

    @Test
    public void test2196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2196");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        java.lang.Throwable throwable40 = retryOnPrimaryException39.unwrapCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        java.util.Set<java.lang.String> strSet42 = retryOnPrimaryException39.getHeaderKeys();
        retryOnPrimaryException39.setIndex("[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException39.getSuppressed();
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException39);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.toString(), "[[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][10]] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test2197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2197");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException2.guessRootCauses();
        java.util.List<java.lang.String> strList26 = retryOnPrimaryException2.getHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException29);
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException29.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException29);
        java.util.List<java.lang.String> strList44 = retryOnPrimaryException29.getResourceId();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        java.lang.Throwable throwable46 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId47 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.shard.ShardId shardId48 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.common.io.stream.StreamInput streamInput49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable50 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertNull(shardId48);
    }

    @Test
    public void test2198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2198");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException13.guessRootCauses();
        java.util.Set<java.lang.String> strSet18 = retryOnPrimaryException13.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException22.setResources("", strArray31);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException37.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        retryOnPrimaryException44.setIndex("");
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException44.setResources("", strArray53);
        retryOnPrimaryException37.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray53);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray53);
        retryOnPrimaryException13.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray53);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray53);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray59 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean60 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str61 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable62 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str63 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str61, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable62);
        org.junit.Assert.assertEquals(throwable62.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable62.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable62.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str63, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2199");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        org.elasticsearch.rest.RestStatus restStatus39 = retryOnPrimaryException4.status();
        retryOnPrimaryException4.setIndex("");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + restStatus39 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus39.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2200");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str28 = retryOnPrimaryException24.getDetailedMessage();
        java.lang.Throwable throwable29 = retryOnPrimaryException24.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable29);
        org.elasticsearch.index.Index index31 = retryOnPrimaryException30.getIndex();
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable[] throwableArray34 = retryOnPrimaryException30.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.String str36 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId39 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "retry_on_primary_exception" + "'", str36, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNull(shardId39);
    }

    @Test
    public void test2201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2201");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException4.getHeaderKeys();
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getHeader("[][[][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException12 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException4, streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test2202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2202");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable6 = retryOnPrimaryException2.getRootCause();
        java.lang.String str7 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        java.lang.String str9 = retryOnPrimaryException2.toString();
        java.lang.String str10 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException2.getHeader("[[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str9, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test2203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2203");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException2.setIndex(index22);
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException2.status();
        org.elasticsearch.rest.RestStatus restStatus25 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus25 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus25.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2204");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        java.lang.Throwable throwable10 = retryOnPrimaryException9.unwrapCause();
        java.lang.String[] strArray14 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        retryOnPrimaryException9.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList15);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        java.lang.String[] strArray28 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        retryOnPrimaryException9.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray28);
        retryOnPrimaryException4.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException34.getHeaderKeys();
        java.util.Set<java.lang.String> strSet36 = retryOnPrimaryException34.getHeaderKeys();
        java.lang.Throwable[] throwableArray37 = retryOnPrimaryException34.getSuppressed();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException34);
        retryOnPrimaryException34.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 10);
        retryOnPrimaryException34.setShard("", (int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(throwableArray37);
    }

    @Test
    public void test2205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2205");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "retry_on_primary_exception");
        java.lang.String str14 = retryOnPrimaryException13.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str25 = retryOnPrimaryException21.getDetailedMessage();
        java.lang.Throwable throwable26 = retryOnPrimaryException21.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable26);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        retryOnPrimaryException31.setIndex("");
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = retryOnPrimaryException31.guessRootCauses();
        java.util.Set<java.lang.String> strSet36 = retryOnPrimaryException31.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        retryOnPrimaryException40.setIndex("");
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException40.setResources("", strArray49);
        boolean boolean51 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "hi!");
        retryOnPrimaryException55.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "rest.exception.cause.skip");
        retryOnPrimaryException62.setIndex("");
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException62.setResources("", strArray71);
        retryOnPrimaryException55.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray71);
        retryOnPrimaryException40.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray71);
        retryOnPrimaryException31.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray71);
        retryOnPrimaryException27.setResources("hi!", strArray71);
        retryOnPrimaryException13.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray71);
        retryOnPrimaryException4.setResources("RetryOnPrimaryException[]", strArray71);
        java.util.List<java.lang.String> strList80 = retryOnPrimaryException4.getHeader("[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[] RetryOnPrimaryException[rest.exception.cause.skip]]");
        org.elasticsearch.index.shard.ShardId shardId81 = retryOnPrimaryException4.getShardId();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str14, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNull(strList80);
        org.junit.Assert.assertNull(shardId81);
    }

    @Test
    public void test2206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2206");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.Index index16 = retryOnPrimaryException4.getIndex();
        java.lang.Throwable throwable17 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str25 = retryOnPrimaryException21.getDetailedMessage();
        java.lang.Throwable throwable26 = retryOnPrimaryException21.unwrapCause();
        java.util.List<java.lang.String> strList28 = retryOnPrimaryException21.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException21.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        java.lang.Throwable throwable46 = retryOnPrimaryException45.unwrapCause();
        java.lang.String[] strArray50 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        retryOnPrimaryException45.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList51);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        java.lang.String[] strArray64 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException57.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray64);
        retryOnPrimaryException45.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray64);
        retryOnPrimaryException40.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray64);
        retryOnPrimaryException32.setResources("retry_on_primary_exception", strArray64);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray64);
        java.util.Set<java.lang.String> strSet70 = retryOnPrimaryException4.getHeaderKeys();
        retryOnPrimaryException4.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray73 = retryOnPrimaryException4.guessRootCauses();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strSet70);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray73);
    }

    @Test
    public void test2207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2207");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.Index index27 = retryOnPrimaryException24.getIndex();
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException24.getHeaderKeys();
        java.lang.String str29 = retryOnPrimaryException24.getDetailedMessage();
        java.lang.Class<?> wildcardClass30 = retryOnPrimaryException24.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str29, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test2208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2208");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", throwable2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "hi!");
        retryOnPrimaryException9.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str13 = retryOnPrimaryException9.getDetailedMessage();
        java.lang.Throwable throwable14 = retryOnPrimaryException9.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable14);
        org.elasticsearch.index.Index index16 = retryOnPrimaryException15.getIndex();
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException15.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray30);
        retryOnPrimaryException3.addHeader("retry_on_primary_exception", strArray30);
        java.lang.String str34 = retryOnPrimaryException3.toString();
        org.elasticsearch.index.Index index35 = retryOnPrimaryException3.getIndex();
        org.elasticsearch.rest.RestStatus restStatus36 = retryOnPrimaryException3.status();
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable14.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "RetryOnPrimaryException[rest.exception.stacktrace.skip]" + "'", str34, "RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.junit.Assert.assertNull(index35);
        org.junit.Assert.assertTrue("'" + restStatus36 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus36.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2209");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Throwable throwable10 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Class<?> wildcardClass12 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test2210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2210");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("", strArray28);
        retryOnPrimaryException12.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        java.lang.Throwable[] throwableArray31 = retryOnPrimaryException12.getSuppressed();
        java.lang.String[] strArray38 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("rest.exception.cause.skip", strArray38);
        retryOnPrimaryException2.addHeader("", strArray38);
        java.lang.Throwable[] throwableArray41 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str42 = retryOnPrimaryException2.getDetailedMessage();
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Class<?> wildcardClass44 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str42, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test2211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2211");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test2212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2212");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        retryOnPrimaryException18.setIndex("");
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException18.setResources("", strArray27);
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException18);
        java.lang.String str30 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        retryOnPrimaryException34.setIndex("");
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException34.setResources("", strArray43);
        boolean boolean45 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "hi!");
        retryOnPrimaryException49.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "rest.exception.cause.skip");
        retryOnPrimaryException56.setIndex("");
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException56.setResources("", strArray65);
        retryOnPrimaryException49.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray65);
        retryOnPrimaryException34.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray65);
        org.elasticsearch.rest.RestStatus restStatus69 = retryOnPrimaryException34.status();
        java.util.List<java.lang.String> strList70 = retryOnPrimaryException34.getResourceId();
        retryOnPrimaryException18.addHeader("rest.exception.stacktrace.skip", strList70);
        retryOnPrimaryException2.addHeader("rest.exception.stacktrace.skip", strList70);
        org.elasticsearch.common.io.stream.StreamInput streamInput73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException2, streamInput73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "retry_on_primary_exception" + "'", str30, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + restStatus69 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus69.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strList70);
    }

    @Test
    public void test2213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2213");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = retryOnPrimaryException14.guessRootCauses();
        java.util.Set<java.lang.String> strSet19 = retryOnPrimaryException14.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException23.setResources("", strArray32);
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "hi!");
        retryOnPrimaryException38.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        retryOnPrimaryException45.setIndex("");
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException45.setResources("", strArray54);
        retryOnPrimaryException38.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray54);
        retryOnPrimaryException23.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray54);
        retryOnPrimaryException14.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray54);
        retryOnPrimaryException10.setResources("hi!", strArray54);
        org.elasticsearch.common.io.stream.StreamInput streamInput60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException10, streamInput60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strArray54);
    }

    @Test
    public void test2214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2214");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str6 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str6, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2215");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index27 = retryOnPrimaryException26.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.rest.RestStatus restStatus29 = retryOnPrimaryException4.status();
        java.lang.Throwable throwable30 = retryOnPrimaryException4.unwrapCause();
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException4.getResourceId();
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException4.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException4.getHeaderKeys();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertTrue("'" + restStatus29 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus29.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable30.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strList31);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertNotNull(strSet34);
    }

    @Test
    public void test2216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2216");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.getResourceType();
        retryOnPrimaryException4.setIndex("");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId11 = retryOnPrimaryException4.getShardId();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNull(shardId11);
    }

    @Test
    public void test2217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2217");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.Throwable[] throwableArray7 = retryOnPrimaryException4.getSuppressed();
        java.lang.String[] strArray12 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException4.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray12);
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable15 = retryOnPrimaryException4.unwrapCause();
        java.lang.String str16 = retryOnPrimaryException4.getResourceType();
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable18 = retryOnPrimaryException4.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2218");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        java.lang.String[] strArray34 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        retryOnPrimaryException2.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList35);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        retryOnPrimaryException40.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        retryOnPrimaryException47.setIndex("");
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException47.setResources("", strArray56);
        retryOnPrimaryException40.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray56);
        java.lang.String str59 = retryOnPrimaryException40.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index63 = retryOnPrimaryException62.getIndex();
        retryOnPrimaryException40.addSuppressed((java.lang.Throwable) retryOnPrimaryException62);
        org.elasticsearch.index.Index index65 = null;
        retryOnPrimaryException40.setIndex(index65);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        java.lang.Throwable throwable68 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable70 = org.elasticsearch.ElasticsearchException.writeStackTraces(throwable68, streamOutput69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str59, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index63);
        org.junit.Assert.assertNotNull(throwable68);
        org.junit.Assert.assertEquals(throwable68.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable68.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable68.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2219");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException2.status();
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamInput streamInput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception12 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException2, streamInput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test2220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2220");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException10.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        java.lang.String str16 = retryOnPrimaryException10.getDetailedMessage();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str16, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test2221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2221");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException2.status();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable22 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable23 = retryOnPrimaryException2.getRootCause();
        java.lang.String str24 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable23);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "retry_on_primary_exception" + "'", str24, "retry_on_primary_exception");
    }

    @Test
    public void test2222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2222");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str25 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setShard("rest.exception.stacktrace.skip", 100);
        java.util.Set<java.lang.String> strSet29 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str25, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet29);
    }

    @Test
    public void test2223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2223");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str28 = retryOnPrimaryException24.getDetailedMessage();
        java.lang.Throwable throwable29 = retryOnPrimaryException24.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable29);
        org.elasticsearch.index.Index index31 = retryOnPrimaryException30.getIndex();
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable[] throwableArray34 = retryOnPrimaryException30.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        retryOnPrimaryException2.setIndex("hi!");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        retryOnPrimaryException41.setIndex("");
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException41.setResources("", strArray50);
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        retryOnPrimaryException55.setIndex("");
        java.lang.Throwable[] throwableArray58 = retryOnPrimaryException55.getSuppressed();
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException55);
        retryOnPrimaryException41.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String str64 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setShard("retry_on_primary_exception", (int) ' ');
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception][[retry_on_primary_exception][32]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str64, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2224");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException13.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str17 = retryOnPrimaryException13.getDetailedMessage();
        java.lang.Throwable throwable18 = retryOnPrimaryException13.unwrapCause();
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException13.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable throwable21 = retryOnPrimaryException13.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException13.status();
        java.lang.Throwable throwable23 = retryOnPrimaryException13.getRootCause();
        java.lang.Throwable throwable24 = retryOnPrimaryException13.unwrapCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.String str26 = retryOnPrimaryException13.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = retryOnPrimaryException13.guessRootCauses();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str17, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable21.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str26, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
    }

    @Test
    public void test2225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2225");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable28 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException2.getHeader("[RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput31 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList30);
    }

    @Test
    public void test2226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2226");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException9.getHeaderKeys();
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException9.getHeaderKeys();
        java.lang.Throwable[] throwableArray12 = retryOnPrimaryException9.getSuppressed();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException9.getHeader("rest.exception.cause.skip");
        java.lang.String str15 = retryOnPrimaryException9.getDetailedMessage();
        retryOnPrimaryException9.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable18 = retryOnPrimaryException9.getRootCause();
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str20 = retryOnPrimaryException9.toString();
        java.lang.String str21 = retryOnPrimaryException9.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Class<?> wildcardClass23 = retryOnPrimaryException9.getClass();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str20, "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str21, "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2227");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = retryOnPrimaryException14.guessRootCauses();
        java.util.Set<java.lang.String> strSet19 = retryOnPrimaryException14.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException23.setResources("", strArray32);
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "hi!");
        retryOnPrimaryException38.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        retryOnPrimaryException45.setIndex("");
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException45.setResources("", strArray54);
        retryOnPrimaryException38.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray54);
        retryOnPrimaryException23.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray54);
        retryOnPrimaryException14.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray54);
        retryOnPrimaryException10.setResources("hi!", strArray54);
        boolean boolean60 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        java.util.Set<java.lang.String> strSet61 = retryOnPrimaryException10.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException63 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException10, streamOutput62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strSet61);
    }

    @Test
    public void test2228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2228");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str4 = retryOnPrimaryException2.getResourceType();
        java.lang.String str5 = retryOnPrimaryException2.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str5, "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2229");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.Index index14 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        java.lang.String str16 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable18 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str16, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2230");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException14.setResources("", strArray23);
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String str26 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.Throwable throwable27 = retryOnPrimaryException14.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str30 = retryOnPrimaryException2.toString();
        java.lang.String str31 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        retryOnPrimaryException34.setIndex("");
        java.lang.Throwable[] throwableArray37 = retryOnPrimaryException34.getSuppressed();
        java.lang.String[] strArray42 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException34.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray42);
        java.util.Set<java.lang.String> strSet44 = retryOnPrimaryException34.getHeaderKeys();
        retryOnPrimaryException34.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = retryOnPrimaryException34.guessRootCauses();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.common.io.stream.StreamInput streamInput49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException50 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException34, streamInput49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "retry_on_primary_exception" + "'", str26, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str30, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
    }

    @Test
    public void test2231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2231");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId22 = retryOnPrimaryException2.getShardId();
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str24 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str24, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2232");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException2.status();
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2233");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException4.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        java.lang.String str10 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "retry_on_primary_exception");
        java.lang.String str16 = retryOnPrimaryException15.toString();
        org.elasticsearch.index.Index index17 = null;
        retryOnPrimaryException15.setIndex(index17);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        java.lang.String[] strArray29 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray29);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        retryOnPrimaryException22.setShard(shardId31);
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException22.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "hi!");
        retryOnPrimaryException39.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str43 = retryOnPrimaryException39.getDetailedMessage();
        java.lang.Throwable throwable44 = retryOnPrimaryException39.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable44);
        org.elasticsearch.index.Index index46 = retryOnPrimaryException45.getIndex();
        java.lang.String str47 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException45);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "rest.exception.cause.skip");
        retryOnPrimaryException51.setIndex("");
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException51.setResources("", strArray60);
        retryOnPrimaryException45.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray60);
        retryOnPrimaryException22.addHeader("retry_on_primary_exception", strArray60);
        retryOnPrimaryException15.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray60);
        retryOnPrimaryException4.setResources("retry_on_primary_exception", strArray60);
        org.elasticsearch.index.shard.ShardId shardId66 = retryOnPrimaryException4.getShardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str16, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str43, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable44.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "retry_on_primary_exception" + "'", str47, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNull(shardId66);
    }

    @Test
    public void test2234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2234");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        java.lang.Throwable throwable41 = retryOnPrimaryException40.unwrapCause();
        java.lang.String[] strArray45 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        retryOnPrimaryException40.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList46);
        org.elasticsearch.rest.RestStatus restStatus49 = retryOnPrimaryException40.status();
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        java.lang.String str51 = retryOnPrimaryException24.toString();
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        java.lang.String[] strArray62 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException55.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        retryOnPrimaryException24.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray62);
        java.lang.Throwable throwable65 = retryOnPrimaryException24.unwrapCause();
        boolean boolean66 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable65);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + restStatus49 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus49.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str51, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(throwable65);
        org.junit.Assert.assertEquals(throwable65.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable65.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable65.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
    }

    @Test
    public void test2235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2235");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("hi!", (int) (short) 1);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index13 = retryOnPrimaryException12.getIndex();
        java.lang.String str14 = retryOnPrimaryException12.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "hi!");
        retryOnPrimaryException18.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.cause.skip");
        retryOnPrimaryException25.setIndex("");
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException25.setResources("", strArray34);
        retryOnPrimaryException18.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray34);
        retryOnPrimaryException12.setResources("", strArray34);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strArray34);
        java.lang.String str39 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "hi!");
        retryOnPrimaryException42.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        retryOnPrimaryException42.setShard(shardId46);
        java.util.Set<java.lang.String> strSet48 = retryOnPrimaryException42.getHeaderKeys();
        java.lang.Throwable throwable49 = retryOnPrimaryException42.unwrapCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException42);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(index13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str14, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str39, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable49.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2236");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId47 = retryOnPrimaryException2.getShardId();
        java.lang.String str48 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str48, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2237");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException2.status();
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", 0);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet31 = retryOnPrimaryException30.getHeaderKeys();
        java.util.Set<java.lang.String> strSet32 = retryOnPrimaryException30.getHeaderKeys();
        java.lang.Throwable[] throwableArray33 = retryOnPrimaryException30.getSuppressed();
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException30.getHeader("rest.exception.cause.skip");
        java.lang.String str36 = retryOnPrimaryException30.getDetailedMessage();
        retryOnPrimaryException30.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable39 = retryOnPrimaryException30.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId40 = retryOnPrimaryException30.getShardId();
        java.lang.String str41 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId42 = retryOnPrimaryException30.getShardId();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet47 = retryOnPrimaryException46.getHeaderKeys();
        retryOnPrimaryException46.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "");
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException46.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "rest.exception.cause.skip");
        java.lang.Throwable throwable60 = retryOnPrimaryException59.unwrapCause();
        java.lang.String[] strArray64 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        retryOnPrimaryException59.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList65);
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "rest.exception.cause.skip");
        java.lang.String[] strArray78 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException71.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray78);
        retryOnPrimaryException59.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray78);
        retryOnPrimaryException46.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray78);
        retryOnPrimaryException30.setResources("RetryOnPrimaryException[retry_on_primary_exception]", strArray78);
        retryOnPrimaryException2.setResources("[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]", strArray78);
        java.lang.Class<?> wildcardClass84 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str36, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable39.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "retry_on_primary_exception" + "'", str41, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId42);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(throwable60);
        org.junit.Assert.assertEquals(throwable60.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable60.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable60.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test2238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2238");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        retryOnPrimaryException15.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException22.setResources("", strArray31);
        retryOnPrimaryException15.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray31);
        java.lang.String str34 = retryOnPrimaryException15.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index38 = retryOnPrimaryException37.getIndex();
        retryOnPrimaryException15.addSuppressed((java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.rest.RestStatus restStatus40 = retryOnPrimaryException15.status();
        java.lang.Throwable throwable41 = retryOnPrimaryException15.unwrapCause();
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException15.getResourceId();
        java.util.List<java.lang.String> strList43 = retryOnPrimaryException15.getResourceId();
        retryOnPrimaryException11.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strList43);
        java.util.List<java.lang.String> strList46 = retryOnPrimaryException11.getHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]");
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        retryOnPrimaryException49.setIndex("");
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException49.setResources("", strArray58);
        boolean boolean60 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.String str61 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.Throwable throwable62 = retryOnPrimaryException49.getRootCause();
        boolean boolean63 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException49);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray64 = retryOnPrimaryException49.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId65 = retryOnPrimaryException49.getShardId();
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "rest.exception.cause.skip");
        java.lang.String[] strArray78 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException71.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray78);
        org.elasticsearch.index.shard.ShardId shardId80 = null;
        retryOnPrimaryException71.setShard(shardId80);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray82 = retryOnPrimaryException71.guessRootCauses();
        java.lang.String str83 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException71);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException84 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException71);
        java.lang.Throwable throwable85 = retryOnPrimaryException71.unwrapCause();
        retryOnPrimaryException71.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList88 = retryOnPrimaryException71.getResourceId();
        retryOnPrimaryException49.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[rest.exception.cause.skip]", strList88);
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException49);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException11.writeTo(streamOutput91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str34, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index38);
        org.junit.Assert.assertTrue("'" + restStatus40 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus40.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable41.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "retry_on_primary_exception" + "'", str61, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable62);
        org.junit.Assert.assertEquals(throwable62.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable62.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable62.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray64);
        org.junit.Assert.assertNull(shardId65);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray82);
        org.junit.Assert.assertEquals("'" + str83 + "' != '" + "retry_on_primary_exception" + "'", str83, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable85);
        org.junit.Assert.assertEquals(throwable85.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable85.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable85.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList88);
    }

    @Test
    public void test2239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2239");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException4.status();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index13 = retryOnPrimaryException12.getIndex();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException12.getResourceId();
        java.lang.Throwable throwable15 = retryOnPrimaryException12.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet19 = retryOnPrimaryException18.getHeaderKeys();
        retryOnPrimaryException18.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "");
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        org.elasticsearch.index.Index index32 = null;
        retryOnPrimaryException29.setIndex(index32);
        org.elasticsearch.rest.RestStatus restStatus34 = retryOnPrimaryException29.status();
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        throwable15.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.rest.RestStatus restStatus38 = retryOnPrimaryException29.status();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index13);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + restStatus34 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus34.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus38 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus38.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2240");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException6.setIndex(index7);
        org.elasticsearch.index.Index index9 = null;
        retryOnPrimaryException6.setIndex(index9);
        java.lang.Class<?> wildcardClass11 = retryOnPrimaryException6.getClass();
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2241");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str9 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str10 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str10, "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2242");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str13 = retryOnPrimaryException10.getResourceType();
        java.lang.String str14 = retryOnPrimaryException10.getDetailedMessage();
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException10.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException10.status();
        java.lang.String str17 = retryOnPrimaryException10.toString();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str14, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str17, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test2243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2243");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray10);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        retryOnPrimaryException2.setShard("[] RetryOnPrimaryException[rest.exception.cause.skip]", (int) 'a');
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("", strArray29);
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str32 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        retryOnPrimaryException20.setShard(shardId33);
        org.elasticsearch.index.shard.ShardId shardId35 = retryOnPrimaryException20.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException20);
        retryOnPrimaryException20.setShard("hi!", (int) (byte) 0);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder42 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params43 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder44 = retryOnPrimaryException20.toXContent(xContentBuilder42, params43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "retry_on_primary_exception" + "'", str32, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertNotNull(params43);
    }

    @Test
    public void test2244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2244");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.Index index14 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str23 = retryOnPrimaryException19.getDetailedMessage();
        java.lang.Throwable throwable24 = retryOnPrimaryException19.unwrapCause();
        java.util.List<java.lang.String> strList26 = retryOnPrimaryException19.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException19.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.Throwable[] throwableArray33 = retryOnPrimaryException30.getSuppressed();
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        java.lang.Throwable throwable44 = retryOnPrimaryException43.unwrapCause();
        java.lang.String[] strArray48 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        retryOnPrimaryException43.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList49);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        java.lang.String[] strArray62 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException55.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        retryOnPrimaryException43.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray62);
        retryOnPrimaryException38.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        retryOnPrimaryException30.setResources("retry_on_primary_exception", strArray62);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        java.util.Set<java.lang.String> strSet68 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray69 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str70 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strSet68);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str70, "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2245");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "retry_on_primary_exception");
        java.lang.String str7 = retryOnPrimaryException6.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str9 = retryOnPrimaryException6.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        java.lang.Throwable throwable13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.stacktrace.skip", throwable13);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet19 = retryOnPrimaryException18.getHeaderKeys();
        retryOnPrimaryException18.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.String str45 = retryOnPrimaryException26.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index49 = retryOnPrimaryException48.getIndex();
        retryOnPrimaryException26.addSuppressed((java.lang.Throwable) retryOnPrimaryException48);
        retryOnPrimaryException48.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet57 = retryOnPrimaryException56.getHeaderKeys();
        java.lang.Throwable throwable58 = retryOnPrimaryException56.getRootCause();
        java.lang.String[] strArray64 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        retryOnPrimaryException56.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList65);
        retryOnPrimaryException48.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList65);
        retryOnPrimaryException18.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList65);
        retryOnPrimaryException14.addHeader("hi!", (java.util.List<java.lang.String>) strList65);
        retryOnPrimaryException6.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList65);
        java.lang.String str72 = retryOnPrimaryException6.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str7, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str45, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index49);
        org.junit.Assert.assertNotNull(strSet57);
        org.junit.Assert.assertNotNull(throwable58);
        org.junit.Assert.assertEquals(throwable58.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable58.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable58.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str72, "RetryOnPrimaryException[retry_on_primary_exception]");
    }

    @Test
    public void test2246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2246");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        java.lang.String str33 = retryOnPrimaryException9.getDetailedMessage();
        java.lang.Throwable throwable34 = retryOnPrimaryException9.unwrapCause();
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException9.getResourceId();
        retryOnPrimaryException9.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];");
        org.elasticsearch.rest.RestStatus restStatus38 = retryOnPrimaryException9.status();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index42 = retryOnPrimaryException41.getIndex();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        retryOnPrimaryException46.setIndex("");
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        retryOnPrimaryException52.setIndex("");
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException52.setResources("", strArray61);
        java.lang.String str63 = retryOnPrimaryException52.toString();
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String str65 = retryOnPrimaryException46.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        retryOnPrimaryException46.setShard(shardId66);
        java.lang.String[] strArray78 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        retryOnPrimaryException46.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException41.addHeader("", (java.util.List<java.lang.String>) strList79);
        org.elasticsearch.index.shard.ShardId shardId83 = null;
        org.elasticsearch.index.shard.ShardId shardId85 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException87 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId85, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList88 = retryOnPrimaryException87.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException89 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId83, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException87);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray90 = retryOnPrimaryException89.guessRootCauses();
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException89);
        retryOnPrimaryException89.setShard("[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", 10);
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException89);
        java.util.Set<java.lang.String> strSet96 = retryOnPrimaryException89.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertTrue("'" + restStatus38 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus38.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index42);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str63, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray90);
        org.junit.Assert.assertNotNull(strSet96);
    }

    @Test
    public void test2247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2247");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable[] throwableArray7 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str12 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str12, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2248");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index9 = retryOnPrimaryException8.getIndex();
        java.lang.String str10 = retryOnPrimaryException8.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        retryOnPrimaryException8.setResources("", strArray30);
        retryOnPrimaryException2.setResources("", strArray30);
        java.lang.String str35 = retryOnPrimaryException2.toString();
        org.elasticsearch.rest.RestStatus restStatus36 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus36 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus36.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2249");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        java.lang.Throwable throwable9 = retryOnPrimaryException8.unwrapCause();
        retryOnPrimaryException2.addSuppressed(throwable9);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable9);
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable9);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2250");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("hi!", (int) (short) 1);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException2.status();
        java.lang.String str11 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException17.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str21 = retryOnPrimaryException17.getDetailedMessage();
        java.lang.Throwable throwable22 = retryOnPrimaryException17.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable22);
        org.elasticsearch.index.Index index24 = null;
        retryOnPrimaryException23.setIndex(index24);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index30 = retryOnPrimaryException29.getIndex();
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException29.getResourceId();
        java.lang.Throwable throwable32 = retryOnPrimaryException29.unwrapCause();
        java.util.List<java.lang.String> strList34 = retryOnPrimaryException29.getHeader("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        retryOnPrimaryException37.setIndex("");
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException37.setResources("", strArray46);
        java.lang.String str48 = retryOnPrimaryException37.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = retryOnPrimaryException37.guessRootCauses();
        java.util.Set<java.lang.String> strSet50 = retryOnPrimaryException37.getHeaderKeys();
        java.lang.Throwable throwable51 = retryOnPrimaryException37.getRootCause();
        retryOnPrimaryException29.addSuppressed(throwable51);
        org.elasticsearch.index.Index index53 = retryOnPrimaryException29.getIndex();
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        retryOnPrimaryException57.setIndex("");
        boolean boolean60 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException57);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray61 = retryOnPrimaryException57.guessRootCauses();
        boolean boolean62 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException57);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray63 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException57);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "rest.exception.cause.skip");
        java.lang.String[] strArray74 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException67.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray74);
        retryOnPrimaryException57.setResources("rest.exception.stacktrace.skip", strArray74);
        retryOnPrimaryException29.addHeader("rest.exception.cause.skip", strArray74);
        retryOnPrimaryException23.setResources("RetryOnPrimaryException[rest.exception.cause.skip]", strArray74);
        retryOnPrimaryException2.setResources("rest.exception.cause.skip", strArray74);
        java.util.Set<java.lang.String> strSet80 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str11, "[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable22.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index30);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str48, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(throwable51);
        org.junit.Assert.assertEquals(throwable51.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable51.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable51.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index53);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray63);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strSet80);
    }

    @Test
    public void test2251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2251");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray9 = retryOnPrimaryException2.getSuppressed();
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test2252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2252");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("", strArray28);
        retryOnPrimaryException12.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        java.lang.Throwable[] throwableArray31 = retryOnPrimaryException12.getSuppressed();
        java.lang.String[] strArray38 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("rest.exception.cause.skip", strArray38);
        retryOnPrimaryException2.addHeader("", strArray38);
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str44 = retryOnPrimaryException2.toString();
        java.lang.String str45 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str44, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test2253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2253");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (short) 0);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str18 = retryOnPrimaryException2.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str18, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2254");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException10.setIndex(index14);
        org.elasticsearch.index.Index index16 = retryOnPrimaryException10.getIndex();
        java.lang.String str17 = retryOnPrimaryException10.getDetailedMessage();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str17, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test2255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2255");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("hi!", (int) (short) 1);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException2.status();
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable14 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test2256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2256");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException24.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable throwable34 = retryOnPrimaryException32.getRootCause();
        java.lang.String[] strArray40 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        retryOnPrimaryException32.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList41);
        retryOnPrimaryException24.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList41);
        java.util.List<java.lang.String> strList46 = retryOnPrimaryException24.getHeader("hi!");
        org.elasticsearch.index.shard.ShardId shardId47 = retryOnPrimaryException24.getShardId();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNull(shardId47);
    }

    @Test
    public void test2257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2257");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        java.lang.String str9 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
    }

    @Test
    public void test2258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2258");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.cause.skip");
        retryOnPrimaryException6.setIndex("");
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException6.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException13.setIndex(index16);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException13.status();
        java.lang.Throwable throwable19 = retryOnPrimaryException13.getRootCause();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId23 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.shard.ShardId shardId24 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertNull(shardId24);
    }

    @Test
    public void test2259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2259");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException2.getShardId();
        java.lang.String[] strArray10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];", strArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNull(shardId8);
    }

    @Test
    public void test2260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2260");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str28 = retryOnPrimaryException24.getDetailedMessage();
        java.lang.Throwable throwable29 = retryOnPrimaryException24.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable29);
        org.elasticsearch.index.Index index31 = retryOnPrimaryException30.getIndex();
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable[] throwableArray34 = retryOnPrimaryException30.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        retryOnPrimaryException2.setIndex("hi!");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        retryOnPrimaryException41.setIndex("");
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException41.setResources("", strArray50);
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        retryOnPrimaryException55.setIndex("");
        java.lang.Throwable[] throwableArray58 = retryOnPrimaryException55.getSuppressed();
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException55);
        retryOnPrimaryException41.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String str64 = retryOnPrimaryException41.getDetailedMessage();
        boolean boolean65 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException41);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str64, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
    }

    @Test
    public void test2261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2261");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray10);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException2.status();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        retryOnPrimaryException20.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.cause.skip");
        retryOnPrimaryException27.setIndex("");
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException27.setResources("", strArray36);
        retryOnPrimaryException20.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray36);
        java.lang.String str39 = retryOnPrimaryException20.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index43 = retryOnPrimaryException42.getIndex();
        retryOnPrimaryException20.addSuppressed((java.lang.Throwable) retryOnPrimaryException42);
        java.lang.Throwable throwable45 = retryOnPrimaryException42.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index50 = retryOnPrimaryException49.getIndex();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        retryOnPrimaryException54.setIndex("");
        boolean boolean57 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException54);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "rest.exception.cause.skip");
        retryOnPrimaryException60.setIndex("");
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException60.setResources("", strArray69);
        java.lang.String str71 = retryOnPrimaryException60.toString();
        retryOnPrimaryException54.addSuppressed((java.lang.Throwable) retryOnPrimaryException60);
        java.lang.String str73 = retryOnPrimaryException54.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        retryOnPrimaryException54.setShard(shardId74);
        java.lang.String[] strArray86 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        retryOnPrimaryException54.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList87);
        retryOnPrimaryException49.addHeader("", (java.util.List<java.lang.String>) strList87);
        retryOnPrimaryException42.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList87);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", (java.util.List<java.lang.String>) strList87);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray93 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str39, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index43);
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str71, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray93);
    }

    @Test
    public void test2262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2262");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", (int) (short) 0);
        java.lang.Throwable throwable13 = retryOnPrimaryException2.getRootCause();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException2.status();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][0]] RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][0]] RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable13.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][0]] RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2263");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Class<?> wildcardClass34 = retryOnPrimaryException9.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test2264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2264");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        java.lang.String str14 = retryOnPrimaryException2.getResourceType();
        java.lang.String str15 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Class<?> wildcardClass17 = elasticsearchExceptionArray16.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2265");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException11.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException11.setShard(shardId15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable throwable18 = retryOnPrimaryException11.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = retryOnPrimaryException11.guessRootCauses();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "retry_on_primary_exception");
        java.lang.String str24 = retryOnPrimaryException23.toString();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException28);
        java.lang.Throwable throwable41 = retryOnPrimaryException28.getRootCause();
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.index.shard.ShardId shardId43 = retryOnPrimaryException28.getShardId();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "hi!");
        retryOnPrimaryException47.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        retryOnPrimaryException54.setIndex("");
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException54.setResources("", strArray63);
        retryOnPrimaryException47.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray63);
        java.lang.String str66 = retryOnPrimaryException47.getDetailedMessage();
        java.lang.String str67 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String str68 = retryOnPrimaryException47.getDetailedMessage();
        org.elasticsearch.index.Index index69 = null;
        retryOnPrimaryException47.setIndex(index69);
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "rest.exception.cause.skip");
        retryOnPrimaryException74.setIndex("");
        java.lang.Throwable[] throwableArray77 = retryOnPrimaryException74.getSuppressed();
        java.lang.String[] strArray82 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException74.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray82);
        retryOnPrimaryException47.addHeader("hi!", strArray82);
        retryOnPrimaryException28.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray82);
        retryOnPrimaryException23.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray82);
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.rest.RestStatus restStatus88 = retryOnPrimaryException11.status();
        boolean boolean89 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String[] strArray91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException11.setResources("[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[retry_on_primary_exception]", strArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str24, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str66, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "retry_on_primary_exception" + "'", str67, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str68, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + restStatus88 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus88.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
    }

    @Test
    public void test2266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2266");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable23 = retryOnPrimaryException2.getRootCause();
        java.util.Set<java.lang.String> strSet24 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str25 = retryOnPrimaryException2.getResourceType();
        java.lang.String str26 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str25, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "retry_on_primary_exception" + "'", str26, "retry_on_primary_exception");
    }

    @Test
    public void test2267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2267");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        java.lang.String str26 = retryOnPrimaryException15.toString();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String str29 = retryOnPrimaryException2.toString();
        java.lang.String str30 = retryOnPrimaryException2.toString();
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (int) (byte) 100);
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str26, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str29, "[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str30, "[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
    }

    @Test
    public void test2268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2268");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index14 = retryOnPrimaryException13.getIndex();
        java.lang.String str15 = retryOnPrimaryException13.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        retryOnPrimaryException13.setResources("", strArray35);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException13);
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException13);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
    }

    @Test
    public void test2269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2269");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.cause.skip");
        retryOnPrimaryException6.setIndex("");
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!", (java.lang.Throwable) retryOnPrimaryException6);
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException6.getHeaderKeys();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException6.getHeader("rest.exception.cause.skip");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNull(strList16);
    }

    @Test
    public void test2270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2270");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.Index index16 = retryOnPrimaryException4.getIndex();
        java.lang.Throwable throwable17 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str25 = retryOnPrimaryException21.getDetailedMessage();
        java.lang.Throwable throwable26 = retryOnPrimaryException21.unwrapCause();
        java.util.List<java.lang.String> strList28 = retryOnPrimaryException21.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException21.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        java.lang.Throwable throwable46 = retryOnPrimaryException45.unwrapCause();
        java.lang.String[] strArray50 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        retryOnPrimaryException45.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList51);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        java.lang.String[] strArray64 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException57.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray64);
        retryOnPrimaryException45.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray64);
        retryOnPrimaryException40.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray64);
        retryOnPrimaryException32.setResources("retry_on_primary_exception", strArray64);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray64);
        java.util.Set<java.lang.String> strSet70 = retryOnPrimaryException4.getHeaderKeys();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(strSet70);
    }

    @Test
    public void test2271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2271");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        retryOnPrimaryException11.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray42);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        java.util.Set<java.lang.String> strSet50 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet51 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str52 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean53 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable54 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.io.stream.StreamInput streamInput55 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable56 = org.elasticsearch.ElasticsearchException.readStackTrace(throwable54, streamInput55);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(strSet51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "retry_on_primary_exception" + "'", str52, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(throwable54);
        org.junit.Assert.assertEquals(throwable54.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable54.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable54.toString(), "[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2272");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index12 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNull(index12);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
    }

    @Test
    public void test2273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2273");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("", strArray21);
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String str24 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        retryOnPrimaryException12.setShard(shardId25);
        org.elasticsearch.index.shard.ShardId shardId27 = retryOnPrimaryException12.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String str29 = retryOnPrimaryException12.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = retryOnPrimaryException33.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        retryOnPrimaryException40.setIndex("");
        org.elasticsearch.index.Index index43 = null;
        retryOnPrimaryException40.setIndex(index43);
        org.elasticsearch.rest.RestStatus restStatus45 = retryOnPrimaryException40.status();
        java.lang.Throwable throwable46 = retryOnPrimaryException40.getRootCause();
        retryOnPrimaryException33.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        java.lang.Throwable throwable48 = retryOnPrimaryException33.unwrapCause();
        java.lang.String str49 = retryOnPrimaryException33.toString();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "hi!");
        retryOnPrimaryException53.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "rest.exception.cause.skip");
        retryOnPrimaryException60.setIndex("");
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException60.setResources("", strArray69);
        retryOnPrimaryException53.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray69);
        java.lang.String str72 = retryOnPrimaryException53.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException75 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId73, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index76 = retryOnPrimaryException75.getIndex();
        retryOnPrimaryException53.addSuppressed((java.lang.Throwable) retryOnPrimaryException75);
        org.elasticsearch.index.Index index78 = retryOnPrimaryException75.getIndex();
        org.elasticsearch.index.shard.ShardId shardId80 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException82 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId80, "rest.exception.cause.skip");
        retryOnPrimaryException82.setIndex("");
        java.lang.Throwable[] throwableArray85 = retryOnPrimaryException82.getSuppressed();
        java.lang.String[] strArray90 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException82.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray90);
        retryOnPrimaryException75.setResources("hi!", strArray90);
        retryOnPrimaryException33.addHeader("", strArray90);
        retryOnPrimaryException12.setResources("RetryOnPrimaryException[retry_on_primary_exception]", strArray90);
        retryOnPrimaryException2.setResources("[[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray90);
        boolean boolean96 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "retry_on_primary_exception" + "'", str24, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str29, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertTrue("'" + restStatus45 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus45.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable48);
        org.junit.Assert.assertEquals(throwable48.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable48.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable48.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str49, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str72, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index76);
        org.junit.Assert.assertNull(index78);
        org.junit.Assert.assertNotNull(throwableArray85);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
    }

    @Test
    public void test2274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2274");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", throwable2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException7.getHeaderKeys();
        retryOnPrimaryException7.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        retryOnPrimaryException15.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException22.setResources("", strArray31);
        retryOnPrimaryException15.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray31);
        java.lang.String str34 = retryOnPrimaryException15.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index38 = retryOnPrimaryException37.getIndex();
        retryOnPrimaryException15.addSuppressed((java.lang.Throwable) retryOnPrimaryException37);
        retryOnPrimaryException37.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet46 = retryOnPrimaryException45.getHeaderKeys();
        java.lang.Throwable throwable47 = retryOnPrimaryException45.getRootCause();
        java.lang.String[] strArray53 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        retryOnPrimaryException45.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList54);
        retryOnPrimaryException37.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList54);
        retryOnPrimaryException7.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList54);
        retryOnPrimaryException3.addHeader("hi!", (java.util.List<java.lang.String>) strList54);
        java.lang.String str60 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        org.elasticsearch.index.shard.ShardId shardId61 = retryOnPrimaryException3.getShardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput62 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException3.writeTo(streamOutput62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str34, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index38);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable47.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "retry_on_primary_exception" + "'", str60, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId61);
    }

    @Test
    public void test2275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2275");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray10);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException2.status();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder15 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params16 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder17 = retryOnPrimaryException2.toXContent(xContentBuilder15, params16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(params16);
    }

    @Test
    public void test2276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2276");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray48 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus49 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray50 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Throwable[] throwableArray51 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str52 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList54 = retryOnPrimaryException2.getHeader("[[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray48);
        org.junit.Assert.assertTrue("'" + restStatus49 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus49.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray50);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(strList54);
    }

    @Test
    public void test2277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2277");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException4.setIndex(index7);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getHeader("");
        java.lang.String str11 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        retryOnPrimaryException16.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException23.setResources("", strArray32);
        retryOnPrimaryException16.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray32);
        java.lang.String str35 = retryOnPrimaryException16.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index39 = retryOnPrimaryException38.getIndex();
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException38);
        retryOnPrimaryException38.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet47 = retryOnPrimaryException46.getHeaderKeys();
        java.lang.Throwable throwable48 = retryOnPrimaryException46.getRootCause();
        java.lang.String[] strArray54 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        retryOnPrimaryException46.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException38.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList55);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList55);
        java.util.List<java.lang.String> strList60 = retryOnPrimaryException4.getResourceId();
        retryOnPrimaryException4.setShard("rest.exception.stacktrace.skip", 10);
        java.lang.String str64 = retryOnPrimaryException4.getResourceType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str35, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index39);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNotNull(throwable48);
        org.junit.Assert.assertEquals(throwable48.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable48.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable48.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList60);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test2278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2278");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index9 = null;
        retryOnPrimaryException2.setIndex(index9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder14 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params15 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder16 = retryOnPrimaryException2.toXContent(xContentBuilder14, params15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str8, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(params15);
    }

    @Test
    public void test2279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2279");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException2.status();
        java.lang.String str9 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        java.lang.Throwable throwable14 = retryOnPrimaryException13.unwrapCause();
        java.lang.String[] strArray18 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        retryOnPrimaryException13.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList19);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList19);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Class<?> wildcardClass24 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "retry_on_primary_exception" + "'", str9, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2280");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        retryOnPrimaryException2.setShard(shardId25);
        java.lang.String str27 = retryOnPrimaryException2.getDetailedMessage();
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException2.getHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "rest.exception.cause.skip");
        retryOnPrimaryException35.setIndex("");
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException35);
        retryOnPrimaryException35.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "hi!", (java.lang.Throwable) retryOnPrimaryException35);
        java.util.Set<java.lang.String> strSet43 = retryOnPrimaryException35.getHeaderKeys();
        java.util.List<java.lang.String> strList45 = retryOnPrimaryException35.getHeader("rest.exception.cause.skip");
        org.elasticsearch.index.Index index46 = null;
        retryOnPrimaryException35.setIndex(index46);
        java.util.Set<java.lang.String> strSet48 = retryOnPrimaryException35.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        retryOnPrimaryException52.setIndex("");
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException52.setResources("", strArray61);
        boolean boolean63 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String str64 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException52);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        retryOnPrimaryException52.setShard(shardId65);
        org.elasticsearch.index.shard.ShardId shardId67 = retryOnPrimaryException52.getShardId();
        boolean boolean68 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException52);
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet73 = retryOnPrimaryException72.getHeaderKeys();
        java.lang.Throwable throwable74 = retryOnPrimaryException72.getRootCause();
        java.lang.String[] strArray80 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        retryOnPrimaryException72.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList81);
        retryOnPrimaryException52.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList81);
        retryOnPrimaryException35.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList81);
        retryOnPrimaryException2.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (java.util.List<java.lang.String>) strList81);
        java.lang.Throwable throwable87 = retryOnPrimaryException2.getRootCause();
        java.lang.Class<?> wildcardClass88 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "retry_on_primary_exception" + "'", str64, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertNotNull(throwable74);
        org.junit.Assert.assertEquals(throwable74.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable74.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable74.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(throwable87);
        org.junit.Assert.assertEquals(throwable87.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable87.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable87.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test2281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2281");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getResourceId();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException2.getResourceId();
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2282");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException11.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException11.guessRootCauses();
        retryOnPrimaryException11.setShard("[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (short) 100);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
    }

    @Test
    public void test2283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2283");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = retryOnPrimaryException2.getShardId();
        java.lang.Throwable[] throwableArray7 = retryOnPrimaryException2.getSuppressed();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test2284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2284");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.cause.skip");
        retryOnPrimaryException27.setIndex("");
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException27);
        retryOnPrimaryException27.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "hi!", (java.lang.Throwable) retryOnPrimaryException27);
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException27.getHeaderKeys();
        java.lang.String[] strArray50 = new java.lang.String[] { "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[rest.exception.cause.skip]", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[rest.exception.cause.skip]", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        retryOnPrimaryException27.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList51);
        retryOnPrimaryException2.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (java.util.List<java.lang.String>) strList51);
        org.elasticsearch.rest.RestStatus restStatus55 = retryOnPrimaryException2.status();
        java.lang.String str56 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + restStatus55 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus55.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "retry_on_primary_exception" + "'", str56, "retry_on_primary_exception");
    }

    @Test
    public void test2285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2285");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setIndex("[RetryOnPrimaryException[retry_on_primary_exception]][[RetryOnPrimaryException[retry_on_primary_exception]][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2286");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException7.unwrapCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException7.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray26);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNull(strList38);
    }

    @Test
    public void test2287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2287");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        retryOnPrimaryException8.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray24);
        java.lang.String str27 = retryOnPrimaryException8.getDetailedMessage();
        java.lang.String str28 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str29 = retryOnPrimaryException8.getDetailedMessage();
        org.elasticsearch.index.Index index30 = null;
        retryOnPrimaryException8.setIndex(index30);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "rest.exception.cause.skip");
        retryOnPrimaryException35.setIndex("");
        java.lang.Throwable[] throwableArray38 = retryOnPrimaryException35.getSuppressed();
        java.lang.String[] strArray43 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException35.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray43);
        retryOnPrimaryException8.addHeader("hi!", strArray43);
        retryOnPrimaryException2.addHeader("", strArray43);
        java.lang.Class<?> wildcardClass47 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "retry_on_primary_exception" + "'", str28, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str29, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2288");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException2.status();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable22 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable23 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable[] throwableArray24 = throwable23.getSuppressed();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray24);
    }

    @Test
    public void test2289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2289");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.Index index6 = null;
        retryOnPrimaryException4.setIndex(index6);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable9 = retryOnPrimaryException4.getRootCause();
        java.lang.Throwable throwable10 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        java.lang.String str33 = retryOnPrimaryException14.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index37 = retryOnPrimaryException36.getIndex();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "hi!");
        retryOnPrimaryException42.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        retryOnPrimaryException49.setIndex("");
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException49.setResources("", strArray58);
        retryOnPrimaryException42.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray58);
        java.lang.String str61 = retryOnPrimaryException42.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index65 = retryOnPrimaryException64.getIndex();
        retryOnPrimaryException42.addSuppressed((java.lang.Throwable) retryOnPrimaryException64);
        retryOnPrimaryException64.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet73 = retryOnPrimaryException72.getHeaderKeys();
        java.lang.Throwable throwable74 = retryOnPrimaryException72.getRootCause();
        java.lang.String[] strArray80 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        retryOnPrimaryException72.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList81);
        retryOnPrimaryException64.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList81);
        retryOnPrimaryException36.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList81);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[]", (java.util.List<java.lang.String>) strList81);
        java.lang.String str87 = retryOnPrimaryException4.getResourceType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index37);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str61, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index65);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertNotNull(throwable74);
        org.junit.Assert.assertEquals(throwable74.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable74.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable74.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test2290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2290");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        java.lang.Throwable throwable40 = retryOnPrimaryException39.unwrapCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        java.lang.String[] strArray45 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException39.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray45);
        retryOnPrimaryException39.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException39);
        retryOnPrimaryException39.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];");
        org.elasticsearch.common.io.stream.StreamInput streamInput52 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException53 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException39, streamInput52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.toString(), "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
    }

    @Test
    public void test2291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2291");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        java.lang.String str33 = retryOnPrimaryException9.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = retryOnPrimaryException9.getShardId();
        org.elasticsearch.rest.RestStatus restStatus35 = retryOnPrimaryException9.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = retryOnPrimaryException9.guessRootCauses();
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException9.getHeaderKeys();
        java.lang.String str38 = retryOnPrimaryException9.getResourceType();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertTrue("'" + restStatus35 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus35.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNull(str38);
    }

    @Test
    public void test2292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2292");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable11 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String str27 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        retryOnPrimaryException15.setShard(shardId28);
        org.elasticsearch.index.shard.ShardId shardId30 = retryOnPrimaryException15.getShardId();
        retryOnPrimaryException15.setShard("hi!", (int) '4');
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException37.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        retryOnPrimaryException37.setShard(shardId41);
        java.util.Set<java.lang.String> strSet43 = retryOnPrimaryException37.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        retryOnPrimaryException47.setIndex("");
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException47.setResources("", strArray56);
        retryOnPrimaryException37.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray56);
        retryOnPrimaryException15.setResources("rest.exception.stacktrace.skip", strArray56);
        retryOnPrimaryException2.addHeader("hi!", strArray56);
        java.lang.Throwable throwable61 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("[rest.exception.cause.skip] RetryOnPrimaryException[]");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput64 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException65 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamOutput64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[[rest.exception.cause.skip] RetryOnPrimaryException[]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "retry_on_primary_exception" + "'", str27, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(throwable61);
        org.junit.Assert.assertEquals(throwable61.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable61.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable61.toString(), "[[rest.exception.cause.skip] RetryOnPrimaryException[]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2293");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String str37 = retryOnPrimaryException24.getDetailedMessage();
        retryOnPrimaryException24.setShard("rest.exception.stacktrace.skip", (-1));
        java.lang.Throwable throwable41 = retryOnPrimaryException24.unwrapCause();
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable41);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str37, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.toString(), "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][-1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test2294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2294");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", (int) (short) 0);
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (-1));
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException2.getHeader("[[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.common.io.stream.StreamInput streamInput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException19 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][-1]] RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][-1]] RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList17);
    }

    @Test
    public void test2295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2295");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("", strArray21);
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "hi!");
        retryOnPrimaryException27.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        retryOnPrimaryException34.setIndex("");
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException34.setResources("", strArray43);
        retryOnPrimaryException27.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray43);
        retryOnPrimaryException12.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray43);
        retryOnPrimaryException7.addHeader("", strArray43);
        java.util.Set<java.lang.String> strSet48 = retryOnPrimaryException7.getHeaderKeys();
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(strSet48);
    }

    @Test
    public void test2296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2296");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index9 = retryOnPrimaryException8.getIndex();
        java.lang.String str10 = retryOnPrimaryException8.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        retryOnPrimaryException8.setResources("", strArray30);
        retryOnPrimaryException2.setResources("", strArray30);
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str36 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable37 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder38 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params39 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder40 = retryOnPrimaryException2.toXContent(xContentBuilder38, params39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str36, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(params39);
    }

    @Test
    public void test2297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2297");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        java.lang.String str12 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index13 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "hi!");
        retryOnPrimaryException18.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.cause.skip");
        retryOnPrimaryException25.setIndex("");
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException25.setResources("", strArray34);
        retryOnPrimaryException18.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray34);
        java.lang.Throwable[] throwableArray37 = retryOnPrimaryException18.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus38 = retryOnPrimaryException18.status();
        retryOnPrimaryException18.setIndex("[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.util.List<java.lang.String> strList41 = retryOnPrimaryException18.getResourceId();
        retryOnPrimaryException2.addHeader("[RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strList41);
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str12, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index13);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertTrue("'" + restStatus38 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus38.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strList41);
    }

    @Test
    public void test2298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2298");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        java.lang.String str26 = retryOnPrimaryException15.toString();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException2.getHeader("[[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]][[[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]][0]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str26, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNull(strList31);
    }

    @Test
    public void test2299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2299");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        retryOnPrimaryException11.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray42);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str48 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamInput streamInput49 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException2, streamInput49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "retry_on_primary_exception" + "'", str48, "retry_on_primary_exception");
    }

    @Test
    public void test2300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2300");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strSet12);
    }

    @Test
    public void test2301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2301");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        retryOnPrimaryException4.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str8 = retryOnPrimaryException4.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str8, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2302");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException11.setIndex(index14);
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException11.status();
        java.lang.Throwable throwable17 = retryOnPrimaryException11.getRootCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException22.getHeaderKeys();
        java.lang.Throwable throwable24 = retryOnPrimaryException22.getRootCause();
        java.lang.String[] strArray30 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        retryOnPrimaryException22.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList31);
        retryOnPrimaryException11.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList31);
        java.lang.String str35 = retryOnPrimaryException11.getDetailedMessage();
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException11.getResourceId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str35, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(strList36);
    }

    @Test
    public void test2303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2303");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = retryOnPrimaryException2.getIndex();
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable[] throwableArray6 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput7 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(index4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception" + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray6);
    }

    @Test
    public void test2304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2304");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str17 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException22.setResources("", strArray31);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        retryOnPrimaryException22.setShard(shardId35);
        org.elasticsearch.index.shard.ShardId shardId37 = retryOnPrimaryException22.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.lang.Throwable) retryOnPrimaryException22);
        retryOnPrimaryException22.setIndex("hi!");
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException22);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.util.Set<java.lang.String> strSet43 = retryOnPrimaryException22.getHeaderKeys();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str17, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId37);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strSet43);
    }

    @Test
    public void test2305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2305");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException9.getHeader("");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException9.writeTo(streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
    }

    @Test
    public void test2306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2306");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId21 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId21);
    }

    @Test
    public void test2307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2307");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.index.Index index19 = null;
        retryOnPrimaryException2.setIndex(index19);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput23 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException2, streamOutput23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strList22);
    }

    @Test
    public void test2308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2308");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException2.getResourceId();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        retryOnPrimaryException28.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str32 = retryOnPrimaryException28.getDetailedMessage();
        java.lang.String str33 = retryOnPrimaryException28.getDetailedMessage();
        java.lang.Throwable throwable34 = retryOnPrimaryException28.unwrapCause();
        retryOnPrimaryException28.setShard("[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]", (-1));
        retryOnPrimaryException28.setIndex("rest.exception.stacktrace.skip");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        java.lang.Throwable[] throwableArray41 = retryOnPrimaryException28.getSuppressed();
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException28);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str32, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable34.toString(), "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][-1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test2309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2309");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException11.setIndex(index14);
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException11.status();
        java.lang.Throwable throwable17 = retryOnPrimaryException11.getRootCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable throwable19 = retryOnPrimaryException4.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2310");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        java.lang.String str37 = retryOnPrimaryException26.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        java.lang.Throwable throwable42 = retryOnPrimaryException41.unwrapCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String[] strArray47 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException41.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException41);
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException49);
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException49.getResourceId();
        java.lang.String str52 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException49);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "hi!");
        retryOnPrimaryException57.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str61 = retryOnPrimaryException57.getDetailedMessage();
        java.lang.Throwable throwable62 = retryOnPrimaryException57.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable62);
        org.elasticsearch.index.Index index64 = retryOnPrimaryException63.getIndex();
        boolean boolean65 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException63);
        boolean boolean66 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException63);
        java.lang.String str67 = retryOnPrimaryException63.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index72 = retryOnPrimaryException71.getIndex();
        java.util.List<java.lang.String> strList73 = retryOnPrimaryException71.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId75 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException77 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId75, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet78 = retryOnPrimaryException77.getHeaderKeys();
        java.lang.Throwable throwable79 = retryOnPrimaryException77.getRootCause();
        java.lang.String[] strArray85 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        retryOnPrimaryException77.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList86);
        retryOnPrimaryException71.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList86);
        retryOnPrimaryException63.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList86);
        java.lang.Throwable throwable91 = retryOnPrimaryException63.unwrapCause();
        retryOnPrimaryException49.addSuppressed(throwable91);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str37, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "retry_on_primary_exception" + "'", str52, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str61, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable62);
        org.junit.Assert.assertEquals(throwable62.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable62.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable62.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(index72);
        org.junit.Assert.assertNull(strList73);
        org.junit.Assert.assertNotNull(strSet78);
        org.junit.Assert.assertNotNull(throwable79);
        org.junit.Assert.assertEquals(throwable79.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable79.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable79.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(throwable91);
        org.junit.Assert.assertEquals(throwable91.getLocalizedMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable91.getMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable91.toString(), "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test2311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2311");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        java.lang.Class<?> wildcardClass8 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2312");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
    }

    @Test
    public void test2313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2313");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException4.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList13);
        java.util.List<java.lang.String> strList17 = null;
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList17);
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        retryOnPrimaryException23.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException30.setResources("", strArray39);
        retryOnPrimaryException23.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray39);
        retryOnPrimaryException4.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray39);
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable[] throwableArray44 = retryOnPrimaryException4.getSuppressed();
        java.lang.String str45 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "retry_on_primary_exception" + "'", str45, "retry_on_primary_exception");
    }

    @Test
    public void test2314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2314");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException10.setIndex(index14);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str25 = retryOnPrimaryException21.getDetailedMessage();
        java.lang.Throwable throwable26 = retryOnPrimaryException21.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable26);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        retryOnPrimaryException31.setIndex("");
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = retryOnPrimaryException31.guessRootCauses();
        java.util.Set<java.lang.String> strSet36 = retryOnPrimaryException31.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        retryOnPrimaryException40.setIndex("");
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException40.setResources("", strArray49);
        boolean boolean51 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "hi!");
        retryOnPrimaryException55.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "rest.exception.cause.skip");
        retryOnPrimaryException62.setIndex("");
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException62.setResources("", strArray71);
        retryOnPrimaryException55.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray71);
        retryOnPrimaryException40.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray71);
        retryOnPrimaryException31.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray71);
        retryOnPrimaryException27.setResources("hi!", strArray71);
        retryOnPrimaryException10.addHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", strArray71);
        retryOnPrimaryException10.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (short) 100);
        boolean boolean81 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test2315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2315");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.lang.String str14 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable15);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
    }

    @Test
    public void test2316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2316");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        retryOnPrimaryException9.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 0);
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException9.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("", strArray29);
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        retryOnPrimaryException20.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.Index index34 = null;
        retryOnPrimaryException20.setIndex(index34);
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet41 = retryOnPrimaryException40.getHeaderKeys();
        java.lang.Throwable throwable42 = retryOnPrimaryException40.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray43 = retryOnPrimaryException40.guessRootCauses();
        java.util.Set<java.lang.String> strSet44 = retryOnPrimaryException40.getHeaderKeys();
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException40.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        java.lang.String[] strArray56 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException49.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray56);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        retryOnPrimaryException49.setShard(shardId58);
        java.util.Set<java.lang.String> strSet60 = retryOnPrimaryException49.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "hi!");
        retryOnPrimaryException66.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str70 = retryOnPrimaryException66.getDetailedMessage();
        java.lang.Throwable throwable71 = retryOnPrimaryException66.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable71);
        org.elasticsearch.index.Index index73 = retryOnPrimaryException72.getIndex();
        java.lang.String str74 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException72);
        org.elasticsearch.index.shard.ShardId shardId76 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException78 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId76, "rest.exception.cause.skip");
        retryOnPrimaryException78.setIndex("");
        java.lang.String[] strArray87 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException78.setResources("", strArray87);
        retryOnPrimaryException72.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray87);
        retryOnPrimaryException49.addHeader("retry_on_primary_exception", strArray87);
        retryOnPrimaryException40.addHeader("[][[][1]] RetryOnPrimaryException[hi!]", strArray87);
        retryOnPrimaryException20.addHeader("RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray87);
        java.util.List<java.lang.String> strList94 = retryOnPrimaryException20.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "");
        org.junit.Assert.assertEquals(throwable15.toString(), "[hi!][[hi!][0]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(strSet60);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str70, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable71);
        org.junit.Assert.assertEquals(throwable71.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable71.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable71.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index73);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "retry_on_primary_exception" + "'", str74, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertNull(strList94);
    }

    @Test
    public void test2317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2317");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray10);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException2.status();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "hi!");
        retryOnPrimaryException20.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.cause.skip");
        retryOnPrimaryException27.setIndex("");
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException27.setResources("", strArray36);
        retryOnPrimaryException20.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray36);
        java.lang.String str39 = retryOnPrimaryException20.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index43 = retryOnPrimaryException42.getIndex();
        retryOnPrimaryException20.addSuppressed((java.lang.Throwable) retryOnPrimaryException42);
        java.lang.Throwable throwable45 = retryOnPrimaryException42.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index50 = retryOnPrimaryException49.getIndex();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        retryOnPrimaryException54.setIndex("");
        boolean boolean57 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException54);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "rest.exception.cause.skip");
        retryOnPrimaryException60.setIndex("");
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException60.setResources("", strArray69);
        java.lang.String str71 = retryOnPrimaryException60.toString();
        retryOnPrimaryException54.addSuppressed((java.lang.Throwable) retryOnPrimaryException60);
        java.lang.String str73 = retryOnPrimaryException54.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        retryOnPrimaryException54.setShard(shardId74);
        java.lang.String[] strArray86 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        retryOnPrimaryException54.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList87);
        retryOnPrimaryException49.addHeader("", (java.util.List<java.lang.String>) strList87);
        retryOnPrimaryException42.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList87);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", (java.util.List<java.lang.String>) strList87);
        java.util.List<java.lang.String> strList93 = retryOnPrimaryException2.getResourceId();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str39, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index43);
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index50);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str71, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNull(strList93);
    }

    @Test
    public void test2318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2318");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.lang.String str13 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str14 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId16 = retryOnPrimaryException2.getShardId();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException2.getResourceId();
        java.util.Set<java.lang.String> strSet18 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str19 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Class<?> wildcardClass20 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str19, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2319");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException11.getHeaderKeys();
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException11.getHeaderKeys();
        java.lang.Throwable[] throwableArray14 = retryOnPrimaryException11.getSuppressed();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException11.getHeader("rest.exception.cause.skip");
        throwable8.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException11.getHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException21 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException11, streamOutput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNull(strList19);
    }

    @Test
    public void test2320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2320");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index9 = null;
        retryOnPrimaryException2.setIndex(index9);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[rest.exception.cause.skip]");
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException2.getResourceId();
        java.lang.Class<?> wildcardClass14 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2321");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str13 = retryOnPrimaryException10.toString();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException10.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException16 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException10, streamOutput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str13, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test2322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2322");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.cause.skip");
        retryOnPrimaryException6.setIndex("");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException6.setResources("", strArray15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        retryOnPrimaryException6.setShard(shardId19);
        org.elasticsearch.index.shard.ShardId shardId21 = retryOnPrimaryException6.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId23 = retryOnPrimaryException6.getShardId();
        java.lang.String str24 = retryOnPrimaryException6.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str24, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2323");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId16 = retryOnPrimaryException4.getShardId();
        retryOnPrimaryException4.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNull(shardId16);
    }

    @Test
    public void test2324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2324");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.getRootCause();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable17);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test2325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2325");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String str38 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException24.setShard("hi!", (int) (short) 1);
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray43 = retryOnPrimaryException24.guessRootCauses();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "retry_on_primary_exception" + "'", str38, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray43);
    }

    @Test
    public void test2326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2326");
        java.lang.Exception exception0 = null;
        org.elasticsearch.common.io.stream.StreamInput streamInput1 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception2 = org.elasticsearch.ElasticsearchException.readStackTrace(exception0, streamInput1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2327");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException2, streamOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
    }

    @Test
    public void test2328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2328");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.elasticsearch.common.io.stream.StreamInput streamInput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException7 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test2329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2329");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        retryOnPrimaryException9.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (short) 100);
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException9.getSuppressed();
        java.lang.Throwable[] throwableArray16 = retryOnPrimaryException9.getSuppressed();
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test2330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2330");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("", strArray28);
        retryOnPrimaryException12.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        java.lang.String str31 = retryOnPrimaryException12.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index35 = retryOnPrimaryException34.getIndex();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        retryOnPrimaryException40.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        retryOnPrimaryException47.setIndex("");
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException47.setResources("", strArray56);
        retryOnPrimaryException40.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray56);
        java.lang.String str59 = retryOnPrimaryException40.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index63 = retryOnPrimaryException62.getIndex();
        retryOnPrimaryException40.addSuppressed((java.lang.Throwable) retryOnPrimaryException62);
        retryOnPrimaryException62.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet71 = retryOnPrimaryException70.getHeaderKeys();
        java.lang.Throwable throwable72 = retryOnPrimaryException70.getRootCause();
        java.lang.String[] strArray78 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        retryOnPrimaryException70.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException62.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException34.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[]", (java.util.List<java.lang.String>) strList79);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray85 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamInput streamInput86 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception87 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException2, streamInput86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str31, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index35);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str59, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index63);
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertNotNull(throwable72);
        org.junit.Assert.assertEquals(throwable72.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable72.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable72.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray85);
    }

    @Test
    public void test2331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2331");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable11 = retryOnPrimaryException2.getRootCause();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        java.lang.String str14 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Class<?> wildcardClass16 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2332");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("hi!", (int) (short) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException11.getHeaderKeys();
        java.lang.Throwable throwable13 = retryOnPrimaryException11.getRootCause();
        java.lang.String[] strArray19 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        retryOnPrimaryException11.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList20);
        java.util.List<java.lang.String> strList24 = null;
        retryOnPrimaryException11.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList24);
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        retryOnPrimaryException11.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "hi!");
        retryOnPrimaryException33.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str37 = retryOnPrimaryException33.getDetailedMessage();
        java.lang.Throwable throwable38 = retryOnPrimaryException33.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable38);
        org.elasticsearch.index.Index index40 = retryOnPrimaryException39.getIndex();
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException39);
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException39);
        java.lang.Throwable[] throwableArray43 = retryOnPrimaryException39.getSuppressed();
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        retryOnPrimaryException11.setIndex("hi!");
        java.util.Set<java.lang.String> strSet47 = retryOnPrimaryException11.getHeaderKeys();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String str49 = retryOnPrimaryException11.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str37, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable38.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str49, "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2333");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        java.lang.Throwable[] throwableArray16 = retryOnPrimaryException13.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException2.setIndex(index18);
        java.lang.Throwable throwable20 = retryOnPrimaryException2.unwrapCause();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
    }

    @Test
    public void test2334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2334");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        java.lang.Throwable throwable41 = retryOnPrimaryException40.unwrapCause();
        java.lang.String[] strArray45 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        retryOnPrimaryException40.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList46);
        org.elasticsearch.rest.RestStatus restStatus49 = retryOnPrimaryException40.status();
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        java.lang.String str51 = retryOnPrimaryException24.toString();
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        java.lang.String[] strArray62 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException55.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        retryOnPrimaryException24.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray62);
        java.util.Set<java.lang.String> strSet65 = retryOnPrimaryException24.getHeaderKeys();
        java.lang.Throwable[] throwableArray66 = retryOnPrimaryException24.getSuppressed();
        java.lang.Throwable throwable67 = retryOnPrimaryException24.getRootCause();
        java.lang.String str68 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable67);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertTrue("'" + restStatus49 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus49.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str51, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertNotNull(throwable67);
        org.junit.Assert.assertEquals(throwable67.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable67.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable67.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "retry_on_primary_exception" + "'", str68, "retry_on_primary_exception");
    }

    @Test
    public void test2335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2335");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException4.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.Throwable[] throwableArray18 = retryOnPrimaryException15.getSuppressed();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.Index index20 = null;
        retryOnPrimaryException4.setIndex(index20);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
    }

    @Test
    public void test2336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2336");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        java.lang.String str11 = retryOnPrimaryException10.toString();
        java.lang.Throwable throwable12 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException17.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = retryOnPrimaryException19.guessRootCauses();
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException19.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        throwable12.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        java.lang.Throwable[] throwableArray24 = retryOnPrimaryException19.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        java.lang.Throwable throwable29 = retryOnPrimaryException28.unwrapCause();
        java.lang.String[] strArray33 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        retryOnPrimaryException28.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList34);
        org.elasticsearch.rest.RestStatus restStatus37 = retryOnPrimaryException28.status();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        retryOnPrimaryException40.setIndex("");
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException40.setResources("", strArray49);
        boolean boolean51 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException40);
        java.lang.String str52 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException40);
        java.lang.Throwable throwable53 = retryOnPrimaryException40.getRootCause();
        retryOnPrimaryException28.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        java.lang.String str55 = retryOnPrimaryException40.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "rest.exception.cause.skip");
        retryOnPrimaryException61.setIndex("");
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException61);
        retryOnPrimaryException61.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "hi!", (java.lang.Throwable) retryOnPrimaryException61);
        java.util.Set<java.lang.String> strSet69 = retryOnPrimaryException61.getHeaderKeys();
        java.lang.String[] strArray84 = new java.lang.String[] { "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[rest.exception.cause.skip]", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[rest.exception.cause.skip]", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        retryOnPrimaryException61.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList85);
        retryOnPrimaryException40.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList85);
        retryOnPrimaryException19.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList85);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str11, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable12.toString(), "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertTrue("'" + restStatus37 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus37.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "retry_on_primary_exception" + "'", str52, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable53);
        org.junit.Assert.assertEquals(throwable53.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable53.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable53.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str55, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
    }

    @Test
    public void test2337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2337");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index5 = retryOnPrimaryException4.getIndex();
        java.lang.String str6 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        java.lang.String str12 = retryOnPrimaryException10.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        retryOnPrimaryException16.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException23.setResources("", strArray32);
        retryOnPrimaryException16.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray32);
        retryOnPrimaryException10.setResources("", strArray32);
        retryOnPrimaryException4.setResources("", strArray32);
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.Index index38 = retryOnPrimaryException4.getIndex();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(index5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNull(index38);
    }

    @Test
    public void test2338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2338");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.common.io.stream.StreamInput streamInput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException15 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException10, streamInput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
    }

    @Test
    public void test2339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2339");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet6 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray7 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        retryOnPrimaryException11.setShard(shardId20);
        java.util.Set<java.lang.String> strSet22 = retryOnPrimaryException11.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        retryOnPrimaryException28.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str32 = retryOnPrimaryException28.getDetailedMessage();
        java.lang.Throwable throwable33 = retryOnPrimaryException28.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable33);
        org.elasticsearch.index.Index index35 = retryOnPrimaryException34.getIndex();
        java.lang.String str36 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        retryOnPrimaryException40.setIndex("");
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException40.setResources("", strArray49);
        retryOnPrimaryException34.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray49);
        retryOnPrimaryException11.addHeader("retry_on_primary_exception", strArray49);
        retryOnPrimaryException2.addHeader("[][[][1]] RetryOnPrimaryException[hi!]", strArray49);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput54 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str32, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable33.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "retry_on_primary_exception" + "'", str36, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray49);
    }

    @Test
    public void test2340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2340");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        retryOnPrimaryException2.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (short) 10);
        java.lang.String str25 = retryOnPrimaryException2.getDetailedMessage();
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2341");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException17.setIndex(index18);
        java.lang.String str20 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.common.io.stream.StreamInput streamInput21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException17, streamInput21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "retry_on_primary_exception" + "'", str20, "retry_on_primary_exception");
    }

    @Test
    public void test2342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2342");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        retryOnPrimaryException7.setIndex("");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException7.setResources("", strArray16);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable throwable20 = retryOnPrimaryException7.getRootCause();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId22 = retryOnPrimaryException7.getShardId();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.String str45 = retryOnPrimaryException26.getDetailedMessage();
        java.lang.String str46 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String str47 = retryOnPrimaryException26.getDetailedMessage();
        org.elasticsearch.index.Index index48 = null;
        retryOnPrimaryException26.setIndex(index48);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        retryOnPrimaryException53.setIndex("");
        java.lang.Throwable[] throwableArray56 = retryOnPrimaryException53.getSuppressed();
        java.lang.String[] strArray61 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException53.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray61);
        retryOnPrimaryException26.addHeader("hi!", strArray61);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray61);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray61);
        java.lang.String str66 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList67 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.common.io.stream.StreamInput streamInput68 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception69 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException2, streamInput68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str45, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "retry_on_primary_exception" + "'", str46, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str47, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str66, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList67);
    }

    @Test
    public void test2343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2343");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        java.lang.String[] strArray20 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException13.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException13.setShard(shardId22);
        java.util.Set<java.lang.String> strSet24 = retryOnPrimaryException13.getHeaderKeys();
        org.elasticsearch.index.Index index25 = retryOnPrimaryException13.getIndex();
        java.lang.Throwable throwable26 = retryOnPrimaryException13.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!");
        retryOnPrimaryException30.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str34 = retryOnPrimaryException30.getDetailedMessage();
        java.lang.Throwable throwable35 = retryOnPrimaryException30.unwrapCause();
        java.util.List<java.lang.String> strList37 = retryOnPrimaryException30.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException30.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        retryOnPrimaryException41.setIndex("");
        java.lang.Throwable[] throwableArray44 = retryOnPrimaryException41.getSuppressed();
        retryOnPrimaryException30.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException49);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        java.lang.Throwable throwable55 = retryOnPrimaryException54.unwrapCause();
        java.lang.String[] strArray59 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        retryOnPrimaryException54.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList60);
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "rest.exception.cause.skip");
        java.lang.String[] strArray73 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException66.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray73);
        retryOnPrimaryException54.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray73);
        retryOnPrimaryException49.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray73);
        retryOnPrimaryException41.setResources("retry_on_primary_exception", strArray73);
        retryOnPrimaryException13.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray73);
        retryOnPrimaryException2.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray73);
        java.lang.String str80 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.common.io.stream.StreamInput streamInput81 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException82 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str34, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable35.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(throwable55);
        org.junit.Assert.assertEquals(throwable55.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable55.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable55.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str80, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test2344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2344");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str6 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException2.getShardId();
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable10 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str6, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2345");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        java.lang.Throwable throwable11 = retryOnPrimaryException10.unwrapCause();
        java.lang.String[] strArray15 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        retryOnPrimaryException10.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList16);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        java.lang.String[] strArray29 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray29);
        retryOnPrimaryException10.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray29);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray29);
        java.lang.String str33 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str33, "RetryOnPrimaryException[retry_on_primary_exception]");
    }

    @Test
    public void test2346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2346");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable16 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index20 = retryOnPrimaryException19.getIndex();
        java.lang.String str21 = retryOnPrimaryException19.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index26 = retryOnPrimaryException25.getIndex();
        java.lang.String str27 = retryOnPrimaryException25.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "hi!");
        retryOnPrimaryException31.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        retryOnPrimaryException38.setIndex("");
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException38.setResources("", strArray47);
        retryOnPrimaryException31.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray47);
        retryOnPrimaryException25.setResources("", strArray47);
        retryOnPrimaryException19.setResources("", strArray47);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray52 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException19);
        java.util.List<java.lang.String> strList53 = retryOnPrimaryException19.getResourceId();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        java.lang.Throwable throwable55 = retryOnPrimaryException2.unwrapCause();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(throwable55);
        org.junit.Assert.assertEquals(throwable55.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable55.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable55.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2347");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.lang.String str13 = retryOnPrimaryException2.getDetailedMessage();
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException2.getHeader("retry_on_primary_exception");
        java.lang.Throwable throwable16 = retryOnPrimaryException2.getRootCause();
        java.lang.String str17 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str17, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2348");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str14 = retryOnPrimaryException10.getResourceType();
        java.lang.Throwable throwable15 = retryOnPrimaryException10.unwrapCause();
        java.util.Set<java.lang.String> strSet16 = retryOnPrimaryException10.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        org.elasticsearch.index.Index index23 = null;
        retryOnPrimaryException20.setIndex(index23);
        java.util.List<java.lang.String> strList26 = retryOnPrimaryException20.getHeader("");
        java.lang.String str27 = retryOnPrimaryException20.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException30.setResources("", strArray39);
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        retryOnPrimaryException44.setIndex("");
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException44.getSuppressed();
        retryOnPrimaryException30.addSuppressed((java.lang.Throwable) retryOnPrimaryException44);
        retryOnPrimaryException20.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException30);
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException30.getResourceId();
        retryOnPrimaryException10.addHeader("[hi!][[hi!][0]] RetryOnPrimaryException[]", strList51);
        org.elasticsearch.common.io.stream.StreamInput streamInput53 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException54 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException10, streamInput53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strList51);
    }

    @Test
    public void test2349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2349");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str7 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str8 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str7, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str8, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2350");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str17 = retryOnPrimaryException9.getDetailedMessage();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str17, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2351");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        java.lang.Throwable throwable11 = retryOnPrimaryException2.unwrapCause();
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable14 = retryOnPrimaryException2.unwrapCause();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable14.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2352");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        retryOnPrimaryException11.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray42);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray42);
    }

    @Test
    public void test2353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2353");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str12 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable13 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception15 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException2, streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str12, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2354");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException7.unwrapCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException7.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray26);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.common.io.stream.StreamInput streamInput37 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException38 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(throwableArray35);
    }

    @Test
    public void test2355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2355");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException2.getResourceId();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index29 = retryOnPrimaryException28.getIndex();
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException28.getResourceId();
        java.lang.Throwable throwable31 = retryOnPrimaryException28.unwrapCause();
        retryOnPrimaryException28.setIndex("rest.exception.cause.skip");
        java.lang.String str34 = retryOnPrimaryException28.getResourceType();
        java.lang.Throwable throwable35 = retryOnPrimaryException28.unwrapCause();
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable35);
        retryOnPrimaryException2.addSuppressed(throwable35);
        java.util.Set<java.lang.String> strSet38 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertNotNull(strList23);
        org.junit.Assert.assertNull(index29);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strSet38);
    }

    @Test
    public void test2356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2356");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable24 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus25 = retryOnPrimaryException2.status();
        java.lang.String str26 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!");
        retryOnPrimaryException30.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException30);
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        retryOnPrimaryException39.setIndex("");
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray43 = retryOnPrimaryException39.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        java.lang.String[] strArray54 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException47.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray54);
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        retryOnPrimaryException47.setShard(shardId56);
        java.util.Set<java.lang.String> strSet58 = retryOnPrimaryException47.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "hi!");
        retryOnPrimaryException64.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str68 = retryOnPrimaryException64.getDetailedMessage();
        java.lang.Throwable throwable69 = retryOnPrimaryException64.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable69);
        org.elasticsearch.index.Index index71 = retryOnPrimaryException70.getIndex();
        java.lang.String str72 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException70);
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId74, "rest.exception.cause.skip");
        retryOnPrimaryException76.setIndex("");
        java.lang.String[] strArray85 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException76.setResources("", strArray85);
        retryOnPrimaryException70.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray85);
        retryOnPrimaryException47.addHeader("retry_on_primary_exception", strArray85);
        retryOnPrimaryException39.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray85);
        retryOnPrimaryException30.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strArray85);
        retryOnPrimaryException2.setResources("rest.exception.cause.skip", strArray85);
        java.lang.Throwable[] throwableArray92 = retryOnPrimaryException2.getSuppressed();
        java.lang.Class<?> wildcardClass93 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus25 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus25.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str26, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray43);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str68, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable69);
        org.junit.Assert.assertEquals(throwable69.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable69.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable69.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "retry_on_primary_exception" + "'", str72, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(throwableArray92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test2357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2357");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder8 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params9 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder10 = retryOnPrimaryException2.toXContent(xContentBuilder8, params9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNotNull(params9);
    }

    @Test
    public void test2358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2358");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String str47 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        java.lang.String[] strArray59 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException52.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray59);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        retryOnPrimaryException52.setShard(shardId61);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray63 = retryOnPrimaryException52.guessRootCauses();
        java.lang.String str64 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException52);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException52);
        java.lang.Throwable throwable66 = retryOnPrimaryException52.unwrapCause();
        retryOnPrimaryException52.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList69 = retryOnPrimaryException52.getResourceId();
        retryOnPrimaryException52.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String[] strArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException52.setResources("RetryOnPrimaryException[rest.exception.stacktrace.skip]", strArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str47, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "retry_on_primary_exception" + "'", str64, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable66);
        org.junit.Assert.assertEquals(throwable66.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable66.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable66.toString(), "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList69);
    }

    @Test
    public void test2359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2359");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (short) 10);
        java.lang.String str9 = retryOnPrimaryException4.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2360");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("rest.exception.stacktrace.skip", (int) (short) 0);
        java.lang.Throwable throwable10 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.io.stream.StreamInput streamInput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException12 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.toString(), "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2361");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = retryOnPrimaryException12.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException19.setIndex(index22);
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException19.status();
        java.lang.Throwable throwable25 = retryOnPrimaryException19.getRootCause();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet31 = retryOnPrimaryException30.getHeaderKeys();
        java.lang.Throwable throwable32 = retryOnPrimaryException30.getRootCause();
        java.lang.String[] strArray38 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        retryOnPrimaryException30.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList39);
        retryOnPrimaryException19.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList39);
        retryOnPrimaryException4.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList39);
        java.util.List<java.lang.String> strList44 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "hi!");
        retryOnPrimaryException47.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        retryOnPrimaryException54.setIndex("");
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException54.setResources("", strArray63);
        retryOnPrimaryException47.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray63);
        java.lang.Throwable[] throwableArray66 = retryOnPrimaryException47.getSuppressed();
        boolean boolean67 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String str68 = retryOnPrimaryException47.getDetailedMessage();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException47);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(strList44);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(throwableArray66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str68, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test2362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2362");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet38 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("");
        java.lang.String str41 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet46 = retryOnPrimaryException45.getHeaderKeys();
        retryOnPrimaryException45.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "");
        retryOnPrimaryException45.addSuppressed((java.lang.Throwable) retryOnPrimaryException52);
        org.elasticsearch.rest.RestStatus restStatus54 = retryOnPrimaryException52.status();
        retryOnPrimaryException52.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (short) 100);
        java.lang.Throwable[] throwableArray58 = retryOnPrimaryException52.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "hi!");
        retryOnPrimaryException62.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "rest.exception.cause.skip");
        retryOnPrimaryException69.setIndex("");
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException69.setResources("", strArray78);
        retryOnPrimaryException62.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray78);
        java.lang.Throwable[] throwableArray81 = retryOnPrimaryException62.getSuppressed();
        java.lang.String[] strArray88 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException62.setResources("rest.exception.cause.skip", strArray88);
        retryOnPrimaryException52.addHeader("rest.exception.stacktrace.skip", strArray88);
        retryOnPrimaryException2.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray88);
        java.lang.String str92 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.rest.RestStatus restStatus93 = retryOnPrimaryException2.status();
        java.lang.Throwable[] throwableArray94 = retryOnPrimaryException2.getSuppressed();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "[][[][1]] RetryOnPrimaryException[hi!]" + "'", str41, "[][[][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertTrue("'" + restStatus54 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus54.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(throwableArray81);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str92, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + restStatus93 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus93.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray94);
    }

    @Test
    public void test2363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2363");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.lang.String str13 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str14 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId16 = retryOnPrimaryException2.getShardId();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException2.getResourceId();
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException23);
        java.util.List<java.lang.String> strList28 = retryOnPrimaryException23.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        java.lang.String str29 = retryOnPrimaryException23.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray30 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "retry_on_primary_exception");
        java.lang.String str35 = retryOnPrimaryException34.toString();
        org.elasticsearch.index.Index index36 = null;
        retryOnPrimaryException34.setIndex(index36);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        java.lang.String[] strArray48 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException41.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray48);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        retryOnPrimaryException41.setShard(shardId50);
        java.util.Set<java.lang.String> strSet52 = retryOnPrimaryException41.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "hi!");
        retryOnPrimaryException58.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str62 = retryOnPrimaryException58.getDetailedMessage();
        java.lang.Throwable throwable63 = retryOnPrimaryException58.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable63);
        org.elasticsearch.index.Index index65 = retryOnPrimaryException64.getIndex();
        java.lang.String str66 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException64);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "rest.exception.cause.skip");
        retryOnPrimaryException70.setIndex("");
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException70.setResources("", strArray79);
        retryOnPrimaryException64.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray79);
        retryOnPrimaryException41.addHeader("retry_on_primary_exception", strArray79);
        retryOnPrimaryException34.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray79);
        retryOnPrimaryException23.setResources("retry_on_primary_exception", strArray79);
        retryOnPrimaryException2.setResources("[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", strArray79);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray30);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str35, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str62, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable63);
        org.junit.Assert.assertEquals(throwable63.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable63.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable63.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "retry_on_primary_exception" + "'", str66, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray79);
    }

    @Test
    public void test2364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2364");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus6 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        java.lang.String str12 = retryOnPrimaryException10.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index17 = retryOnPrimaryException16.getIndex();
        java.lang.String str18 = retryOnPrimaryException16.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        retryOnPrimaryException16.setResources("", strArray38);
        retryOnPrimaryException10.setResources("", strArray38);
        retryOnPrimaryException2.setResources("", strArray38);
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index45 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.index.Index index46 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput47 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException48 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException2, streamOutput47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus6 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus6.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(index45);
        org.junit.Assert.assertNull(index46);
    }

    @Test
    public void test2365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2365");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        java.lang.String str41 = retryOnPrimaryException22.getDetailedMessage();
        java.lang.String str42 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str43 = retryOnPrimaryException22.getDetailedMessage();
        java.lang.Throwable throwable44 = retryOnPrimaryException22.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus45 = retryOnPrimaryException22.status();
        java.lang.String str46 = retryOnPrimaryException22.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "rest.exception.cause.skip");
        boolean boolean51 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        java.lang.Throwable throwable56 = retryOnPrimaryException55.unwrapCause();
        java.lang.String[] strArray60 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        retryOnPrimaryException55.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList61);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "rest.exception.cause.skip");
        java.lang.String[] strArray74 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException67.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray74);
        retryOnPrimaryException55.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray74);
        retryOnPrimaryException50.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray74);
        retryOnPrimaryException22.setResources("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray74);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray74);
        boolean boolean80 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray81 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str41, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "retry_on_primary_exception" + "'", str42, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str43, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable44.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus45 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus45.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str46, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(throwable56);
        org.junit.Assert.assertEquals(throwable56.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray81);
    }

    @Test
    public void test2366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2366");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        java.lang.String str12 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index13 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException2.status();
        java.lang.String str15 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str12, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index13);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str15, "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2367");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.cause.skip");
        retryOnPrimaryException27.setIndex("");
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException27);
        retryOnPrimaryException27.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "hi!", (java.lang.Throwable) retryOnPrimaryException27);
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException27.getHeaderKeys();
        java.lang.String[] strArray50 = new java.lang.String[] { "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[rest.exception.cause.skip]", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[rest.exception.cause.skip]", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        retryOnPrimaryException27.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList51);
        retryOnPrimaryException2.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (java.util.List<java.lang.String>) strList51);
        org.elasticsearch.rest.RestStatus restStatus55 = retryOnPrimaryException2.status();
        java.util.List<java.lang.String> strList57 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        java.lang.Throwable throwable58 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput59 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable60 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + restStatus55 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus55.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(throwable58);
        org.junit.Assert.assertEquals(throwable58.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable58.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable58.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2368");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray28 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("rest.exception.cause.skip", strArray28);
        retryOnPrimaryException2.setShard("", (int) (short) 1);
        org.elasticsearch.rest.RestStatus restStatus33 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + restStatus33 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus33.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2369");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        retryOnPrimaryException7.setIndex("");
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException7.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException7.getSuppressed();
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(throwableArray13);
    }

    @Test
    public void test2370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2370");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = retryOnPrimaryException2.getShardId();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (-1));
        java.lang.Throwable[] throwableArray11 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder12 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params13 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder14 = retryOnPrimaryException2.toXContent(xContentBuilder12, params13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][[[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][-1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(throwableArray11);
        org.junit.Assert.assertNotNull(params13);
    }

    @Test
    public void test2371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2371");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("", strArray28);
        retryOnPrimaryException12.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        java.lang.Throwable[] throwableArray31 = retryOnPrimaryException12.getSuppressed();
        java.lang.String[] strArray38 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("rest.exception.cause.skip", strArray38);
        retryOnPrimaryException2.addHeader("", strArray38);
        java.lang.Throwable[] throwableArray41 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str42 = retryOnPrimaryException2.getDetailedMessage();
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus44 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.cause.skip");
        retryOnPrimaryException48.setIndex("");
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException48.setResources("", strArray57);
        boolean boolean59 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "hi!");
        retryOnPrimaryException63.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "rest.exception.cause.skip");
        retryOnPrimaryException70.setIndex("");
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException70.setResources("", strArray79);
        retryOnPrimaryException63.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray79);
        retryOnPrimaryException48.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray79);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray79);
        java.util.List<java.lang.String> strList85 = retryOnPrimaryException2.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.lang.String str86 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str42, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertTrue("'" + restStatus44 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus44.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNull(strList85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "retry_on_primary_exception" + "'", str86, "retry_on_primary_exception");
    }

    @Test
    public void test2372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2372");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException6.getHeaderKeys();
        java.lang.Throwable throwable8 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        retryOnPrimaryException9.setIndex("");
        retryOnPrimaryException9.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        retryOnPrimaryException9.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException9.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray25 = retryOnPrimaryException21.guessRootCauses();
        java.util.Set<java.lang.String> strSet26 = retryOnPrimaryException21.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException30.setResources("", strArray39);
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "hi!");
        retryOnPrimaryException45.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        retryOnPrimaryException52.setIndex("");
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException52.setResources("", strArray61);
        retryOnPrimaryException45.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray61);
        retryOnPrimaryException30.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray61);
        retryOnPrimaryException21.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray61);
        retryOnPrimaryException9.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray61);
        java.lang.Throwable throwable67 = retryOnPrimaryException9.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray25);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(throwable67);
        org.junit.Assert.assertEquals(throwable67.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable67.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable67.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2373");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException7.unwrapCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException7.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray26);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = retryOnPrimaryException32.guessRootCauses();
        java.lang.Class<?> wildcardClass38 = elasticsearchExceptionArray37.getClass();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2374");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.index.shard.ShardId shardId4 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(shardId4);
    }

    @Test
    public void test2375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2375");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException24.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable throwable34 = retryOnPrimaryException32.getRootCause();
        java.lang.String[] strArray40 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        retryOnPrimaryException32.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList41);
        retryOnPrimaryException24.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList41);
        java.util.List<java.lang.String> strList46 = retryOnPrimaryException24.getHeader("hi!");
        java.lang.Throwable throwable47 = retryOnPrimaryException24.unwrapCause();
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder49 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params50 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder51 = retryOnPrimaryException24.toXContent(xContentBuilder49, params50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable47.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(params50);
    }

    @Test
    public void test2376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2376");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = retryOnPrimaryException20.guessRootCauses();
        java.util.Set<java.lang.String> strSet24 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable[] throwableArray25 = retryOnPrimaryException20.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String str41 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException29);
        java.lang.Throwable throwable42 = retryOnPrimaryException29.getRootCause();
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException29);
        retryOnPrimaryException29.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.index.Index index46 = null;
        retryOnPrimaryException29.setIndex(index46);
        java.lang.Throwable[] throwableArray48 = retryOnPrimaryException29.getSuppressed();
        java.util.List<java.lang.String> strList49 = retryOnPrimaryException29.getResourceId();
        retryOnPrimaryException20.addHeader("[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", strList49);
        retryOnPrimaryException2.addHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", strList49);
        org.elasticsearch.index.shard.ShardId shardId52 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "retry_on_primary_exception" + "'", str41, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "[RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNull(shardId52);
    }

    @Test
    public void test2377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2377");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str10 = retryOnPrimaryException2.getResourceType();
        java.lang.String str11 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "retry_on_primary_exception" + "'", str11, "retry_on_primary_exception");
    }

    @Test
    public void test2378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2378");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        java.lang.Throwable[] throwableArray16 = retryOnPrimaryException13.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException2.setIndex(index18);
        java.lang.Class<?> wildcardClass20 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2379");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException10.getHeaderKeys();
        retryOnPrimaryException10.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "");
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.rest.RestStatus restStatus19 = retryOnPrimaryException17.status();
        java.lang.String[] strArray24 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException17.setResources("rest.exception.cause.skip", strArray24);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray24);
        boolean boolean27 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder29 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params30 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder31 = retryOnPrimaryException2.toXContent(xContentBuilder29, params30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + restStatus19 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus19.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(params30);
    }

    @Test
    public void test2380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2380");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("", strArray21);
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException12.getResourceId();
        retryOnPrimaryException12.setShard("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", (int) (byte) 100);
        retryOnPrimaryException12.setShard("[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", 1);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strList33);
    }

    @Test
    public void test2381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2381");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str24 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "retry_on_primary_exception" + "'", str24, "retry_on_primary_exception");
    }

    @Test
    public void test2382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2382");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.cause.skip");
        retryOnPrimaryException25.setIndex("");
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray29 = retryOnPrimaryException25.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        org.elasticsearch.index.Index index35 = null;
        retryOnPrimaryException32.setIndex(index35);
        org.elasticsearch.rest.RestStatus restStatus37 = retryOnPrimaryException32.status();
        java.lang.Throwable throwable38 = retryOnPrimaryException32.getRootCause();
        retryOnPrimaryException25.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        java.lang.Throwable throwable40 = retryOnPrimaryException25.unwrapCause();
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        retryOnPrimaryException45.setIndex("");
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException45);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = retryOnPrimaryException45.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        java.lang.String[] strArray60 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException53.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray60);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        retryOnPrimaryException53.setShard(shardId62);
        java.util.Set<java.lang.String> strSet64 = retryOnPrimaryException53.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "hi!");
        retryOnPrimaryException70.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str74 = retryOnPrimaryException70.getDetailedMessage();
        java.lang.Throwable throwable75 = retryOnPrimaryException70.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable75);
        org.elasticsearch.index.Index index77 = retryOnPrimaryException76.getIndex();
        java.lang.String str78 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException76);
        org.elasticsearch.index.shard.ShardId shardId80 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException82 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId80, "rest.exception.cause.skip");
        retryOnPrimaryException82.setIndex("");
        java.lang.String[] strArray91 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException82.setResources("", strArray91);
        retryOnPrimaryException76.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray91);
        retryOnPrimaryException53.addHeader("retry_on_primary_exception", strArray91);
        retryOnPrimaryException45.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray91);
        retryOnPrimaryException25.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray91);
        retryOnPrimaryException2.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray91);
        java.lang.Class<?> wildcardClass98 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray29);
        org.junit.Assert.assertTrue("'" + restStatus37 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus37.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str74, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable75);
        org.junit.Assert.assertEquals(throwable75.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable75.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable75.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index77);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "retry_on_primary_exception" + "'", str78, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2383");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index9 = null;
        retryOnPrimaryException2.setIndex(index9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException2.getResourceId();
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str8, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str14, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test2384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2384");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str18 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index19 = null;
        retryOnPrimaryException2.setIndex(index19);
        retryOnPrimaryException2.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 0);
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException2.status();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException2, streamOutput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]][[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str18, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2385");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException2.setIndex(index22);
        java.lang.Throwable throwable24 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2386");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.Throwable throwable5 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException8.getHeaderKeys();
        java.lang.Throwable throwable10 = retryOnPrimaryException8.getRootCause();
        java.lang.String[] strArray16 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        retryOnPrimaryException8.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList17);
        java.util.List<java.lang.String> strList21 = null;
        retryOnPrimaryException8.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList21);
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException8);
        retryOnPrimaryException8.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!");
        retryOnPrimaryException30.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str34 = retryOnPrimaryException30.getDetailedMessage();
        java.lang.Throwable throwable35 = retryOnPrimaryException30.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable35);
        org.elasticsearch.index.Index index37 = retryOnPrimaryException36.getIndex();
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException36);
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException36);
        java.lang.Throwable[] throwableArray40 = retryOnPrimaryException36.getSuppressed();
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException8.getResourceId();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.util.Set<java.lang.String> strSet44 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException4.getSuppressed();
        java.lang.Throwable throwable46 = retryOnPrimaryException4.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str34, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable35.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2387");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException2.guessRootCauses();
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Class<?> wildcardClass11 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test2388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2388");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("", strArray21);
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException12.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        retryOnPrimaryException12.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.rest.RestStatus restStatus36 = retryOnPrimaryException12.status();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        retryOnPrimaryException41.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str45 = retryOnPrimaryException41.getDetailedMessage();
        java.lang.Throwable throwable46 = retryOnPrimaryException41.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable46);
        org.elasticsearch.index.Index index48 = retryOnPrimaryException47.getIndex();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException47);
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException12);
        java.util.List<java.lang.String> strList52 = retryOnPrimaryException12.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][0]] RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray53 = retryOnPrimaryException12.guessRootCauses();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertTrue("'" + restStatus36 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus36.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str45, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable46.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray53);
    }

    @Test
    public void test2389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2389");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId48 = retryOnPrimaryException2.getShardId();
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str50 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setShard("hi!", 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str50, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2390");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException7 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamOutput6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet5);
    }

    @Test
    public void test2391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2391");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        retryOnPrimaryException8.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray24);
        retryOnPrimaryException2.setResources("", strArray24);
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2392");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable7 = retryOnPrimaryException4.getRootCause();
        retryOnPrimaryException4.setIndex("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException11 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException4, streamOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.toString(), "[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[retry_on_primary_exception]");
    }

    @Test
    public void test2393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2393");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus6 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        java.lang.String str12 = retryOnPrimaryException10.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index17 = retryOnPrimaryException16.getIndex();
        java.lang.String str18 = retryOnPrimaryException16.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        retryOnPrimaryException16.setResources("", strArray38);
        retryOnPrimaryException10.setResources("", strArray38);
        retryOnPrimaryException2.setResources("", strArray38);
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index45 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable46 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.rest.RestStatus restStatus47 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray48 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList49 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder50 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params51 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder52 = retryOnPrimaryException2.toXContent(xContentBuilder50, params51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus6 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus6.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(index45);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus47 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus47.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray48);
        org.junit.Assert.assertNotNull(strList49);
        org.junit.Assert.assertNotNull(params51);
    }

    @Test
    public void test2394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2394");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index19 = retryOnPrimaryException2.getIndex();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index19);
    }

    @Test
    public void test2395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2395");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        java.lang.String str15 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "retry_on_primary_exception");
        java.lang.String str22 = retryOnPrimaryException21.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "hi!");
        retryOnPrimaryException29.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str33 = retryOnPrimaryException29.getDetailedMessage();
        java.lang.Throwable throwable34 = retryOnPrimaryException29.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable34);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        retryOnPrimaryException39.setIndex("");
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray43 = retryOnPrimaryException39.guessRootCauses();
        java.util.Set<java.lang.String> strSet44 = retryOnPrimaryException39.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.cause.skip");
        retryOnPrimaryException48.setIndex("");
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException48.setResources("", strArray57);
        boolean boolean59 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "hi!");
        retryOnPrimaryException63.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "rest.exception.cause.skip");
        retryOnPrimaryException70.setIndex("");
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException70.setResources("", strArray79);
        retryOnPrimaryException63.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray79);
        retryOnPrimaryException48.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray79);
        retryOnPrimaryException39.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray79);
        retryOnPrimaryException35.setResources("hi!", strArray79);
        retryOnPrimaryException21.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray79);
        retryOnPrimaryException4.addHeader("", strArray79);
        java.lang.String str87 = retryOnPrimaryException4.toString();
        java.lang.Throwable throwable88 = retryOnPrimaryException4.getRootCause();
        java.util.Set<java.lang.String> strSet89 = retryOnPrimaryException4.getHeaderKeys();
        java.util.Set<java.lang.String> strSet90 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable91 = retryOnPrimaryException4.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str15, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str22, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable34.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray43);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str87, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable88);
        org.junit.Assert.assertEquals(throwable88.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable88.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable88.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet89);
        org.junit.Assert.assertNotNull(strSet90);
        org.junit.Assert.assertNotNull(throwable91);
        org.junit.Assert.assertEquals(throwable91.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable91.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable91.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2396");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder25 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params26 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder27 = retryOnPrimaryException2.toXContent(xContentBuilder25, params26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(params26);
    }

    @Test
    public void test2397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2397");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId14 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNull(shardId14);
    }

    @Test
    public void test2398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2398");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException2.status();
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", 0);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet31 = retryOnPrimaryException30.getHeaderKeys();
        java.util.Set<java.lang.String> strSet32 = retryOnPrimaryException30.getHeaderKeys();
        java.lang.Throwable[] throwableArray33 = retryOnPrimaryException30.getSuppressed();
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException30.getHeader("rest.exception.cause.skip");
        java.lang.String str36 = retryOnPrimaryException30.getDetailedMessage();
        retryOnPrimaryException30.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable39 = retryOnPrimaryException30.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId40 = retryOnPrimaryException30.getShardId();
        java.lang.String str41 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId42 = retryOnPrimaryException30.getShardId();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet47 = retryOnPrimaryException46.getHeaderKeys();
        retryOnPrimaryException46.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "");
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException46.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "rest.exception.cause.skip");
        java.lang.Throwable throwable60 = retryOnPrimaryException59.unwrapCause();
        java.lang.String[] strArray64 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        retryOnPrimaryException59.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList65);
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "rest.exception.cause.skip");
        java.lang.String[] strArray78 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException71.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray78);
        retryOnPrimaryException59.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray78);
        retryOnPrimaryException46.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray78);
        retryOnPrimaryException30.setResources("RetryOnPrimaryException[retry_on_primary_exception]", strArray78);
        retryOnPrimaryException2.setResources("[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]", strArray78);
        retryOnPrimaryException2.setShard("[rest.exception.stacktrace.skip] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 100);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str36, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable39.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "retry_on_primary_exception" + "'", str41, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId42);
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(throwable60);
        org.junit.Assert.assertEquals(throwable60.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable60.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable60.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strArray78);
    }

    @Test
    public void test2399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2399");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.Index index16 = retryOnPrimaryException4.getIndex();
        java.lang.Throwable throwable17 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str25 = retryOnPrimaryException21.getDetailedMessage();
        java.lang.Throwable throwable26 = retryOnPrimaryException21.unwrapCause();
        java.util.List<java.lang.String> strList28 = retryOnPrimaryException21.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException21.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        java.lang.Throwable throwable46 = retryOnPrimaryException45.unwrapCause();
        java.lang.String[] strArray50 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        retryOnPrimaryException45.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList51);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        java.lang.String[] strArray64 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException57.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray64);
        retryOnPrimaryException45.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray64);
        retryOnPrimaryException40.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray64);
        retryOnPrimaryException32.setResources("retry_on_primary_exception", strArray64);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray64);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray70 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet75 = retryOnPrimaryException74.getHeaderKeys();
        retryOnPrimaryException74.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId79 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException81 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId79, "");
        retryOnPrimaryException74.addSuppressed((java.lang.Throwable) retryOnPrimaryException81);
        org.elasticsearch.rest.RestStatus restStatus83 = retryOnPrimaryException81.status();
        retryOnPrimaryException81.setIndex("rest.exception.cause.skip");
        java.lang.String str86 = retryOnPrimaryException81.getDetailedMessage();
        java.util.List<java.lang.String> strList88 = retryOnPrimaryException81.getHeader("RetryOnPrimaryException[]");
        java.lang.Throwable throwable89 = retryOnPrimaryException81.unwrapCause();
        retryOnPrimaryException71.addSuppressed((java.lang.Throwable) retryOnPrimaryException81);
        org.elasticsearch.rest.RestStatus restStatus91 = retryOnPrimaryException71.status();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray70);
        org.junit.Assert.assertNotNull(strSet75);
        org.junit.Assert.assertTrue("'" + restStatus83 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus83.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str86, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(throwable89);
        org.junit.Assert.assertEquals(throwable89.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable89.getMessage(), "");
        org.junit.Assert.assertEquals(throwable89.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + restStatus91 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus91.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2400");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index16 = retryOnPrimaryException15.getIndex();
        java.lang.String str17 = retryOnPrimaryException15.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray37);
        retryOnPrimaryException15.setResources("", strArray37);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        java.util.Set<java.lang.String> strSet42 = retryOnPrimaryException15.getHeaderKeys();
        java.lang.Throwable throwable43 = retryOnPrimaryException15.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray44 = retryOnPrimaryException15.guessRootCauses();
        java.lang.String str45 = retryOnPrimaryException15.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str17, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str45, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2401");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        retryOnPrimaryException2.setResources("rest.exception.stacktrace.skip", strArray38);
        org.elasticsearch.index.Index index42 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable[] throwableArray43 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable throwable44 = retryOnPrimaryException2.unwrapCause();
        java.util.Set<java.lang.String> strSet45 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        retryOnPrimaryException49.setIndex("");
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException49.setResources("", strArray58);
        boolean boolean60 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException49);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "hi!");
        retryOnPrimaryException64.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "rest.exception.cause.skip");
        retryOnPrimaryException71.setIndex("");
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException71.setResources("", strArray80);
        retryOnPrimaryException64.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray80);
        retryOnPrimaryException49.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray80);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray84 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException49);
        java.util.List<java.lang.String> strList85 = retryOnPrimaryException49.getResourceId();
        retryOnPrimaryException2.addHeader("[][[][1]] RetryOnPrimaryException[hi!]", strList85);
        java.util.List<java.lang.String> strList88 = retryOnPrimaryException2.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNull(index42);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray84);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNull(strList88);
    }

    @Test
    public void test2402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2402");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId47 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.shard.ShardId shardId48 = retryOnPrimaryException2.getShardId();
        java.lang.Throwable[] throwableArray49 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str50 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str51 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str52 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str50, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "retry_on_primary_exception" + "'", str51, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str52, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2403");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", 0);
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.cause.skip");
        retryOnPrimaryException25.setIndex("");
        java.lang.Throwable[] throwableArray28 = retryOnPrimaryException25.getSuppressed();
        java.lang.String[] strArray33 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException25.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray33);
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException25.getHeaderKeys();
        retryOnPrimaryException25.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        retryOnPrimaryException25.setShard("[] RetryOnPrimaryException[rest.exception.cause.skip]", (int) 'a');
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        retryOnPrimaryException43.setIndex("");
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException43.setResources("", strArray52);
        boolean boolean54 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException43);
        java.lang.String str55 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        retryOnPrimaryException43.setShard(shardId56);
        org.elasticsearch.index.shard.ShardId shardId58 = retryOnPrimaryException43.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray59 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException43);
        retryOnPrimaryException43.setShard("hi!", (int) (byte) 0);
        retryOnPrimaryException25.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        java.lang.Throwable throwable64 = retryOnPrimaryException43.getRootCause();
        retryOnPrimaryException2.addSuppressed(throwable64);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "retry_on_primary_exception" + "'", str55, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId58);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray59);
        org.junit.Assert.assertNotNull(throwable64);
        org.junit.Assert.assertEquals(throwable64.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable64.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable64.toString(), "[hi!][[hi!][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2404");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.getRootCause();
        java.lang.Class<?> wildcardClass18 = throwable17.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test2405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2405");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("");
        retryOnPrimaryException2.setShard("[hi!][[hi!][0]] RetryOnPrimaryException[]", (int) (byte) 0);
        retryOnPrimaryException2.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]][[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]][[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2406");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Throwable throwable25 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable26 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable26);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable25.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
    }

    @Test
    public void test2407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2407");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str16 = retryOnPrimaryException12.getDetailedMessage();
        java.lang.Throwable throwable17 = retryOnPrimaryException12.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable17);
        org.elasticsearch.index.Index index19 = retryOnPrimaryException18.getIndex();
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException18);
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException18);
        java.lang.String str22 = retryOnPrimaryException18.getResourceType();
        java.lang.Throwable throwable23 = retryOnPrimaryException18.unwrapCause();
        retryOnPrimaryException2.addSuppressed(throwable23);
        java.lang.String str25 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput26 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str16, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable23.toString(), "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "retry_on_primary_exception" + "'", str25, "retry_on_primary_exception");
    }

    @Test
    public void test2408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2408");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable11 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId12 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        retryOnPrimaryException16.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException23.setResources("", strArray32);
        retryOnPrimaryException16.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray32);
        java.lang.String str35 = retryOnPrimaryException16.getDetailedMessage();
        java.lang.String str36 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.String str37 = retryOnPrimaryException16.getDetailedMessage();
        org.elasticsearch.index.Index index38 = null;
        retryOnPrimaryException16.setIndex(index38);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        retryOnPrimaryException43.setIndex("");
        java.lang.Throwable[] throwableArray46 = retryOnPrimaryException43.getSuppressed();
        java.lang.String[] strArray51 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException43.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray51);
        retryOnPrimaryException16.addHeader("hi!", strArray51);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[]", strArray51);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        java.lang.String[] strArray64 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException57.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray64);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        retryOnPrimaryException57.setShard(shardId66);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray68 = retryOnPrimaryException57.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId69 = retryOnPrimaryException57.getShardId();
        org.elasticsearch.rest.RestStatus restStatus70 = retryOnPrimaryException57.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        java.util.List<java.lang.String> strList72 = retryOnPrimaryException57.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus73 = retryOnPrimaryException57.status();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId12);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str35, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "retry_on_primary_exception" + "'", str36, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str37, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray68);
        org.junit.Assert.assertNull(shardId69);
        org.junit.Assert.assertTrue("'" + restStatus70 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus70.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strList72);
        org.junit.Assert.assertTrue("'" + restStatus73 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus73.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2409");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("");
        retryOnPrimaryException2.setShard("", (int) (short) 0);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip");
        java.lang.String[] strArray24 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException17.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray24);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        retryOnPrimaryException17.setShard(shardId26);
        java.lang.String str28 = retryOnPrimaryException17.getDetailedMessage();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.Throwable[] throwableArray30 = retryOnPrimaryException17.getSuppressed();
        java.lang.String str31 = retryOnPrimaryException17.getResourceType();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder32 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params33 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder34 = retryOnPrimaryException17.toXContent(xContentBuilder32, params33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "[][[][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.toString(), "[][[][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str31, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(params33);
    }

    @Test
    public void test2410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2410");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        throwable9.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException12.getSuppressed();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder16 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params17 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder18 = retryOnPrimaryException12.toXContent(xContentBuilder16, params17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNotNull(params17);
    }

    @Test
    public void test2411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2411");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        java.lang.String str33 = retryOnPrimaryException14.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index37 = retryOnPrimaryException36.getIndex();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.Index index39 = retryOnPrimaryException36.getIndex();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        retryOnPrimaryException43.setIndex("");
        java.lang.Throwable[] throwableArray46 = retryOnPrimaryException43.getSuppressed();
        java.lang.String[] strArray51 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException43.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray51);
        retryOnPrimaryException36.setResources("hi!", strArray51);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray51);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray55 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Class<?> wildcardClass56 = elasticsearchExceptionArray55.getClass();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index37);
        org.junit.Assert.assertNull(index39);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray55);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2412");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException7.unwrapCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException7.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray26);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String str37 = retryOnPrimaryException2.getDetailedMessage();
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str37, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test2413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2413");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException2.setIndex(index22);
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException2.status();
        java.util.Set<java.lang.String> strSet25 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "hi!");
        retryOnPrimaryException29.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str33 = retryOnPrimaryException29.getDetailedMessage();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException29.getHeaderKeys();
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "hi!");
        retryOnPrimaryException38.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        retryOnPrimaryException38.setShard(shardId42);
        java.lang.String str44 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException38);
        java.lang.Throwable throwable45 = retryOnPrimaryException38.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray46 = retryOnPrimaryException38.guessRootCauses();
        retryOnPrimaryException29.addSuppressed((java.lang.Throwable) retryOnPrimaryException38);
        java.util.Set<java.lang.String> strSet48 = retryOnPrimaryException29.getHeaderKeys();
        retryOnPrimaryException29.setShard("[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 100);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        retryOnPrimaryException55.setIndex("");
        org.elasticsearch.index.Index index58 = null;
        retryOnPrimaryException55.setIndex(index58);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet64 = retryOnPrimaryException63.getHeaderKeys();
        retryOnPrimaryException63.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "");
        retryOnPrimaryException63.addSuppressed((java.lang.Throwable) retryOnPrimaryException70);
        org.elasticsearch.rest.RestStatus restStatus72 = retryOnPrimaryException70.status();
        java.lang.String[] strArray77 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException70.setResources("rest.exception.cause.skip", strArray77);
        retryOnPrimaryException55.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray77);
        retryOnPrimaryException29.addHeader("[RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray77);
        retryOnPrimaryException2.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", strArray77);
        java.lang.Class<?> wildcardClass82 = strArray77.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "retry_on_primary_exception" + "'", str44, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable45.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray46);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + restStatus72 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus72.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2414");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str13 = retryOnPrimaryException10.toString();
        java.lang.String str14 = retryOnPrimaryException10.getDetailedMessage();
        java.lang.String str15 = retryOnPrimaryException10.getDetailedMessage();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str13, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str14, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str15, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test2415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2415");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        retryOnPrimaryException10.setIndex("");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException10.setResources("", strArray19);
        java.lang.String str21 = retryOnPrimaryException10.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str23 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        retryOnPrimaryException4.setShard(shardId24);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        retryOnPrimaryException28.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "rest.exception.cause.skip");
        retryOnPrimaryException35.setIndex("");
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException35.setResources("", strArray44);
        retryOnPrimaryException28.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray44);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException28.getSuppressed();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        retryOnPrimaryException28.setShard(shardId49);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray51 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException28);
        java.lang.Throwable throwable52 = retryOnPrimaryException28.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray53 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException28);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str21, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray51);
        org.junit.Assert.assertNotNull(throwable52);
        org.junit.Assert.assertEquals(throwable52.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable52.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable52.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray53);
    }

    @Test
    public void test2416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2416");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        java.lang.String str7 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException4.setIndex(index8);
        java.lang.String str10 = retryOnPrimaryException4.getDetailedMessage();
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable12 = retryOnPrimaryException4.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str7, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable12.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2417");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
    }

    @Test
    public void test2418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2418");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("", strArray29);
        java.lang.String str31 = retryOnPrimaryException20.toString();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str33 = retryOnPrimaryException14.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        retryOnPrimaryException14.setShard(shardId34);
        java.lang.String[] strArray46 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        retryOnPrimaryException14.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList47);
        java.lang.String str51 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str31, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test2419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2419");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        java.lang.String str37 = retryOnPrimaryException26.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        java.lang.Throwable throwable42 = retryOnPrimaryException41.unwrapCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String[] strArray47 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException41.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException41);
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException41.getHeader("");
        java.util.List<java.lang.String> strList52 = retryOnPrimaryException41.getResourceId();
        java.lang.String str53 = retryOnPrimaryException41.toString();
        java.lang.Class<?> wildcardClass54 = retryOnPrimaryException41.getClass();
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str37, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNull(strList52);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str53, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test2420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2420");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        retryOnPrimaryException2.setIndex("[RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable throwable6 = retryOnPrimaryException2.getRootCause();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable6);
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable6.toString(), "[[RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test2421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2421");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable[] throwableArray18 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException2.getResourceId();
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[] RetryOnPrimaryException[rest.exception.cause.skip]]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(strList19);
        org.junit.Assert.assertNull(strList21);
    }

    @Test
    public void test2422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2422");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        java.lang.String str17 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId18 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str17, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId18);
    }

    @Test
    public void test2423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2423");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException2.status();
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str24 = retryOnPrimaryException2.getResourceType();
        java.lang.String str25 = retryOnPrimaryException2.toString();
        java.lang.String str26 = retryOnPrimaryException2.getResourceType();
        java.lang.Class<?> wildcardClass27 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str24, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str25, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str26, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test2424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2424");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        java.lang.String[] strArray16 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException9.setResources("rest.exception.cause.skip", strArray16);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable19 = retryOnPrimaryException9.unwrapCause();
        java.lang.Throwable[] throwableArray20 = throwable19.getSuppressed();
        java.lang.Class<?> wildcardClass21 = throwableArray20.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2425");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.Index index14 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str23 = retryOnPrimaryException19.getDetailedMessage();
        java.lang.Throwable throwable24 = retryOnPrimaryException19.unwrapCause();
        java.util.List<java.lang.String> strList26 = retryOnPrimaryException19.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException19.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.Throwable[] throwableArray33 = retryOnPrimaryException30.getSuppressed();
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        java.lang.Throwable throwable44 = retryOnPrimaryException43.unwrapCause();
        java.lang.String[] strArray48 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        retryOnPrimaryException43.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList49);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        java.lang.String[] strArray62 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException55.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        retryOnPrimaryException43.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray62);
        retryOnPrimaryException38.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        retryOnPrimaryException30.setResources("retry_on_primary_exception", strArray62);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray68 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus69 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray68);
        org.junit.Assert.assertTrue("'" + restStatus69 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus69.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2426");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip");
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getHeader("[RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.index.shard.ShardId shardId5 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNull(shardId5);
    }

    @Test
    public void test2427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2427");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str10 = retryOnPrimaryException6.getDetailedMessage();
        java.lang.Throwable throwable11 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable11);
        org.elasticsearch.index.Index index13 = retryOnPrimaryException12.getIndex();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException12);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String str16 = retryOnPrimaryException12.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index21 = retryOnPrimaryException20.getIndex();
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException20.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet27 = retryOnPrimaryException26.getHeaderKeys();
        java.lang.Throwable throwable28 = retryOnPrimaryException26.getRootCause();
        java.lang.String[] strArray34 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        retryOnPrimaryException26.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList35);
        retryOnPrimaryException20.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList35);
        retryOnPrimaryException12.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList35);
        java.lang.String str40 = retryOnPrimaryException12.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(index21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable28.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str40, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test2428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2428");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException8.getHeaderKeys();
        retryOnPrimaryException8.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException19.setIndex(index22);
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException19.status();
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        throwable5.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = retryOnPrimaryException19.guessRootCauses();
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException19.getHeader("[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.lang.Throwable throwable30 = retryOnPrimaryException19.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray31 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable30);
        java.lang.Class<?> wildcardClass32 = elasticsearchExceptionArray31.getClass();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable30.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test2429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2429");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = retryOnPrimaryException4.guessRootCauses();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException4.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test2430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2430");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException17.setIndex(index18);
        java.lang.String str20 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        java.util.List<java.lang.String> strList22 = null;
        retryOnPrimaryException17.addHeader("retry_on_primary_exception", strList22);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException17.writeTo(streamOutput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "retry_on_primary_exception" + "'", str20, "retry_on_primary_exception");
    }

    @Test
    public void test2431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2431");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index5 = retryOnPrimaryException4.getIndex();
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        java.lang.Throwable throwable7 = retryOnPrimaryException4.unwrapCause();
        retryOnPrimaryException4.setIndex("rest.exception.cause.skip");
        java.lang.String str10 = retryOnPrimaryException4.getResourceType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(index5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test2432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2432");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str9 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "retry_on_primary_exception" + "'", str9, "retry_on_primary_exception");
    }

    @Test
    public void test2433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2433");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        java.lang.String str33 = retryOnPrimaryException9.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = retryOnPrimaryException9.getShardId();
        org.elasticsearch.rest.RestStatus restStatus35 = retryOnPrimaryException9.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = retryOnPrimaryException9.guessRootCauses();
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException9.getHeaderKeys();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder38 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params39 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder40 = retryOnPrimaryException9.toXContent(xContentBuilder38, params39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertTrue("'" + restStatus35 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus35.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(params39);
    }

    @Test
    public void test2434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2434");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray4 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamInput streamInput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException6 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray4);
    }

    @Test
    public void test2435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2435");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str18 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable19 = retryOnPrimaryException2.unwrapCause();
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable21 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str18, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2436");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str6 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException11.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        retryOnPrimaryException18.setIndex("");
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException18.setResources("", strArray27);
        retryOnPrimaryException11.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray27);
        java.lang.Throwable[] throwableArray30 = retryOnPrimaryException11.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus31 = retryOnPrimaryException11.status();
        java.lang.String str32 = retryOnPrimaryException11.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException36.getHeaderKeys();
        java.lang.Throwable throwable38 = retryOnPrimaryException36.getRootCause();
        java.lang.String[] strArray44 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        retryOnPrimaryException36.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList45);
        java.util.List<java.lang.String> strList49 = null;
        retryOnPrimaryException36.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList49);
        boolean boolean51 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "hi!");
        retryOnPrimaryException55.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "rest.exception.cause.skip");
        retryOnPrimaryException62.setIndex("");
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException62.setResources("", strArray71);
        retryOnPrimaryException55.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray71);
        retryOnPrimaryException36.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray71);
        retryOnPrimaryException11.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray71);
        retryOnPrimaryException2.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray71);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str6, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertTrue("'" + restStatus31 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus31.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str32, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strArray71);
    }

    @Test
    public void test2437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2437");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable24 = retryOnPrimaryException2.unwrapCause();
        java.lang.Throwable[] throwableArray25 = retryOnPrimaryException2.getSuppressed();
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException28 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamOutput27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray25);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test2438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2438");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        retryOnPrimaryException7.setIndex("");
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException7.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.rest.RestStatus restStatus13 = retryOnPrimaryException7.status();
        java.lang.Throwable throwable14 = retryOnPrimaryException7.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "hi!");
        retryOnPrimaryException18.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.cause.skip");
        retryOnPrimaryException25.setIndex("");
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException25.setResources("", strArray34);
        retryOnPrimaryException18.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray34);
        java.lang.String str37 = retryOnPrimaryException18.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index41 = retryOnPrimaryException40.getIndex();
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        retryOnPrimaryException40.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet49 = retryOnPrimaryException48.getHeaderKeys();
        java.lang.Throwable throwable50 = retryOnPrimaryException48.getRootCause();
        java.lang.String[] strArray56 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        retryOnPrimaryException48.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList57);
        retryOnPrimaryException40.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList57);
        retryOnPrimaryException7.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList57);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertTrue("'" + restStatus13 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus13.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable14);
        org.junit.Assert.assertEquals(throwable14.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable14.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable14.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str37, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index41);
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(throwable50);
        org.junit.Assert.assertEquals(throwable50.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable50.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable50.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
    }

    @Test
    public void test2439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2439");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException4 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamOutput3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2440");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException14.setResources("", strArray23);
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String str26 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.Throwable throwable27 = retryOnPrimaryException14.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId30 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.rest.RestStatus restStatus31 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray32 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "retry_on_primary_exception" + "'", str26, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertTrue("'" + restStatus31 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus31.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray32);
    }

    @Test
    public void test2441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2441");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException10.setIndex(index14);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str25 = retryOnPrimaryException21.getDetailedMessage();
        java.lang.Throwable throwable26 = retryOnPrimaryException21.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable26);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        retryOnPrimaryException31.setIndex("");
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = retryOnPrimaryException31.guessRootCauses();
        java.util.Set<java.lang.String> strSet36 = retryOnPrimaryException31.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        retryOnPrimaryException40.setIndex("");
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException40.setResources("", strArray49);
        boolean boolean51 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "hi!");
        retryOnPrimaryException55.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "rest.exception.cause.skip");
        retryOnPrimaryException62.setIndex("");
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException62.setResources("", strArray71);
        retryOnPrimaryException55.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray71);
        retryOnPrimaryException40.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray71);
        retryOnPrimaryException31.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray71);
        retryOnPrimaryException27.setResources("hi!", strArray71);
        retryOnPrimaryException10.addHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", strArray71);
        java.lang.String str78 = retryOnPrimaryException10.toString();
        boolean boolean79 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertEquals("'" + str78 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str78, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
    }

    @Test
    public void test2442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2442");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        java.lang.Throwable throwable11 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str12 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException2.getHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        retryOnPrimaryException2.setIndex("[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "[[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "retry_on_primary_exception" + "'", str12, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList14);
    }

    @Test
    public void test2443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2443");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        retryOnPrimaryException2.setIndex("[RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.rest.RestStatus restStatus6 = retryOnPrimaryException2.status();
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertTrue("'" + restStatus6 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus6.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2444");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException4.setIndex(index7);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getHeader("");
        java.lang.String str11 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        retryOnPrimaryException16.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException23.setResources("", strArray32);
        retryOnPrimaryException16.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray32);
        java.lang.String str35 = retryOnPrimaryException16.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index39 = retryOnPrimaryException38.getIndex();
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.Index index41 = retryOnPrimaryException38.getIndex();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        retryOnPrimaryException45.setIndex("");
        java.lang.Throwable[] throwableArray48 = retryOnPrimaryException45.getSuppressed();
        java.lang.String[] strArray53 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException45.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray53);
        retryOnPrimaryException38.setResources("hi!", strArray53);
        retryOnPrimaryException4.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray53);
        java.lang.Throwable throwable57 = retryOnPrimaryException4.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str35, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index39);
        org.junit.Assert.assertNull(index41);
        org.junit.Assert.assertNotNull(throwableArray48);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(throwable57);
        org.junit.Assert.assertEquals(throwable57.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable57.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable57.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2445");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable17 = retryOnPrimaryException4.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2446");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException24.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable throwable34 = retryOnPrimaryException32.getRootCause();
        java.lang.String[] strArray40 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        retryOnPrimaryException32.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList41);
        retryOnPrimaryException24.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList41);
        java.util.List<java.lang.String> strList46 = retryOnPrimaryException24.getHeader("hi!");
        java.lang.Throwable throwable47 = retryOnPrimaryException24.unwrapCause();
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String str49 = retryOnPrimaryException24.toString();
        java.util.Set<java.lang.String> strSet50 = retryOnPrimaryException24.getHeaderKeys();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable47.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str49, "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet50);
    }

    @Test
    public void test2447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2447");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!");
        retryOnPrimaryException30.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        retryOnPrimaryException37.setIndex("");
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException37.setResources("", strArray46);
        retryOnPrimaryException30.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray46);
        java.lang.String str49 = retryOnPrimaryException30.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index53 = retryOnPrimaryException52.getIndex();
        retryOnPrimaryException30.addSuppressed((java.lang.Throwable) retryOnPrimaryException52);
        retryOnPrimaryException52.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet61 = retryOnPrimaryException60.getHeaderKeys();
        java.lang.Throwable throwable62 = retryOnPrimaryException60.getRootCause();
        java.lang.String[] strArray68 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        retryOnPrimaryException60.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList69);
        retryOnPrimaryException52.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList69);
        retryOnPrimaryException24.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList69);
        org.elasticsearch.index.shard.ShardId shardId74 = retryOnPrimaryException24.getShardId();
        java.util.List<java.lang.String> strList76 = retryOnPrimaryException24.getHeader("[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str49, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index53);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertNotNull(throwable62);
        org.junit.Assert.assertEquals(throwable62.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable62.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable62.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNull(shardId74);
        org.junit.Assert.assertNull(strList76);
    }

    @Test
    public void test2448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2448");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index14 = retryOnPrimaryException13.getIndex();
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException13.getResourceId();
        java.lang.Throwable throwable16 = retryOnPrimaryException13.unwrapCause();
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException13.getHeader("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        java.lang.String str32 = retryOnPrimaryException21.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = retryOnPrimaryException21.guessRootCauses();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException21.getHeaderKeys();
        java.lang.Throwable throwable35 = retryOnPrimaryException21.getRootCause();
        retryOnPrimaryException13.addSuppressed(throwable35);
        retryOnPrimaryException2.addSuppressed(throwable35);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder38 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params39 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder40 = retryOnPrimaryException2.toXContent(xContentBuilder38, params39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str32, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(params39);
    }

    @Test
    public void test2449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2449");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray30 = retryOnPrimaryException2.getSuppressed();
        java.lang.Class<?> wildcardClass31 = throwableArray30.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(throwableArray30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test2450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2450");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) '#');
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index15 = retryOnPrimaryException14.getIndex();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException14.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException14.guessRootCauses();
        retryOnPrimaryException14.setShard("hi!", (int) ' ');
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        retryOnPrimaryException2.setIndex("[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
    }

    @Test
    public void test2451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2451");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet26 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId27 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        java.lang.String[] strArray38 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException31.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        retryOnPrimaryException31.setShard(shardId40);
        java.util.Set<java.lang.String> strSet42 = retryOnPrimaryException31.getHeaderKeys();
        org.elasticsearch.index.Index index43 = retryOnPrimaryException31.getIndex();
        java.lang.Throwable throwable44 = retryOnPrimaryException31.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "hi!");
        retryOnPrimaryException48.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str52 = retryOnPrimaryException48.getDetailedMessage();
        java.lang.Throwable throwable53 = retryOnPrimaryException48.unwrapCause();
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException48.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException48.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "rest.exception.cause.skip");
        retryOnPrimaryException59.setIndex("");
        java.lang.Throwable[] throwableArray62 = retryOnPrimaryException59.getSuppressed();
        retryOnPrimaryException48.addSuppressed((java.lang.Throwable) retryOnPrimaryException59);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "rest.exception.cause.skip");
        boolean boolean68 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException67);
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "rest.exception.cause.skip");
        java.lang.Throwable throwable73 = retryOnPrimaryException72.unwrapCause();
        java.lang.String[] strArray77 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        retryOnPrimaryException72.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList78);
        org.elasticsearch.index.shard.ShardId shardId82 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException84 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId82, "rest.exception.cause.skip");
        java.lang.String[] strArray91 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException84.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray91);
        retryOnPrimaryException72.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray91);
        retryOnPrimaryException67.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray91);
        retryOnPrimaryException59.setResources("retry_on_primary_exception", strArray91);
        retryOnPrimaryException31.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray91);
        retryOnPrimaryException2.setResources("[hi!][[hi!][0]] RetryOnPrimaryException[]", strArray91);
        java.lang.Class<?> wildcardClass98 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(strSet26);
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNull(index43);
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str52, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable53);
        org.junit.Assert.assertEquals(throwable53.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable53.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable53.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(throwable73);
        org.junit.Assert.assertEquals(throwable73.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable73.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable73.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strArray91);
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test2452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2452");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId11 = retryOnPrimaryException2.getShardId();
        java.lang.String str12 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "retry_on_primary_exception" + "'", str12, "retry_on_primary_exception");
    }

    @Test
    public void test2453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2453");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray37);
        java.lang.Throwable[] throwableArray40 = retryOnPrimaryException21.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        retryOnPrimaryException43.setIndex("");
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException43.setResources("", strArray52);
        java.lang.String str54 = retryOnPrimaryException43.toString();
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        java.lang.Throwable throwable56 = retryOnPrimaryException43.unwrapCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        boolean boolean58 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str59 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str54, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable56);
        org.junit.Assert.assertEquals(throwable56.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str59, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2454");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable11 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String str27 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        retryOnPrimaryException15.setShard(shardId28);
        org.elasticsearch.index.shard.ShardId shardId30 = retryOnPrimaryException15.getShardId();
        retryOnPrimaryException15.setShard("hi!", (int) '4');
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException37.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        retryOnPrimaryException37.setShard(shardId41);
        java.util.Set<java.lang.String> strSet43 = retryOnPrimaryException37.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        retryOnPrimaryException47.setIndex("");
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException47.setResources("", strArray56);
        retryOnPrimaryException37.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray56);
        retryOnPrimaryException15.setResources("rest.exception.stacktrace.skip", strArray56);
        retryOnPrimaryException2.addHeader("hi!", strArray56);
        java.lang.String str61 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Class<?> wildcardClass62 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "retry_on_primary_exception" + "'", str27, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNotNull(strSet43);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "retry_on_primary_exception" + "'", str61, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2455");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException22.getHeaderKeys();
        java.lang.Throwable throwable24 = retryOnPrimaryException22.getRootCause();
        java.lang.String[] strArray30 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        retryOnPrimaryException22.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList31);
        retryOnPrimaryException2.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList31);
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId36 = retryOnPrimaryException2.getShardId();
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException2.getHeader("");
        java.lang.Throwable throwable39 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNull(shardId36);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable39.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2456");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        retryOnPrimaryException7.setIndex("");
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException13.setResources("", strArray22);
        java.lang.String str24 = retryOnPrimaryException13.toString();
        retryOnPrimaryException7.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.String str26 = retryOnPrimaryException7.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        retryOnPrimaryException7.setShard(shardId27);
        java.lang.String[] strArray39 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        retryOnPrimaryException7.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList40);
        retryOnPrimaryException2.addHeader("", (java.util.List<java.lang.String>) strList40);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList49 = retryOnPrimaryException48.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray51 = retryOnPrimaryException50.guessRootCauses();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder53 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params54 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder55 = retryOnPrimaryException50.toXContent(xContentBuilder53, params54);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str24, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray51);
        org.junit.Assert.assertNotNull(params54);
    }

    @Test
    public void test2457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2457");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        retryOnPrimaryException9.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (short) 100);
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException9.getSuppressed();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException9);
        retryOnPrimaryException9.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (short) -1);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException9.writeTo(streamOutput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test2458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2458");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        java.lang.String str26 = retryOnPrimaryException15.toString();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String str29 = retryOnPrimaryException2.toString();
        org.elasticsearch.common.io.stream.StreamInput streamInput30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException31 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str26, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str29, "[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2459");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", 0);
    }

    @Test
    public void test2460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2460");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str13 = retryOnPrimaryException10.getResourceType();
        java.lang.String str14 = retryOnPrimaryException10.getDetailedMessage();
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException10.status();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException10.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str19 = retryOnPrimaryException10.getResourceType();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str14, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
    }

    @Test
    public void test2461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2461");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        org.elasticsearch.index.Index index21 = null;
        retryOnPrimaryException2.setIndex(index21);
        java.lang.Throwable throwable23 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList26 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.Throwable throwable27 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNull(strList26);
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable27.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2462");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId23 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertNull(shardId23);
    }

    @Test
    public void test2463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2463");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2464");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId48 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException2, streamOutput51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNull(shardId48);
    }

    @Test
    public void test2465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2465");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        retryOnPrimaryException4.setShard("hi!", (int) '4');
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str24 = retryOnPrimaryException4.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str24, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2466");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException9.guessRootCauses();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException9.getHeaderKeys();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.util.Set<java.lang.String> strSet16 = retryOnPrimaryException9.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException9.getShardId();
        java.lang.Throwable throwable18 = retryOnPrimaryException9.getRootCause();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2467");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId18 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException22.getHeaderKeys();
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "");
        retryOnPrimaryException22.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.rest.RestStatus restStatus31 = retryOnPrimaryException29.status();
        retryOnPrimaryException29.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 0);
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException29.getSuppressed();
        java.lang.Throwable throwable36 = retryOnPrimaryException29.getRootCause();
        org.elasticsearch.rest.RestStatus restStatus37 = retryOnPrimaryException29.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String[] strArray44 = new java.lang.String[] { "[hi!][[hi!][0]] RetryOnPrimaryException[]", "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", "retry_on_primary_exception", "[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException29.addHeader("[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray44);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];", strArray44);
        boolean boolean47 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamInput streamInput48 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException2, streamInput48);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + restStatus31 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus31.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "");
        org.junit.Assert.assertEquals(throwable36.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + restStatus37 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus37.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test2468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2468");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[rest.exception.cause.skip]", (int) (short) 10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2469");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        retryOnPrimaryException7.setIndex("");
        java.lang.String str11 = retryOnPrimaryException7.toString();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException7.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException7.status();
        java.lang.String[] strArray16 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException7.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][10]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];" + "'", str11, "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2470");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException10.getHeaderKeys();
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException10.getResourceId();
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException10.getResourceId();
        retryOnPrimaryException10.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", (int) (short) -1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test2471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2471");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        retryOnPrimaryException18.setIndex("");
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = retryOnPrimaryException18.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.cause.skip");
        retryOnPrimaryException25.setIndex("");
        org.elasticsearch.index.Index index28 = null;
        retryOnPrimaryException25.setIndex(index28);
        org.elasticsearch.rest.RestStatus restStatus30 = retryOnPrimaryException25.status();
        java.lang.Throwable throwable31 = retryOnPrimaryException25.getRootCause();
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException36.getHeaderKeys();
        java.lang.Throwable throwable38 = retryOnPrimaryException36.getRootCause();
        java.lang.String[] strArray44 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        retryOnPrimaryException36.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList45);
        retryOnPrimaryException25.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList45);
        java.lang.String str49 = retryOnPrimaryException25.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId50 = retryOnPrimaryException25.getShardId();
        org.elasticsearch.rest.RestStatus restStatus51 = retryOnPrimaryException25.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray52 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "hi!");
        retryOnPrimaryException56.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        retryOnPrimaryException56.setShard(shardId60);
        java.lang.String str62 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException56);
        java.util.Set<java.lang.String> strSet63 = retryOnPrimaryException56.getHeaderKeys();
        java.util.Set<java.lang.String> strSet64 = retryOnPrimaryException56.getHeaderKeys();
        boolean boolean65 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException56);
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "rest.exception.cause.skip");
        retryOnPrimaryException69.setIndex("");
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException69.setResources("", strArray78);
        boolean boolean80 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException69);
        retryOnPrimaryException69.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        boolean boolean83 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException69);
        retryOnPrimaryException69.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray86 = retryOnPrimaryException69.guessRootCauses();
        java.util.List<java.lang.String> strList87 = retryOnPrimaryException69.getResourceId();
        retryOnPrimaryException56.addHeader("", strList87);
        retryOnPrimaryException25.addHeader("", strList87);
        retryOnPrimaryException2.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", strList87);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertTrue("'" + restStatus30 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus30.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str49, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertTrue("'" + restStatus51 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus51.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray52);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "retry_on_primary_exception" + "'", str62, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNotNull(strSet64);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + false + "'", boolean80 == false);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray86);
        org.junit.Assert.assertNotNull(strList87);
    }

    @Test
    public void test2472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2472");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        java.lang.Throwable throwable40 = retryOnPrimaryException39.unwrapCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        java.lang.String[] strArray45 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException39.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray45);
        retryOnPrimaryException39.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException39);
        retryOnPrimaryException39.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];");
        java.lang.Class<?> wildcardClass52 = retryOnPrimaryException39.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.toString(), "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2473");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        java.lang.String str33 = retryOnPrimaryException9.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        retryOnPrimaryException37.setIndex("");
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException37.setResources("", strArray46);
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException37);
        java.lang.String str49 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        retryOnPrimaryException37.setShard(shardId50);
        org.elasticsearch.index.shard.ShardId shardId52 = retryOnPrimaryException37.getShardId();
        retryOnPrimaryException37.setShard("hi!", (int) '4');
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "hi!");
        retryOnPrimaryException59.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        retryOnPrimaryException59.setShard(shardId63);
        java.util.Set<java.lang.String> strSet65 = retryOnPrimaryException59.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "rest.exception.cause.skip");
        retryOnPrimaryException69.setIndex("");
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException69.setResources("", strArray78);
        retryOnPrimaryException59.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray78);
        retryOnPrimaryException37.setResources("rest.exception.stacktrace.skip", strArray78);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray78);
        java.util.Set<java.lang.String> strSet83 = retryOnPrimaryException9.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput84 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException85 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException9, streamOutput84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "retry_on_primary_exception" + "'", str49, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId52);
        org.junit.Assert.assertNotNull(strSet65);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(strSet83);
    }

    @Test
    public void test2474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2474");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        java.lang.String str41 = retryOnPrimaryException22.getDetailedMessage();
        java.lang.String str42 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str43 = retryOnPrimaryException22.getDetailedMessage();
        java.lang.Throwable throwable44 = retryOnPrimaryException22.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus45 = retryOnPrimaryException22.status();
        java.lang.String str46 = retryOnPrimaryException22.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "rest.exception.cause.skip");
        boolean boolean51 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        java.lang.Throwable throwable56 = retryOnPrimaryException55.unwrapCause();
        java.lang.String[] strArray60 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        retryOnPrimaryException55.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList61);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "rest.exception.cause.skip");
        java.lang.String[] strArray74 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException67.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray74);
        retryOnPrimaryException55.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray74);
        retryOnPrimaryException50.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray74);
        retryOnPrimaryException22.setResources("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray74);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray74);
        java.util.List<java.lang.String> strList80 = retryOnPrimaryException2.getResourceId();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str41, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "retry_on_primary_exception" + "'", str42, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str43, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable44.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus45 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus45.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str46, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(throwable56);
        org.junit.Assert.assertEquals(throwable56.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertNotNull(strList80);
    }

    @Test
    public void test2475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2475");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException2.getHeader("[hi!][[hi!][0]] RetryOnPrimaryException[]");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException21 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException2, streamOutput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList19);
    }

    @Test
    public void test2476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2476");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException17.setIndex(index18);
        java.lang.String str20 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.rest.RestStatus restStatus21 = retryOnPrimaryException17.status();
        retryOnPrimaryException17.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) ' ');
        org.elasticsearch.common.io.stream.StreamInput streamInput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException26 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException17, streamInput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "retry_on_primary_exception" + "'", str20, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus21 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus21.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2477");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable22 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput25 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable22.toString(), "[retry_on_primary_exception][[retry_on_primary_exception][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2478");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet25 = retryOnPrimaryException24.getHeaderKeys();
        java.lang.Throwable throwable26 = retryOnPrimaryException24.getRootCause();
        java.lang.String[] strArray32 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        retryOnPrimaryException24.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList33);
        retryOnPrimaryException4.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList33);
        java.lang.Throwable throwable37 = retryOnPrimaryException4.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, throwable37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2479");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet18 = retryOnPrimaryException17.getHeaderKeys();
        java.lang.Throwable throwable19 = retryOnPrimaryException17.unwrapCause();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
    }

    @Test
    public void test2480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2480");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable6 = retryOnPrimaryException2.getRootCause();
        java.lang.Class<?> wildcardClass7 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test2481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2481");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.Throwable throwable5 = retryOnPrimaryException4.unwrapCause();
        java.lang.String[] strArray9 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        retryOnPrimaryException4.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList10);
        org.elasticsearch.rest.RestStatus restStatus13 = retryOnPrimaryException4.status();
        java.lang.String str14 = retryOnPrimaryException4.toString();
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + restStatus13 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus13.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2482");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable18 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus19 = retryOnPrimaryException2.status();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus19 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus19.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2483");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable16 = retryOnPrimaryException2.getRootCause();
        java.lang.String str17 = retryOnPrimaryException2.toString();
        retryOnPrimaryException2.setIndex("[hi!][[hi!][0]] RetryOnPrimaryException[]");
        java.lang.String[] strArray21 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.setResources("hi!", strArray21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.toString(), "[[hi!][[hi!][0]] RetryOnPrimaryException[]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str17, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2484");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        java.lang.String str10 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet11);
    }

    @Test
    public void test2485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2485");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str16 = retryOnPrimaryException2.getResourceType();
        java.lang.String str17 = retryOnPrimaryException2.getDetailedMessage();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str16, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str17, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test2486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2486");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str18 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException2.getResourceId();
        java.lang.String str20 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "retry_on_primary_exception" + "'", str20, "retry_on_primary_exception");
    }

    @Test
    public void test2487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2487");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet18 = retryOnPrimaryException17.getHeaderKeys();
        java.lang.Throwable throwable19 = retryOnPrimaryException17.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.cause.skip");
        retryOnPrimaryException25.setIndex("");
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException25.setResources("", strArray34);
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        retryOnPrimaryException40.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        retryOnPrimaryException47.setIndex("");
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException47.setResources("", strArray56);
        retryOnPrimaryException40.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray56);
        retryOnPrimaryException25.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray56);
        retryOnPrimaryException20.addHeader("", strArray56);
        retryOnPrimaryException2.setResources("[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray56);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "rest.exception.cause.skip");
        retryOnPrimaryException64.setIndex("");
        java.lang.Throwable[] throwableArray67 = retryOnPrimaryException64.getSuppressed();
        java.lang.String[] strArray72 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException64.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray72);
        java.util.Set<java.lang.String> strSet74 = retryOnPrimaryException64.getHeaderKeys();
        java.lang.Throwable throwable75 = retryOnPrimaryException64.unwrapCause();
        java.lang.String str76 = retryOnPrimaryException64.getResourceType();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException64);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput78 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(throwableArray67);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertNotNull(strSet74);
        org.junit.Assert.assertNotNull(throwable75);
        org.junit.Assert.assertEquals(throwable75.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable75.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable75.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str76);
    }

    @Test
    public void test2488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2488");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str18 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        java.lang.String str41 = retryOnPrimaryException22.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index45 = retryOnPrimaryException44.getIndex();
        retryOnPrimaryException22.addSuppressed((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.index.Index index47 = retryOnPrimaryException44.getIndex();
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "rest.exception.cause.skip");
        retryOnPrimaryException51.setIndex("");
        java.lang.Throwable[] throwableArray54 = retryOnPrimaryException51.getSuppressed();
        java.lang.String[] strArray59 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException51.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray59);
        retryOnPrimaryException44.setResources("hi!", strArray59);
        retryOnPrimaryException2.addHeader("", strArray59);
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index67 = retryOnPrimaryException66.getIndex();
        java.lang.String str68 = retryOnPrimaryException66.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "hi!");
        retryOnPrimaryException72.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId77 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException79 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId77, "rest.exception.cause.skip");
        retryOnPrimaryException79.setIndex("");
        java.lang.String[] strArray88 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException79.setResources("", strArray88);
        retryOnPrimaryException72.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray88);
        retryOnPrimaryException66.setResources("", strArray88);
        retryOnPrimaryException2.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray88);
        java.lang.String str93 = retryOnPrimaryException2.toString();
        boolean boolean94 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList96 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput97 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str18, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str41, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index45);
        org.junit.Assert.assertNull(index47);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNull(index67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str68, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str93, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(strList96);
    }

    @Test
    public void test2489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2489");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str18 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        java.lang.String str41 = retryOnPrimaryException22.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index45 = retryOnPrimaryException44.getIndex();
        retryOnPrimaryException22.addSuppressed((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.index.Index index47 = retryOnPrimaryException44.getIndex();
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "rest.exception.cause.skip");
        retryOnPrimaryException51.setIndex("");
        java.lang.Throwable[] throwableArray54 = retryOnPrimaryException51.getSuppressed();
        java.lang.String[] strArray59 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException51.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray59);
        retryOnPrimaryException44.setResources("hi!", strArray59);
        retryOnPrimaryException2.addHeader("", strArray59);
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index67 = retryOnPrimaryException66.getIndex();
        java.lang.String str68 = retryOnPrimaryException66.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "hi!");
        retryOnPrimaryException72.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId77 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException79 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId77, "rest.exception.cause.skip");
        retryOnPrimaryException79.setIndex("");
        java.lang.String[] strArray88 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException79.setResources("", strArray88);
        retryOnPrimaryException72.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray88);
        retryOnPrimaryException66.setResources("", strArray88);
        retryOnPrimaryException2.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray88);
        java.lang.String str93 = retryOnPrimaryException2.toString();
        boolean boolean94 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList96 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[rest.exception.cause.skip]");
        java.lang.String str97 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str18, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str41, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index45);
        org.junit.Assert.assertNull(index47);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNull(index67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str68, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str93, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertNull(strList96);
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str97, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2490");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        java.lang.Throwable throwable24 = retryOnPrimaryException2.getRootCause();
        java.lang.String str25 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str26 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable27 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder28 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params29 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder30 = retryOnPrimaryException2.toXContent(xContentBuilder28, params29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str26, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(params29);
    }

    @Test
    public void test2491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2491");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str10 = retryOnPrimaryException2.getResourceType();
        java.lang.String str11 = retryOnPrimaryException2.getResourceType();
        java.lang.String str12 = retryOnPrimaryException2.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException14 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException2, streamOutput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str12, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2492");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        java.lang.Throwable[] throwableArray16 = retryOnPrimaryException13.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index22 = retryOnPrimaryException21.getIndex();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException32.setResources("", strArray41);
        java.lang.String str43 = retryOnPrimaryException32.toString();
        retryOnPrimaryException26.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String str45 = retryOnPrimaryException26.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        retryOnPrimaryException26.setShard(shardId46);
        java.lang.String[] strArray58 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        retryOnPrimaryException26.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList59);
        retryOnPrimaryException21.addHeader("", (java.util.List<java.lang.String>) strList59);
        retryOnPrimaryException13.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList59);
        java.util.List<java.lang.String> strList64 = retryOnPrimaryException13.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus65 = retryOnPrimaryException13.status();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder66 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params67 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder68 = retryOnPrimaryException13.toXContent(xContentBuilder66, params67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(index22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str43, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertTrue("'" + restStatus65 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus65.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(params67);
    }

    @Test
    public void test2493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2493");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("hi!", (int) (short) 1);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException16.getHeaderKeys();
        java.util.Set<java.lang.String> strSet18 = retryOnPrimaryException16.getHeaderKeys();
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException16.getSuppressed();
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException16.getHeader("rest.exception.cause.skip");
        java.lang.String str22 = retryOnPrimaryException16.getDetailedMessage();
        retryOnPrimaryException16.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable25 = retryOnPrimaryException16.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId26 = retryOnPrimaryException16.getShardId();
        java.lang.String str27 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable[] throwableArray28 = retryOnPrimaryException16.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "hi!");
        retryOnPrimaryException32.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str36 = retryOnPrimaryException32.getDetailedMessage();
        java.lang.Throwable throwable37 = retryOnPrimaryException32.unwrapCause();
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException32.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException32.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        retryOnPrimaryException43.setIndex("");
        java.lang.Throwable[] throwableArray46 = retryOnPrimaryException43.getSuppressed();
        retryOnPrimaryException32.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet52 = retryOnPrimaryException51.getHeaderKeys();
        java.lang.Throwable throwable53 = retryOnPrimaryException51.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = retryOnPrimaryException51.guessRootCauses();
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException51.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "rest.exception.cause.skip");
        retryOnPrimaryException60.setIndex("");
        org.elasticsearch.index.Index index63 = null;
        retryOnPrimaryException60.setIndex(index63);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet69 = retryOnPrimaryException68.getHeaderKeys();
        retryOnPrimaryException68.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException75 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId73, "");
        retryOnPrimaryException68.addSuppressed((java.lang.Throwable) retryOnPrimaryException75);
        org.elasticsearch.rest.RestStatus restStatus77 = retryOnPrimaryException75.status();
        java.lang.String[] strArray82 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException75.setResources("rest.exception.cause.skip", strArray82);
        retryOnPrimaryException60.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray82);
        retryOnPrimaryException51.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray82);
        retryOnPrimaryException32.addHeader("RetryOnPrimaryException[]", strArray82);
        retryOnPrimaryException16.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray82);
        retryOnPrimaryException2.setResources("[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", strArray82);
        java.lang.String str89 = retryOnPrimaryException2.toString();
        java.lang.String str90 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str22, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "retry_on_primary_exception" + "'", str27, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str36, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable37.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(throwable53);
        org.junit.Assert.assertEquals(throwable53.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable53.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable53.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertTrue("'" + restStatus77 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus77.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[RetryOnPrimaryException[retry_on_primary_exception]][[RetryOnPrimaryException[retry_on_primary_exception]][1]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str89, "[RetryOnPrimaryException[retry_on_primary_exception]][[RetryOnPrimaryException[retry_on_primary_exception]][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str90, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2494");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        retryOnPrimaryException2.setResources("rest.exception.stacktrace.skip", strArray38);
        java.lang.String str42 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId43 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.Index index44 = retryOnPrimaryException2.getIndex();
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (byte) 10);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder48 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params49 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder50 = retryOnPrimaryException2.toXContent(xContentBuilder48, params49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "retry_on_primary_exception" + "'", str42, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNull(index44);
        org.junit.Assert.assertNotNull(params49);
    }

    @Test
    public void test2495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2495");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        retryOnPrimaryException7.setIndex("");
        java.lang.String str11 = retryOnPrimaryException7.toString();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException7.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId14 = retryOnPrimaryException7.getShardId();
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];" + "'", str11, "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNull(shardId14);
    }

    @Test
    public void test2496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2496");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException2.status();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test2497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2497");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException2.getResourceId();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str22 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable23 = retryOnPrimaryException2.unwrapCause();
        java.lang.Class<?> wildcardClass24 = throwable23.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2498");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "retry_on_primary_exception");
        java.lang.String str20 = retryOnPrimaryException19.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "hi!");
        retryOnPrimaryException27.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str31 = retryOnPrimaryException27.getDetailedMessage();
        java.lang.Throwable throwable32 = retryOnPrimaryException27.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable32);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        retryOnPrimaryException37.setIndex("");
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = retryOnPrimaryException37.guessRootCauses();
        java.util.Set<java.lang.String> strSet42 = retryOnPrimaryException37.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        retryOnPrimaryException46.setIndex("");
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException46.setResources("", strArray55);
        boolean boolean57 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "hi!");
        retryOnPrimaryException61.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.cause.skip");
        retryOnPrimaryException68.setIndex("");
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException68.setResources("", strArray77);
        retryOnPrimaryException61.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray77);
        retryOnPrimaryException46.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray77);
        retryOnPrimaryException37.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray77);
        retryOnPrimaryException33.setResources("hi!", strArray77);
        retryOnPrimaryException19.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray77);
        retryOnPrimaryException2.addHeader("", strArray77);
        java.lang.String str85 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable86 = retryOnPrimaryException2.getRootCause();
        java.util.Set<java.lang.String> strSet87 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable88 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList90 = retryOnPrimaryException2.getHeader("[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str20, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str31, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable32.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str85, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable86);
        org.junit.Assert.assertEquals(throwable86.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable86.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable86.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet87);
        org.junit.Assert.assertNotNull(throwable88);
        org.junit.Assert.assertEquals(throwable88.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable88.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable88.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList90);
    }

    @Test
    public void test2499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2499");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("hi!", (int) (short) 1);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        java.lang.String str13 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[rest.exception.stacktrace.skip]", 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest4.test2500");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str28 = retryOnPrimaryException24.getDetailedMessage();
        java.lang.Throwable throwable29 = retryOnPrimaryException24.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable29);
        org.elasticsearch.index.Index index31 = retryOnPrimaryException30.getIndex();
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable[] throwableArray34 = retryOnPrimaryException30.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        retryOnPrimaryException2.setIndex("hi!");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        retryOnPrimaryException41.setIndex("");
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException41.setResources("", strArray50);
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        retryOnPrimaryException55.setIndex("");
        java.lang.Throwable[] throwableArray58 = retryOnPrimaryException55.getSuppressed();
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException55);
        retryOnPrimaryException41.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.Throwable[] throwableArray65 = retryOnPrimaryException41.getSuppressed();
        java.lang.String str66 = retryOnPrimaryException41.toString();
        retryOnPrimaryException41.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 100);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][-1]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str66, "[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][-1]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }
}

