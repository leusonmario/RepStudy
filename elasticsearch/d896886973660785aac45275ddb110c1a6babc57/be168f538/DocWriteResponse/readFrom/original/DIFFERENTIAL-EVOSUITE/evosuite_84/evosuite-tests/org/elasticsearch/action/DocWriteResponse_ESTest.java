/*
 * This file was automatically generated by EvoSuite
 * Sat Nov 06 07:16:19 GMT 2021
 */

package org.elasticsearch.action;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import org.elasticsearch.action.update.UpdateResponse;
import org.elasticsearch.common.bytes.BytesArray;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class DocWriteResponse_ESTest extends DocWriteResponse_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test0()  throws Throwable  {
      UpdateResponse updateResponse0 = new UpdateResponse();
      // EXCEPTION DIFF:
      // The original version did not exhibit this exception:
      //     java.lang.IllegalArgumentException : object is not an instance of declaring class
      updateResponse0.forcedRefresh();
      byte[] byteArray0 = new byte[6];
      BytesArray bytesArray0 = new BytesArray(byteArray0, (byte) (-73), (byte) (-31));
      // EXCEPTION DIFF:
      // The modified version did not exhibit this exception:
      //     org.evosuite.runtime.mock.java.lang.MockIllegalArgumentException : can't slice a buffer with length [-31], with slice parameters from [111], length [0]
      // Undeclared exception!
      try { 
        bytesArray0.slice((byte)111, 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // can't slice a buffer with length [-31], with slice parameters from [111], length [0]
         //
         verifyException("org.elasticsearch.common.bytes.BytesArray", e);
         assertTrue(e.getMessage().equals("can't slice a buffer with length [-31], with slice parameters from [111], length [0]"));   
      }
  }
}
