/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Oct 29 21:54:43 GMT 2021
 */

package org.elasticsearch.index.query;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

import static org.evosuite.shaded.org.mockito.Mockito.*;
@EvoSuiteClassExclude
public class MultiMatchQueryBuilder_ESTest_scaffolding {

  @org.junit.Rule 
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 10000);


  @BeforeClass 
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.elasticsearch.index.query.MultiMatchQueryBuilder"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    try { initMocksToAvoidTimeoutsInTheTests(); } catch(ClassNotFoundException e) {} 
  } 

  @AfterClass 
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before 
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After 
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("file.encoding", "UTF-8"); 
    java.lang.System.setProperty("java.awt.headless", "true"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
    java.lang.System.setProperty("user.country", "US"); 
    java.lang.System.setProperty("user.dir", "/home/CIN/lmps2/semantic-conflict-study/SMAT/output-test-dest/elasticsearch/59cb67c7bd0ab6311115b20954e013412b676b29/evosuite_10"); 
    java.lang.System.setProperty("user.home", "/home/CIN/lmps2"); 
    java.lang.System.setProperty("user.language", "en"); 
    java.lang.System.setProperty("user.name", "lmps2"); 
    java.lang.System.setProperty("user.timezone", "America/Recife"); 
    java.lang.System.setProperty("sun.arch.data.model", "64"); 
    java.lang.System.setProperty("sun.boot.class.path", "/usr/lib/jvm/jdk1.8.0_291/jre/lib/resources.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/rt.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/sunrsasign.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/jsse.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/jce.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/charsets.jar:/usr/lib/jvm/jdk1.8.0_291/jre/lib/jfr.jar:/usr/lib/jvm/jdk1.8.0_291/jre/classes"); 
    java.lang.System.setProperty("log4j.configuration", "SUT.log4j.properties"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(MultiMatchQueryBuilder_ESTest_scaffolding.class.getClassLoader() ,
      "org.elasticsearch.common.util.CancellableThreads$ExecutionCancelledException",
      "org.joda.time.DateTimeZone",
      "org.elasticsearch.ElasticsearchSecurityException",
      "org.elasticsearch.index.snapshots.IndexShardRestoreException",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.SequenceStartEvent",
      "org.elasticsearch.common.io.BytesStream",
      "org.elasticsearch.http.BindHttpException",
      "com.google.common.collect.Collections2",
      "org.elasticsearch.common.unit.SizeValue",
      "com.google.common.collect.PeekingIterator",
      "org.elasticsearch.index.engine.SnapshotFailedEngineException",
      "org.apache.lucene.util.QueryBuilder",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.StreamStartEvent",
      "org.elasticsearch.cluster.routing.IllegalShardRoutingStateException",
      "org.elasticsearch.transport.ActionTransportException",
      "com.fasterxml.jackson.dataformat.smile.SmileGenerator$SharedStringNode",
      "org.elasticsearch.common.logging.ESLogger",
      "org.elasticsearch.index.engine.CreateFailedEngineException",
      "org.joda.time.DateTimeFieldType$StandardDateTimeFieldType",
      "com.carrotsearch.hppc.ObjectFloatMap",
      "com.google.common.collect.Platform",
      "com.google.common.collect.NullsLastOrdering",
      "org.elasticsearch.common.util.BigArrays$FloatArrayWrapper",
      "com.google.common.collect.RegularImmutableMap",
      "com.google.common.collect.RegularImmutableBiMap",
      "org.elasticsearch.cluster.routing.allocation.decider.Decision$Type",
      "org.elasticsearch.common.io.FastStringReader",
      "org.elasticsearch.common.logging.log4j.Log4jESLogger",
      "com.fasterxml.jackson.core.util.Instantiatable",
      "org.elasticsearch.index.engine.DeleteFailedEngineException",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectNothing",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.MappingEndEvent",
      "org.elasticsearch.snapshots.SnapshotException",
      "org.apache.lucene.util.Accountable",
      "com.carrotsearch.hppc.Containers",
      "com.google.common.collect.ImmutableMapEntry$TerminalEntry",
      "org.elasticsearch.ElasticsearchParseException",
      "org.elasticsearch.transport.TransportException",
      "org.elasticsearch.indices.IndexPrimaryShardNotAllocatedException",
      "org.elasticsearch.index.mapper.MapperException",
      "com.google.common.base.Joiner",
      "org.elasticsearch.indices.InvalidTypeNameException",
      "org.elasticsearch.index.query.MatchQueryBuilder",
      "org.elasticsearch.index.shard.IndexShardClosedException",
      "org.joda.time.field.BaseDateTimeField",
      "com.google.common.collect.NullsFirstOrdering",
      "org.elasticsearch.script.expression.ExpressionScriptCompilationException",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$Indenter",
      "org.elasticsearch.common.io.stream.Streamable",
      "org.elasticsearch.indices.recovery.RecoverFilesRecoveryException",
      "org.elasticsearch.common.io.stream.BytesStreamOutput",
      "org.elasticsearch.cluster.routing.allocation.decider.Decision$Single",
      "org.elasticsearch.transport.PlainTransportFuture",
      "com.carrotsearch.hppc.BitMixer",
      "org.apache.log4j.Hierarchy",
      "org.joda.time.format.DateTimePrinterInternalPrinter",
      "org.elasticsearch.common.util.concurrent.BaseFuture",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectFirstDocumentStart",
      "org.elasticsearch.index.translog.TranslogCorruptedException",
      "org.elasticsearch.cluster.node.DiscoveryNode",
      "com.google.common.collect.Lists$Partition",
      "com.carrotsearch.hppc.ObjectContainer",
      "com.fasterxml.jackson.dataformat.yaml.YAMLParser",
      "org.elasticsearch.common.logging.log4j.Log4jESLoggerFactory",
      "org.elasticsearch.search.fetch.FetchPhaseExecutionException",
      "org.elasticsearch.common.util.concurrent.BaseFuture$Sync",
      "org.elasticsearch.common.util.BigObjectArray",
      "org.elasticsearch.common.util.FloatArray",
      "org.elasticsearch.common.component.AbstractComponent",
      "org.elasticsearch.common.util.AbstractBigArray",
      "org.elasticsearch.common.xcontent.XContentString",
      "org.elasticsearch.common.util.ObjectArray",
      "org.joda.time.field.PreciseDateTimeField",
      "org.elasticsearch.common.io.stream.StreamableReader",
      "org.elasticsearch.common.util.concurrent.EsRejectedExecutionException",
      "org.elasticsearch.common.logging.ESLoggerFactory",
      "com.fasterxml.jackson.core.base.ParserMinimalBase",
      "com.google.common.collect.RegularImmutableSortedMap$EntrySet",
      "com.google.common.collect.ImmutableSortedSetFauxverideShim",
      "org.apache.log4j.helpers.OptionConverter",
      "com.google.common.collect.ImmutableMapValues",
      "com.google.common.collect.ImmutableEntry",
      "org.elasticsearch.snapshots.SnapshotMissingException",
      "com.google.common.base.Joiner$1",
      "com.google.common.base.Joiner$2",
      "com.fasterxml.jackson.dataformat.smile.SmileUtil",
      "org.elasticsearch.transport.TransportRequest",
      "com.fasterxml.jackson.core.SerializableString",
      "com.google.common.collect.ImmutableCollection",
      "com.fasterxml.jackson.core.Versioned",
      "org.elasticsearch.common.blobstore.BlobStoreException",
      "com.google.common.collect.ImmutableEnumMap",
      "org.elasticsearch.common.util.LongArray",
      "org.elasticsearch.common.settings.Settings",
      "com.carrotsearch.hppc.FloatCollection",
      "org.elasticsearch.common.geo.GeoPoint",
      "org.joda.time.DateTimeField",
      "org.elasticsearch.repositories.RepositoryException",
      "org.apache.log4j.Category",
      "org.elasticsearch.common.lease.Releasable",
      "com.google.common.collect.ImmutableSetMultimap",
      "org.elasticsearch.transport.ReceiveTimeoutTransportException",
      "org.elasticsearch.search.aggregations.AggregationExecutionException",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.fasterxml.jackson.dataformat.cbor.CBORParser$Feature",
      "org.elasticsearch.common.logging.support.LoggerMessageFormat",
      "org.elasticsearch.percolator.PercolateException",
      "com.google.common.collect.Lists$AbstractListWrapper",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectFirstBlockMappingKey",
      "org.elasticsearch.search.aggregations.AggregationInitializationException",
      "org.elasticsearch.index.query.MatchQueryBuilder$Operator",
      "org.elasticsearch.script.groovy.GroovyScriptCompilationException",
      "org.elasticsearch.index.query.QueryParseContext",
      "org.joda.time.format.DateTimeFormatterBuilder$Composite",
      "org.elasticsearch.index.search.MatchQuery$Type",
      "org.elasticsearch.transport.ActionNotFoundTransportException",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart",
      "org.elasticsearch.transport.RemoteTransportException",
      "org.elasticsearch.Version",
      "org.elasticsearch.index.query.BoostableQueryBuilder",
      "org.elasticsearch.transport.TransportFuture",
      "org.elasticsearch.cluster.routing.RoutingException",
      "org.elasticsearch.index.engine.Engine$Operation",
      "com.google.common.collect.Lists$2",
      "com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.CollectionStartEvent",
      "org.elasticsearch.index.engine.DocumentSourceMissingException",
      "com.google.common.collect.Lists$1",
      "org.elasticsearch.index.engine.FlushNotAllowedEngineException",
      "org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber",
      "org.elasticsearch.common.settings.NoClassSettingsException",
      "org.elasticsearch.common.xcontent.smile.SmileXContentGenerator",
      "org.elasticsearch.common.logging.DeprecationLogger",
      "org.elasticsearch.common.xcontent.XContentType",
      "org.elasticsearch.rest.action.admin.indices.alias.delete.AliasesNotFoundException",
      "com.google.common.collect.Multiset",
      "com.fasterxml.jackson.dataformat.cbor.CBORGenerator",
      "org.elasticsearch.action.support.replication.TransportReplicationAction$RetryOnPrimaryException",
      "org.elasticsearch.ElasticsearchTimeoutException",
      "com.google.common.collect.ImmutableList",
      "org.elasticsearch.common.util.BigArrays$AbstractArrayWrapper",
      "com.google.common.collect.ReverseOrdering",
      "org.elasticsearch.repositories.RepositoryVerificationException",
      "org.elasticsearch.common.unit.TimeValue",
      "com.fasterxml.jackson.dataformat.yaml.YAMLFactory",
      "org.elasticsearch.common.util.BigArrays$LongArrayWrapper",
      "org.elasticsearch.script.groovy.GroovyScriptExecutionException",
      "org.elasticsearch.index.shard.IndexShardState",
      "org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter",
      "org.elasticsearch.action.support.ToXContentToBytes",
      "org.elasticsearch.common.io.CharSequenceReader",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.StreamEndEvent",
      "org.apache.log4j.spi.AppenderAttachable",
      "org.elasticsearch.action.ShardOperationFailedException",
      "org.elasticsearch.common.RandomBasedUUIDGenerator",
      "org.elasticsearch.action.UnavailableShardsException",
      "org.elasticsearch.index.engine.FlushFailedEngineException",
      "org.elasticsearch.common.xcontent.json.JsonXContentGenerator",
      "com.google.common.collect.Maps$EntryTransformer",
      "com.google.common.collect.Ordering",
      "com.fasterxml.jackson.core.io.IOContext",
      "org.elasticsearch.common.util.BigLongArray",
      "com.fasterxml.jackson.core.PrettyPrinter",
      "org.joda.time.DurationFieldType$StandardDurationFieldType",
      "com.carrotsearch.hppc.FloatContainer",
      "com.fasterxml.jackson.core.base.GeneratorBase",
      "com.google.common.collect.AllEqualOrdering",
      "org.elasticsearch.index.snapshots.IndexShardSnapshotFailedException",
      "com.google.common.collect.Hashing",
      "org.elasticsearch.common.io.stream.StreamOutput",
      "org.elasticsearch.discovery.MasterNotDiscoveredException",
      "org.apache.lucene.index.IndexFormatTooNewException",
      "org.joda.time.format.DateTimeFormatterBuilder$StringLiteral",
      "org.elasticsearch.common.property.PropertyPlaceholder$PlaceholderResolver",
      "org.elasticsearch.common.xcontent.XContentBuilder",
      "org.elasticsearch.indices.IndexClosedException",
      "org.elasticsearch.transport.ConnectTransportException",
      "org.elasticsearch.transport.ResponseHandlerFailureTransportException",
      "org.elasticsearch.indices.IndexCreationException",
      "org.joda.time.DateTimeFieldType",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.MappingStartEvent",
      "org.elasticsearch.ElasticsearchGenerationException",
      "org.joda.time.format.DateTimeFormatterBuilder$Fraction",
      "org.elasticsearch.cluster.node.DiscoveryNodeService$CustomAttributesProvider",
      "com.fasterxml.jackson.core.json.JsonWriteContext",
      "org.elasticsearch.search.SearchContextMissingException",
      "com.fasterxml.jackson.core.io.UTF8Writer",
      "com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature",
      "org.elasticsearch.common.util.AbstractArray",
      "com.carrotsearch.hppc.Containers$1",
      "com.google.common.collect.SortedMapDifference",
      "com.google.common.collect.RegularImmutableSet",
      "org.elasticsearch.cluster.metadata.SnapshotId",
      "com.google.common.collect.SortedLists$KeyPresentBehavior$2",
      "com.google.common.collect.SortedLists$KeyPresentBehavior$1",
      "com.google.common.collect.LexicographicalOrdering",
      "org.elasticsearch.index.query.MultiMatchQueryBuilder",
      "org.elasticsearch.indices.InvalidAliasNameException",
      "org.elasticsearch.common.util.BigArrays$ByteArrayWrapper",
      "org.elasticsearch.indices.InvalidIndexNameException",
      "com.fasterxml.jackson.core.base.ParserBase",
      "com.google.common.collect.SortedLists$KeyPresentBehavior$4",
      "com.google.common.collect.SortedLists$KeyPresentBehavior$3",
      "com.google.common.collect.SortedLists$KeyPresentBehavior$5",
      "org.elasticsearch.index.query.QueryParsingException",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.util.ArrayStack",
      "com.google.common.collect.ImmutableAsList",
      "com.fasterxml.jackson.core.JsonGenerator",
      "com.google.common.collect.RegularImmutableAsList",
      "org.elasticsearch.index.translog.TruncatedTranslogException",
      "org.elasticsearch.index.shard.IndexShardRelocatedException",
      "org.elasticsearch.common.util.BigArrays$DoubleArrayWrapper",
      "com.google.common.collect.SingletonImmutableSet",
      "org.apache.log4j.helpers.Loader",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem",
      "org.elasticsearch.indices.IndexTemplateAlreadyExistsException",
      "com.google.common.collect.ImmutableMapEntrySet",
      "org.elasticsearch.common.bytes.BytesArray",
      "com.fasterxml.jackson.core.JsonEncoding",
      "org.elasticsearch.cluster.block.ClusterBlockException",
      "com.fasterxml.jackson.core.JsonGenerationException",
      "org.elasticsearch.transport.TransportResponse",
      "com.google.common.collect.ImmutableSortedMap",
      "org.elasticsearch.common.xcontent.support.filtering.FilterContext",
      "com.google.common.collect.ObjectArrays",
      "org.elasticsearch.action.NoSuchNodeException",
      "com.fasterxml.jackson.core.json.UTF8JsonGenerator",
      "com.google.common.collect.AbstractIterator",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot",
      "com.google.common.collect.ImmutableList$1",
      "org.elasticsearch.transport.SendRequestTransportException",
      "com.google.common.collect.ImmutableMap$MapViewOfValuesAsSingletonSets",
      "com.google.common.collect.SortedIterable",
      "org.elasticsearch.cluster.routing.RoutingValidationException",
      "org.elasticsearch.common.io.stream.NotSerializableExceptionWrapper",
      "org.elasticsearch.index.engine.DeleteByQueryFailedEngineException",
      "com.google.common.collect.UnmodifiableIterator",
      "org.elasticsearch.ElasticsearchException",
      "com.google.common.collect.Maps$EntryFunction",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter",
      "org.elasticsearch.action.PrimaryMissingActionException",
      "org.elasticsearch.action.FailedNodeException",
      "com.fasterxml.jackson.core.json.WriterBasedJsonGenerator",
      "com.google.common.collect.Maps$EntryFunction$2",
      "com.google.common.collect.Maps$EntryFunction$1",
      "com.fasterxml.jackson.core.sym.Name1",
      "com.fasterxml.jackson.core.sym.Name2",
      "com.fasterxml.jackson.core.sym.Name3",
      "com.google.common.collect.EmptyImmutableSortedSet",
      "org.apache.lucene.index.CorruptIndexException",
      "com.google.common.collect.ImmutableEnumSet",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.EmitterState",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.Event",
      "com.fasterxml.jackson.core.io.NumberOutput",
      "org.elasticsearch.action.RoutingMissingException",
      "org.elasticsearch.common.ParseFieldMatcher",
      "org.elasticsearch.search.suggest.SuggestBuilder$SuggestionBuilder",
      "org.elasticsearch.index.snapshots.IndexShardRestoreFailedException",
      "com.google.common.collect.SingletonImmutableList",
      "org.joda.time.format.DateTimeFormatterBuilder$MatchingParser",
      "org.elasticsearch.common.util.BigIntArray",
      "com.google.common.base.Converter",
      "com.google.common.base.Function",
      "com.google.common.collect.ImmutableMap",
      "org.elasticsearch.index.search.MatchQuery$MatchQueryBuilder",
      "org.apache.lucene.util.BytesRef",
      "org.elasticsearch.indices.recovery.DelayRecoveryException",
      "org.elasticsearch.common.bytes.BytesReference",
      "org.elasticsearch.snapshots.InvalidSnapshotNameException",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.CollectionEndEvent",
      "org.joda.time.tz.Provider",
      "com.google.common.collect.ImmutableSortedMapFauxverideShim",
      "org.elasticsearch.common.transport.TransportAddress",
      "org.elasticsearch.indices.recovery.RecoveryState",
      "com.google.common.collect.ExplicitOrdering",
      "org.elasticsearch.repositories.RepositoryMissingException",
      "org.joda.time.DurationFieldType",
      "org.elasticsearch.script.expression.ExpressionScriptExecutionException",
      "org.elasticsearch.common.xcontent.json.BaseJsonGenerator",
      "org.elasticsearch.common.util.BigDoubleArray",
      "org.elasticsearch.common.xcontent.cbor.CborXContentGenerator",
      "com.google.common.collect.ImmutableList$Builder",
      "org.elasticsearch.indices.recovery.StartRecoveryRequest",
      "org.elasticsearch.cluster.routing.ShardRouting",
      "org.elasticsearch.search.SearchShardTarget",
      "org.apache.log4j.PropertyConfigurator",
      "org.elasticsearch.index.search.MatchQuery",
      "org.elasticsearch.search.suggest.context.ContextMapping$ContextQuery",
      "com.google.common.collect.Iterators",
      "com.google.common.collect.CompoundOrdering",
      "org.elasticsearch.common.io.stream.ByteBufferStreamInput",
      "com.fasterxml.jackson.core.JsonParser$Feature",
      "com.fasterxml.jackson.core.io.SerializedString",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter",
      "org.elasticsearch.search.suggest.context.GeolocationContextMapping$GeoQuery",
      "com.fasterxml.jackson.dataformat.yaml.UTF8Reader",
      "org.elasticsearch.search.query.QueryPhaseExecutionException",
      "com.google.common.collect.SingletonImmutableBiMap",
      "com.fasterxml.jackson.dataformat.smile.SmileParser$Feature",
      "org.elasticsearch.client.Requests",
      "org.elasticsearch.common.Classes",
      "org.elasticsearch.index.mapper.MapperParsingException",
      "org.elasticsearch.common.util.BigByteArray",
      "com.fasterxml.jackson.core.sym.NameN",
      "com.carrotsearch.hppc.Preallocable",
      "org.elasticsearch.common.xcontent.XContentBuilderString",
      "org.elasticsearch.common.TimeBasedUUIDGenerator",
      "org.elasticsearch.common.SecureRandomHolder",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions$FlowStyle",
      "org.apache.lucene.index.IndexFormatTooOldException",
      "com.google.common.collect.ReverseNaturalOrdering",
      "org.elasticsearch.common.bytes.PagedBytesReference$PagedBytesReferenceStreamInput",
      "com.google.common.collect.Maps",
      "com.google.common.collect.SetMultimap",
      "org.joda.time.UTCDateTimeZone",
      "com.google.common.collect.DescendingImmutableSortedSet",
      "org.elasticsearch.common.breaker.CircuitBreakingException",
      "org.elasticsearch.index.mapper.StrictDynamicMappingException",
      "org.apache.log4j.spi.LoggerRepository",
      "org.elasticsearch.common.bytes.PagedBytesReference",
      "com.google.common.collect.Iterators$MergingIterator",
      "org.elasticsearch.indices.TypeMissingException",
      "com.carrotsearch.hppc.ObjectFloatHashMap",
      "org.elasticsearch.index.shard.IndexShardRecoveryException",
      "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer",
      "org.elasticsearch.common.ContextAndHeaderHolder",
      "com.google.common.collect.Lists$RandomAccessPartition",
      "org.apache.lucene.store.AlreadyClosedException",
      "org.elasticsearch.node.NodeClosedException",
      "org.elasticsearch.index.shard.ShardNotFoundException",
      "org.elasticsearch.common.xcontent.yaml.YamlXContent",
      "org.apache.log4j.Level",
      "com.google.common.collect.SortedLists",
      "org.elasticsearch.action.support.broadcast.BroadcastShardOperationFailedException",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.ScalarEvent",
      "com.google.common.collect.Sets$2",
      "com.google.common.collect.Sets$3",
      "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
      "com.google.common.collect.Sets$1",
      "org.elasticsearch.common.ParseField$Flag",
      "org.elasticsearch.cluster.routing.RoutingTableValidation",
      "com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo",
      "com.fasterxml.jackson.core.io.JsonStringEncoder",
      "org.elasticsearch.script.ScriptException",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingSimpleValue",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.EmitterException",
      "org.elasticsearch.transport.TransportResponse$Empty",
      "org.elasticsearch.common.xcontent.ToXContent$MapParams",
      "org.elasticsearch.cluster.ClusterChangedEvent",
      "com.google.common.collect.ByFunctionOrdering",
      "org.elasticsearch.common.UUIDGenerator",
      "org.elasticsearch.index.shard.TranslogRecoveryPerformer$BatchOperationException",
      "org.elasticsearch.snapshots.SnapshotCreationException",
      "com.google.common.collect.AbstractMapEntry",
      "com.fasterxml.jackson.dataformat.cbor.CBORGenerator$Feature",
      "com.google.common.collect.Iterators$12",
      "com.google.common.collect.Iterators$11",
      "com.google.common.collect.EmptyImmutableBiMap",
      "com.google.common.base.Predicate",
      "org.elasticsearch.index.engine.DocumentMissingException",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions",
      "org.elasticsearch.search.suggest.term.TermSuggestionBuilder",
      "org.elasticsearch.search.SearchException",
      "org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset",
      "com.fasterxml.jackson.core.json.ReaderBasedJsonParser",
      "org.elasticsearch.common.collect.ImmutableOpenMap",
      "com.fasterxml.jackson.dataformat.cbor.CBORParser",
      "org.apache.lucene.store.LockObtainFailedException",
      "org.elasticsearch.indices.recovery.RecoveryFailedException",
      "com.google.common.collect.Iterators$13",
      "org.elasticsearch.index.search.MatchQuery$ZeroTermsQuery",
      "com.google.common.collect.Lists",
      "org.elasticsearch.common.text.Text",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter",
      "com.google.common.collect.UnmodifiableListIterator",
      "org.elasticsearch.common.regex.Regex",
      "org.elasticsearch.index.IndexShardAlreadyExistsException",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectStreamStart",
      "com.google.common.collect.ImmutableMultimap",
      "org.elasticsearch.index.engine.VersionConflictEngineException",
      "org.elasticsearch.index.engine.EngineException",
      "com.fasterxml.jackson.core.util.BufferRecycler",
      "org.elasticsearch.common.logging.Loggers",
      "com.google.common.collect.ImmutableSortedSet",
      "org.elasticsearch.index.engine.DocumentAlreadyExistsException",
      "org.elasticsearch.index.query.QueryBuilder",
      "com.google.common.base.Charsets",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "com.google.common.collect.Maps$BiMapConverter",
      "org.elasticsearch.common.unit.RatioValue",
      "org.elasticsearch.common.xcontent.smile.SmileXContent",
      "org.elasticsearch.node.settings.NodeSettingsService$Listener",
      "com.carrotsearch.hppc.ObjectObjectMap",
      "com.google.common.base.Joiner$MapJoiner",
      "org.elasticsearch.cluster.routing.allocation.decider.Decision",
      "org.elasticsearch.indices.IndexTemplateMissingException",
      "org.joda.time.tz.FixedDateTimeZone",
      "com.fasterxml.jackson.dataformat.smile.SmileFactory",
      "org.elasticsearch.common.xcontent.XContentParser",
      "org.elasticsearch.common.lucene.Lucene$EarlyTerminationException",
      "org.elasticsearch.indices.AliasFilterParsingException",
      "com.fasterxml.jackson.core.util.ByteArrayBuilder",
      "org.elasticsearch.index.engine.ForceMergeFailedEngineException",
      "org.apache.lucene.util.CharsRef",
      "com.google.common.base.Preconditions",
      "org.elasticsearch.common.logging.jdk.JdkESLoggerFactory",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.error.YAMLException",
      "org.joda.time.format.DateTimeParser",
      "org.elasticsearch.snapshots.ConcurrentSnapshotExecutionException",
      "com.google.common.collect.RegularImmutableSortedMap",
      "org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral",
      "org.elasticsearch.common.xcontent.XContent",
      "org.apache.log4j.or.ObjectRenderer",
      "org.elasticsearch.index.engine.RecoveryEngineException",
      "org.elasticsearch.common.util.BigArrays$IntArrayWrapper",
      "com.google.common.collect.EmptyImmutableSortedMap",
      "org.elasticsearch.cluster.routing.allocation.decider.Decision$Multi",
      "org.elasticsearch.common.logging.support.AbstractESLogger",
      "org.elasticsearch.common.unit.Fuzziness",
      "org.elasticsearch.index.engine.Engine$DeleteByQuery",
      "org.elasticsearch.common.util.concurrent.UncategorizedExecutionException",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter",
      "org.elasticsearch.index.engine.IndexFailedEngineException",
      "org.elasticsearch.common.util.CollectionUtils",
      "org.elasticsearch.common.xcontent.XContentGenerator",
      "org.elasticsearch.transport.NodeDisconnectedException",
      "org.elasticsearch.index.AlreadyExpiredException",
      "com.google.common.collect.Iterators$6",
      "com.google.common.collect.BiMap",
      "org.joda.time.format.ISODateTimeFormat",
      "com.google.common.collect.Iterators$7",
      "com.google.common.collect.ImmutableSet",
      "com.google.common.collect.ImmutableMapEntry",
      "com.google.common.collect.ImmutableSortedAsList",
      "org.elasticsearch.common.xcontent.ToXContent",
      "org.elasticsearch.client.transport.NoNodeAvailableException",
      "org.joda.time.IllegalInstantException",
      "com.google.common.collect.Iterators$1",
      "com.fasterxml.jackson.core.util.DefaultIndenter",
      "com.google.common.collect.Iterators$2",
      "com.google.common.collect.Iterators$3",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.ImplicitTuple",
      "org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber",
      "org.elasticsearch.common.xcontent.yaml.YamlXContentGenerator",
      "org.apache.lucene.util.RamUsageEstimator",
      "org.apache.log4j.spi.LoggerFactory",
      "org.apache.log4j.spi.Configurator",
      "com.google.common.collect.Lists$StringAsImmutableList",
      "com.fasterxml.jackson.core.util.JsonGeneratorDelegate",
      "org.elasticsearch.index.percolator.PercolatorException",
      "org.elasticsearch.index.engine.IgnoreOnRecoveryEngineException",
      "org.elasticsearch.common.xcontent.XContentBuilder$FieldCaseConversion",
      "com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer",
      "com.fasterxml.jackson.dataformat.yaml.UTF8Writer",
      "org.elasticsearch.transport.BindTransportException",
      "com.google.common.collect.AbstractMultimap",
      "org.elasticsearch.index.shard.IndexShardRecoveringException",
      "org.elasticsearch.common.Booleans",
      "org.elasticsearch.node.settings.NodeSettingsService",
      "org.elasticsearch.index.Index",
      "org.apache.lucene.util.CharsRef$UTF16SortedAsUTF8Comparator",
      "com.google.common.collect.EmptyImmutableSet",
      "org.elasticsearch.cluster.metadata.ProcessClusterEventTimeoutException",
      "org.elasticsearch.common.Strings",
      "com.fasterxml.jackson.dataformat.smile.SmileParser",
      "org.elasticsearch.cluster.ClusterService",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.NodeEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.DocumentStartEvent",
      "org.elasticsearch.indices.IndexAlreadyExistsException",
      "org.elasticsearch.script.Script$ScriptParseException",
      "org.elasticsearch.common.HasHeaders",
      "com.fasterxml.jackson.core.JsonParser",
      "org.elasticsearch.search.SearchContextException",
      "org.joda.time.format.DateTimeFormatter",
      "org.elasticsearch.search.suggest.context.CategoryContextMapping$FieldQuery",
      "org.elasticsearch.search.builder.SearchSourceBuilderException",
      "com.fasterxml.jackson.core.JsonProcessingException",
      "com.fasterxml.jackson.core.JsonStreamContext",
      "com.google.common.collect.ImmutableMap$Builder",
      "org.apache.lucene.util.Version",
      "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket",
      "org.joda.time.format.DateTimeParserInternalParser",
      "com.carrotsearch.hppc.HashOrderMixing$1",
      "org.apache.log4j.Priority",
      "org.apache.lucene.util.Constants",
      "org.elasticsearch.common.util.DoubleArray",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitable",
      "org.elasticsearch.common.io.stream.StreamInput",
      "org.elasticsearch.common.xcontent.ToXContent$DelegatingMapParams",
      "org.elasticsearch.transport.NodeNotConnectedException",
      "com.google.common.collect.NaturalOrdering",
      "org.apache.log4j.LogManager",
      "org.elasticsearch.common.xcontent.ToXContent$Params",
      "org.elasticsearch.common.xcontent.support.filtering.FilterContext$Type",
      "com.carrotsearch.hppc.HashOrderMixing$4",
      "org.elasticsearch.index.shard.ShardId",
      "org.elasticsearch.search.dfs.DfsPhaseExecutionException",
      "com.fasterxml.jackson.core.io.CharTypes",
      "com.google.common.collect.ImmutableList$SubList",
      "org.elasticsearch.common.HasContextAndHeaders",
      "org.elasticsearch.common.util.BigArrays",
      "com.google.common.collect.SortedLists$KeyAbsentBehavior",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.joda.time.format.ISODateTimeFormat$Constants",
      "org.elasticsearch.common.xcontent.json.JsonXContent",
      "com.google.common.collect.ImmutableSortedMap$Builder",
      "org.elasticsearch.cluster.ClusterStateListener",
      "org.elasticsearch.action.search.ReduceSearchPhaseException",
      "org.apache.log4j.or.RendererMap",
      "com.fasterxml.jackson.core.sym.Name",
      "org.elasticsearch.common.io.stream.InputStreamStreamInput",
      "com.google.common.collect.RegularImmutableList",
      "org.elasticsearch.transport.NotSerializableTransportException",
      "com.carrotsearch.hppc.ObjectCollection",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.DocumentEndEvent",
      "org.elasticsearch.index.IndexNotFoundException",
      "org.joda.time.JodaTimePermission",
      "com.google.common.collect.Lists$TransformingRandomAccessList",
      "org.elasticsearch.ResourceNotFoundException",
      "org.elasticsearch.common.ParseField",
      "org.joda.time.format.DateTimeFormatterBuilder$FixedNumber",
      "org.elasticsearch.common.MacAddressProvider",
      "com.google.common.collect.ImmutableMapKeySet",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectDocumentEnd",
      "org.elasticsearch.index.shard.IndexShardStartedException",
      "org.elasticsearch.common.util.BigFloatArray",
      "com.fasterxml.jackson.dataformat.smile.SmileBufferRecycler",
      "com.carrotsearch.hppc.ObjectFloatAssociativeContainer",
      "org.elasticsearch.common.xcontent.XContentType$4",
      "org.apache.lucene.util.BytesRef$UTF8SortedAsUnicodeComparator",
      "com.carrotsearch.hppc.RandomizedHashOrderMixer",
      "org.elasticsearch.cluster.node.DiscoveryNodeService",
      "org.elasticsearch.common.xcontent.XContentType$1",
      "org.apache.log4j.CategoryKey",
      "org.elasticsearch.common.xcontent.XContentType$3",
      "org.elasticsearch.common.xcontent.XContentType$2",
      "org.elasticsearch.rest.RestStatus",
      "com.carrotsearch.hppc.HashOrderMixing$Strategy$2",
      "com.carrotsearch.hppc.HashOrderMixing$Strategy$3",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingKey",
      "org.elasticsearch.common.xcontent.XContentLocation",
      "com.carrotsearch.hppc.HashOrderMixing$Strategy$1",
      "org.elasticsearch.snapshots.SnapshotRestoreException",
      "org.elasticsearch.common.xcontent.XContentFactory",
      "com.google.common.collect.SortedLists$KeyPresentBehavior",
      "org.joda.time.format.DateTimeFormatterBuilder",
      "com.google.common.collect.Sets$SetView",
      "org.apache.lucene.util.BytesRefBuilder",
      "com.fasterxml.jackson.dataformat.cbor.CBORFactory",
      "org.elasticsearch.transport.NodeShouldNotConnectException",
      "com.carrotsearch.hppc.HashOrderMixing",
      "org.apache.log4j.ProvisionNode",
      "org.joda.time.format.InternalPrinter",
      "com.google.common.collect.RegularImmutableSortedMap$EntrySet$1",
      "com.google.common.collect.UsingToStringOrdering",
      "com.fasterxml.jackson.dataformat.smile.SmileGenerator",
      "com.google.common.collect.Lists$TransformingSequentialList",
      "org.elasticsearch.transport.TransportMessage",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.ScalarAnalysis",
      "org.elasticsearch.ElasticsearchWrapperException",
      "com.carrotsearch.hppc.HashContainers",
      "org.apache.log4j.spi.RootLogger",
      "org.elasticsearch.common.xcontent.cbor.CborXContent",
      "org.elasticsearch.common.settings.SettingsException",
      "org.joda.time.field.PreciseDurationDateTimeField",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions$ScalarStyle",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.SequenceEndEvent",
      "org.apache.log4j.spi.RendererSupport",
      "com.google.common.collect.MapDifference",
      "com.fasterxml.jackson.core.JsonFactory",
      "org.elasticsearch.common.component.LifecycleComponent",
      "org.elasticsearch.gateway.GatewayException",
      "org.elasticsearch.common.HasContext",
      "org.elasticsearch.index.shard.IndexShardNotRecoveringException",
      "org.apache.lucene.util.BytesRef$UTF8SortedAsUTF16Comparator",
      "org.elasticsearch.http.HttpException",
      "com.fasterxml.jackson.dataformat.smile.SmileGenerator$Feature",
      "com.carrotsearch.hppc.BitUtil",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.AliasEvent",
      "com.fasterxml.jackson.dataformat.yaml.YAMLGenerator",
      "org.elasticsearch.search.SearchParseException",
      "com.carrotsearch.hppc.HashOrderMixingStrategy",
      "org.jboss.netty.buffer.ChannelBuffer",
      "org.elasticsearch.index.query.MatchQueryBuilder$ZeroTermsQuery",
      "org.elasticsearch.cluster.IncompatibleClusterStateVersionException",
      "com.google.common.collect.Lists$RandomAccessListWrapper",
      "org.apache.log4j.Logger",
      "com.carrotsearch.hppc.HashOrderMixing$Strategy",
      "org.elasticsearch.common.xcontent.ToXContent$1",
      "org.elasticsearch.action.TimestampParsingException",
      "com.carrotsearch.hppc.BufferAllocationException",
      "com.google.common.collect.ImmutableList$ReverseImmutableList",
      "org.apache.log4j.helpers.LogLog",
      "org.elasticsearch.index.engine.Engine$Delete",
      "org.elasticsearch.common.unit.ByteSizeValue",
      "org.elasticsearch.index.mapper.MergeMappingException",
      "org.elasticsearch.indices.InvalidIndexTemplateException",
      "org.elasticsearch.action.search.ShardSearchFailure",
      "org.elasticsearch.index.engine.RefreshFailedEngineException",
      "com.google.common.collect.ComparatorOrdering",
      "com.google.common.collect.AbstractIndexedListIterator",
      "org.joda.time.ReadableInstant",
      "org.elasticsearch.search.warmer.IndexWarmerMissingException",
      "com.google.common.collect.Maps$1",
      "com.google.common.collect.CollectPreconditions",
      "org.apache.log4j.spi.RepositorySelector",
      "org.elasticsearch.index.shard.IllegalIndexShardStateException",
      "org.elasticsearch.index.snapshots.IndexShardSnapshotException",
      "org.elasticsearch.index.shard.IndexShardNotStartedException",
      "com.google.common.collect.Sets",
      "org.elasticsearch.action.search.SearchPhaseExecutionException",
      "org.elasticsearch.common.xcontent.support.filtering.FilteringJsonGenerator",
      "org.elasticsearch.transport.TransportSerializationException",
      "org.elasticsearch.index.engine.EngineCreationFailureException",
      "org.elasticsearch.transport.TransportResponseHandler",
      "org.joda.time.tz.NameProvider",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions$LineBreak",
      "org.apache.log4j.or.DefaultRenderer",
      "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
      "org.elasticsearch.common.util.ByteArray",
      "org.elasticsearch.common.util.IntArray",
      "org.elasticsearch.index.query.MultiMatchQueryBuilder$Type",
      "com.google.common.collect.SortedLists$KeyAbsentBehavior$2",
      "com.google.common.collect.SortedLists$KeyAbsentBehavior$1",
      "org.elasticsearch.common.util.BigArray",
      "com.google.common.collect.SortedLists$KeyAbsentBehavior$3",
      "org.elasticsearch.search.internal.SearchContext",
      "org.apache.log4j.spi.ThrowableRendererSupport",
      "org.elasticsearch.index.translog.TranslogException",
      "com.google.common.collect.Multimap",
      "org.elasticsearch.index.query.MatchQueryBuilder$Type",
      "org.apache.lucene.util.CharsRefBuilder",
      "com.fasterxml.jackson.core.JsonFactory$Feature",
      "com.google.common.collect.ImmutableBiMap",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.scanner.Constant",
      "org.apache.log4j.Appender",
      "org.elasticsearch.search.aggregations.InvalidAggregationPathException",
      "com.carrotsearch.hppc.ObjectObjectAssociativeContainer",
      "org.elasticsearch.transport.netty.SizeHeaderFrameDecoder$HttpOnTransportException",
      "org.elasticsearch.common.util.BigArrays$ObjectArrayWrapper",
      "com.fasterxml.jackson.core.JsonGenerator$Feature",
      "org.elasticsearch.index.engine.EngineClosedException",
      "org.apache.log4j.spi.LoggingEvent",
      "org.elasticsearch.action.NoShardAvailableActionException",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectFirstBlockSequenceItem",
      "org.elasticsearch.common.logging.slf4j.Slf4jESLoggerFactory",
      "org.joda.time.format.InternalParserDateTimeParser",
      "org.joda.time.format.InternalParser",
      "org.elasticsearch.action.support.replication.TransportReplicationAction$RetryOnReplicaException",
      "org.elasticsearch.common.io.stream.Writeable",
      "com.google.common.collect.RegularImmutableSortedSet",
      "org.elasticsearch.common.settings.Settings$Builder"
    );
  } 
  private static void initMocksToAvoidTimeoutsInTheTests() throws ClassNotFoundException { 
    mock(Class.forName("org.elasticsearch.cluster.node.DiscoveryNodeService$CustomAttributesProvider", false, MultiMatchQueryBuilder_ESTest_scaffolding.class.getClassLoader()));
    mock(Class.forName("org.elasticsearch.transport.TransportResponseHandler", false, MultiMatchQueryBuilder_ESTest_scaffolding.class.getClassLoader()));
  }

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(MultiMatchQueryBuilder_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.elasticsearch.action.support.ToXContentToBytes",
      "org.elasticsearch.index.query.QueryBuilder",
      "org.elasticsearch.index.query.MultiMatchQueryBuilder",
      "org.elasticsearch.index.search.MatchQuery$Type",
      "org.elasticsearch.common.ParseField$Flag",
      "org.elasticsearch.common.ParseField",
      "org.elasticsearch.common.RandomBasedUUIDGenerator",
      "org.elasticsearch.common.logging.Loggers",
      "org.elasticsearch.common.Classes",
      "org.elasticsearch.common.logging.jdk.JdkESLoggerFactory",
      "org.apache.log4j.Category",
      "org.apache.log4j.Logger",
      "org.apache.log4j.Priority",
      "org.apache.log4j.Level",
      "org.elasticsearch.common.logging.log4j.Log4jESLoggerFactory",
      "org.elasticsearch.common.logging.ESLoggerFactory",
      "org.apache.log4j.Hierarchy",
      "org.apache.log4j.spi.RootLogger",
      "org.apache.log4j.or.DefaultRenderer",
      "org.apache.log4j.or.RendererMap",
      "org.apache.log4j.DefaultCategoryFactory",
      "org.apache.log4j.spi.DefaultRepositorySelector",
      "org.apache.log4j.helpers.OptionConverter",
      "org.apache.log4j.helpers.Loader",
      "org.apache.log4j.helpers.LogLog",
      "org.apache.log4j.PropertyConfigurator",
      "org.apache.log4j.LogManager",
      "org.apache.log4j.CategoryKey",
      "org.apache.log4j.ProvisionNode",
      "org.elasticsearch.common.logging.support.AbstractESLogger",
      "org.elasticsearch.common.logging.log4j.Log4jESLogger",
      "org.elasticsearch.common.MacAddressProvider",
      "org.elasticsearch.common.SecureRandomHolder",
      "org.elasticsearch.common.TimeBasedUUIDGenerator",
      "com.google.common.collect.ImmutableCollection",
      "com.google.common.collect.ImmutableSet",
      "com.google.common.collect.ObjectArrays",
      "com.google.common.collect.Hashing",
      "com.google.common.collect.RegularImmutableSet",
      "org.elasticsearch.common.Strings",
      "org.elasticsearch.index.query.MultiMatchQueryBuilder$Type",
      "org.elasticsearch.common.xcontent.ToXContent$1",
      "org.elasticsearch.common.xcontent.ToXContent",
      "org.elasticsearch.common.ParseFieldMatcher",
      "org.elasticsearch.common.xcontent.XContentBuilderString",
      "com.fasterxml.jackson.core.io.SerializedString",
      "org.elasticsearch.common.xcontent.XContentString",
      "com.google.common.base.Preconditions",
      "org.elasticsearch.common.unit.Fuzziness",
      "com.google.common.collect.Lists",
      "org.elasticsearch.common.ContextAndHeaderHolder",
      "org.elasticsearch.transport.TransportMessage",
      "org.elasticsearch.transport.TransportResponse",
      "org.elasticsearch.transport.TransportResponse$Empty",
      "org.elasticsearch.common.xcontent.XContentFactory",
      "com.fasterxml.jackson.core.JsonFactory$Feature",
      "com.fasterxml.jackson.core.JsonParser$Feature",
      "com.fasterxml.jackson.core.JsonGenerator$Feature",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter",
      "com.fasterxml.jackson.core.JsonFactory",
      "com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer",
      "com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer",
      "com.fasterxml.jackson.core.sym.BytesToNameCanonicalizer$TableInfo",
      "org.elasticsearch.common.xcontent.json.JsonXContent",
      "org.joda.time.format.ISODateTimeFormat",
      "org.joda.time.format.DateTimeFormatterBuilder",
      "org.joda.time.DateTimeFieldType$StandardDateTimeFieldType",
      "org.joda.time.DurationFieldType$StandardDurationFieldType",
      "org.joda.time.DurationFieldType",
      "org.joda.time.DateTimeFieldType",
      "org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter",
      "org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber",
      "org.joda.time.format.DateTimeFormatter",
      "org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral",
      "org.joda.time.format.DateTimeFormatterBuilder$Composite",
      "org.joda.time.format.DateTimeFormatterBuilder$StringLiteral",
      "org.joda.time.format.DateTimeFormatterBuilder$UnpaddedNumber",
      "org.joda.time.format.DateTimeFormatterBuilder$Fraction",
      "org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset",
      "org.joda.time.format.DateTimeFormatterBuilder$FixedNumber",
      "org.joda.time.format.InternalParserDateTimeParser",
      "org.joda.time.format.DateTimeParserInternalParser",
      "org.joda.time.format.DateTimeFormatterBuilder$MatchingParser",
      "org.joda.time.format.DateTimePrinterInternalPrinter",
      "org.joda.time.UTCDateTimeZone",
      "org.joda.time.DateTimeZone",
      "org.joda.time.format.ISODateTimeFormat$Constants",
      "org.elasticsearch.common.xcontent.XContentBuilder$FieldCaseConversion",
      "org.elasticsearch.common.xcontent.XContentBuilder",
      "org.elasticsearch.common.regex.Regex",
      "org.elasticsearch.common.io.stream.StreamOutput",
      "org.elasticsearch.common.io.stream.BytesStreamOutput",
      "org.apache.lucene.util.Version",
      "org.apache.lucene.util.Constants",
      "org.apache.lucene.util.RamUsageEstimator",
      "org.elasticsearch.common.util.BigArrays",
      "org.elasticsearch.Version",
      "org.apache.lucene.util.BytesRefBuilder",
      "org.apache.lucene.util.BytesRef$UTF8SortedAsUnicodeComparator",
      "org.apache.lucene.util.BytesRef$UTF8SortedAsUTF16Comparator",
      "org.apache.lucene.util.BytesRef",
      "org.elasticsearch.common.util.AbstractArray",
      "org.elasticsearch.common.util.BigArrays$AbstractArrayWrapper",
      "org.elasticsearch.common.util.BigArrays$ByteArrayWrapper",
      "org.elasticsearch.common.util.CollectionUtils",
      "com.fasterxml.jackson.core.JsonEncoding",
      "com.fasterxml.jackson.core.io.IOContext",
      "com.fasterxml.jackson.core.util.BufferRecycler",
      "com.fasterxml.jackson.core.JsonGenerator",
      "com.fasterxml.jackson.core.base.GeneratorBase",
      "com.fasterxml.jackson.core.io.CharTypes",
      "com.fasterxml.jackson.core.json.JsonGeneratorImpl",
      "com.fasterxml.jackson.core.json.UTF8JsonGenerator",
      "com.fasterxml.jackson.core.JsonStreamContext",
      "com.fasterxml.jackson.core.json.JsonWriteContext",
      "org.elasticsearch.common.xcontent.json.JsonXContentGenerator",
      "com.fasterxml.jackson.core.util.JsonGeneratorDelegate",
      "org.elasticsearch.common.xcontent.json.BaseJsonGenerator",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$NopIndenter",
      "com.fasterxml.jackson.core.util.DefaultPrettyPrinter$FixedSpaceIndenter",
      "com.fasterxml.jackson.core.util.DefaultIndenter",
      "com.fasterxml.jackson.core.io.NumberOutput",
      "org.elasticsearch.common.bytes.PagedBytesReference",
      "org.elasticsearch.common.bytes.BytesArray",
      "com.google.common.base.Charsets",
      "com.fasterxml.jackson.core.io.JsonStringEncoder",
      "com.fasterxml.jackson.core.util.ByteArrayBuilder",
      "com.carrotsearch.hppc.ObjectFloatHashMap",
      "com.carrotsearch.hppc.HashOrderMixing$1",
      "com.carrotsearch.hppc.HashOrderMixing",
      "com.carrotsearch.hppc.HashOrderMixing$4",
      "com.carrotsearch.hppc.HashOrderMixing$Strategy",
      "com.carrotsearch.hppc.Containers",
      "com.carrotsearch.hppc.Containers$1",
      "com.carrotsearch.hppc.BitMixer",
      "com.carrotsearch.hppc.RandomizedHashOrderMixer",
      "com.carrotsearch.hppc.HashContainers",
      "com.carrotsearch.hppc.BitUtil",
      "org.elasticsearch.ElasticsearchException",
      "org.elasticsearch.ElasticsearchParseException",
      "org.elasticsearch.common.logging.support.LoggerMessageFormat",
      "org.elasticsearch.search.suggest.SuggestBuilder$SuggestionBuilder",
      "org.elasticsearch.search.suggest.completion.CompletionSuggestionBuilder",
      "org.elasticsearch.client.Requests",
      "org.elasticsearch.cluster.AbstractDiffable",
      "com.google.common.collect.EmptyImmutableSet",
      "com.google.common.collect.ImmutableMap",
      "com.google.common.collect.ImmutableBiMap",
      "com.google.common.collect.EmptyImmutableBiMap",
      "com.google.common.collect.ImmutableCollection$Builder",
      "com.google.common.collect.ImmutableCollection$ArrayBasedBuilder",
      "com.google.common.collect.ImmutableSet$Builder",
      "com.google.common.collect.CollectPreconditions",
      "com.google.common.collect.UnmodifiableIterator",
      "com.google.common.collect.UnmodifiableListIterator",
      "com.google.common.collect.Iterators$1",
      "com.google.common.collect.Iterators$2",
      "com.google.common.collect.Iterators",
      "com.google.common.collect.ImmutableMap$Builder",
      "org.elasticsearch.cluster.block.ClusterBlocks$ImmutableLevelHolder",
      "org.elasticsearch.cluster.block.ClusterBlocks",
      "com.fasterxml.jackson.dataformat.smile.SmileParser$Feature",
      "com.fasterxml.jackson.dataformat.smile.SmileGenerator$Feature",
      "com.fasterxml.jackson.dataformat.smile.SmileFactory",
      "org.elasticsearch.common.xcontent.smile.SmileXContent",
      "com.fasterxml.jackson.dataformat.smile.SmileGenerator",
      "com.fasterxml.jackson.dataformat.smile.SmileBufferRecycler",
      "org.elasticsearch.common.xcontent.smile.SmileXContentGenerator",
      "org.elasticsearch.common.xcontent.support.filtering.FilteringJsonGenerator",
      "com.google.common.collect.RegularImmutableList",
      "com.google.common.collect.ImmutableList",
      "com.google.common.collect.ImmutableList$Builder",
      "com.google.common.collect.Platform",
      "org.elasticsearch.common.xcontent.support.filtering.FilterContext",
      "org.elasticsearch.common.xcontent.support.filtering.FilterContext$Type",
      "com.google.common.collect.AbstractIndexedListIterator",
      "com.google.common.collect.Iterators$11",
      "com.fasterxml.jackson.dataformat.smile.SmileGenerator$SharedStringNode",
      "org.elasticsearch.common.util.concurrent.BaseFuture",
      "org.elasticsearch.transport.PlainTransportFuture",
      "org.elasticsearch.common.util.concurrent.BaseFuture$Sync",
      "org.elasticsearch.common.component.AbstractComponent",
      "org.elasticsearch.script.ScriptService",
      "org.elasticsearch.common.logging.jdk.JdkESLogger",
      "org.elasticsearch.cluster.metadata.MetaData$Builder",
      "com.google.common.collect.ImmutableSortedMapFauxverideShim",
      "com.google.common.collect.Ordering",
      "com.google.common.collect.NaturalOrdering",
      "com.google.common.collect.EmptyImmutableSortedMap",
      "com.google.common.collect.ImmutableSortedSetFauxverideShim",
      "com.google.common.collect.EmptyImmutableSortedSet",
      "com.google.common.collect.ImmutableSortedSet",
      "com.google.common.collect.ImmutableSortedMap",
      "com.google.common.base.Joiner",
      "com.google.common.base.Joiner$1",
      "com.google.common.collect.Collections2",
      "com.google.common.base.Joiner$MapJoiner",
      "com.google.common.collect.Maps",
      "com.google.common.collect.Maps$EntryFunction",
      "com.google.common.collect.ByFunctionOrdering",
      "org.elasticsearch.common.settings.Settings",
      "org.elasticsearch.common.settings.Settings$Builder",
      "com.carrotsearch.hppc.ObjectObjectHashMap",
      "org.elasticsearch.common.collect.ImmutableOpenMap",
      "org.elasticsearch.common.collect.ImmutableOpenMap$Builder",
      "com.carrotsearch.hppc.AbstractObjectCollection",
      "com.carrotsearch.hppc.ObjectObjectHashMap$ValuesContainer",
      "com.carrotsearch.hppc.AbstractIterator",
      "com.carrotsearch.hppc.ObjectObjectHashMap$ValuesIterator",
      "com.carrotsearch.hppc.cursors.ObjectCursor",
      "org.elasticsearch.cluster.metadata.MetaData$XContentContext",
      "org.elasticsearch.cluster.metadata.RepositoriesMetaData",
      "org.elasticsearch.cluster.block.ClusterBlock",
      "org.elasticsearch.rest.RestStatus",
      "org.elasticsearch.cluster.metadata.MetaData",
      "org.elasticsearch.common.Booleans",
      "org.elasticsearch.action.ActionRequestBuilder",
      "org.elasticsearch.action.support.broadcast.BroadcastOperationRequestBuilder",
      "org.elasticsearch.action.percolate.PercolateRequestBuilder",
      "org.elasticsearch.transport.TransportRequest",
      "org.elasticsearch.action.ActionRequest",
      "org.elasticsearch.action.support.broadcast.BroadcastRequest",
      "org.elasticsearch.action.percolate.PercolateRequest",
      "org.elasticsearch.action.support.IndicesOptions",
      "org.elasticsearch.transport.EmptyTransportResponseHandler",
      "com.fasterxml.jackson.core.JsonProcessingException",
      "com.fasterxml.jackson.core.JsonGenerationException",
      "org.elasticsearch.action.GenericAction",
      "org.elasticsearch.action.Action",
      "org.elasticsearch.action.percolate.PercolateAction",
      "org.elasticsearch.action.support.AdapterActionFuture",
      "org.elasticsearch.action.support.AbstractListenableActionFuture",
      "org.elasticsearch.action.support.PlainListenableActionFuture",
      "org.elasticsearch.common.io.stream.StreamInput",
      "org.elasticsearch.common.io.stream.ByteBufferStreamInput",
      "org.apache.lucene.util.CharsRefBuilder",
      "org.apache.lucene.util.CharsRef$UTF16SortedAsUTF8Comparator",
      "org.apache.lucene.util.CharsRef",
      "org.elasticsearch.node.settings.NodeSettingsService",
      "org.elasticsearch.common.logging.slf4j.Slf4jESLogger",
      "org.elasticsearch.cluster.routing.allocation.decider.Decision",
      "org.elasticsearch.cluster.routing.allocation.decider.Decision$Single",
      "com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature",
      "com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature",
      "com.fasterxml.jackson.dataformat.yaml.YAMLFactory",
      "org.elasticsearch.common.xcontent.yaml.YamlXContent",
      "com.fasterxml.jackson.dataformat.yaml.UTF8Writer",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.ImplicitTuple",
      "com.fasterxml.jackson.dataformat.yaml.YAMLGenerator",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions$ScalarStyle",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions$FlowStyle",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.DumperOptions$LineBreak",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.util.ArrayStack",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectStreamStart",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.Event",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.StreamStartEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectFirstDocumentStart",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.DocumentStartEvent",
      "org.elasticsearch.common.xcontent.yaml.YamlXContentGenerator",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.NodeEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.CollectionStartEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.MappingStartEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectDocumentStart",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.ScalarEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectDocumentEnd",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectFirstBlockMappingKey",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingKey",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.scanner.Constant",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.ScalarAnalysis",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingSimpleValue",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.CollectionEndEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.MappingEndEvent",
      "org.joda.time.tz.UTCProvider",
      "org.joda.time.base.AbstractInstant",
      "org.joda.time.base.AbstractDateTime",
      "org.joda.time.base.BaseDateTime",
      "org.joda.time.DateTime",
      "com.fasterxml.jackson.dataformat.smile.SmileUtil",
      "com.carrotsearch.hppc.ObjectObjectHashMap$EntryIterator",
      "com.carrotsearch.hppc.cursors.ObjectObjectCursor",
      "org.elasticsearch.cluster.metadata.SnapshotId",
      "org.elasticsearch.cluster.RestoreInProgress$Entry",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.SequenceStartEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectFirstBlockSequenceItem",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectBlockSequenceItem",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.SequenceEndEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.DocumentEndEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.events.StreamEndEvent",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.Emitter$ExpectNothing",
      "org.elasticsearch.search.suggest.term.TermSuggestionBuilder",
      "org.elasticsearch.common.io.stream.InputStreamStreamInput",
      "org.elasticsearch.transport.TransportException",
      "org.elasticsearch.search.suggest.phrase.PhraseSuggestionBuilder",
      "com.google.common.collect.RegularImmutableBiMap",
      "org.elasticsearch.action.get.MultiGetRequest",
      "org.elasticsearch.action.get.MultiGetRequest$Item",
      "org.elasticsearch.index.VersionType",
      "com.fasterxml.jackson.dataformat.cbor.CBORParser$Feature",
      "com.fasterxml.jackson.dataformat.cbor.CBORGenerator$Feature",
      "com.fasterxml.jackson.dataformat.cbor.CBORFactory",
      "org.elasticsearch.common.xcontent.cbor.CborXContent",
      "com.fasterxml.jackson.dataformat.cbor.CBORGenerator",
      "org.elasticsearch.common.xcontent.cbor.CborXContentGenerator",
      "org.jboss.netty.buffer.AbstractChannelBuffer",
      "org.jboss.netty.buffer.DynamicChannelBuffer",
      "org.jboss.netty.buffer.AbstractChannelBufferFactory",
      "org.jboss.netty.buffer.HeapChannelBufferFactory",
      "org.jboss.netty.buffer.HeapChannelBuffer",
      "org.jboss.netty.buffer.BigEndianHeapChannelBuffer",
      "org.jboss.netty.buffer.EmptyChannelBuffer",
      "org.jboss.netty.buffer.ChannelBuffers",
      "org.jboss.netty.buffer.DuplicatedChannelBuffer",
      "org.elasticsearch.threadpool.ThreadPool",
      "com.google.common.collect.AbstractMapEntry",
      "com.google.common.collect.ImmutableEntry",
      "com.google.common.collect.ImmutableMapEntry",
      "com.google.common.collect.ImmutableMapEntry$TerminalEntry",
      "com.google.common.collect.RegularImmutableSortedMap",
      "com.google.common.collect.RegularImmutableSortedSet",
      "com.google.common.collect.SingletonImmutableList",
      "com.google.common.collect.SortedLists$KeyPresentBehavior",
      "com.google.common.collect.SortedLists$KeyAbsentBehavior",
      "com.google.common.collect.SortedLists",
      "org.elasticsearch.common.logging.DeprecationLogger",
      "com.google.common.collect.Iterators$12",
      "org.elasticsearch.common.util.concurrent.EsExecutors",
      "com.google.common.collect.RegularImmutableMap",
      "com.google.common.collect.RegularImmutableMap$NonTerminalMapEntry",
      "com.google.common.collect.ImmutableMapEntrySet",
      "com.google.common.collect.RegularImmutableMap$EntrySet",
      "com.google.common.collect.ImmutableAsList",
      "com.google.common.collect.RegularImmutableAsList",
      "org.elasticsearch.common.util.concurrent.EsExecutors$EsThreadFactory",
      "org.elasticsearch.common.unit.TimeValue",
      "org.joda.time.format.PeriodFormat",
      "org.joda.time.format.PeriodFormat$DynamicWordBased",
      "org.joda.time.format.PeriodFormatterBuilder",
      "org.joda.time.format.PeriodFormatterBuilder$FieldFormatter",
      "org.joda.time.format.PeriodFormatterBuilder$IgnorableAffix",
      "org.joda.time.format.PeriodFormatterBuilder$PluralAffix",
      "org.joda.time.format.PeriodFormatterBuilder$Composite",
      "org.joda.time.format.PeriodFormatterBuilder$Separator",
      "org.joda.time.format.PeriodFormatter",
      "org.joda.time.PeriodType",
      "org.elasticsearch.common.util.concurrent.EsThreadPoolExecutor",
      "org.elasticsearch.common.util.concurrent.EsAbortPolicy",
      "org.elasticsearch.common.metrics.CounterMetric",
      "com.twitter.jsr166e.Striped64$ThreadHashCode",
      "com.twitter.jsr166e.Striped64$1",
      "com.twitter.jsr166e.Striped64",
      "com.twitter.jsr166e.LongAdder",
      "org.elasticsearch.threadpool.ThreadPool$ExecutorHolder",
      "org.elasticsearch.threadpool.ThreadPool$Info",
      "org.elasticsearch.common.unit.SizeValue",
      "org.elasticsearch.common.unit.SizeUnit",
      "org.elasticsearch.common.util.concurrent.SizeBlockingQueue",
      "org.elasticsearch.common.util.concurrent.ConcurrentCollections",
      "org.elasticsearch.common.util.concurrent.EsExecutors$ExecutorScalingQueue",
      "org.elasticsearch.common.util.concurrent.EsExecutors$ForceQueuePolicy",
      "com.google.common.util.concurrent.MoreExecutors",
      "com.google.common.util.concurrent.MoreExecutors$DirectExecutor",
      "org.elasticsearch.threadpool.ThreadPool$EstimatedTimeThread",
      "org.apache.lucene.util.Counter",
      "org.elasticsearch.threadpool.ThreadPool$EstimatedTimeThread$TimeCounter",
      "org.elasticsearch.threadpool.ThreadPool$LoggingRunnable",
      "org.elasticsearch.cluster.metadata.IndexMetaData$Builder",
      "org.elasticsearch.cluster.metadata.IndexMetaData$State",
      "com.google.common.collect.RegularImmutableSortedMap$EntrySet",
      "com.google.common.collect.RegularImmutableSortedMap$EntrySet$1",
      "com.google.common.collect.ImmutableSortedAsList",
      "com.google.common.collect.ImmutableList$1",
      "org.elasticsearch.common.settings.Settings$StartsWithPredicate",
      "com.google.common.collect.Iterables",
      "org.elasticsearch.search.warmer.IndexWarmersMetaData",
      "org.elasticsearch.cluster.routing.Murmur3HashFunction",
      "org.elasticsearch.cluster.metadata.IndexMetaData",
      "org.elasticsearch.cluster.RestoreInProgress$ShardRestoreStatus",
      "org.elasticsearch.index.shard.ShardId",
      "org.elasticsearch.index.Index",
      "org.elasticsearch.threadpool.ThreadPool$ThreadedRunnable",
      "org.apache.lucene.util.NamedThreadFactory",
      "org.elasticsearch.cluster.routing.allocation.decider.Decision$Multi",
      "org.elasticsearch.common.xcontent.ToXContent$MapParams",
      "org.elasticsearch.common.io.stream.ReleasableBytesStreamOutput",
      "org.elasticsearch.common.xcontent.ToXContent$DelegatingMapParams",
      "org.apache.lucene.util.UnicodeUtil",
      "org.elasticsearch.discovery.DiscoverySettings",
      "org.elasticsearch.discovery.DiscoverySettings$ApplySettings",
      "org.jboss.netty.buffer.LittleEndianHeapChannelBuffer",
      "org.jboss.netty.buffer.ReadOnlyChannelBuffer",
      "org.elasticsearch.common.bytes.ChannelBufferBytesReference",
      "org.elasticsearch.search.warmer.IndexWarmersMetaData$Entry",
      "org.elasticsearch.ExceptionsHelper",
      "org.elasticsearch.ElasticsearchTimeoutException",
      "org.elasticsearch.common.xcontent.support.AbstractXContentParser$1",
      "org.elasticsearch.common.xcontent.support.AbstractXContentParser$2",
      "org.elasticsearch.common.xcontent.support.AbstractXContentParser",
      "org.elasticsearch.common.xcontent.json.JsonXContentParser",
      "org.elasticsearch.common.xcontent.cbor.CborXContentParser",
      "org.elasticsearch.common.io.CharSequenceReader",
      "org.elasticsearch.common.io.FastStringReader",
      "com.google.common.collect.RegularImmutableBiMap$NonTerminalBiMapEntry",
      "org.elasticsearch.cluster.RestoreInProgress",
      "com.google.common.collect.AbstractMultimap",
      "com.google.common.collect.ImmutableMultimap",
      "com.google.common.collect.ImmutableSetMultimap",
      "com.google.common.collect.EmptyImmutableSetMultimap",
      "org.elasticsearch.ElasticsearchSecurityException",
      "org.jboss.netty.buffer.DirectChannelBufferFactory",
      "org.elasticsearch.action.percolate.PercolateSourceBuilder",
      "org.elasticsearch.search.sort.SortBuilder",
      "org.elasticsearch.search.sort.ScoreSortBuilder",
      "org.elasticsearch.cluster.SnapshotsInProgress",
      "org.elasticsearch.cluster.SnapshotsInProgress$Fields",
      "org.elasticsearch.common.io.stream.NamedWriteableRegistry",
      "org.elasticsearch.common.io.stream.FilterStreamInput",
      "org.elasticsearch.common.io.stream.NamedWriteableAwareStreamInput",
      "org.elasticsearch.search.suggest.SuggestBuilder",
      "org.elasticsearch.common.breaker.CircuitBreakingException",
      "org.elasticsearch.common.unit.MemorySizeValue",
      "org.elasticsearch.common.unit.ByteSizeValue",
      "org.elasticsearch.cluster.ClusterName",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.error.YAMLException",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.emitter.EmitterException",
      "org.elasticsearch.action.ActionWriteResponse$ShardInfo$Failure",
      "org.apache.lucene.util.ArrayUtil$NaturalComparator",
      "org.apache.lucene.util.ArrayUtil",
      "com.google.common.collect.SingletonImmutableBiMap",
      "org.elasticsearch.cluster.routing.allocation.decider.AllocationDecider",
      "org.elasticsearch.cluster.routing.allocation.decider.AwarenessAllocationDecider",
      "org.elasticsearch.cluster.routing.allocation.decider.AwarenessAllocationDecider$ApplySettings",
      "org.elasticsearch.cluster.routing.OperationRouting",
      "org.elasticsearch.cluster.routing.RestoreSource",
      "org.elasticsearch.action.support.single.shard.SingleShardRequest",
      "org.elasticsearch.action.termvectors.TermVectorsRequest",
      "org.elasticsearch.action.termvectors.TermVectorsRequest$Flag",
      "org.elasticsearch.cluster.node.DiscoveryNodeService",
      "org.elasticsearch.common.xcontent.yaml.YamlXContentParser",
      "com.fasterxml.jackson.core.JsonParser",
      "com.fasterxml.jackson.core.base.ParserMinimalBase",
      "com.fasterxml.jackson.core.base.ParserBase",
      "com.fasterxml.jackson.dataformat.yaml.YAMLParser",
      "com.fasterxml.jackson.dataformat.yaml.UTF8Reader",
      "com.fasterxml.jackson.core.util.TextBuffer",
      "com.fasterxml.jackson.core.json.JsonReadContext",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.parser.ParserImpl",
      "com.fasterxml.jackson.dataformat.yaml.snakeyaml.reader.StreamReader",
      "com.google.common.collect.SingletonImmutableSet",
      "org.elasticsearch.common.component.AbstractLifecycleComponent",
      "org.elasticsearch.transport.local.LocalTransport",
      "org.elasticsearch.common.component.Lifecycle",
      "org.elasticsearch.common.component.Lifecycle$State",
      "org.elasticsearch.transport.TransportService",
      "org.elasticsearch.common.util.concurrent.ConcurrentHashMapLong",
      "org.elasticsearch.transport.TransportService$1",
      "org.elasticsearch.transport.TransportService$ApplySettings",
      "org.elasticsearch.transport.TransportService$Adapter",
      "org.elasticsearch.common.metrics.MeanMetric",
      "org.elasticsearch.action.percolate.PercolateSourceBuilder$DocBuilder",
      "org.elasticsearch.cluster.ClusterState$Builder",
      "org.elasticsearch.cluster.routing.RoutingTable$Builder",
      "org.elasticsearch.cluster.routing.RoutingTable$1",
      "org.elasticsearch.cluster.routing.RoutingTable$2",
      "org.elasticsearch.cluster.routing.RoutingTable",
      "org.elasticsearch.cluster.node.DiscoveryNodes$Builder",
      "org.elasticsearch.cluster.node.DiscoveryNodes",
      "org.elasticsearch.common.Base64",
      "org.elasticsearch.cluster.ClusterState$ClusterStateStatus",
      "org.elasticsearch.cluster.ClusterState",
      "org.elasticsearch.cluster.routing.RoutingNodes",
      "org.elasticsearch.cluster.routing.RoutingNodes$UnassignedShards",
      "org.elasticsearch.action.get.GetRequest",
      "org.elasticsearch.common.network.NetworkService",
      "org.elasticsearch.common.network.IfConfig",
      "org.elasticsearch.common.netty.NettyUtils$EsThreadNameDeterminer",
      "org.jboss.netty.logging.JdkLoggerFactory",
      "org.jboss.netty.logging.InternalLoggerFactory",
      "org.elasticsearch.transport.netty.NettyInternalESLoggerFactory",
      "org.elasticsearch.common.netty.NettyUtils$1",
      "org.jboss.netty.logging.AbstractInternalLogger",
      "org.elasticsearch.transport.netty.NettyInternalESLogger",
      "org.jboss.netty.util.ThreadNameDeterminer$1",
      "org.jboss.netty.util.ThreadNameDeterminer$2",
      "org.jboss.netty.util.ThreadNameDeterminer",
      "org.jboss.netty.util.ThreadRenamingRunnable",
      "org.elasticsearch.common.netty.NettyUtils",
      "org.elasticsearch.transport.netty.NettyTransport",
      "org.elasticsearch.common.util.concurrent.KeyedLock",
      "org.elasticsearch.common.network.NetworkService$TcpSettings",
      "org.elasticsearch.monitor.jvm.JvmInfo$Mem",
      "org.elasticsearch.monitor.jvm.JvmInfo",
      "org.elasticsearch.common.unit.ByteSizeUnit",
      "org.jboss.netty.channel.FixedReceiveBufferSizePredictorFactory",
      "org.jboss.netty.channel.FixedReceiveBufferSizePredictor",
      "org.elasticsearch.common.util.concurrent.AbstractRunnable",
      "org.elasticsearch.transport.netty.NettyTransport$ScheduledPing",
      "org.elasticsearch.discovery.zen.ping.ZenPingService",
      "org.elasticsearch.discovery.zen.elect.ElectMasterService$1",
      "org.elasticsearch.discovery.zen.elect.ElectMasterService",
      "org.elasticsearch.discovery.zen.elect.ElectMasterService$NodeComparator",
      "org.apache.lucene.codecs.PostingsFormat",
      "org.apache.lucene.util.NamedSPILoader",
      "org.apache.lucene.codecs.lucene50.Lucene50PostingsFormat",
      "org.apache.lucene.codecs.FieldsConsumer",
      "org.apache.lucene.codecs.blocktree.BlockTreeTermsWriter",
      "org.apache.lucene.codecs.PostingsFormat$Holder",
      "org.apache.lucene.codecs.DocValuesFormat",
      "org.apache.lucene.codecs.lucene50.Lucene50DocValuesFormat",
      "org.apache.lucene.codecs.DocValuesFormat$Holder",
      "org.apache.lucene.analysis.Analyzer$ReuseStrategy",
      "org.apache.lucene.analysis.Analyzer$1",
      "org.apache.lucene.analysis.Analyzer$2",
      "org.apache.lucene.analysis.Analyzer",
      "org.apache.lucene.analysis.AnalyzerWrapper",
      "org.apache.lucene.analysis.DelegatingAnalyzerWrapper",
      "org.elasticsearch.index.analysis.NamedAnalyzer$1",
      "org.elasticsearch.index.analysis.NamedAnalyzer",
      "org.elasticsearch.index.analysis.AnalyzerScope",
      "org.apache.lucene.analysis.util.StopwordAnalyzerBase",
      "org.apache.lucene.analysis.util.CharArrayMap$UnmodifiableCharArrayMap",
      "org.apache.lucene.analysis.util.CharArrayMap$EmptyCharArrayMap",
      "org.apache.lucene.analysis.util.CharacterUtils$Java4CharacterUtils",
      "org.apache.lucene.analysis.util.CharacterUtils$Java5CharacterUtils",
      "org.apache.lucene.analysis.util.CharacterUtils",
      "org.apache.lucene.analysis.util.CharArrayMap",
      "org.apache.lucene.analysis.util.CharArraySet",
      "org.apache.lucene.analysis.core.StopAnalyzer",
      "org.apache.lucene.analysis.standard.StandardAnalyzer",
      "org.apache.lucene.util.CloseableThreadLocal",
      "org.apache.lucene.analysis.DelegatingAnalyzerWrapper$DelegatingReuseStrategy",
      "org.apache.lucene.analysis.core.KeywordAnalyzer",
      "org.apache.lucene.search.TopDocs",
      "org.elasticsearch.common.lucene.Lucene",
      "com.github.mustachejava.DeferringMustacheFactory$DeferredCallable",
      "org.elasticsearch.action.support.replication.ReplicationRequest",
      "org.elasticsearch.action.index.IndexRequest",
      "org.elasticsearch.action.WriteConsistencyLevel",
      "org.elasticsearch.action.index.IndexRequest$OpType",
      "org.elasticsearch.common.xcontent.XContentHelper",
      "org.elasticsearch.common.compress.lzf.LZFCompressor",
      "com.ning.compress.lzf.ChunkDecoder",
      "com.ning.compress.lzf.impl.UnsafeChunkDecoder",
      "com.ning.compress.lzf.util.ChunkDecoderFactory",
      "com.ning.compress.lzf.impl.VanillaChunkDecoder",
      "org.elasticsearch.common.compress.deflate.DeflateCompressor",
      "org.elasticsearch.common.compress.CompressorFactory",
      "org.joda.time.DateTimeUtils$SystemMillisProvider",
      "org.joda.time.DateTimeUtils",
      "org.joda.time.Chronology",
      "org.joda.time.chrono.BaseChronology",
      "org.joda.time.chrono.AssembledChronology",
      "org.joda.time.DurationField",
      "org.joda.time.field.MillisDurationField",
      "org.joda.time.field.BaseDurationField",
      "org.joda.time.field.PreciseDurationField",
      "org.joda.time.DateTimeField",
      "org.joda.time.field.BaseDateTimeField",
      "org.joda.time.field.PreciseDurationDateTimeField",
      "org.joda.time.field.PreciseDateTimeField",
      "org.joda.time.field.DecoratedDateTimeField",
      "org.joda.time.field.ZeroIsMaxDateTimeField",
      "org.joda.time.chrono.BasicChronology$HalfdayField",
      "org.joda.time.chrono.BasicChronology",
      "org.joda.time.chrono.BasicGJChronology",
      "org.joda.time.chrono.AssembledChronology$Fields",
      "org.joda.time.field.ImpreciseDateTimeField",
      "org.joda.time.chrono.BasicYearDateTimeField",
      "org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField",
      "org.joda.time.chrono.GJYearOfEraDateTimeField",
      "org.joda.time.field.OffsetDateTimeField",
      "org.joda.time.field.DividedDateTimeField",
      "org.joda.time.field.DecoratedDurationField",
      "org.joda.time.field.ScaledDurationField",
      "org.joda.time.field.RemainderDateTimeField",
      "org.joda.time.chrono.GJEraDateTimeField",
      "org.joda.time.chrono.GJDayOfWeekDateTimeField",
      "org.joda.time.chrono.BasicDayOfMonthDateTimeField",
      "org.joda.time.chrono.BasicDayOfYearDateTimeField",
      "org.joda.time.chrono.BasicMonthOfYearDateTimeField",
      "org.joda.time.chrono.GJMonthOfYearDateTimeField",
      "org.joda.time.chrono.BasicWeekyearDateTimeField",
      "org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField",
      "org.joda.time.field.UnsupportedDurationField",
      "org.joda.time.chrono.GregorianChronology",
      "org.joda.time.chrono.ISOYearOfEraDateTimeField",
      "org.joda.time.chrono.ISOChronology",
      "org.joda.time.tz.ZoneInfoProvider",
      "org.joda.time.tz.DateTimeZoneBuilder",
      "org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone",
      "org.joda.time.tz.CachedDateTimeZone",
      "org.joda.time.chrono.ZonedChronology",
      "org.joda.time.chrono.ZonedChronology$ZonedDurationField",
      "org.joda.time.chrono.ZonedChronology$ZonedDateTimeField",
      "org.joda.time.tz.CachedDateTimeZone$Info",
      "org.joda.time.chrono.BasicChronology$YearInfo",
      "org.joda.time.field.FieldUtils",
      "org.joda.time.field.DelegatedDateTimeField",
      "org.joda.time.field.SkipDateTimeField",
      "org.joda.time.chrono.JulianChronology",
      "org.joda.time.IllegalFieldValueException",
      "org.elasticsearch.common.compress.CompressedXContent",
      "org.elasticsearch.common.io.stream.OutputStreamStreamOutput",
      "org.elasticsearch.common.compress.deflate.DeflateCompressor$2",
      "org.elasticsearch.common.compress.CompressedXContent$1",
      "org.elasticsearch.cluster.metadata.MappingMetaData",
      "org.elasticsearch.common.compress.deflate.DeflateCompressor$1",
      "com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper",
      "com.fasterxml.jackson.core.json.UTF8StreamJsonParser",
      "com.fasterxml.jackson.core.JsonToken",
      "com.fasterxml.jackson.core.JsonParser$NumberType",
      "org.elasticsearch.common.xcontent.json.JsonXContentParser$1",
      "org.elasticsearch.common.xcontent.XContentParser$Token",
      "org.elasticsearch.common.collect.Tuple",
      "org.apache.lucene.util.IOUtils",
      "org.elasticsearch.monitor.jvm.JvmMonitorService",
      "org.elasticsearch.monitor.os.OsService",
      "org.elasticsearch.monitor.process.ProcessService",
      "org.elasticsearch.monitor.jvm.JvmService",
      "org.elasticsearch.monitor.MonitorService",
      "org.elasticsearch.search.aggregations.AbstractAggregationBuilder",
      "org.elasticsearch.transport.netty.ChannelBufferStreamInputFactory",
      "org.elasticsearch.transport.netty.ChannelBufferStreamInput",
      "org.elasticsearch.cluster.routing.ShardRouting",
      "org.elasticsearch.search.suggest.context.ContextMapping$Context",
      "org.elasticsearch.search.suggest.context.ContextMapping",
      "org.elasticsearch.search.suggest.context.GeolocationContextMapping",
      "org.elasticsearch.common.geo.GeoHashUtils",
      "org.elasticsearch.search.suggest.context.ContextMapping$ContextQuery",
      "org.elasticsearch.search.suggest.context.GeolocationContextMapping$GeoQuery",
      "org.elasticsearch.common.xcontent.smile.SmileXContentParser",
      "com.fasterxml.jackson.dataformat.smile.SmileParserBootstrapper",
      "com.fasterxml.jackson.dataformat.smile.SmileParser",
      "com.google.common.collect.Sets",
      "org.elasticsearch.cluster.routing.allocation.decider.Decision$Type"
    );
  }
}
