/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 21:54:43 GMT 2021
 */

package org.elasticsearch.index.query;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableMap;
import com.google.common.collect.ImmutableSortedMap;
import java.io.EOFException;
import java.io.IOException;
import java.time.format.FormatStyle;
import java.util.EnumSet;
import java.util.Map;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.TimeUnit;
import org.elasticsearch.cluster.node.DiscoveryNodeService;
import org.elasticsearch.cluster.routing.allocation.decider.Decision;
import org.elasticsearch.common.ParseField;
import org.elasticsearch.common.ParseFieldMatcher;
import org.elasticsearch.common.bytes.BytesReference;
import org.elasticsearch.common.io.stream.StreamInput;
import org.elasticsearch.common.settings.Settings;
import org.elasticsearch.common.unit.Fuzziness;
import org.elasticsearch.common.xcontent.ToXContent;
import org.elasticsearch.common.xcontent.XContent;
import org.elasticsearch.common.xcontent.XContentBuilder;
import org.elasticsearch.common.xcontent.XContentType;
import org.elasticsearch.common.xcontent.cbor.CborXContent;
import org.elasticsearch.common.xcontent.json.JsonXContent;
import org.elasticsearch.common.xcontent.smile.SmileXContent;
import org.elasticsearch.index.query.MatchQueryBuilder;
import org.elasticsearch.index.query.MultiMatchQueryBuilder;
import org.elasticsearch.index.search.MatchQuery;
import org.elasticsearch.node.settings.NodeSettingsService;
import org.elasticsearch.search.suggest.term.TermSuggestionBuilder;
import org.elasticsearch.transport.PlainTransportFuture;
import org.elasticsearch.transport.TransportException;
import org.elasticsearch.transport.TransportResponse;
import org.elasticsearch.transport.TransportResponseHandler;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class MultiMatchQueryBuilder_ESTest extends MultiMatchQueryBuilder_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type0 = MultiMatchQueryBuilder.Type.MOST_FIELDS;
      assertEquals(MultiMatchQueryBuilder.Type.MOST_FIELDS, multiMatchQueryBuilder_Type0);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      
      float float0 = multiMatchQueryBuilder_Type0.tieBreaker();
      assertEquals(1.0F, float0, 0.01F);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      
      int int0 = 386;
      String[] stringArray0 = new String[4];
      String string0 = "";
      stringArray0[0] = string0;
      String string1 = "v'";
      stringArray0[1] = string1;
      String string2 = "";
      stringArray0[2] = string2;
      String string3 = "-X*G}|$Tb #q_[#E<";
      stringArray0[3] = string3;
      String string4 = "fuzzy_rewrite";
      MatchQueryBuilder.ZeroTermsQuery matchQueryBuilder_ZeroTermsQuery0 = MatchQueryBuilder.ZeroTermsQuery.NONE;
      float float1 = (-1382.2F);
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type1 = MultiMatchQueryBuilder.Type.PHRASE;
      String string5 = "B\\:[kCeDdQm";
      ParseFieldMatcher parseFieldMatcher0 = ParseFieldMatcher.STRICT;
      assertNotNull(parseFieldMatcher0);
      
      // Undeclared exception!
      try { 
        MultiMatchQueryBuilder.Type.parse(string5, parseFieldMatcher0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // failed to parse [java.lang.String@0000000001] query type [java.lang.String@0000000002]. unknown type.
         //
         verifyException("org.elasticsearch.index.query.MultiMatchQueryBuilder$Type", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      String[] stringArray0 = new String[6];
      String string0 = "";
      stringArray0[0] = string0;
      String string1 = "type";
      stringArray0[1] = string1;
      String string2 = "Zqs@[gO$EiRnp";
      stringArray0[2] = string2;
      String string3 = "A8b:OL;ku_<@ROp;";
      stringArray0[3] = string3;
      String string4 = "";
      stringArray0[4] = string4;
      String string5 = "recycler.page.type";
      stringArray0[5] = string5;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(object0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(6, stringArray0.length);
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.fuzziness(object1);
      assertNotNull(multiMatchQueryBuilder1);
      assertFalse(object0.equals((Object)object1));
      assertFalse(object1.equals((Object)object0));
      assertEquals(6, stringArray0.length);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertNotSame(object0, object1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(object1, object0);
      
      String string6 = "_gn?}!O#pc7u/;";
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.analyzer(string6);
      assertNotNull(multiMatchQueryBuilder2);
      assertFalse(object0.equals((Object)object1));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertFalse(object1.equals((Object)object0));
      assertEquals(6, stringArray0.length);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertNotSame(object0, object1);
      assertNotSame(string6, string3);
      assertNotSame(string6, string4);
      assertNotSame(string6, string5);
      assertNotSame(string6, string0);
      assertNotSame(string6, string1);
      assertNotSame(string6, string2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(object1, object0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.minimumShouldMatch(stringArray0[4]);
      assertNotNull(multiMatchQueryBuilder3);
      assertFalse(object0.equals((Object)object1));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertFalse(object1.equals((Object)object0));
      assertEquals(6, stringArray0.length);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertNotSame(object0, object1);
      assertNotSame(string6, string3);
      assertNotSame(string6, string4);
      assertNotSame(string6, string5);
      assertNotSame(string6, string0);
      assertNotSame(string6, string1);
      assertNotSame(string6, string2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(object1, object0);
      
      float float0 = 0.0F;
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.field(string5, float0);
      assertNotNull(multiMatchQueryBuilder4);
      assertFalse(object0.equals((Object)object1));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string6));
      assertFalse(object1.equals((Object)object0));
      assertEquals(6, stringArray0.length);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertNotSame(object0, object1);
      assertNotSame(string6, string3);
      assertNotSame(string6, string4);
      assertNotSame(string6, string5);
      assertNotSame(string6, string0);
      assertNotSame(string6, string1);
      assertNotSame(string6, string2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertNotSame(string5, string1);
      assertNotSame(string5, string3);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      assertNotSame(string5, string6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(object1, object0);
      
      int int0 = 3028;
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder4.slop(int0);
      assertNotNull(multiMatchQueryBuilder5);
      assertFalse(object0.equals((Object)object1));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string6));
      assertFalse(object1.equals((Object)object0));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertEquals(6, stringArray0.length);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertNotSame(object0, object1);
      assertNotSame(string6, string3);
      assertNotSame(string6, string4);
      assertNotSame(string6, string5);
      assertNotSame(string6, string0);
      assertNotSame(string6, string1);
      assertNotSame(string6, string2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertNotSame(string5, string1);
      assertNotSame(string5, string3);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      assertNotSame(string5, string6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(object1, object0);
      
      float float1 = 1.0F;
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder1.field(string1, float1);
      assertNotNull(multiMatchQueryBuilder6);
      assertFalse(object0.equals((Object)object1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string6));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertNotEquals(float1, float0, 0.01F);
      assertFalse(object1.equals((Object)object0));
      assertEquals(6, stringArray0.length);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertNotSame(object0, object1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string5);
      assertNotSame(string1, string6);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(object1, object0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder7 = multiMatchQueryBuilder5.fuzzyRewrite(stringArray0[3]);
      assertNotNull(multiMatchQueryBuilder7);
      assertFalse(object0.equals((Object)object1));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string6));
      assertFalse(object1.equals((Object)object0));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertNotEquals(float0, float1, 0.01F);
      assertEquals(6, stringArray0.length);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertNotSame(object0, object1);
      assertNotSame(string6, string3);
      assertNotSame(string6, string4);
      assertNotSame(string6, string5);
      assertNotSame(string6, string0);
      assertNotSame(string6, string1);
      assertNotSame(string6, string2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder1);
      assertNotSame(string5, string1);
      assertNotSame(string5, string3);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      assertNotSame(string5, string6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertNotSame(object1, object0);
      
      BytesReference bytesReference0 = multiMatchQueryBuilder5.buildAsBytes();
      assertNotNull(bytesReference0);
      assertFalse(object0.equals((Object)object1));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string6));
      assertFalse(object1.equals((Object)object0));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertNotEquals(float0, float1, 0.01F);
      assertEquals(6, stringArray0.length);
      assertEquals(322, bytesReference0.length());
      assertTrue(bytesReference0.hasArray());
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertNotSame(object0, object1);
      assertNotSame(string6, string3);
      assertNotSame(string6, string4);
      assertNotSame(string6, string5);
      assertNotSame(string6, string0);
      assertNotSame(string6, string1);
      assertNotSame(string6, string2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertNotSame(string5, string1);
      assertNotSame(string5, string3);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      assertNotSame(string5, string6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertNotSame(object1, object0);
      
      String string7 = "received join request from node [{}], but found existing node {} with same address, removing existing node";
      MultiMatchQueryBuilder multiMatchQueryBuilder8 = multiMatchQueryBuilder5.minimumShouldMatch(string7);
      assertNotNull(multiMatchQueryBuilder8);
      assertFalse(object0.equals((Object)object1));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string7));
      assertFalse(string5.equals((Object)string6));
      assertFalse(object1.equals((Object)object0));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string7));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string2));
      assertNotEquals(float0, float1, 0.01F);
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string4));
      assertFalse(string7.equals((Object)string6));
      assertFalse(string7.equals((Object)string5));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string2));
      assertFalse(string7.equals((Object)string1));
      assertEquals(6, stringArray0.length);
      assertNotSame(object0, object1);
      assertNotSame(string5, string1);
      assertNotSame(string5, string3);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      assertNotSame(string5, string7);
      assertNotSame(string5, string6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertNotSame(object1, object0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertNotSame(string6, string3);
      assertNotSame(string6, string7);
      assertNotSame(string6, string4);
      assertNotSame(string6, string5);
      assertNotSame(string6, string0);
      assertNotSame(string6, string1);
      assertNotSame(string6, string2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder8);
      assertNotSame(string7, string0);
      assertNotSame(string7, string4);
      assertNotSame(string7, string6);
      assertNotSame(string7, string5);
      assertNotSame(string7, string3);
      assertNotSame(string7, string2);
      assertNotSame(string7, string1);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder0);
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      int int0 = 294;
      Integer integer0 = new Integer(int0);
      assertNotNull(integer0);
      assertTrue(integer0.equals((Object)int0));
      assertEquals(294, (int)integer0);
      
      String[] stringArray0 = new String[1];
      int int1 = 2464;
      float float0 = 0.0F;
      float float1 = 3107.0F;
      MatchQueryBuilder.ZeroTermsQuery matchQueryBuilder_ZeroTermsQuery0 = MatchQueryBuilder.ZeroTermsQuery.ALL;
      boolean boolean0 = true;
      int int2 = (-825);
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      String[] stringArray0 = new String[3];
      String string0 = "A>c}k&x&,8%2";
      stringArray0[1] = stringArray0[0];
      String string1 = "";
      stringArray0[2] = string1;
      boolean boolean0 = false;
      XContentType xContentType0 = XContentType.JSON;
      String string2 = null;
      // Undeclared exception!
      try { 
        MultiMatchQueryBuilder.Type.valueOf(string2);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      MultiMatchQueryBuilder.Type[] multiMatchQueryBuilder_TypeArray0 = MultiMatchQueryBuilder.Type.values();
      assertNotNull(multiMatchQueryBuilder_TypeArray0);
      assertEquals(5, multiMatchQueryBuilder_TypeArray0.length);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String[] stringArray0 = new String[4];
      String string0 = "dBv,;.K#\\Ay8T";
      stringArray0[0] = string0;
      String string1 = "GVeDI,2^)=^n:1T}hB\"";
      stringArray0[1] = string1;
      String string2 = "";
      stringArray0[2] = string2;
      String string3 = "<!g*1vI7~Gv5y[^]\"";
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(object0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(4, stringArray0.length);
      
      int int0 = (-2735);
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.slop(int0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.queryName(stringArray0[3]);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.cutoffFrequency(int0);
      assertNotNull(multiMatchQueryBuilder3);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      MatchQueryBuilder.ZeroTermsQuery matchQueryBuilder_ZeroTermsQuery0 = MatchQueryBuilder.ZeroTermsQuery.NONE;
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type0 = MultiMatchQueryBuilder.Type.PHRASE_PREFIX;
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.type(multiMatchQueryBuilder_Type0);
      assertNotNull(multiMatchQueryBuilder4);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      XContentBuilder xContentBuilder0 = JsonXContent.contentBuilder();
      assertNotNull(xContentBuilder0);
      assertFalse(xContentBuilder0.humanReadable());
      assertEquals(XContentType.JSON, xContentBuilder0.contentType());
      
      String string4 = "0-,<ic]$]yq/?VL M}";
      ImmutableMap<String, String> immutableMap0 = ImmutableMap.of(string4, stringArray0[1]);
      assertNotNull(immutableMap0);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertEquals(4, stringArray0.length);
      assertEquals(1, immutableMap0.size());
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertNotSame(string4, string3);
      assertNotSame(string4, string1);
      
      ToXContent.MapParams toXContent_MapParams0 = new ToXContent.MapParams(immutableMap0);
      assertNotNull(toXContent_MapParams0);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertEquals(4, stringArray0.length);
      assertEquals(1, immutableMap0.size());
      
      multiMatchQueryBuilder4.doXContent(xContentBuilder0, toXContent_MapParams0);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertEquals(4, stringArray0.length);
      assertFalse(xContentBuilder0.humanReadable());
      assertEquals(XContentType.JSON, xContentBuilder0.contentType());
      assertEquals(1, immutableMap0.size());
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertNotSame(string4, string3);
      assertNotSame(string4, string1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder3.zeroTermsQuery(matchQueryBuilder_ZeroTermsQuery0);
      assertNotNull(multiMatchQueryBuilder5);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder5.boost(int0);
      assertNotNull(multiMatchQueryBuilder6);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder7 = multiMatchQueryBuilder6.prefixLength(int0);
      assertNotNull(multiMatchQueryBuilder7);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder8 = multiMatchQueryBuilder2.zeroTermsQuery(matchQueryBuilder_ZeroTermsQuery0);
      assertNotNull(multiMatchQueryBuilder8);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      String string0 = null;
      String[] stringArray0 = new String[4];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      stringArray0[3] = string0;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(string0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(4, stringArray0.length);
      
      String string1 = "";
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.fuzzyRewrite(string1);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      int int0 = 0;
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      String string0 = "hxvHvYbZnrk9?))MbI";
      String[] stringArray0 = new String[4];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      stringArray0[3] = string0;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(string0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(4, stringArray0.length);
      
      boolean boolean0 = false;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.lenient(boolean0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.useDisMax(boolean0);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      
      MatchQueryBuilder.Operator matchQueryBuilder_Operator0 = MatchQueryBuilder.Operator.OR;
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.operator(matchQueryBuilder_Operator0);
      assertNotNull(multiMatchQueryBuilder3);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      
      float float0 = 0.0F;
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.tieBreaker(float0);
      assertNotNull(multiMatchQueryBuilder4);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      
      XContentType xContentType0 = XContentType.CBOR;
      BytesReference bytesReference0 = multiMatchQueryBuilder4.buildAsBytes(xContentType0);
      assertNotNull(bytesReference0);
      assertEquals(4, stringArray0.length);
      assertEquals(177, bytesReference0.length());
      assertTrue(bytesReference0.hasArray());
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      
      MatchQueryBuilder.ZeroTermsQuery matchQueryBuilder_ZeroTermsQuery0 = MatchQueryBuilder.ZeroTermsQuery.NONE;
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder2.zeroTermsQuery(matchQueryBuilder_ZeroTermsQuery0);
      assertNotNull(multiMatchQueryBuilder5);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder5.tieBreaker(float0);
      assertNotNull(multiMatchQueryBuilder6);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      
      float float1 = 2636.17F;
      MultiMatchQueryBuilder multiMatchQueryBuilder7 = multiMatchQueryBuilder4.field(stringArray0[1], float1);
      assertNotNull(multiMatchQueryBuilder7);
      assertNotEquals(float1, float0, 0.01F);
      assertNotEquals(float0, float1, 0.01F);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      
      // Undeclared exception!
      try { 
        multiMatchQueryBuilder4.type((Object) multiMatchQueryBuilder1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // failed to parse [java.lang.String@0000000138] query type [java.lang.String@0000000139]. unknown type.
         //
         verifyException("org.elasticsearch.index.query.MultiMatchQueryBuilder$Type", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type0 = MultiMatchQueryBuilder.Type.MOST_FIELDS;
      assertEquals(MultiMatchQueryBuilder.Type.MOST_FIELDS, multiMatchQueryBuilder_Type0);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      
      MatchQuery.Type matchQuery_Type0 = multiMatchQueryBuilder_Type0.matchQueryType();
      assertEquals(MatchQuery.Type.BOOLEAN, matchQuery_Type0);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      
      String[] stringArray0 = new String[0];
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(matchQuery_Type0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(0, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      
      float float0 = 0.0F;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.tieBreaker(float0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(0, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      int int0 = 813;
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.maxExpansions(int0);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(0, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder1.prefixLength(int0);
      assertNotNull(multiMatchQueryBuilder3);
      assertEquals(0, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      
      String string0 = "mfgb$WO)>@nc6b";
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.minimumShouldMatch(string0);
      assertNotNull(multiMatchQueryBuilder4);
      assertEquals(0, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      
      boolean boolean0 = false;
      XContentType xContentType0 = XContentType.CBOR;
      BytesReference bytesReference0 = multiMatchQueryBuilder0.buildAsBytes(xContentType0);
      assertNotNull(bytesReference0);
      assertEquals(0, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertTrue(bytesReference0.hasArray());
      assertEquals(178, bytesReference0.length());
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder4.lenient(boolean0);
      assertNotNull(multiMatchQueryBuilder5);
      assertEquals(0, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      
      String string1 = "";
      TermSuggestionBuilder termSuggestionBuilder0 = new TermSuggestionBuilder(string1);
      assertNotNull(termSuggestionBuilder0);
      assertFalse(string1.equals((Object)string0));
      
      TermSuggestionBuilder termSuggestionBuilder1 = termSuggestionBuilder0.maxTermFreq(float0);
      assertNotNull(termSuggestionBuilder1);
      assertFalse(string1.equals((Object)string0));
      assertSame(termSuggestionBuilder0, termSuggestionBuilder1);
      assertSame(termSuggestionBuilder1, termSuggestionBuilder0);
      assertNotSame(string1, string0);
      
      int int1 = (-1009);
      TermSuggestionBuilder termSuggestionBuilder2 = termSuggestionBuilder1.minWordLength(int1);
      assertNotNull(termSuggestionBuilder2);
      assertFalse(int1 == int0);
      assertFalse(string1.equals((Object)string0));
      assertSame(termSuggestionBuilder0, termSuggestionBuilder1);
      assertSame(termSuggestionBuilder0, termSuggestionBuilder2);
      assertSame(termSuggestionBuilder1, termSuggestionBuilder0);
      assertSame(termSuggestionBuilder1, termSuggestionBuilder2);
      assertSame(termSuggestionBuilder2, termSuggestionBuilder1);
      assertSame(termSuggestionBuilder2, termSuggestionBuilder0);
      assertNotSame(string1, string0);
      
      Integer integer0 = new Integer(int1);
      assertNotNull(integer0);
      assertFalse(int1 == int0);
      assertFalse(integer0.equals((Object)int0));
      assertTrue(integer0.equals((Object)int1));
      assertEquals((-1009), (int)integer0);
      
      TermSuggestionBuilder termSuggestionBuilder3 = termSuggestionBuilder2.maxInspections(integer0);
      assertNotNull(termSuggestionBuilder3);
      assertFalse(int1 == int0);
      assertFalse(integer0.equals((Object)int0));
      assertTrue(integer0.equals((Object)int1));
      assertFalse(string1.equals((Object)string0));
      assertSame(termSuggestionBuilder0, termSuggestionBuilder1);
      assertSame(termSuggestionBuilder0, termSuggestionBuilder3);
      assertSame(termSuggestionBuilder0, termSuggestionBuilder2);
      assertSame(termSuggestionBuilder1, termSuggestionBuilder3);
      assertSame(termSuggestionBuilder1, termSuggestionBuilder0);
      assertSame(termSuggestionBuilder1, termSuggestionBuilder2);
      assertSame(termSuggestionBuilder2, termSuggestionBuilder1);
      assertSame(termSuggestionBuilder2, termSuggestionBuilder3);
      assertSame(termSuggestionBuilder2, termSuggestionBuilder0);
      assertSame(termSuggestionBuilder3, termSuggestionBuilder0);
      assertSame(termSuggestionBuilder3, termSuggestionBuilder1);
      assertSame(termSuggestionBuilder3, termSuggestionBuilder2);
      assertNotSame(string1, string0);
      
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)21;
      byteArray0[0] = byte0;
      byte byte1 = (byte)23;
      byteArray0[1] = byte1;
      byte byte2 = (byte)41;
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      int int2 = 1758;
      int int3 = (-919);
      StreamInput streamInput0 = StreamInput.wrap(byteArray0, int2, int3);
      assertNotNull(streamInput0);
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      assertFalse(int3 == int1);
      assertFalse(int2 == int0);
      assertFalse(int2 == int3);
      assertFalse(int2 == int1);
      assertEquals(4, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)21, (byte)23, (byte)41, (byte)0}, byteArray0);
      
      TransportException transportException0 = null;
      try {
        transportException0 = new TransportException(streamInput0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.common.io.stream.InputStreamStreamInput", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      int int0 = (-1389);
      Integer integer0 = new Integer(int0);
      assertNotNull(integer0);
      assertTrue(integer0.equals((Object)int0));
      assertEquals((-1389), (int)integer0);
      
      String[] stringArray0 = new String[5];
      String string0 = "H\\ui%,_0h{p UPs";
      stringArray0[0] = string0;
      EvoSuiteFile evoSuiteFile0 = null;
      boolean boolean0 = FileSystemHandling.createFolder(evoSuiteFile0);
      assertFalse(boolean0);
      
      String string1 = "tq`gv]N";
      stringArray0[1] = string1;
      String string2 = "^";
      stringArray0[2] = string2;
      String string3 = "0@981yR,r^O";
      stringArray0[3] = string3;
      boolean boolean1 = false;
      boolean boolean2 = false;
      boolean boolean3 = FileSystemHandling.setPermissions(evoSuiteFile0, boolean1, boolean2, boolean2);
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean2 == boolean0);
      assertTrue(boolean3 == boolean0);
      assertTrue(boolean3 == boolean2);
      assertTrue(boolean3 == boolean1);
      assertFalse(boolean3);
      
      String string4 = "G#|LDq1%0M:<9n.Pmx:";
      stringArray0[4] = string4;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(integer0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertTrue(integer0.equals((Object)int0));
      assertEquals(5, stringArray0.length);
      
      MatchQueryBuilder.ZeroTermsQuery matchQueryBuilder_ZeroTermsQuery0 = MatchQueryBuilder.ZeroTermsQuery.ALL;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.zeroTermsQuery(matchQueryBuilder_ZeroTermsQuery0);
      assertNotNull(multiMatchQueryBuilder1);
      assertTrue(integer0.equals((Object)int0));
      assertEquals(5, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      int int1 = 2436;
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.boost(int1);
      assertNotNull(multiMatchQueryBuilder2);
      assertFalse(int0 == int1);
      assertFalse(integer0.equals((Object)int1));
      assertTrue(integer0.equals((Object)int0));
      assertFalse(int1 == int0);
      assertEquals(5, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      
      String string5 = "";
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.field(string5);
      assertNotNull(multiMatchQueryBuilder3);
      assertFalse(int0 == int1);
      assertFalse(integer0.equals((Object)int1));
      assertTrue(integer0.equals((Object)int0));
      assertFalse(int1 == int0);
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertEquals(5, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertNotSame(string5, string4);
      assertNotSame(string5, string2);
      assertNotSame(string5, string1);
      assertNotSame(string5, string3);
      assertNotSame(string5, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.queryName(stringArray0[0]);
      assertNotNull(multiMatchQueryBuilder4);
      assertFalse(int0 == int1);
      assertFalse(integer0.equals((Object)int1));
      assertTrue(integer0.equals((Object)int0));
      assertFalse(int1 == int0);
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertEquals(5, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertNotSame(string5, string4);
      assertNotSame(string5, string2);
      assertNotSame(string5, string1);
      assertNotSame(string5, string3);
      assertNotSame(string5, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      
      String string6 = ":O7|)NvNKZ?mF`KI";
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder2.queryName(stringArray0[3]);
      assertNotNull(multiMatchQueryBuilder5);
      assertFalse(int0 == int1);
      assertFalse(integer0.equals((Object)int1));
      assertTrue(integer0.equals((Object)int0));
      assertFalse(int1 == int0);
      assertEquals(5, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder5.slop(int1);
      assertNotNull(multiMatchQueryBuilder6);
      assertFalse(int0 == int1);
      assertFalse(integer0.equals((Object)int1));
      assertTrue(integer0.equals((Object)int0));
      assertFalse(int1 == int0);
      assertEquals(5, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      
      boolean boolean4 = false;
      MultiMatchQueryBuilder multiMatchQueryBuilder7 = multiMatchQueryBuilder1.useDisMax(boolean4);
      assertNotNull(multiMatchQueryBuilder7);
      assertFalse(int0 == int1);
      assertFalse(integer0.equals((Object)int1));
      assertTrue(integer0.equals((Object)int0));
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean3);
      assertEquals(5, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder5);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder8 = multiMatchQueryBuilder4.boost(int0);
      assertNotNull(multiMatchQueryBuilder8);
      assertFalse(int0 == int1);
      assertFalse(integer0.equals((Object)int1));
      assertTrue(integer0.equals((Object)int0));
      assertFalse(int1 == int0);
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string6));
      assertFalse(string5.equals((Object)string0));
      assertEquals(5, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertNotSame(string5, string4);
      assertNotSame(string5, string2);
      assertNotSame(string5, string1);
      assertNotSame(string5, string3);
      assertNotSame(string5, string6);
      assertNotSame(string5, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder7);
      
      BytesReference bytesReference0 = multiMatchQueryBuilder8.buildAsBytes();
      assertNotNull(bytesReference0);
      assertFalse(int0 == int1);
      assertFalse(integer0.equals((Object)int1));
      assertTrue(integer0.equals((Object)int0));
      assertFalse(int1 == int0);
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string6));
      assertFalse(string5.equals((Object)string0));
      assertEquals(5, stringArray0.length);
      assertTrue(bytesReference0.hasArray());
      assertEquals(211, bytesReference0.length());
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertNotSame(string5, string4);
      assertNotSame(string5, string2);
      assertNotSame(string5, string1);
      assertNotSame(string5, string3);
      assertNotSame(string5, string6);
      assertNotSame(string5, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder7);
      
      System.setCurrentTimeMillis(int1);
      assertFalse(int1 == int0);
      
      float float0 = 2809.073F;
      MultiMatchQueryBuilder multiMatchQueryBuilder9 = multiMatchQueryBuilder7.tieBreaker(float0);
      assertNotNull(multiMatchQueryBuilder9);
      assertFalse(int0 == int1);
      assertFalse(integer0.equals((Object)int1));
      assertTrue(integer0.equals((Object)int0));
      assertTrue(boolean4 == boolean0);
      assertTrue(boolean4 == boolean3);
      assertEquals(5, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder5);
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      boolean boolean0 = FileSystemHandling.shouldAllThrowIOExceptions();
      assertTrue(boolean0);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String[] stringArray0 = new String[4];
      String string0 = "{b/>oI_6<s1::F";
      stringArray0[0] = string0;
      String string1 = "";
      stringArray0[1] = string1;
      String string2 = "phrase";
      stringArray0[2] = string2;
      String string3 = ")nS";
      stringArray0[3] = string3;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(object0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(4, stringArray0.length);
      
      TransportResponseHandler<TransportResponse> transportResponseHandler0 = (TransportResponseHandler<TransportResponse>) mock(TransportResponseHandler.class, new ViolatedAssumptionAnswer());
      doReturn((TransportResponse) null).when(transportResponseHandler0).newInstance();
      PlainTransportFuture<TransportResponse> plainTransportFuture0 = new PlainTransportFuture<TransportResponse>(transportResponseHandler0);
      assertNotNull(plainTransportFuture0);
      assertNull(plainTransportFuture0.executor());
      
      TransportResponse transportResponse0 = plainTransportFuture0.newInstance();
      assertNull(transportResponse0);
      assertNull(plainTransportFuture0.executor());
      
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.type((Object) transportResponse0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(4, stringArray0.length);
      assertNull(plainTransportFuture0.executor());
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      float float0 = 688.04645F;
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.tieBreaker(float0);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(4, stringArray0.length);
      assertNull(plainTransportFuture0.executor());
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      
      int int0 = 0;
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.prefixLength(int0);
      assertNotNull(multiMatchQueryBuilder3);
      assertEquals(4, stringArray0.length);
      assertNull(plainTransportFuture0.executor());
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      
      boolean boolean1 = true;
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.useDisMax(boolean1);
      assertNotNull(multiMatchQueryBuilder4);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, stringArray0.length);
      assertNull(plainTransportFuture0.executor());
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder4.slop(int0);
      assertNotNull(multiMatchQueryBuilder5);
      assertTrue(boolean1 == boolean0);
      assertEquals(4, stringArray0.length);
      assertNull(plainTransportFuture0.executor());
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder5.analyzer(string2);
      assertNotNull(multiMatchQueryBuilder6);
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertTrue(boolean1 == boolean0);
      assertEquals(4, stringArray0.length);
      assertNull(plainTransportFuture0.executor());
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertNotSame(string2, string3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      Object object0 = null;
      String[] stringArray0 = new String[0];
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(object0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(0, stringArray0.length);
      
      int int0 = 3849;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.slop(int0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(0, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      String[] stringArray0 = new String[4];
      String string0 = "m";
      stringArray0[0] = string0;
      String string1 = "*_(c3'x&";
      stringArray0[1] = string1;
      String string2 = "Ptt~e[";
      stringArray0[2] = string2;
      String string3 = "";
      stringArray0[3] = string3;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(object0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(4, stringArray0.length);
      
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type0 = MultiMatchQueryBuilder.Type.MOST_FIELDS;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.type(multiMatchQueryBuilder_Type0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      int int0 = 399;
      Integer integer0 = Integer.valueOf(int0);
      assertNotNull(integer0);
      assertTrue(integer0.equals((Object)int0));
      assertEquals(399, (int)integer0);
      
      String[] stringArray0 = new String[0];
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(integer0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertTrue(integer0.equals((Object)int0));
      assertEquals(0, stringArray0.length);
      
      String string0 = "SFPiGtF0";
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.field(string0, (float) int0);
      assertNotNull(multiMatchQueryBuilder1);
      assertTrue(integer0.equals((Object)int0));
      assertEquals(0, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.fuzziness(string0);
      assertNotNull(multiMatchQueryBuilder2);
      assertTrue(integer0.equals((Object)int0));
      assertEquals(0, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      
      MatchQueryBuilder.Operator matchQueryBuilder_Operator0 = MatchQueryBuilder.Operator.AND;
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.operator(matchQueryBuilder_Operator0);
      assertNotNull(multiMatchQueryBuilder3);
      assertTrue(integer0.equals((Object)int0));
      assertEquals(0, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.queryName(string0);
      assertNotNull(multiMatchQueryBuilder4);
      assertTrue(integer0.equals((Object)int0));
      assertEquals(0, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      
      String string1 = "PHRASE_PREFIX";
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder4.fuzzyRewrite(string1);
      assertNotNull(multiMatchQueryBuilder5);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertNotSame(string0, string1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertNotSame(string1, string0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder5.slop(int0);
      assertNotNull(multiMatchQueryBuilder6);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertNotSame(string0, string1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertNotSame(string1, string0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      String[] stringArray0 = new String[1];
      String string0 = "";
      stringArray0[0] = string0;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(object0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(1, stringArray0.length);
      
      int int0 = 1193;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.maxExpansions(int0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(1, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.field(stringArray0[0]);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(1, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      MatchQueryBuilder.Operator matchQueryBuilder_Operator0 = MatchQueryBuilder.Operator.OR;
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.operator(matchQueryBuilder_Operator0);
      assertNotNull(multiMatchQueryBuilder3);
      assertEquals(1, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.field(string0, (float) int0);
      assertNotNull(multiMatchQueryBuilder4);
      assertEquals(1, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      String string0 = "org.joda.time.tz.FixedDateTimeZone";
      Integer integer0 = Integer.getInteger(string0);
      assertNull(integer0);
      
      String[] stringArray0 = new String[0];
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(integer0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(0, stringArray0.length);
      
      float float0 = 0.0F;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.cutoffFrequency(float0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(0, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      assertNotNull(delayQueue0);
      
      Delayed delayed0 = delayQueue0.poll();
      assertNull(delayed0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.type((Object) delayed0);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(0, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      Object object0 = null;
      String[] stringArray0 = new String[0];
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(object0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(0, stringArray0.length);
      
      float float0 = 0.0F;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.cutoffFrequency(float0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(0, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      MatchQueryBuilder.ZeroTermsQuery matchQueryBuilder_ZeroTermsQuery0 = MatchQueryBuilder.ZeroTermsQuery.NONE;
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.zeroTermsQuery(matchQueryBuilder_ZeroTermsQuery0);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(0, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.boost(float0);
      assertNotNull(multiMatchQueryBuilder3);
      assertEquals(0, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      
      boolean boolean0 = true;
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.lenient(boolean0);
      assertNotNull(multiMatchQueryBuilder4);
      assertEquals(0, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      
      String string0 = "Y\"b~e3.";
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder4.queryName(string0);
      assertNotNull(multiMatchQueryBuilder5);
      assertEquals(0, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder5.tieBreaker(float0);
      assertNotNull(multiMatchQueryBuilder6);
      assertEquals(0, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      assertNotNull(delayQueue0);
      
      long long0 = (-1L);
      TimeUnit timeUnit0 = TimeUnit.NANOSECONDS;
      Delayed delayed0 = delayQueue0.poll(long0, timeUnit0);
      assertNull(delayed0);
      
      String[] stringArray0 = new String[2];
      String string0 = "8#uK(R=h3o_YgK";
      stringArray0[0] = string0;
      String string1 = "";
      stringArray0[1] = string1;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(delayed0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(2, stringArray0.length);
      
      String string2 = "97mV#f($wr5S";
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.analyzer(string2);
      assertNotNull(multiMatchQueryBuilder1);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(2, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      String string0 = "rZ75|H;2SDRw]";
      String[] stringArray0 = new String[0];
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(string0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(0, stringArray0.length);
      
      int int0 = 0;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.prefixLength(int0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(0, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.slop(int0);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(0, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      boolean boolean0 = false;
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.lenient(boolean0);
      assertNotNull(multiMatchQueryBuilder3);
      assertEquals(0, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      // Undeclared exception!
      try { 
        multiMatchQueryBuilder3.type((Object) multiMatchQueryBuilder0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // failed to parse [java.lang.String@0000000053] query type [java.lang.String@0000000054]. unknown type.
         //
         verifyException("org.elasticsearch.index.query.MultiMatchQueryBuilder$Type", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      String string0 = "NZ`%*I<\\";
      String[] stringArray0 = new String[7];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      stringArray0[3] = string0;
      stringArray0[4] = string0;
      stringArray0[5] = string0;
      stringArray0[6] = string0;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(string0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(7, stringArray0.length);
      
      float float0 = 533.0F;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.field(stringArray0[2], float0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(7, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      XContentType xContentType0 = XContentType.SMILE;
      XContent xContent0 = xContentType0.xContent();
      assertNotNull(xContent0);
      assertEquals(XContentType.SMILE, xContent0.type());
      assertEquals((byte) (-1), xContent0.streamSeparator());
      
      XContentBuilder xContentBuilder0 = XContentBuilder.builder(xContent0, stringArray0);
      assertNotNull(xContentBuilder0);
      assertEquals(7, stringArray0.length);
      assertEquals(XContentType.SMILE, xContent0.type());
      assertEquals((byte) (-1), xContent0.streamSeparator());
      assertEquals(XContentType.SMILE, xContentBuilder0.contentType());
      assertFalse(xContentBuilder0.humanReadable());
      
      ToXContent.Params toXContent_Params0 = ToXContent.EMPTY_PARAMS;
      assertNotNull(toXContent_Params0);
      
      multiMatchQueryBuilder1.doXContent(xContentBuilder0, toXContent_Params0);
      assertEquals(7, stringArray0.length);
      assertEquals(XContentType.SMILE, xContent0.type());
      assertEquals((byte) (-1), xContent0.streamSeparator());
      assertEquals(XContentType.SMILE, xContentBuilder0.contentType());
      assertFalse(xContentBuilder0.humanReadable());
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      FormatStyle formatStyle0 = FormatStyle.LONG;
      assertEquals(FormatStyle.LONG, formatStyle0);
      
      String[] stringArray0 = new String[5];
      String string0 = "cutoff_frequency";
      stringArray0[0] = string0;
      String string1 = "org.elasticsearch.discovery.zen.ZenDiscovery$NewClusterStateListener";
      stringArray0[1] = string1;
      String string2 = "_OSUshu96";
      FormatStyle[] formatStyleArray0 = FormatStyle.values();
      assertNotNull(formatStyleArray0);
      assertEquals(4, formatStyleArray0.length);
      
      stringArray0[2] = string2;
      String string3 = "IBSK*l&%lq";
      stringArray0[3] = string3;
      String string4 = "tiff";
      stringArray0[4] = string4;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(formatStyle0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(5, stringArray0.length);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.fuzziness(string4);
      assertNotNull(multiMatchQueryBuilder1);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertEquals(5, stringArray0.length);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      float float0 = 931.7059F;
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.tieBreaker(float0);
      assertNotNull(multiMatchQueryBuilder2);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertEquals(5, stringArray0.length);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type0 = MultiMatchQueryBuilder.Type.MOST_FIELDS;
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder1.type(multiMatchQueryBuilder_Type0);
      assertNotNull(multiMatchQueryBuilder3);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertEquals(5, stringArray0.length);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      
      String string5 = ",Y&2a%SiC!";
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder0.analyzer(string5);
      assertNotNull(multiMatchQueryBuilder4);
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertEquals(5, stringArray0.length);
      assertNotSame(string5, string3);
      assertNotSame(string5, string1);
      assertNotSame(string5, string0);
      assertNotSame(string5, string2);
      assertNotSame(string5, string4);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      
      XContentType xContentType0 = XContentType.YAML;
      BytesReference bytesReference0 = multiMatchQueryBuilder4.buildAsBytes(xContentType0);
      assertNotNull(bytesReference0);
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertEquals(5, stringArray0.length);
      assertTrue(bytesReference0.hasArray());
      assertEquals(334, bytesReference0.length());
      assertNotSame(string5, string3);
      assertNotSame(string5, string1);
      assertNotSame(string5, string0);
      assertNotSame(string5, string2);
      assertNotSame(string5, string4);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder4.type(multiMatchQueryBuilder_Type0);
      assertNotNull(multiMatchQueryBuilder5);
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertEquals(5, stringArray0.length);
      assertNotSame(string5, string3);
      assertNotSame(string5, string1);
      assertNotSame(string5, string0);
      assertNotSame(string5, string2);
      assertNotSame(string5, string4);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      int int0 = 0;
      Integer integer0 = new Integer(int0);
      assertNotNull(integer0);
      assertTrue(integer0.equals((Object)int0));
      assertEquals(0, (int)integer0);
      
      String[] stringArray0 = new String[4];
      String string0 = "lJ_:d~[c";
      stringArray0[0] = string0;
      String string1 = "s.=y4CpXbSVvDyD_sU";
      stringArray0[1] = string1;
      String string2 = "yY3z+VPxei</D~N";
      stringArray0[2] = string2;
      String string3 = "h2Gn\\N";
      stringArray0[3] = string3;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(integer0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertTrue(integer0.equals((Object)int0));
      assertEquals(4, stringArray0.length);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.analyzer(stringArray0[3]);
      assertNotNull(multiMatchQueryBuilder1);
      assertTrue(integer0.equals((Object)int0));
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      int int1 = 5279;
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.slop(int1);
      assertNotNull(multiMatchQueryBuilder2);
      assertFalse(int0 == int1);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertFalse(int1 == int0);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.fuzziness(string1);
      assertNotNull(multiMatchQueryBuilder3);
      assertFalse(int0 == int1);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(int1 == int0);
      assertEquals(4, stringArray0.length);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      String string4 = null;
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder1.fuzzyRewrite(string4);
      assertNotNull(multiMatchQueryBuilder4);
      assertFalse(int0 == int1);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      float float0 = 0.0F;
      float float1 = 0.0F;
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder2.cutoffFrequency(float1);
      assertNotNull(multiMatchQueryBuilder5);
      assertFalse(int0 == int1);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertEquals(float1, float0, 0.01F);
      assertFalse(int1 == int0);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder3.tieBreaker(float0);
      assertNotNull(multiMatchQueryBuilder6);
      assertFalse(int0 == int1);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertEquals(float0, float1, 0.01F);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(int1 == int0);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder7 = multiMatchQueryBuilder1.analyzer(string0);
      assertNotNull(multiMatchQueryBuilder7);
      assertFalse(int0 == int1);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertEquals(4, stringArray0.length);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder8 = multiMatchQueryBuilder6.prefixLength(int1);
      assertNotNull(multiMatchQueryBuilder8);
      assertFalse(int0 == int1);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertEquals(float0, float1, 0.01F);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(int1 == int0);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder9 = multiMatchQueryBuilder8.fuzziness(stringArray0[0]);
      assertNotNull(multiMatchQueryBuilder9);
      assertFalse(int0 == int1);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(int1 == int0);
      assertEquals(float0, float1, 0.01F);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder10 = multiMatchQueryBuilder8.maxExpansions(int1);
      assertNotNull(multiMatchQueryBuilder10);
      assertFalse(int0 == int1);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(int1 == int0);
      assertEquals(float0, float1, 0.01F);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder10);
      
      XContentType xContentType0 = XContentType.JSON;
      BytesReference bytesReference0 = multiMatchQueryBuilder9.buildAsBytes(xContentType0);
      assertNotNull(bytesReference0);
      assertFalse(int0 == int1);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(int1 == int0);
      assertEquals(float0, float1, 0.01F);
      assertEquals(4, stringArray0.length);
      assertTrue(bytesReference0.hasArray());
      assertEquals(258, bytesReference0.length());
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder10);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder11 = multiMatchQueryBuilder6.maxExpansions(int1);
      assertNotNull(multiMatchQueryBuilder11);
      assertFalse(int0 == int1);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertEquals(float0, float1, 0.01F);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(int1 == int0);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder10);
      
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type0 = MultiMatchQueryBuilder.Type.PHRASE;
      MultiMatchQueryBuilder multiMatchQueryBuilder12 = multiMatchQueryBuilder0.type(multiMatchQueryBuilder_Type0);
      assertNotNull(multiMatchQueryBuilder12);
      assertFalse(int0 == int1);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(integer0.equals((Object)int1));
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder4);
      
      // Undeclared exception!
      try { 
        MultiMatchQueryBuilder.Type.valueOf(string3);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.elasticsearch.index.query.MultiMatchQueryBuilder.Type.h2Gn\\N
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      String[] stringArray0 = null;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = null;
      try {
        multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(object0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      String string0 = null;
      String[] stringArray0 = new String[4];
      String string1 = "CV{{~.nK\\lIr>O{)";
      stringArray0[0] = string1;
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      String string2 = "";
      stringArray0[3] = string2;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(string0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(4, stringArray0.length);
      
      float float0 = 2918.0483F;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.boost(float0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      float float1 = 0.0F;
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.field(string1, float1);
      assertNotNull(multiMatchQueryBuilder2);
      assertFalse(string1.equals((Object)string2));
      assertNotEquals(float0, float1, 0.01F);
      assertNotEquals(float1, float0, 0.01F);
      assertEquals(4, stringArray0.length);
      assertNotSame(string1, string2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.queryName(string0);
      assertNotNull(multiMatchQueryBuilder3);
      assertFalse(string1.equals((Object)string2));
      assertNotEquals(float0, float1, 0.01F);
      assertNotEquals(float1, float0, 0.01F);
      assertEquals(4, stringArray0.length);
      assertNotSame(string1, string2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      
      MatchQueryBuilder.ZeroTermsQuery matchQueryBuilder_ZeroTermsQuery0 = MatchQueryBuilder.ZeroTermsQuery.NONE;
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.zeroTermsQuery(matchQueryBuilder_ZeroTermsQuery0);
      assertNotNull(multiMatchQueryBuilder4);
      assertFalse(string1.equals((Object)string2));
      assertNotEquals(float0, float1, 0.01F);
      assertNotEquals(float1, float0, 0.01F);
      assertEquals(4, stringArray0.length);
      assertNotSame(string1, string2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      
      int int0 = (-1660);
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder4.slop(int0);
      assertNotNull(multiMatchQueryBuilder5);
      assertFalse(string1.equals((Object)string2));
      assertNotEquals(float0, float1, 0.01F);
      assertNotEquals(float1, float0, 0.01F);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertNotSame(string1, string2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      
      Object object0 = null;
      // Undeclared exception!
      try { 
        multiMatchQueryBuilder5.fuzziness(object0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.evosuite.runtime.System", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      TransportResponse.Empty transportResponse_Empty0 = TransportResponse.Empty.INSTANCE;
      assertNotNull(transportResponse_Empty0);
      
      String[] stringArray0 = new String[1];
      String string0 = ">(Cl_";
      stringArray0[0] = string0;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(transportResponse_Empty0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(1, stringArray0.length);
      
      int int0 = 0;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.maxExpansions(int0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(1, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.slop(int0);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(1, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.fuzziness(multiMatchQueryBuilder1);
      assertNotNull(multiMatchQueryBuilder3);
      assertEquals(1, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      MatchQueryBuilder.ZeroTermsQuery matchQueryBuilder_ZeroTermsQuery0 = MatchQueryBuilder.ZeroTermsQuery.NONE;
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.zeroTermsQuery(matchQueryBuilder_ZeroTermsQuery0);
      assertNotNull(multiMatchQueryBuilder4);
      assertEquals(1, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type0 = MultiMatchQueryBuilder.Type.BEST_FIELDS;
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder4.type(multiMatchQueryBuilder_Type0);
      assertNotNull(multiMatchQueryBuilder5);
      assertEquals(1, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      
      float float0 = (-687.05695F);
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder5.cutoffFrequency(float0);
      assertNotNull(multiMatchQueryBuilder6);
      assertEquals(1, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      String[] stringArray0 = new String[2];
      String string0 = "";
      stringArray0[0] = string0;
      String string1 = "Malformed action/metadata line [";
      stringArray0[1] = string1;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(object0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(2, stringArray0.length);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.queryName(string0);
      assertNotNull(multiMatchQueryBuilder1);
      assertFalse(string0.equals((Object)string1));
      assertEquals(2, stringArray0.length);
      assertNotSame(string0, string1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type0 = MultiMatchQueryBuilder.Type.MOST_FIELDS;
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.type(multiMatchQueryBuilder_Type0);
      assertNotNull(multiMatchQueryBuilder2);
      assertFalse(string0.equals((Object)string1));
      assertEquals(2, stringArray0.length);
      assertNotSame(string0, string1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      
      MatchQueryBuilder.Operator matchQueryBuilder_Operator0 = MatchQueryBuilder.Operator.AND;
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.operator(matchQueryBuilder_Operator0);
      assertNotNull(multiMatchQueryBuilder3);
      assertFalse(string0.equals((Object)string1));
      assertEquals(2, stringArray0.length);
      assertNotSame(string0, string1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      boolean boolean0 = true;
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.lenient(boolean0);
      assertNotNull(multiMatchQueryBuilder4);
      assertFalse(string0.equals((Object)string1));
      assertEquals(2, stringArray0.length);
      assertNotSame(string0, string1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      
      String string2 = "1_:r";
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder4.minimumShouldMatch(string2);
      assertNotNull(multiMatchQueryBuilder5);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(2, stringArray0.length);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type0 = MultiMatchQueryBuilder.Type.PHRASE_PREFIX;
      assertEquals(MultiMatchQueryBuilder.Type.PHRASE_PREFIX, multiMatchQueryBuilder_Type0);
      assertEquals(MatchQuery.Type.PHRASE_PREFIX, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(0.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      
      MatchQuery.Type matchQuery_Type0 = multiMatchQueryBuilder_Type0.matchQueryType();
      assertEquals(MatchQuery.Type.PHRASE_PREFIX, matchQuery_Type0);
      assertEquals(MatchQuery.Type.PHRASE_PREFIX, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(0.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      String[] stringArray0 = new String[8];
      String string0 = "}`AJ'HMg(o<vsT@\\@!";
      stringArray0[0] = string0;
      String string1 = "5I";
      stringArray0[1] = string1;
      String string2 = ".f-ZnK";
      stringArray0[2] = string2;
      String string3 = "Fetch phase failed";
      stringArray0[3] = string3;
      String string4 = "cross_fields";
      stringArray0[4] = string4;
      String string5 = "H8.:MQuG{LRMLE";
      stringArray0[5] = string5;
      String string6 = "y`BcH}9~#;F]1QI";
      stringArray0[6] = string6;
      String string7 = "";
      stringArray0[7] = string7;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(object0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(8, stringArray0.length);
      
      MatchQueryBuilder.Operator matchQueryBuilder_Operator0 = MatchQueryBuilder.Operator.AND;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.operator(matchQueryBuilder_Operator0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(8, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.field(string6);
      assertNotNull(multiMatchQueryBuilder2);
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string7));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string5));
      assertEquals(8, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertNotSame(string6, string2);
      assertNotSame(string6, string1);
      assertNotSame(string6, string3);
      assertNotSame(string6, string0);
      assertNotSame(string6, string7);
      assertNotSame(string6, string4);
      assertNotSame(string6, string5);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.queryName(stringArray0[5]);
      assertNotNull(multiMatchQueryBuilder3);
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string7));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string5));
      assertEquals(8, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertNotSame(string6, string2);
      assertNotSame(string6, string1);
      assertNotSame(string6, string3);
      assertNotSame(string6, string0);
      assertNotSame(string6, string7);
      assertNotSame(string6, string4);
      assertNotSame(string6, string5);
      
      boolean boolean0 = false;
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.lenient(boolean0);
      assertNotNull(multiMatchQueryBuilder4);
      assertFalse(string6.equals((Object)string2));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string7));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string5));
      assertEquals(8, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertNotSame(string6, string2);
      assertNotSame(string6, string1);
      assertNotSame(string6, string3);
      assertNotSame(string6, string0);
      assertNotSame(string6, string7);
      assertNotSame(string6, string4);
      assertNotSame(string6, string5);
      
      // Undeclared exception!
      try { 
        multiMatchQueryBuilder4.type((Object) stringArray0[3]);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // failed to parse [java.lang.String@0000000072] query type [java.lang.String@0000000073]. unknown type.
         //
         verifyException("org.elasticsearch.index.query.MultiMatchQueryBuilder$Type", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      String[] stringArray0 = new String[2];
      String string0 = "";
      stringArray0[0] = string0;
      String string1 = "";
      stringArray0[1] = string1;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(object0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(2, stringArray0.length);
      
      BytesReference bytesReference0 = multiMatchQueryBuilder0.buildAsBytes();
      assertNotNull(bytesReference0);
      assertEquals(2, stringArray0.length);
      assertEquals(72, bytesReference0.length());
      assertTrue(bytesReference0.hasArray());
      
      int int0 = (-4917);
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.prefixLength(int0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(2, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder0.fuzzyRewrite(stringArray0[0]);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(2, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type0 = MultiMatchQueryBuilder.Type.PHRASE_PREFIX;
      assertEquals(MultiMatchQueryBuilder.Type.PHRASE_PREFIX, multiMatchQueryBuilder_Type0);
      assertEquals(MatchQuery.Type.PHRASE_PREFIX, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(0.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      
      MatchQuery.Type matchQuery_Type0 = multiMatchQueryBuilder_Type0.matchQueryType();
      assertEquals(MatchQuery.Type.PHRASE_PREFIX, matchQuery_Type0);
      assertEquals(MatchQuery.Type.PHRASE_PREFIX, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(0.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      
      int int1 = 5;
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder1.maxExpansions(int1);
      assertNotNull(multiMatchQueryBuilder3);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(2, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder1.minimumShouldMatch(string1);
      assertNotNull(multiMatchQueryBuilder4);
      assertFalse(int0 == int1);
      assertEquals(2, stringArray0.length);
      assertSame(string1, string0);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      
      float float0 = 4001.6565F;
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder3.boost(float0);
      assertNotNull(multiMatchQueryBuilder5);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(2, stringArray0.length);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      
      float float1 = (-1.0F);
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder0.fuzzyRewrite(string0);
      assertNotNull(multiMatchQueryBuilder6);
      assertEquals(2, stringArray0.length);
      assertSame(string0, string1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder7 = multiMatchQueryBuilder3.tieBreaker(float1);
      assertNotNull(multiMatchQueryBuilder7);
      assertNotEquals(float1, float0, 0.01F);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(2, stringArray0.length);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      
      XContentType xContentType0 = XContentType.JSON;
      BytesReference bytesReference1 = multiMatchQueryBuilder7.buildAsBytes(xContentType0);
      assertNotNull(bytesReference1);
      assertNotEquals(float1, float0, 0.01F);
      assertFalse(bytesReference1.equals((Object)bytesReference0));
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(2, stringArray0.length);
      assertEquals(195, bytesReference1.length());
      assertTrue(bytesReference1.hasArray());
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder0);
      assertNotSame(bytesReference1, bytesReference0);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      
      MatchQueryBuilder.Operator matchQueryBuilder_Operator0 = MatchQueryBuilder.Operator.AND;
      MultiMatchQueryBuilder multiMatchQueryBuilder8 = multiMatchQueryBuilder1.tieBreaker(float1);
      assertNotNull(multiMatchQueryBuilder8);
      assertNotEquals(float1, float0, 0.01F);
      assertFalse(int0 == int1);
      assertEquals(2, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder9 = multiMatchQueryBuilder0.operator(matchQueryBuilder_Operator0);
      assertNotNull(multiMatchQueryBuilder9);
      assertEquals(2, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder4);
      
      ParseField parseField0 = multiMatchQueryBuilder_Type0.parseField();
      assertNotNull(parseField0);
      assertEquals("phrase_prefix", parseField0.getPreferredName());
      assertEquals("phrase_prefix", parseField0.toString());
      assertEquals(MatchQuery.Type.PHRASE_PREFIX, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(0.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder10 = multiMatchQueryBuilder9.slop(int1);
      assertNotNull(multiMatchQueryBuilder10);
      assertFalse(int1 == int0);
      assertEquals(2, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder11 = multiMatchQueryBuilder10.type(multiMatchQueryBuilder_Type0);
      assertNotNull(multiMatchQueryBuilder11);
      assertFalse(int1 == int0);
      assertEquals(2, stringArray0.length);
      assertEquals(MatchQuery.Type.PHRASE_PREFIX, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(0.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder2);
      
      String string2 = "";
      MultiMatchQueryBuilder multiMatchQueryBuilder12 = multiMatchQueryBuilder9.field(string2);
      assertNotNull(multiMatchQueryBuilder12);
      assertEquals(2, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder4);
      assertSame(string2, string0);
      assertSame(string2, string1);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder11);
      
      ParseField parseField1 = multiMatchQueryBuilder_Type0.parseField();
      assertNotNull(parseField1);
      assertEquals(MatchQuery.Type.PHRASE_PREFIX, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(0.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertEquals("phrase_prefix", parseField1.getPreferredName());
      assertEquals("phrase_prefix", parseField1.toString());
      assertSame(parseField1, parseField0);
      
      float float2 = (-1803.3F);
      MultiMatchQueryBuilder multiMatchQueryBuilder13 = multiMatchQueryBuilder0.tieBreaker(float2);
      assertNotNull(multiMatchQueryBuilder13);
      assertNotEquals(float2, float1, 0.01F);
      assertNotEquals(float2, float0, 0.01F);
      assertEquals(2, stringArray0.length);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder14 = multiMatchQueryBuilder3.field(string2);
      assertNotNull(multiMatchQueryBuilder14);
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(2, stringArray0.length);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(string2, string0);
      assertSame(string2, string1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder8);
      
      String string3 = "org.elasticsearch.common.util.CancellableThreads";
      MultiMatchQueryBuilder multiMatchQueryBuilder15 = multiMatchQueryBuilder12.fuzziness(string3);
      assertNotNull(multiMatchQueryBuilder15);
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertEquals(2, stringArray0.length);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder14);
      assertSame(string2, string0);
      assertNotSame(string2, string3);
      assertSame(string2, string1);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder11);
      
      String string4 = "}D/Ji)#ttx5o$>scA";
      MultiMatchQueryBuilder multiMatchQueryBuilder16 = multiMatchQueryBuilder12.fuzzyRewrite(string4);
      assertNotNull(multiMatchQueryBuilder16);
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string3));
      assertEquals(2, stringArray0.length);
      assertNotSame(string4, string3);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder16);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder16);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder14);
      assertSame(string2, string0);
      assertNotSame(string2, string4);
      assertNotSame(string2, string3);
      assertSame(string2, string1);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder16);
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      String[] stringArray0 = new String[1];
      String string0 = "K:|aC2'Oyy#n6";
      stringArray0[0] = string0;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(object0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(1, stringArray0.length);
      
      String string1 = "phrase";
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.field(string1);
      assertNotNull(multiMatchQueryBuilder1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(string1, string0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      boolean boolean0 = true;
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.lenient(boolean0);
      assertNotNull(multiMatchQueryBuilder2);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertNotSame(string1, string0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      boolean boolean1 = true;
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder1.useDisMax(boolean1);
      assertNotNull(multiMatchQueryBuilder3);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertNotSame(string1, string0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type0 = MultiMatchQueryBuilder.Type.MOST_FIELDS;
      assertEquals(MultiMatchQueryBuilder.Type.MOST_FIELDS, multiMatchQueryBuilder_Type0);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      
      float float0 = multiMatchQueryBuilder_Type0.tieBreaker();
      assertEquals(1.0F, float0, 0.01F);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      
      int int0 = 386;
      Integer integer0 = new Integer(int0);
      assertNotNull(integer0);
      assertTrue(integer0.equals((Object)int0));
      assertEquals(386, (int)integer0);
      
      String[] stringArray0 = new String[4];
      String string0 = "";
      stringArray0[0] = string0;
      String string1 = "v'";
      stringArray0[1] = string1;
      String string2 = "";
      stringArray0[2] = string2;
      String string3 = "-X*G}|$Tb #q_[#E<";
      stringArray0[3] = string3;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(integer0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertTrue(integer0.equals((Object)int0));
      assertEquals(4, stringArray0.length);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.queryName(string2);
      assertNotNull(multiMatchQueryBuilder1);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertEquals(4, stringArray0.length);
      assertNotSame(string2, string1);
      assertSame(string2, string0);
      assertNotSame(string2, string3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.tieBreaker(float0);
      assertNotNull(multiMatchQueryBuilder2);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertEquals(4, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertNotSame(string2, string1);
      assertSame(string2, string0);
      assertNotSame(string2, string3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      String string4 = "fuzzy_rewrite";
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.minimumShouldMatch(string4);
      assertNotNull(multiMatchQueryBuilder3);
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertTrue(integer0.equals((Object)int0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string4));
      assertEquals(4, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertNotSame(string2, string1);
      assertSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      MatchQueryBuilder.ZeroTermsQuery matchQueryBuilder_ZeroTermsQuery0 = MatchQueryBuilder.ZeroTermsQuery.NONE;
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.zeroTermsQuery(matchQueryBuilder_ZeroTermsQuery0);
      assertNotNull(multiMatchQueryBuilder4);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertEquals(4, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertNotSame(string2, string1);
      assertSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      
      float float1 = (-1382.2F);
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder4.field(string2, float1);
      assertNotNull(multiMatchQueryBuilder5);
      assertNotEquals(float0, float1, 0.01F);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertNotEquals(float1, float0, 0.01F);
      assertEquals(4, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertNotSame(string2, string1);
      assertSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type1 = MultiMatchQueryBuilder.Type.PHRASE;
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder5.type(multiMatchQueryBuilder_Type1);
      assertNotNull(multiMatchQueryBuilder6);
      assertFalse(multiMatchQueryBuilder_Type0.equals((Object)multiMatchQueryBuilder_Type1));
      assertNotEquals(float0, float1, 0.01F);
      assertTrue(integer0.equals((Object)int0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertNotEquals(float1, float0, 0.01F);
      assertFalse(multiMatchQueryBuilder_Type1.equals((Object)multiMatchQueryBuilder_Type0));
      assertEquals(4, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertNotSame(multiMatchQueryBuilder_Type0, multiMatchQueryBuilder_Type1);
      assertNotSame(string2, string1);
      assertSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertNotSame(multiMatchQueryBuilder_Type1, multiMatchQueryBuilder_Type0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type0 = MultiMatchQueryBuilder.Type.PHRASE_PREFIX;
      assertEquals(MultiMatchQueryBuilder.Type.PHRASE_PREFIX, multiMatchQueryBuilder_Type0);
      assertEquals(0.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertEquals(MatchQuery.Type.PHRASE_PREFIX, multiMatchQueryBuilder_Type0.matchQueryType());
      
      String string0 = ".5IQZ;#5P?NTO";
      ParseFieldMatcher parseFieldMatcher0 = ParseFieldMatcher.EMPTY;
      assertNotNull(parseFieldMatcher0);
      
      // Undeclared exception!
      try { 
        MultiMatchQueryBuilder.Type.parse(string0, parseFieldMatcher0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // failed to parse [java.lang.String@0000000001] query type [java.lang.String@0000000002]. unknown type.
         //
         verifyException("org.elasticsearch.index.query.MultiMatchQueryBuilder$Type", e);
      }
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type0 = MultiMatchQueryBuilder.Type.CROSS_FIELDS;
      assertEquals(MultiMatchQueryBuilder.Type.CROSS_FIELDS, multiMatchQueryBuilder_Type0);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(0.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      
      MatchQuery.Type matchQuery_Type0 = multiMatchQueryBuilder_Type0.matchQueryType();
      assertEquals(MatchQuery.Type.BOOLEAN, matchQuery_Type0);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(0.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      
      String[] stringArray0 = new String[5];
      String string0 = "UNDERSCORE";
      stringArray0[0] = string0;
      String string1 = "F4<LYo=6G^WnR";
      stringArray0[1] = string1;
      String string2 = "RZy|h#r~kH+l}O6dUA";
      stringArray0[2] = string2;
      String string3 = ",W@,<D\\*_. u^NWx<";
      stringArray0[3] = string3;
      String string4 = "0q)C";
      stringArray0[4] = string4;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(matchQuery_Type0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(5, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(0.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      
      MatchQueryBuilder.ZeroTermsQuery matchQueryBuilder_ZeroTermsQuery0 = MatchQueryBuilder.ZeroTermsQuery.ALL;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.zeroTermsQuery(matchQueryBuilder_ZeroTermsQuery0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(5, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(0.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      boolean boolean0 = true;
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.lenient(boolean0);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(5, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(0.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      
      MatchQueryBuilder.Operator matchQueryBuilder_Operator0 = MatchQueryBuilder.Operator.AND;
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.operator(matchQueryBuilder_Operator0);
      assertNotNull(multiMatchQueryBuilder3);
      assertEquals(5, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(0.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      
      float float0 = (-1.0F);
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.cutoffFrequency(float0);
      assertNotNull(multiMatchQueryBuilder4);
      assertEquals(5, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(0.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder4.minimumShouldMatch(string1);
      assertNotNull(multiMatchQueryBuilder5);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertEquals(5, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(0.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      
      String string5 = multiMatchQueryBuilder5.toString();
      assertNotNull(string5);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertEquals(5, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(0.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string4);
      assertNotSame(string1, string5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertNotSame(string5, string1);
      assertNotSame(string5, string3);
      assertNotSame(string5, string0);
      assertNotSame(string5, string2);
      assertNotSame(string5, string4);
      
      String string6 = "nkF~VF7-";
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder5.fuzzyRewrite(string6);
      assertNotNull(multiMatchQueryBuilder6);
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string6));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string6.equals((Object)string1));
      assertFalse(string6.equals((Object)string3));
      assertFalse(string6.equals((Object)string4));
      assertFalse(string6.equals((Object)string0));
      assertFalse(string6.equals((Object)string5));
      assertFalse(string6.equals((Object)string2));
      assertEquals(5, stringArray0.length);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertEquals(0.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertNotSame(string1, string3);
      assertNotSame(string1, string6);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string4);
      assertNotSame(string1, string5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertNotSame(string6, string1);
      assertNotSame(string6, string3);
      assertNotSame(string6, string4);
      assertNotSame(string6, string0);
      assertNotSame(string6, string5);
      assertNotSame(string6, string2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      String[] stringArray0 = new String[3];
      String string0 = "%";
      stringArray0[0] = string0;
      String string1 = "jb;ka%";
      stringArray0[1] = string1;
      String string2 = "failed to parse [{}] query type [{}]. unknown type.";
      stringArray0[2] = string2;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(object0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(3, stringArray0.length);
      
      String string3 = null;
      String string4 = "operator";
      float float0 = 1981.0F;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.field(string4, float0);
      assertNotNull(multiMatchQueryBuilder1);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertEquals(3, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      float float1 = 0.75F;
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.cutoffFrequency(float1);
      assertNotNull(multiMatchQueryBuilder2);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertNotEquals(float0, float1, 0.01F);
      assertNotEquals(float1, float0, 0.01F);
      assertEquals(3, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      MatchQueryBuilder.ZeroTermsQuery matchQueryBuilder_ZeroTermsQuery0 = MatchQueryBuilder.ZeroTermsQuery.ALL;
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.zeroTermsQuery(matchQueryBuilder_ZeroTermsQuery0);
      assertNotNull(multiMatchQueryBuilder3);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertNotEquals(float0, float1, 0.01F);
      assertNotEquals(float1, float0, 0.01F);
      assertEquals(3, stringArray0.length);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      BytesReference bytesReference0 = multiMatchQueryBuilder1.buildAsBytes();
      assertNotNull(bytesReference0);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertNotEquals(float0, float1, 0.01F);
      assertEquals(3, stringArray0.length);
      assertTrue(bytesReference0.hasArray());
      assertEquals(200, bytesReference0.length());
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder0.minimumShouldMatch(string3);
      assertNotNull(multiMatchQueryBuilder4);
      assertEquals(3, stringArray0.length);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      
      float float2 = (-3625.1855F);
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder4.boost(float2);
      assertNotNull(multiMatchQueryBuilder5);
      assertNotEquals(float2, float0, 0.01F);
      assertNotEquals(float2, float1, 0.01F);
      assertEquals(3, stringArray0.length);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      
      String string5 = "=0gZe<[# II";
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder1.analyzer(string5);
      assertNotNull(multiMatchQueryBuilder6);
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertNotEquals(float0, float2, 0.01F);
      assertNotEquals(float0, float1, 0.01F);
      assertEquals(3, stringArray0.length);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertNotSame(string5, string4);
      assertNotSame(string5, string1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(string4, string1);
      assertNotSame(string4, string5);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      
      int int0 = 3118;
      MultiMatchQueryBuilder multiMatchQueryBuilder7 = multiMatchQueryBuilder1.maxExpansions(int0);
      assertNotNull(multiMatchQueryBuilder7);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertNotEquals(float0, float2, 0.01F);
      assertNotEquals(float0, float1, 0.01F);
      assertEquals(3, stringArray0.length);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(string4, string1);
      assertNotSame(string4, string5);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      
      int int1 = (-782);
      MultiMatchQueryBuilder multiMatchQueryBuilder8 = multiMatchQueryBuilder5.slop(int1);
      assertNotNull(multiMatchQueryBuilder8);
      assertNotEquals(float2, float0, 0.01F);
      assertNotEquals(float2, float1, 0.01F);
      assertFalse(int1 == int0);
      assertEquals(3, stringArray0.length);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder6);
      
      String string6 = null;
      MultiMatchQueryBuilder multiMatchQueryBuilder9 = multiMatchQueryBuilder4.minimumShouldMatch(string6);
      assertNotNull(multiMatchQueryBuilder9);
      assertEquals(3, stringArray0.length);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder10 = multiMatchQueryBuilder9.fuzziness(multiMatchQueryBuilder4);
      assertNotNull(multiMatchQueryBuilder10);
      assertEquals(3, stringArray0.length);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder7);
      
      Fuzziness fuzziness0 = Fuzziness.ONE;
      assertNotNull(fuzziness0);
      assertEquals(1.0F, fuzziness0.asFloat(), 0.01F);
      assertEquals(1L, fuzziness0.asLong());
      assertEquals(1.0, fuzziness0.asDouble(), 0.01);
      assertEquals(1, fuzziness0.asDistance());
      assertEquals((short)1, fuzziness0.asShort());
      assertEquals(1, fuzziness0.asInt());
      assertEquals((byte)1, fuzziness0.asByte());
      assertEquals("1", fuzziness0.asString());
      
      XContentBuilder xContentBuilder0 = SmileXContent.contentBuilder();
      assertNotNull(xContentBuilder0);
      assertEquals(XContentType.SMILE, xContentBuilder0.contentType());
      assertFalse(xContentBuilder0.humanReadable());
      
      ToXContent.Params toXContent_Params0 = ToXContent.EMPTY_PARAMS;
      assertNotNull(toXContent_Params0);
      
      boolean boolean0 = true;
      XContentBuilder xContentBuilder1 = fuzziness0.toXContent(xContentBuilder0, toXContent_Params0, boolean0);
      assertNotNull(xContentBuilder1);
      assertFalse(xContentBuilder1.humanReadable());
      assertEquals(XContentType.SMILE, xContentBuilder1.contentType());
      assertEquals(1.0F, fuzziness0.asFloat(), 0.01F);
      assertEquals(1L, fuzziness0.asLong());
      assertEquals(1.0, fuzziness0.asDouble(), 0.01);
      assertEquals(1, fuzziness0.asDistance());
      assertEquals((short)1, fuzziness0.asShort());
      assertEquals(1, fuzziness0.asInt());
      assertEquals((byte)1, fuzziness0.asByte());
      assertEquals("1", fuzziness0.asString());
      assertEquals(XContentType.SMILE, xContentBuilder0.contentType());
      assertFalse(xContentBuilder0.humanReadable());
      assertSame(xContentBuilder1, xContentBuilder0);
      assertSame(xContentBuilder0, xContentBuilder1);
      
      double double0 = (-3378.896475319);
      XContentBuilder xContentBuilder2 = xContentBuilder1.latlon((double) float0, double0);
      assertNotNull(xContentBuilder2);
      assertNotEquals(float0, float2, 0.01F);
      assertNotEquals(float0, float1, 0.01F);
      assertFalse(xContentBuilder1.humanReadable());
      assertEquals(XContentType.SMILE, xContentBuilder1.contentType());
      assertFalse(xContentBuilder2.humanReadable());
      assertEquals(XContentType.SMILE, xContentBuilder2.contentType());
      assertEquals(1.0F, fuzziness0.asFloat(), 0.01F);
      assertEquals(1L, fuzziness0.asLong());
      assertEquals(1.0, fuzziness0.asDouble(), 0.01);
      assertEquals(1, fuzziness0.asDistance());
      assertEquals((short)1, fuzziness0.asShort());
      assertEquals(1, fuzziness0.asInt());
      assertEquals((byte)1, fuzziness0.asByte());
      assertEquals("1", fuzziness0.asString());
      assertEquals(XContentType.SMILE, xContentBuilder0.contentType());
      assertFalse(xContentBuilder0.humanReadable());
      assertSame(xContentBuilder1, xContentBuilder2);
      assertSame(xContentBuilder1, xContentBuilder0);
      assertSame(xContentBuilder2, xContentBuilder0);
      assertSame(xContentBuilder2, xContentBuilder1);
      assertSame(xContentBuilder0, xContentBuilder2);
      assertSame(xContentBuilder0, xContentBuilder1);
      
      try { 
        multiMatchQueryBuilder4.doXContent(xContentBuilder1, toXContent_Params0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Can not write a field name, expecting a value
         //
         verifyException("com.fasterxml.jackson.core.JsonGenerator", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      String string0 = "Z^ObE\"";
      String[] stringArray0 = new String[6];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      stringArray0[3] = string0;
      stringArray0[4] = string0;
      stringArray0[5] = string0;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(string0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(6, stringArray0.length);
      
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type0 = MultiMatchQueryBuilder.Type.PHRASE_PREFIX;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.type(multiMatchQueryBuilder_Type0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(6, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      String string1 = "allocation dangled indices ";
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder0.minimumShouldMatch(string1);
      assertNotNull(multiMatchQueryBuilder2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(6, stringArray0.length);
      assertNotSame(string0, string1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(string1, string0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      MatchQueryBuilder.Operator matchQueryBuilder_Operator0 = MatchQueryBuilder.Operator.OR;
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.operator(matchQueryBuilder_Operator0);
      assertNotNull(multiMatchQueryBuilder3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(6, stringArray0.length);
      assertNotSame(string0, string1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(string1, string0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      float float0 = 0.75F;
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder2.tieBreaker(float0);
      assertNotNull(multiMatchQueryBuilder4);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(6, stringArray0.length);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertNotSame(string0, string1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(string1, string0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      float float1 = 1848.1012F;
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder1.field(stringArray0[4], float1);
      assertNotNull(multiMatchQueryBuilder5);
      assertFalse(string0.equals((Object)string1));
      assertNotEquals(float1, float0, 0.01F);
      assertEquals(6, stringArray0.length);
      assertNotSame(string0, string1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      
      float float2 = (-1.0F);
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder5.cutoffFrequency(float2);
      assertNotNull(multiMatchQueryBuilder6);
      assertFalse(string0.equals((Object)string1));
      assertNotEquals(float1, float0, 0.01F);
      assertNotEquals(float1, float2, 0.01F);
      assertNotEquals(float2, float0, 0.01F);
      assertNotEquals(float2, float1, 0.01F);
      assertEquals(6, stringArray0.length);
      assertNotSame(string0, string1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      
      XContentBuilder xContentBuilder0 = null;
      ToXContent.Params toXContent_Params0 = ToXContent.EMPTY_PARAMS;
      assertNotNull(toXContent_Params0);
      
      // Undeclared exception!
      try { 
        multiMatchQueryBuilder0.doXContent(xContentBuilder0, toXContent_Params0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.MultiMatchQueryBuilder", e);
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      String string0 = "j1:m^*";
      String[] stringArray0 = new String[1];
      stringArray0[0] = string0;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(string0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(1, stringArray0.length);
      
      String string1 = "TD4&;G%IAg~%uC+BSnR";
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.queryName(string1);
      assertNotNull(multiMatchQueryBuilder1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, stringArray0.length);
      assertNotSame(string0, string1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(string1, string0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      String string2 = multiMatchQueryBuilder1.toString();
      assertNotNull(string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(1, stringArray0.length);
      assertEquals("{\n  \"multi_match\" : {\n    \"query\" : \"j1:m^*\",\n    \"fields\" : [ \"j1:m^*\" ],\n    \"_name\" : \"TD4&;G%IAg~%uC+BSnR\"\n  }\n}", string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      
      MatchQueryBuilder.ZeroTermsQuery matchQueryBuilder_ZeroTermsQuery0 = MatchQueryBuilder.ZeroTermsQuery.ALL;
      // Undeclared exception!
      try { 
        multiMatchQueryBuilder0.type((Object) matchQueryBuilder_ZeroTermsQuery0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // failed to parse [java.lang.String@0000000037] query type [java.lang.String@0000000038]. unknown type.
         //
         verifyException("org.elasticsearch.index.query.MultiMatchQueryBuilder$Type", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      String[] stringArray0 = new String[1];
      String string0 = "tie_breaker";
      stringArray0[0] = string0;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(object0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(1, stringArray0.length);
      
      float float0 = (-2314.54F);
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.tieBreaker(float0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(1, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      MatchQueryBuilder.Operator matchQueryBuilder_Operator0 = MatchQueryBuilder.Operator.OR;
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.operator(matchQueryBuilder_Operator0);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(1, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type0 = MultiMatchQueryBuilder.Type.PHRASE_PREFIX;
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.type(multiMatchQueryBuilder_Type0);
      assertNotNull(multiMatchQueryBuilder3);
      assertEquals(1, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      int int0 = (-144);
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.maxExpansions(int0);
      assertNotNull(multiMatchQueryBuilder4);
      assertEquals(1, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      
      String string1 = "|Ws8aV>;y0";
      float float1 = 1.0F;
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder4.field(string1, float1);
      assertNotNull(multiMatchQueryBuilder5);
      assertNotEquals(float0, float1, 0.01F);
      assertFalse(string1.equals((Object)string0));
      assertNotEquals(float1, float0, 0.01F);
      assertEquals(1, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertNotSame(string1, string0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      
      String string2 = "";
      float float2 = (-3602.651F);
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder5.field(string2, float2);
      assertNotNull(multiMatchQueryBuilder6);
      assertNotEquals(float0, float2, 0.01F);
      assertNotEquals(float0, float1, 0.01F);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertNotEquals(float1, float0, 0.01F);
      assertNotEquals(float1, float2, 0.01F);
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertNotEquals(float2, float1, 0.01F);
      assertNotEquals(float2, float0, 0.01F);
      assertEquals(1, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      FormatStyle formatStyle0 = FormatStyle.SHORT;
      assertEquals(FormatStyle.SHORT, formatStyle0);
      
      String[] stringArray0 = new String[8];
      String string0 = "6EN";
      stringArray0[0] = string0;
      String string1 = "";
      stringArray0[1] = string1;
      String string2 = "f!X5TgTNyxb\"vym_";
      stringArray0[2] = string2;
      String string3 = "";
      stringArray0[3] = string3;
      String string4 = "&}8p`4";
      stringArray0[4] = string4;
      String string5 = "(BkNY\\Mo8]`WGrKAX";
      stringArray0[5] = string5;
      String string6 = "'E\"Qgk";
      stringArray0[6] = string6;
      String string7 = "{";
      stringArray0[7] = string7;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(formatStyle0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(8, stringArray0.length);
      
      float float0 = 0.0F;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.cutoffFrequency(float0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(8, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      MatchQueryBuilder.Operator matchQueryBuilder_Operator0 = MatchQueryBuilder.Operator.OR;
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.operator(matchQueryBuilder_Operator0);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(8, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      
      String string8 = "";
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.fuzzyRewrite(string8);
      assertNotNull(multiMatchQueryBuilder3);
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string0));
      assertEquals(8, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(string8, string1);
      assertNotSame(string8, string4);
      assertNotSame(string8, string7);
      assertNotSame(string8, string6);
      assertNotSame(string8, string2);
      assertNotSame(string8, string5);
      assertSame(string8, string3);
      assertNotSame(string8, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      
      String string9 = "U!0;";
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder0.analyzer(string9);
      assertNotNull(multiMatchQueryBuilder4);
      assertFalse(string9.equals((Object)string0));
      assertFalse(string9.equals((Object)string4));
      assertFalse(string9.equals((Object)string6));
      assertFalse(string9.equals((Object)string7));
      assertFalse(string9.equals((Object)string8));
      assertFalse(string9.equals((Object)string2));
      assertFalse(string9.equals((Object)string1));
      assertFalse(string9.equals((Object)string5));
      assertFalse(string9.equals((Object)string3));
      assertEquals(8, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertNotSame(string9, string0);
      assertNotSame(string9, string4);
      assertNotSame(string9, string6);
      assertNotSame(string9, string7);
      assertNotSame(string9, string8);
      assertNotSame(string9, string2);
      assertNotSame(string9, string1);
      assertNotSame(string9, string5);
      assertNotSame(string9, string3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder3.analyzer(stringArray0[7]);
      assertNotNull(multiMatchQueryBuilder5);
      assertFalse(string8.equals((Object)string9));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string0));
      assertEquals(8, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertNotSame(string8, string9);
      assertSame(string8, string1);
      assertNotSame(string8, string4);
      assertNotSame(string8, string7);
      assertNotSame(string8, string6);
      assertNotSame(string8, string2);
      assertNotSame(string8, string5);
      assertSame(string8, string3);
      assertNotSame(string8, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      
      CborXContent cborXContent0 = CborXContent.cborXContent;
      assertNotNull(cborXContent0);
      assertEquals(XContentType.CBOR, cborXContent0.type());
      
      XContentBuilder xContentBuilder0 = XContentBuilder.builder((XContent) cborXContent0);
      assertNotNull(xContentBuilder0);
      assertEquals(XContentType.CBOR, cborXContent0.type());
      assertFalse(xContentBuilder0.humanReadable());
      assertEquals(XContentType.CBOR, xContentBuilder0.contentType());
      
      ToXContent.Params toXContent_Params0 = ToXContent.EMPTY_PARAMS;
      assertNotNull(toXContent_Params0);
      
      multiMatchQueryBuilder3.doXContent(xContentBuilder0, toXContent_Params0);
      assertFalse(string8.equals((Object)string9));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string0));
      assertEquals(8, stringArray0.length);
      assertEquals(XContentType.CBOR, cborXContent0.type());
      assertFalse(xContentBuilder0.humanReadable());
      assertEquals(XContentType.CBOR, xContentBuilder0.contentType());
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertNotSame(string8, string9);
      assertSame(string8, string1);
      assertNotSame(string8, string4);
      assertNotSame(string8, string7);
      assertNotSame(string8, string6);
      assertNotSame(string8, string2);
      assertNotSame(string8, string5);
      assertSame(string8, string3);
      assertNotSame(string8, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      
      boolean boolean0 = true;
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder5.lenient(boolean0);
      assertNotNull(multiMatchQueryBuilder6);
      assertFalse(string8.equals((Object)string9));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string0));
      assertEquals(8, stringArray0.length);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertNotSame(string8, string9);
      assertSame(string8, string1);
      assertNotSame(string8, string4);
      assertNotSame(string8, string7);
      assertNotSame(string8, string6);
      assertNotSame(string8, string2);
      assertNotSame(string8, string5);
      assertSame(string8, string3);
      assertNotSame(string8, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      
      String string10 = "P!B7";
      MultiMatchQueryBuilder multiMatchQueryBuilder7 = multiMatchQueryBuilder6.queryName(string10);
      assertNotNull(multiMatchQueryBuilder7);
      assertFalse(string10.equals((Object)string9));
      assertFalse(string10.equals((Object)string8));
      assertFalse(string10.equals((Object)string4));
      assertFalse(string10.equals((Object)string3));
      assertFalse(string10.equals((Object)string1));
      assertFalse(string10.equals((Object)string5));
      assertFalse(string10.equals((Object)string2));
      assertFalse(string10.equals((Object)string6));
      assertFalse(string10.equals((Object)string0));
      assertFalse(string10.equals((Object)string7));
      assertFalse(string8.equals((Object)string9));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string10));
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string0));
      assertEquals(8, stringArray0.length);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertNotSame(string10, string9);
      assertNotSame(string10, string8);
      assertNotSame(string10, string4);
      assertNotSame(string10, string3);
      assertNotSame(string10, string1);
      assertNotSame(string10, string5);
      assertNotSame(string10, string2);
      assertNotSame(string10, string6);
      assertNotSame(string10, string0);
      assertNotSame(string10, string7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertNotSame(string8, string9);
      assertSame(string8, string1);
      assertNotSame(string8, string4);
      assertNotSame(string8, string7);
      assertNotSame(string8, string6);
      assertNotSame(string8, string2);
      assertNotSame(string8, string10);
      assertNotSame(string8, string5);
      assertSame(string8, string3);
      assertNotSame(string8, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      
      int int0 = 0;
      MultiMatchQueryBuilder multiMatchQueryBuilder8 = multiMatchQueryBuilder1.maxExpansions(int0);
      assertNotNull(multiMatchQueryBuilder8);
      assertEquals(8, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder4);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder9 = multiMatchQueryBuilder3.fuzzyRewrite(string3);
      assertNotNull(multiMatchQueryBuilder9);
      assertFalse(string8.equals((Object)string9));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string10));
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string0));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string10));
      assertFalse(string3.equals((Object)string9));
      assertFalse(string3.equals((Object)string6));
      assertFalse(string3.equals((Object)string7));
      assertEquals(8, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder9);
      assertNotSame(string8, string9);
      assertSame(string8, string1);
      assertNotSame(string8, string4);
      assertNotSame(string8, string7);
      assertNotSame(string8, string6);
      assertNotSame(string8, string2);
      assertNotSame(string8, string10);
      assertNotSame(string8, string5);
      assertSame(string8, string3);
      assertNotSame(string8, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertNotSame(string3, string0);
      assertSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string5);
      assertSame(string3, string8);
      assertNotSame(string3, string4);
      assertNotSame(string3, string10);
      assertNotSame(string3, string9);
      assertNotSame(string3, string6);
      assertNotSame(string3, string7);
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      String[] stringArray0 = new String[3];
      String string0 = "A>c}k&x&,8%2";
      stringArray0[0] = string0;
      String string1 = "";
      stringArray0[1] = string1;
      String string2 = "";
      stringArray0[2] = string2;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(object0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(3, stringArray0.length);
      
      boolean boolean0 = false;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.useDisMax(boolean0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(3, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      XContentType xContentType0 = XContentType.JSON;
      BytesReference bytesReference0 = multiMatchQueryBuilder1.buildAsBytes(xContentType0);
      assertNotNull(bytesReference0);
      assertEquals(3, stringArray0.length);
      assertEquals(107, bytesReference0.length());
      assertTrue(bytesReference0.hasArray());
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      String string3 = null;
      // Undeclared exception!
      try { 
        MultiMatchQueryBuilder.Type.valueOf(string3);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Name is null
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      String string0 = "hxvHvYbZnrk9?))MbI";
      String[] stringArray0 = new String[4];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      stringArray0[3] = string0;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(string0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(4, stringArray0.length);
      
      boolean boolean0 = false;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.queryName(stringArray0[0]);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.useDisMax(boolean0);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      
      MatchQueryBuilder.Operator matchQueryBuilder_Operator0 = MatchQueryBuilder.Operator.OR;
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.operator(matchQueryBuilder_Operator0);
      assertNotNull(multiMatchQueryBuilder3);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      float float0 = 0.0F;
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.tieBreaker(float0);
      assertNotNull(multiMatchQueryBuilder4);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      
      XContentType xContentType0 = XContentType.CBOR;
      BytesReference bytesReference0 = multiMatchQueryBuilder4.buildAsBytes(xContentType0);
      assertNotNull(bytesReference0);
      assertEquals(4, stringArray0.length);
      assertEquals(193, bytesReference0.length());
      assertTrue(bytesReference0.hasArray());
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      
      MatchQueryBuilder.ZeroTermsQuery matchQueryBuilder_ZeroTermsQuery0 = MatchQueryBuilder.ZeroTermsQuery.NONE;
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder2.zeroTermsQuery(matchQueryBuilder_ZeroTermsQuery0);
      assertNotNull(multiMatchQueryBuilder5);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder5.tieBreaker(float0);
      assertNotNull(multiMatchQueryBuilder6);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      
      JsonXContent jsonXContent0 = JsonXContent.jsonXContent;
      assertNotNull(jsonXContent0);
      assertEquals(XContentType.JSON, jsonXContent0.type());
      assertEquals((byte)10, jsonXContent0.streamSeparator());
      
      XContentBuilder xContentBuilder0 = XContentBuilder.builder((XContent) jsonXContent0);
      assertNotNull(xContentBuilder0);
      assertEquals(XContentType.JSON, jsonXContent0.type());
      assertEquals((byte)10, jsonXContent0.streamSeparator());
      assertFalse(xContentBuilder0.humanReadable());
      assertEquals(XContentType.JSON, xContentBuilder0.contentType());
      
      ToXContent.Params toXContent_Params0 = ToXContent.EMPTY_PARAMS;
      assertNotNull(toXContent_Params0);
      
      multiMatchQueryBuilder6.doXContent(xContentBuilder0, toXContent_Params0);
      assertEquals(4, stringArray0.length);
      assertEquals(XContentType.JSON, jsonXContent0.type());
      assertEquals((byte)10, jsonXContent0.streamSeparator());
      assertFalse(xContentBuilder0.humanReadable());
      assertEquals(XContentType.JSON, xContentBuilder0.contentType());
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      
      float float1 = 2636.17F;
      MultiMatchQueryBuilder multiMatchQueryBuilder7 = multiMatchQueryBuilder4.field(stringArray0[1], float1);
      assertNotNull(multiMatchQueryBuilder7);
      assertNotEquals(float1, float0, 0.01F);
      assertNotEquals(float0, float1, 0.01F);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      
      // Undeclared exception!
      try { 
        multiMatchQueryBuilder4.type((Object) multiMatchQueryBuilder1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // failed to parse [java.lang.String@0000000150] query type [java.lang.String@0000000151]. unknown type.
         //
         verifyException("org.elasticsearch.index.query.MultiMatchQueryBuilder$Type", e);
      }
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      MultiMatchQueryBuilder.Type[] multiMatchQueryBuilder_TypeArray0 = MultiMatchQueryBuilder.Type.values();
      assertNotNull(multiMatchQueryBuilder_TypeArray0);
      assertEquals(5, multiMatchQueryBuilder_TypeArray0.length);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      String[] stringArray0 = new String[4];
      String string0 = "dBv,;.K#\\Ay8T";
      stringArray0[0] = string0;
      String string1 = "GVeDI,2^)=^n:1T}hB\"";
      stringArray0[1] = string1;
      String string2 = "";
      stringArray0[2] = string2;
      String string3 = "<!g*1vI7~Gv5y[^]\"";
      stringArray0[3] = string3;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(object0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(4, stringArray0.length);
      
      int int0 = (-2735);
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.slop(int0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.queryName(stringArray0[3]);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.cutoffFrequency(int0);
      assertNotNull(multiMatchQueryBuilder3);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      MatchQueryBuilder.ZeroTermsQuery matchQueryBuilder_ZeroTermsQuery0 = MatchQueryBuilder.ZeroTermsQuery.NONE;
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type0 = MultiMatchQueryBuilder.Type.PHRASE_PREFIX;
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.type(multiMatchQueryBuilder_Type0);
      assertNotNull(multiMatchQueryBuilder4);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      XContentBuilder xContentBuilder0 = JsonXContent.contentBuilder();
      assertNotNull(xContentBuilder0);
      assertFalse(xContentBuilder0.humanReadable());
      assertEquals(XContentType.JSON, xContentBuilder0.contentType());
      
      String string4 = "0-,<ic]$]yq/?VL M}";
      ImmutableMap<String, String> immutableMap0 = ImmutableMap.of(string4, stringArray0[1]);
      assertNotNull(immutableMap0);
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertEquals(4, stringArray0.length);
      assertEquals(1, immutableMap0.size());
      assertNotSame(string4, string3);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      
      ToXContent.MapParams toXContent_MapParams0 = new ToXContent.MapParams(immutableMap0);
      assertNotNull(toXContent_MapParams0);
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertEquals(4, stringArray0.length);
      assertEquals(1, immutableMap0.size());
      
      multiMatchQueryBuilder4.doXContent(xContentBuilder0, toXContent_MapParams0);
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertEquals(4, stringArray0.length);
      assertFalse(xContentBuilder0.humanReadable());
      assertEquals(XContentType.JSON, xContentBuilder0.contentType());
      assertEquals(1, immutableMap0.size());
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertNotSame(string4, string3);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder3.zeroTermsQuery(matchQueryBuilder_ZeroTermsQuery0);
      assertNotNull(multiMatchQueryBuilder5);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      float float0 = 1.0F;
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder5.boost(float0);
      assertNotNull(multiMatchQueryBuilder6);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder7 = multiMatchQueryBuilder6.prefixLength(int0);
      assertNotNull(multiMatchQueryBuilder7);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      FormatStyle formatStyle0 = FormatStyle.FULL;
      assertEquals(FormatStyle.FULL, formatStyle0);
      
      String[] stringArray0 = new String[3];
      String string0 = "]8f#UYN%L(7s";
      stringArray0[0] = string0;
      String string1 = "7WO&)jp0";
      stringArray0[1] = string1;
      String string2 = "+ZDb*,Rz(Pu;Vu/!";
      stringArray0[2] = string2;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(formatStyle0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(3, stringArray0.length);
      
      boolean boolean0 = false;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.lenient(boolean0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(3, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      float float0 = 0.0F;
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.tieBreaker(float0);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(3, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      MatchQueryBuilder.Operator matchQueryBuilder_Operator0 = MatchQueryBuilder.Operator.AND;
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.operator(matchQueryBuilder_Operator0);
      assertNotNull(multiMatchQueryBuilder3);
      assertEquals(3, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.fuzziness(stringArray0[2]);
      assertNotNull(multiMatchQueryBuilder4);
      assertEquals(3, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      
      String string3 = "|:";
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder4.queryName(string3);
      assertNotNull(multiMatchQueryBuilder5);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(3, stringArray0.length);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      
      SmileXContent smileXContent0 = SmileXContent.smileXContent;
      assertNotNull(smileXContent0);
      assertEquals(XContentType.SMILE, smileXContent0.type());
      assertEquals((byte) (-1), smileXContent0.streamSeparator());
      
      XContentBuilder xContentBuilder0 = XContentBuilder.builder((XContent) smileXContent0);
      assertNotNull(xContentBuilder0);
      assertEquals(XContentType.SMILE, smileXContent0.type());
      assertEquals((byte) (-1), smileXContent0.streamSeparator());
      assertFalse(xContentBuilder0.humanReadable());
      assertEquals(XContentType.SMILE, xContentBuilder0.contentType());
      
      String string4 = "xtN";
      ImmutableSortedMap<String, String> immutableSortedMap0 = ImmutableSortedMap.of(stringArray0[1], string4);
      assertNotNull(immutableSortedMap0);
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertEquals(3, stringArray0.length);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      
      String string5 = "";
      boolean boolean1 = false;
      ImmutableSortedMap<String, String> immutableSortedMap1 = immutableSortedMap0.headMap(string5, boolean1);
      assertNotNull(immutableSortedMap1);
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(immutableSortedMap1.equals((Object)immutableSortedMap0));
      assertEquals(3, stringArray0.length);
      assertNotSame(string4, string5);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string5, string0);
      assertNotSame(string5, string3);
      assertNotSame(string5, string2);
      assertNotSame(string5, string1);
      assertNotSame(string5, string4);
      
      ImmutableSortedMap<String, String> immutableSortedMap2 = immutableSortedMap1.headMap(string1);
      assertNotNull(immutableSortedMap2);
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(immutableSortedMap0.equals((Object)immutableSortedMap1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(immutableSortedMap1.equals((Object)immutableSortedMap0));
      assertFalse(immutableSortedMap2.equals((Object)immutableSortedMap0));
      assertEquals(3, stringArray0.length);
      assertNotSame(string4, string5);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string1, string4);
      assertNotSame(string1, string3);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string5, string0);
      assertNotSame(string5, string3);
      assertNotSame(string5, string2);
      assertNotSame(string5, string1);
      assertNotSame(string5, string4);
      assertSame(immutableSortedMap1, immutableSortedMap2);
      assertSame(immutableSortedMap2, immutableSortedMap1);
      
      ImmutableSortedMap<String, String> immutableSortedMap3 = immutableSortedMap2.headMap(stringArray0[0]);
      assertNotNull(immutableSortedMap3);
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(immutableSortedMap0.equals((Object)immutableSortedMap2));
      assertFalse(immutableSortedMap0.equals((Object)immutableSortedMap1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(immutableSortedMap1.equals((Object)immutableSortedMap0));
      assertFalse(immutableSortedMap2.equals((Object)immutableSortedMap0));
      assertFalse(immutableSortedMap3.equals((Object)immutableSortedMap0));
      assertEquals(3, stringArray0.length);
      assertNotSame(string4, string5);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string1, string4);
      assertNotSame(string1, string3);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string5, string0);
      assertNotSame(string5, string3);
      assertNotSame(string5, string2);
      assertNotSame(string5, string1);
      assertNotSame(string5, string4);
      assertSame(immutableSortedMap1, immutableSortedMap2);
      assertSame(immutableSortedMap1, immutableSortedMap3);
      assertSame(immutableSortedMap2, immutableSortedMap1);
      assertSame(immutableSortedMap2, immutableSortedMap3);
      assertSame(immutableSortedMap3, immutableSortedMap2);
      assertSame(immutableSortedMap3, immutableSortedMap1);
      
      ToXContent.Params toXContent_Params0 = null;
      ToXContent.DelegatingMapParams toXContent_DelegatingMapParams0 = new ToXContent.DelegatingMapParams(immutableSortedMap3, toXContent_Params0);
      assertNotNull(toXContent_DelegatingMapParams0);
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(immutableSortedMap0.equals((Object)immutableSortedMap2));
      assertFalse(immutableSortedMap0.equals((Object)immutableSortedMap1));
      assertFalse(immutableSortedMap0.equals((Object)immutableSortedMap3));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(immutableSortedMap1.equals((Object)immutableSortedMap0));
      assertFalse(immutableSortedMap2.equals((Object)immutableSortedMap0));
      assertFalse(immutableSortedMap3.equals((Object)immutableSortedMap0));
      assertEquals(3, stringArray0.length);
      
      multiMatchQueryBuilder5.doXContent(xContentBuilder0, toXContent_DelegatingMapParams0);
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(immutableSortedMap0.equals((Object)immutableSortedMap2));
      assertFalse(immutableSortedMap0.equals((Object)immutableSortedMap1));
      assertFalse(immutableSortedMap0.equals((Object)immutableSortedMap3));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertFalse(immutableSortedMap1.equals((Object)immutableSortedMap0));
      assertFalse(immutableSortedMap2.equals((Object)immutableSortedMap0));
      assertFalse(immutableSortedMap3.equals((Object)immutableSortedMap0));
      assertEquals(3, stringArray0.length);
      assertEquals(XContentType.SMILE, smileXContent0.type());
      assertEquals((byte) (-1), smileXContent0.streamSeparator());
      assertFalse(xContentBuilder0.humanReadable());
      assertEquals(XContentType.SMILE, xContentBuilder0.contentType());
      assertNotSame(string1, string4);
      assertNotSame(string1, string3);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string4);
      assertNotSame(string3, string5);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertNotSame(string4, string5);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string5, string0);
      assertNotSame(string5, string3);
      assertNotSame(string5, string2);
      assertNotSame(string5, string1);
      assertNotSame(string5, string4);
      assertSame(immutableSortedMap1, immutableSortedMap2);
      assertSame(immutableSortedMap1, immutableSortedMap3);
      assertSame(immutableSortedMap2, immutableSortedMap1);
      assertSame(immutableSortedMap2, immutableSortedMap3);
      assertSame(immutableSortedMap3, immutableSortedMap2);
      assertSame(immutableSortedMap3, immutableSortedMap1);
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      String[] stringArray0 = new String[7];
      String string0 = "J#OQ8_{BF/7xA}oZ\"=";
      stringArray0[0] = string0;
      String string1 = "org.elasticsearch.index.query.MultiMatchQueryBuilder";
      stringArray0[1] = string1;
      String string2 = "";
      stringArray0[2] = string2;
      String string3 = "cutoff_frequency";
      stringArray0[3] = string3;
      String string4 = "";
      stringArray0[4] = string4;
      String string5 = "";
      stringArray0[5] = string5;
      String string6 = "";
      stringArray0[6] = string6;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(object0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(7, stringArray0.length);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.fuzziness(string0);
      assertNotNull(multiMatchQueryBuilder1);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertEquals(7, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertNotSame(string0, string4);
      assertNotSame(string0, string6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      
      float float0 = (-2315.9067F);
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.field(stringArray0[0], float0);
      assertNotNull(multiMatchQueryBuilder2);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertEquals(7, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertNotSame(string0, string4);
      assertNotSame(string0, string6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      String string7 = "";
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.minimumShouldMatch(string7);
      assertNotNull(multiMatchQueryBuilder3);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string0));
      assertEquals(7, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertNotSame(string0, string4);
      assertNotSame(string0, string6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string7);
      assertNotSame(string0, string3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(string7, string5);
      assertNotSame(string7, string1);
      assertSame(string7, string4);
      assertSame(string7, string6);
      assertSame(string7, string2);
      assertNotSame(string7, string3);
      assertNotSame(string7, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.field(stringArray0[6]);
      assertNotNull(multiMatchQueryBuilder4);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string0));
      assertEquals(7, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertNotSame(string0, string4);
      assertNotSame(string0, string6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string7);
      assertNotSame(string0, string3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(string7, string5);
      assertNotSame(string7, string1);
      assertSame(string7, string4);
      assertSame(string7, string6);
      assertSame(string7, string2);
      assertNotSame(string7, string3);
      assertNotSame(string7, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder4.cutoffFrequency(float0);
      assertNotNull(multiMatchQueryBuilder5);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string0));
      assertEquals(7, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string7);
      assertNotSame(string0, string3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(string7, string5);
      assertNotSame(string7, string1);
      assertSame(string7, string4);
      assertSame(string7, string6);
      assertSame(string7, string2);
      assertNotSame(string7, string3);
      assertNotSame(string7, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder5.cutoffFrequency(float0);
      assertNotNull(multiMatchQueryBuilder6);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string0));
      assertEquals(7, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string7);
      assertNotSame(string0, string3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(string7, string5);
      assertNotSame(string7, string1);
      assertSame(string7, string4);
      assertSame(string7, string6);
      assertSame(string7, string2);
      assertNotSame(string7, string3);
      assertNotSame(string7, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      
      MultiMatchQueryBuilder multiMatchQueryBuilder7 = multiMatchQueryBuilder5.fuzziness(object1);
      assertNotNull(multiMatchQueryBuilder7);
      assertFalse(object0.equals((Object)object1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string7.equals((Object)string1));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string0));
      assertFalse(object1.equals((Object)object0));
      assertEquals(7, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertNotSame(object0, object1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertNotSame(string0, string4);
      assertNotSame(string0, string6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string7);
      assertNotSame(string0, string3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(string7, string5);
      assertNotSame(string7, string1);
      assertSame(string7, string4);
      assertSame(string7, string6);
      assertSame(string7, string2);
      assertNotSame(string7, string3);
      assertNotSame(string7, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder7);
      assertNotSame(object1, object0);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder1);
      
      long long0 = 3362L;
      System.setCurrentTimeMillis(long0);
      CborXContent cborXContent0 = CborXContent.cborXContent;
      assertNotNull(cborXContent0);
      assertEquals(XContentType.CBOR, cborXContent0.type());
      
      XContentBuilder xContentBuilder0 = XContentBuilder.builder((XContent) cborXContent0);
      assertNotNull(xContentBuilder0);
      assertEquals(XContentType.CBOR, cborXContent0.type());
      assertEquals(XContentType.CBOR, xContentBuilder0.contentType());
      assertFalse(xContentBuilder0.humanReadable());
      
      String string8 = "sUVDty";
      String string9 = "Pbjt&";
      String string10 = "";
      String string11 = "";
      ImmutableSortedMap<String, String> immutableSortedMap0 = ImmutableSortedMap.of(string8, string9, string10, stringArray0[2], stringArray0[0], string11);
      assertNotNull(immutableSortedMap0);
      assertFalse(string9.equals((Object)string1));
      assertFalse(string9.equals((Object)string10));
      assertFalse(string9.equals((Object)string8));
      assertFalse(string9.equals((Object)string0));
      assertFalse(string9.equals((Object)string7));
      assertFalse(string9.equals((Object)string4));
      assertFalse(string9.equals((Object)string6));
      assertFalse(string9.equals((Object)string2));
      assertFalse(string9.equals((Object)string11));
      assertFalse(string9.equals((Object)string3));
      assertFalse(string9.equals((Object)string5));
      assertFalse(string10.equals((Object)string8));
      assertFalse(string10.equals((Object)string1));
      assertFalse(string10.equals((Object)string9));
      assertFalse(string10.equals((Object)string3));
      assertFalse(string10.equals((Object)string0));
      assertFalse(string11.equals((Object)string3));
      assertFalse(string11.equals((Object)string0));
      assertFalse(string11.equals((Object)string9));
      assertFalse(string11.equals((Object)string8));
      assertFalse(string11.equals((Object)string1));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string9));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string10));
      assertFalse(string8.equals((Object)string11));
      assertFalse(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string2));
      assertEquals(7, stringArray0.length);
      assertNotSame(string9, string1);
      assertNotSame(string9, string10);
      assertNotSame(string9, string8);
      assertNotSame(string9, string0);
      assertNotSame(string9, string7);
      assertNotSame(string9, string4);
      assertNotSame(string9, string6);
      assertNotSame(string9, string2);
      assertNotSame(string9, string11);
      assertNotSame(string9, string3);
      assertNotSame(string9, string5);
      assertSame(string10, string11);
      assertSame(string10, string4);
      assertSame(string10, string5);
      assertSame(string10, string2);
      assertNotSame(string10, string8);
      assertNotSame(string10, string1);
      assertSame(string10, string7);
      assertNotSame(string10, string9);
      assertSame(string10, string6);
      assertNotSame(string10, string3);
      assertNotSame(string10, string0);
      assertSame(string11, string4);
      assertSame(string11, string6);
      assertSame(string11, string2);
      assertNotSame(string11, string3);
      assertNotSame(string11, string0);
      assertNotSame(string11, string9);
      assertSame(string11, string10);
      assertSame(string11, string5);
      assertNotSame(string11, string8);
      assertSame(string11, string7);
      assertNotSame(string11, string1);
      assertNotSame(string8, string7);
      assertNotSame(string8, string5);
      assertNotSame(string8, string9);
      assertNotSame(string8, string1);
      assertNotSame(string8, string3);
      assertNotSame(string8, string4);
      assertNotSame(string8, string6);
      assertNotSame(string8, string10);
      assertNotSame(string8, string11);
      assertNotSame(string8, string0);
      assertNotSame(string8, string2);
      
      String string12 = "";
      ImmutableSortedMap<String, String> immutableSortedMap1 = immutableSortedMap0.headMap(string12);
      assertNotNull(immutableSortedMap1);
      assertFalse(string9.equals((Object)string1));
      assertFalse(string9.equals((Object)string10));
      assertFalse(string9.equals((Object)string8));
      assertFalse(string9.equals((Object)string0));
      assertFalse(string9.equals((Object)string7));
      assertFalse(string9.equals((Object)string12));
      assertFalse(string9.equals((Object)string6));
      assertFalse(string9.equals((Object)string4));
      assertFalse(string9.equals((Object)string2));
      assertFalse(string9.equals((Object)string11));
      assertFalse(string9.equals((Object)string3));
      assertFalse(string9.equals((Object)string5));
      assertFalse(string10.equals((Object)string8));
      assertFalse(string10.equals((Object)string1));
      assertFalse(string10.equals((Object)string9));
      assertFalse(string10.equals((Object)string3));
      assertFalse(string10.equals((Object)string0));
      assertFalse(string11.equals((Object)string3));
      assertFalse(string11.equals((Object)string0));
      assertFalse(string11.equals((Object)string9));
      assertFalse(string11.equals((Object)string8));
      assertFalse(string11.equals((Object)string1));
      assertFalse(string12.equals((Object)string1));
      assertFalse(string12.equals((Object)string3));
      assertFalse(string12.equals((Object)string0));
      assertFalse(string12.equals((Object)string9));
      assertFalse(string12.equals((Object)string8));
      assertFalse(immutableSortedMap1.equals((Object)immutableSortedMap0));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string9));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string10));
      assertFalse(string8.equals((Object)string11));
      assertFalse(string8.equals((Object)string12));
      assertFalse(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string2));
      assertEquals(7, stringArray0.length);
      assertNotSame(string9, string1);
      assertNotSame(string9, string10);
      assertNotSame(string9, string8);
      assertNotSame(string9, string0);
      assertNotSame(string9, string7);
      assertNotSame(string9, string12);
      assertNotSame(string9, string6);
      assertNotSame(string9, string4);
      assertNotSame(string9, string2);
      assertNotSame(string9, string11);
      assertNotSame(string9, string3);
      assertNotSame(string9, string5);
      assertSame(string10, string12);
      assertSame(string10, string11);
      assertSame(string10, string4);
      assertSame(string10, string5);
      assertSame(string10, string2);
      assertNotSame(string10, string8);
      assertNotSame(string10, string1);
      assertSame(string10, string7);
      assertNotSame(string10, string9);
      assertSame(string10, string6);
      assertNotSame(string10, string3);
      assertNotSame(string10, string0);
      assertSame(string11, string6);
      assertSame(string11, string4);
      assertSame(string11, string2);
      assertNotSame(string11, string3);
      assertNotSame(string11, string0);
      assertNotSame(string11, string9);
      assertSame(string11, string10);
      assertSame(string11, string5);
      assertNotSame(string11, string8);
      assertSame(string11, string7);
      assertNotSame(string11, string1);
      assertSame(string11, string12);
      assertSame(string12, string11);
      assertNotSame(string12, string1);
      assertSame(string12, string4);
      assertSame(string12, string6);
      assertNotSame(string12, string3);
      assertSame(string12, string10);
      assertNotSame(string12, string0);
      assertNotSame(string12, string9);
      assertSame(string12, string7);
      assertSame(string12, string5);
      assertNotSame(string12, string8);
      assertSame(string12, string2);
      assertNotSame(string8, string7);
      assertNotSame(string8, string5);
      assertNotSame(string8, string9);
      assertNotSame(string8, string1);
      assertNotSame(string8, string3);
      assertNotSame(string8, string6);
      assertNotSame(string8, string4);
      assertNotSame(string8, string10);
      assertNotSame(string8, string11);
      assertNotSame(string8, string12);
      assertNotSame(string8, string0);
      assertNotSame(string8, string2);
      
      ToXContent.Params toXContent_Params0 = ToXContent.EMPTY_PARAMS;
      assertNotNull(toXContent_Params0);
      
      ToXContent.DelegatingMapParams toXContent_DelegatingMapParams0 = new ToXContent.DelegatingMapParams(immutableSortedMap1, toXContent_Params0);
      assertNotNull(toXContent_DelegatingMapParams0);
      assertFalse(string9.equals((Object)string1));
      assertFalse(string9.equals((Object)string10));
      assertFalse(string9.equals((Object)string8));
      assertFalse(string9.equals((Object)string0));
      assertFalse(string9.equals((Object)string7));
      assertFalse(string9.equals((Object)string12));
      assertFalse(string9.equals((Object)string6));
      assertFalse(string9.equals((Object)string4));
      assertFalse(string9.equals((Object)string2));
      assertFalse(string9.equals((Object)string11));
      assertFalse(string9.equals((Object)string3));
      assertFalse(string9.equals((Object)string5));
      assertFalse(string10.equals((Object)string8));
      assertFalse(string10.equals((Object)string1));
      assertFalse(string10.equals((Object)string9));
      assertFalse(string10.equals((Object)string3));
      assertFalse(string10.equals((Object)string0));
      assertFalse(string11.equals((Object)string3));
      assertFalse(string11.equals((Object)string0));
      assertFalse(string11.equals((Object)string9));
      assertFalse(string11.equals((Object)string8));
      assertFalse(string11.equals((Object)string1));
      assertFalse(immutableSortedMap0.equals((Object)immutableSortedMap1));
      assertFalse(string12.equals((Object)string1));
      assertFalse(string12.equals((Object)string3));
      assertFalse(string12.equals((Object)string0));
      assertFalse(string12.equals((Object)string9));
      assertFalse(string12.equals((Object)string8));
      assertFalse(immutableSortedMap1.equals((Object)immutableSortedMap0));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string9));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string10));
      assertFalse(string8.equals((Object)string11));
      assertFalse(string8.equals((Object)string12));
      assertFalse(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string2));
      assertEquals(7, stringArray0.length);
      
      multiMatchQueryBuilder0.doXContent(xContentBuilder0, toXContent_DelegatingMapParams0);
      assertFalse(string9.equals((Object)string1));
      assertFalse(string9.equals((Object)string10));
      assertFalse(string9.equals((Object)string8));
      assertFalse(string9.equals((Object)string0));
      assertFalse(string9.equals((Object)string7));
      assertFalse(string9.equals((Object)string12));
      assertFalse(string9.equals((Object)string6));
      assertFalse(string9.equals((Object)string4));
      assertFalse(string9.equals((Object)string2));
      assertFalse(string9.equals((Object)string11));
      assertFalse(string9.equals((Object)string3));
      assertFalse(string9.equals((Object)string5));
      assertFalse(object0.equals((Object)object1));
      assertFalse(string10.equals((Object)string8));
      assertFalse(string10.equals((Object)string1));
      assertFalse(string10.equals((Object)string9));
      assertFalse(string10.equals((Object)string3));
      assertFalse(string10.equals((Object)string0));
      assertFalse(string11.equals((Object)string3));
      assertFalse(string11.equals((Object)string0));
      assertFalse(string11.equals((Object)string9));
      assertFalse(string11.equals((Object)string8));
      assertFalse(string11.equals((Object)string1));
      assertFalse(immutableSortedMap0.equals((Object)immutableSortedMap1));
      assertFalse(string12.equals((Object)string1));
      assertFalse(string12.equals((Object)string3));
      assertFalse(string12.equals((Object)string0));
      assertFalse(string12.equals((Object)string9));
      assertFalse(string12.equals((Object)string8));
      assertFalse(immutableSortedMap1.equals((Object)immutableSortedMap0));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string5));
      assertFalse(string8.equals((Object)string9));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string10));
      assertFalse(string8.equals((Object)string11));
      assertFalse(string8.equals((Object)string12));
      assertFalse(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string2));
      assertEquals(7, stringArray0.length);
      assertEquals(XContentType.CBOR, cborXContent0.type());
      assertEquals(XContentType.CBOR, xContentBuilder0.contentType());
      assertFalse(xContentBuilder0.humanReadable());
      assertNotSame(string9, string1);
      assertNotSame(string9, string10);
      assertNotSame(string9, string8);
      assertNotSame(string9, string0);
      assertNotSame(string9, string7);
      assertNotSame(string9, string12);
      assertNotSame(string9, string6);
      assertNotSame(string9, string4);
      assertNotSame(string9, string2);
      assertNotSame(string9, string11);
      assertNotSame(string9, string3);
      assertNotSame(string9, string5);
      assertNotSame(object0, object1);
      assertSame(string10, string12);
      assertSame(string10, string11);
      assertSame(string10, string4);
      assertSame(string10, string5);
      assertSame(string10, string2);
      assertNotSame(string10, string8);
      assertNotSame(string10, string1);
      assertSame(string10, string7);
      assertNotSame(string10, string9);
      assertSame(string10, string6);
      assertNotSame(string10, string3);
      assertNotSame(string10, string0);
      assertSame(string11, string6);
      assertSame(string11, string4);
      assertSame(string11, string2);
      assertNotSame(string11, string3);
      assertNotSame(string11, string0);
      assertNotSame(string11, string9);
      assertSame(string11, string10);
      assertSame(string11, string5);
      assertNotSame(string11, string8);
      assertSame(string11, string7);
      assertNotSame(string11, string1);
      assertSame(string11, string12);
      assertSame(string12, string11);
      assertNotSame(string12, string1);
      assertSame(string12, string4);
      assertSame(string12, string6);
      assertNotSame(string12, string3);
      assertSame(string12, string10);
      assertNotSame(string12, string0);
      assertNotSame(string12, string9);
      assertSame(string12, string7);
      assertSame(string12, string5);
      assertNotSame(string12, string8);
      assertSame(string12, string2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertNotSame(string8, string7);
      assertNotSame(string8, string5);
      assertNotSame(string8, string9);
      assertNotSame(string8, string1);
      assertNotSame(string8, string3);
      assertNotSame(string8, string6);
      assertNotSame(string8, string4);
      assertNotSame(string8, string10);
      assertNotSame(string8, string11);
      assertNotSame(string8, string12);
      assertNotSame(string8, string0);
      assertNotSame(string8, string2);
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      Object object0 = new Object();
      assertNotNull(object0);
      
      String[] stringArray0 = new String[7];
      String string0 = "J#OQ8_{BF/7xA}oZ\"=";
      stringArray0[0] = string0;
      String string1 = "org.elasticsearch.index.query.MultiMatchQueryBuilder";
      stringArray0[1] = string1;
      String string2 = "";
      stringArray0[2] = string2;
      String string3 = "cutoff_frequency";
      stringArray0[3] = string3;
      String string4 = "";
      stringArray0[4] = string4;
      String string5 = "";
      stringArray0[5] = string5;
      String string6 = "";
      stringArray0[6] = string6;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(object0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(7, stringArray0.length);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.fuzziness(string0);
      assertNotNull(multiMatchQueryBuilder1);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertEquals(7, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertNotSame(string0, string4);
      assertNotSame(string0, string6);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      
      float float0 = (-2315.9067F);
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.tieBreaker(float0);
      assertNotNull(multiMatchQueryBuilder2);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertEquals(7, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertNotSame(string0, string4);
      assertNotSame(string0, string6);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      String string7 = "";
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.minimumShouldMatch(string7);
      assertNotNull(multiMatchQueryBuilder3);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string1));
      assertEquals(7, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertNotSame(string0, string4);
      assertNotSame(string0, string6);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string7);
      assertNotSame(string0, string2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(string7, string4);
      assertNotSame(string7, string3);
      assertSame(string7, string2);
      assertNotSame(string7, string0);
      assertSame(string7, string6);
      assertSame(string7, string5);
      assertNotSame(string7, string1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.field(stringArray0[6]);
      assertNotNull(multiMatchQueryBuilder4);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string7.equals((Object)string3));
      assertFalse(string7.equals((Object)string0));
      assertFalse(string7.equals((Object)string1));
      assertEquals(7, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertNotSame(string0, string4);
      assertNotSame(string0, string6);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string7);
      assertNotSame(string0, string2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(string7, string4);
      assertNotSame(string7, string3);
      assertSame(string7, string2);
      assertNotSame(string7, string0);
      assertSame(string7, string6);
      assertSame(string7, string5);
      assertNotSame(string7, string1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder1.analyzer(string2);
      assertNotNull(multiMatchQueryBuilder5);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(7, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertNotSame(string0, string4);
      assertNotSame(string0, string6);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string7);
      assertNotSame(string0, string2);
      assertSame(string2, string5);
      assertSame(string2, string6);
      assertSame(string2, string7);
      assertNotSame(string2, string3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(string2, string4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder2.boost(float0);
      assertNotNull(multiMatchQueryBuilder6);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string2));
      assertEquals(7, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertNotSame(string0, string4);
      assertNotSame(string0, string6);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string7);
      assertNotSame(string0, string2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      
      Object object1 = new Object();
      assertNotNull(object1);
      assertFalse(object1.equals((Object)object0));
      
      MultiMatchQueryBuilder multiMatchQueryBuilder7 = multiMatchQueryBuilder5.fuzziness(object1);
      assertNotNull(multiMatchQueryBuilder7);
      assertFalse(object0.equals((Object)object1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string6));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string7));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(object1.equals((Object)object0));
      assertEquals(7, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertNotSame(object0, object1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertNotSame(string0, string4);
      assertNotSame(string0, string6);
      assertNotSame(string0, string5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string7);
      assertNotSame(string0, string2);
      assertSame(string2, string5);
      assertSame(string2, string6);
      assertSame(string2, string7);
      assertNotSame(string2, string3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(string2, string4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertNotSame(object1, object0);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder1);
      
      long long0 = 3362L;
      System.setCurrentTimeMillis(long0);
      CborXContent cborXContent0 = CborXContent.cborXContent;
      assertNotNull(cborXContent0);
      assertEquals(XContentType.CBOR, cborXContent0.type());
      
      XContentBuilder xContentBuilder0 = XContentBuilder.builder((XContent) cborXContent0);
      assertNotNull(xContentBuilder0);
      assertEquals(XContentType.CBOR, cborXContent0.type());
      assertEquals(XContentType.CBOR, xContentBuilder0.contentType());
      assertFalse(xContentBuilder0.humanReadable());
      
      String string8 = "sUVDty";
      String string9 = "Pbjt&";
      String string10 = "";
      String string11 = "";
      ImmutableSortedMap<String, String> immutableSortedMap0 = ImmutableSortedMap.of(string8, string9, string10, stringArray0[2], stringArray0[0], string11);
      assertNotNull(immutableSortedMap0);
      assertFalse(string9.equals((Object)string2));
      assertFalse(string9.equals((Object)string7));
      assertFalse(string9.equals((Object)string3));
      assertFalse(string9.equals((Object)string6));
      assertFalse(string9.equals((Object)string4));
      assertFalse(string9.equals((Object)string0));
      assertFalse(string9.equals((Object)string10));
      assertFalse(string9.equals((Object)string5));
      assertFalse(string9.equals((Object)string1));
      assertFalse(string9.equals((Object)string11));
      assertFalse(string9.equals((Object)string8));
      assertFalse(string10.equals((Object)string1));
      assertFalse(string10.equals((Object)string9));
      assertFalse(string10.equals((Object)string0));
      assertFalse(string10.equals((Object)string8));
      assertFalse(string10.equals((Object)string3));
      assertFalse(string11.equals((Object)string0));
      assertFalse(string11.equals((Object)string1));
      assertFalse(string11.equals((Object)string9));
      assertFalse(string11.equals((Object)string8));
      assertFalse(string11.equals((Object)string3));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string9));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string10));
      assertFalse(string8.equals((Object)string11));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string5));
      assertEquals(7, stringArray0.length);
      assertNotSame(string9, string2);
      assertNotSame(string9, string7);
      assertNotSame(string9, string3);
      assertNotSame(string9, string6);
      assertNotSame(string9, string4);
      assertNotSame(string9, string0);
      assertNotSame(string9, string10);
      assertNotSame(string9, string5);
      assertNotSame(string9, string1);
      assertNotSame(string9, string11);
      assertNotSame(string9, string8);
      assertNotSame(string10, string1);
      assertSame(string10, string7);
      assertSame(string10, string11);
      assertNotSame(string10, string9);
      assertSame(string10, string6);
      assertSame(string10, string5);
      assertNotSame(string10, string0);
      assertNotSame(string10, string8);
      assertSame(string10, string4);
      assertNotSame(string10, string3);
      assertSame(string10, string2);
      assertNotSame(string11, string0);
      assertNotSame(string11, string1);
      assertSame(string11, string5);
      assertSame(string11, string10);
      assertNotSame(string11, string9);
      assertSame(string11, string6);
      assertNotSame(string11, string8);
      assertSame(string11, string4);
      assertSame(string11, string7);
      assertSame(string11, string2);
      assertNotSame(string11, string3);
      assertNotSame(string8, string1);
      assertNotSame(string8, string9);
      assertNotSame(string8, string2);
      assertNotSame(string8, string10);
      assertNotSame(string8, string11);
      assertNotSame(string8, string6);
      assertNotSame(string8, string4);
      assertNotSame(string8, string7);
      assertNotSame(string8, string0);
      assertNotSame(string8, string3);
      assertNotSame(string8, string5);
      
      String string12 = "";
      ImmutableSortedMap<String, String> immutableSortedMap1 = immutableSortedMap0.headMap(string12);
      assertNotNull(immutableSortedMap1);
      assertFalse(string9.equals((Object)string2));
      assertFalse(string9.equals((Object)string12));
      assertFalse(string9.equals((Object)string3));
      assertFalse(string9.equals((Object)string7));
      assertFalse(string9.equals((Object)string6));
      assertFalse(string9.equals((Object)string4));
      assertFalse(string9.equals((Object)string0));
      assertFalse(string9.equals((Object)string10));
      assertFalse(string9.equals((Object)string5));
      assertFalse(string9.equals((Object)string1));
      assertFalse(string9.equals((Object)string11));
      assertFalse(string9.equals((Object)string8));
      assertFalse(string10.equals((Object)string1));
      assertFalse(string10.equals((Object)string9));
      assertFalse(string10.equals((Object)string0));
      assertFalse(string10.equals((Object)string8));
      assertFalse(string10.equals((Object)string3));
      assertFalse(string11.equals((Object)string0));
      assertFalse(string11.equals((Object)string1));
      assertFalse(string11.equals((Object)string9));
      assertFalse(string11.equals((Object)string8));
      assertFalse(string11.equals((Object)string3));
      assertFalse(string12.equals((Object)string0));
      assertFalse(string12.equals((Object)string9));
      assertFalse(string12.equals((Object)string1));
      assertFalse(string12.equals((Object)string3));
      assertFalse(string12.equals((Object)string8));
      assertFalse(immutableSortedMap1.equals((Object)immutableSortedMap0));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string9));
      assertFalse(string8.equals((Object)string12));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string10));
      assertFalse(string8.equals((Object)string11));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string5));
      assertEquals(7, stringArray0.length);
      assertNotSame(string9, string2);
      assertNotSame(string9, string12);
      assertNotSame(string9, string3);
      assertNotSame(string9, string7);
      assertNotSame(string9, string6);
      assertNotSame(string9, string4);
      assertNotSame(string9, string0);
      assertNotSame(string9, string10);
      assertNotSame(string9, string5);
      assertNotSame(string9, string1);
      assertNotSame(string9, string11);
      assertNotSame(string9, string8);
      assertNotSame(string10, string1);
      assertSame(string10, string7);
      assertSame(string10, string11);
      assertNotSame(string10, string9);
      assertSame(string10, string6);
      assertSame(string10, string5);
      assertNotSame(string10, string0);
      assertNotSame(string10, string8);
      assertNotSame(string10, string3);
      assertSame(string10, string4);
      assertSame(string10, string12);
      assertSame(string10, string2);
      assertNotSame(string11, string0);
      assertNotSame(string11, string1);
      assertSame(string11, string5);
      assertSame(string11, string10);
      assertNotSame(string11, string9);
      assertSame(string11, string6);
      assertNotSame(string11, string8);
      assertSame(string11, string4);
      assertSame(string11, string7);
      assertSame(string11, string12);
      assertSame(string11, string2);
      assertNotSame(string11, string3);
      assertSame(string12, string5);
      assertNotSame(string12, string9);
      assertNotSame(string12, string0);
      assertSame(string12, string6);
      assertSame(string12, string7);
      assertNotSame(string12, string1);
      assertSame(string12, string2);
      assertSame(string12, string10);
      assertSame(string12, string11);
      assertNotSame(string12, string3);
      assertSame(string12, string4);
      assertNotSame(string12, string8);
      assertNotSame(string8, string1);
      assertNotSame(string8, string9);
      assertNotSame(string8, string12);
      assertNotSame(string8, string2);
      assertNotSame(string8, string10);
      assertNotSame(string8, string11);
      assertNotSame(string8, string6);
      assertNotSame(string8, string4);
      assertNotSame(string8, string7);
      assertNotSame(string8, string0);
      assertNotSame(string8, string3);
      assertNotSame(string8, string5);
      
      ToXContent.Params toXContent_Params0 = ToXContent.EMPTY_PARAMS;
      assertNotNull(toXContent_Params0);
      
      ToXContent.DelegatingMapParams toXContent_DelegatingMapParams0 = new ToXContent.DelegatingMapParams(immutableSortedMap1, toXContent_Params0);
      assertNotNull(toXContent_DelegatingMapParams0);
      assertFalse(string9.equals((Object)string2));
      assertFalse(string9.equals((Object)string12));
      assertFalse(string9.equals((Object)string3));
      assertFalse(string9.equals((Object)string7));
      assertFalse(string9.equals((Object)string6));
      assertFalse(string9.equals((Object)string4));
      assertFalse(string9.equals((Object)string0));
      assertFalse(string9.equals((Object)string10));
      assertFalse(string9.equals((Object)string5));
      assertFalse(string9.equals((Object)string1));
      assertFalse(string9.equals((Object)string11));
      assertFalse(string9.equals((Object)string8));
      assertFalse(string10.equals((Object)string1));
      assertFalse(string10.equals((Object)string9));
      assertFalse(string10.equals((Object)string0));
      assertFalse(string10.equals((Object)string8));
      assertFalse(string10.equals((Object)string3));
      assertFalse(string11.equals((Object)string0));
      assertFalse(string11.equals((Object)string1));
      assertFalse(string11.equals((Object)string9));
      assertFalse(string11.equals((Object)string8));
      assertFalse(string11.equals((Object)string3));
      assertFalse(immutableSortedMap0.equals((Object)immutableSortedMap1));
      assertFalse(string12.equals((Object)string0));
      assertFalse(string12.equals((Object)string9));
      assertFalse(string12.equals((Object)string1));
      assertFalse(string12.equals((Object)string3));
      assertFalse(string12.equals((Object)string8));
      assertFalse(immutableSortedMap1.equals((Object)immutableSortedMap0));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string9));
      assertFalse(string8.equals((Object)string12));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string10));
      assertFalse(string8.equals((Object)string11));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string5));
      assertEquals(7, stringArray0.length);
      
      multiMatchQueryBuilder0.doXContent(xContentBuilder0, toXContent_DelegatingMapParams0);
      assertFalse(string9.equals((Object)string2));
      assertFalse(string9.equals((Object)string12));
      assertFalse(string9.equals((Object)string3));
      assertFalse(string9.equals((Object)string7));
      assertFalse(string9.equals((Object)string6));
      assertFalse(string9.equals((Object)string4));
      assertFalse(string9.equals((Object)string0));
      assertFalse(string9.equals((Object)string10));
      assertFalse(string9.equals((Object)string5));
      assertFalse(string9.equals((Object)string1));
      assertFalse(string9.equals((Object)string11));
      assertFalse(string9.equals((Object)string8));
      assertFalse(object0.equals((Object)object1));
      assertFalse(string10.equals((Object)string1));
      assertFalse(string10.equals((Object)string9));
      assertFalse(string10.equals((Object)string0));
      assertFalse(string10.equals((Object)string8));
      assertFalse(string10.equals((Object)string3));
      assertFalse(string11.equals((Object)string0));
      assertFalse(string11.equals((Object)string1));
      assertFalse(string11.equals((Object)string9));
      assertFalse(string11.equals((Object)string8));
      assertFalse(string11.equals((Object)string3));
      assertFalse(immutableSortedMap0.equals((Object)immutableSortedMap1));
      assertFalse(string12.equals((Object)string0));
      assertFalse(string12.equals((Object)string9));
      assertFalse(string12.equals((Object)string1));
      assertFalse(string12.equals((Object)string3));
      assertFalse(string12.equals((Object)string8));
      assertFalse(immutableSortedMap1.equals((Object)immutableSortedMap0));
      assertFalse(string8.equals((Object)string1));
      assertFalse(string8.equals((Object)string9));
      assertFalse(string8.equals((Object)string12));
      assertFalse(string8.equals((Object)string2));
      assertFalse(string8.equals((Object)string10));
      assertFalse(string8.equals((Object)string11));
      assertFalse(string8.equals((Object)string6));
      assertFalse(string8.equals((Object)string4));
      assertFalse(string8.equals((Object)string7));
      assertFalse(string8.equals((Object)string0));
      assertFalse(string8.equals((Object)string3));
      assertFalse(string8.equals((Object)string5));
      assertEquals(7, stringArray0.length);
      assertEquals(XContentType.CBOR, cborXContent0.type());
      assertEquals(XContentType.CBOR, xContentBuilder0.contentType());
      assertFalse(xContentBuilder0.humanReadable());
      assertNotSame(string9, string2);
      assertNotSame(string9, string12);
      assertNotSame(string9, string3);
      assertNotSame(string9, string7);
      assertNotSame(string9, string6);
      assertNotSame(string9, string4);
      assertNotSame(string9, string0);
      assertNotSame(string9, string10);
      assertNotSame(string9, string5);
      assertNotSame(string9, string1);
      assertNotSame(string9, string11);
      assertNotSame(string9, string8);
      assertNotSame(object0, object1);
      assertNotSame(string10, string1);
      assertSame(string10, string7);
      assertSame(string10, string11);
      assertNotSame(string10, string9);
      assertSame(string10, string6);
      assertSame(string10, string5);
      assertNotSame(string10, string0);
      assertNotSame(string10, string8);
      assertNotSame(string10, string3);
      assertSame(string10, string4);
      assertSame(string10, string12);
      assertSame(string10, string2);
      assertNotSame(string11, string0);
      assertNotSame(string11, string1);
      assertSame(string11, string5);
      assertSame(string11, string10);
      assertNotSame(string11, string9);
      assertSame(string11, string6);
      assertNotSame(string11, string8);
      assertSame(string11, string4);
      assertSame(string11, string7);
      assertSame(string11, string12);
      assertSame(string11, string2);
      assertNotSame(string11, string3);
      assertSame(string12, string5);
      assertNotSame(string12, string9);
      assertNotSame(string12, string0);
      assertSame(string12, string6);
      assertSame(string12, string7);
      assertNotSame(string12, string1);
      assertSame(string12, string2);
      assertSame(string12, string10);
      assertSame(string12, string11);
      assertNotSame(string12, string3);
      assertSame(string12, string4);
      assertNotSame(string12, string8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertNotSame(string8, string1);
      assertNotSame(string8, string9);
      assertNotSame(string8, string12);
      assertNotSame(string8, string2);
      assertNotSame(string8, string10);
      assertNotSame(string8, string11);
      assertNotSame(string8, string6);
      assertNotSame(string8, string4);
      assertNotSame(string8, string7);
      assertNotSame(string8, string0);
      assertNotSame(string8, string3);
      assertNotSame(string8, string5);
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      String string0 = "";
      String[] stringArray0 = new String[2];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(string0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(2, stringArray0.length);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.minimumShouldMatch(stringArray0[0]);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(2, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      MatchQueryBuilder.ZeroTermsQuery matchQueryBuilder_ZeroTermsQuery0 = MatchQueryBuilder.ZeroTermsQuery.ALL;
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.zeroTermsQuery(matchQueryBuilder_ZeroTermsQuery0);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(2, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      String string1 = "";
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.fuzzyRewrite(string1);
      assertNotNull(multiMatchQueryBuilder3);
      assertEquals(2, stringArray0.length);
      assertSame(string0, string1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(string1, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      
      int int0 = 3088;
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.maxExpansions(int0);
      assertNotNull(multiMatchQueryBuilder4);
      assertEquals(2, stringArray0.length);
      assertSame(string0, string1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(string1, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      
      boolean boolean0 = true;
      MatchQueryBuilder.Operator matchQueryBuilder_Operator0 = MatchQueryBuilder.Operator.AND;
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder4.operator(matchQueryBuilder_Operator0);
      assertNotNull(multiMatchQueryBuilder5);
      assertEquals(2, stringArray0.length);
      assertSame(string0, string1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(string1, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder4.lenient(boolean0);
      assertNotNull(multiMatchQueryBuilder6);
      assertEquals(2, stringArray0.length);
      assertSame(string0, string1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(string1, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder7 = multiMatchQueryBuilder6.minimumShouldMatch(string0);
      assertNotNull(multiMatchQueryBuilder7);
      assertEquals(2, stringArray0.length);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder0);
      assertSame(string0, string1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(string1, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      
      int int1 = 4;
      MultiMatchQueryBuilder multiMatchQueryBuilder8 = multiMatchQueryBuilder4.maxExpansions(int1);
      assertNotNull(multiMatchQueryBuilder8);
      assertFalse(int1 == int0);
      assertFalse(int0 == int1);
      assertEquals(2, stringArray0.length);
      assertSame(string0, string1);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder8, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(string1, string0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      
      MatchQueryBuilder.Operator matchQueryBuilder_Operator1 = MatchQueryBuilder.Operator.AND;
      MultiMatchQueryBuilder multiMatchQueryBuilder9 = multiMatchQueryBuilder2.operator(matchQueryBuilder_Operator1);
      assertNotNull(multiMatchQueryBuilder9);
      assertEquals(2, stringArray0.length);
      assertSame(string0, string1);
      assertSame(matchQueryBuilder_Operator1, matchQueryBuilder_Operator0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type0 = MultiMatchQueryBuilder.Type.PHRASE_PREFIX;
      MultiMatchQueryBuilder multiMatchQueryBuilder10 = multiMatchQueryBuilder9.type(multiMatchQueryBuilder_Type0);
      assertNotNull(multiMatchQueryBuilder10);
      assertEquals(2, stringArray0.length);
      assertSame(string0, string1);
      assertSame(matchQueryBuilder_Operator1, matchQueryBuilder_Operator0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      MatchQueryBuilder.Operator matchQueryBuilder_Operator2 = MatchQueryBuilder.Operator.OR;
      MultiMatchQueryBuilder multiMatchQueryBuilder11 = multiMatchQueryBuilder2.operator(matchQueryBuilder_Operator0);
      assertNotNull(multiMatchQueryBuilder11);
      assertFalse(matchQueryBuilder_Operator0.equals((Object)matchQueryBuilder_Operator2));
      assertEquals(2, stringArray0.length);
      assertSame(string0, string1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder11, multiMatchQueryBuilder3);
      assertSame(matchQueryBuilder_Operator0, matchQueryBuilder_Operator1);
      assertNotSame(matchQueryBuilder_Operator0, matchQueryBuilder_Operator2);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder12 = multiMatchQueryBuilder10.operator(matchQueryBuilder_Operator2);
      assertNotNull(multiMatchQueryBuilder12);
      assertFalse(matchQueryBuilder_Operator1.equals((Object)matchQueryBuilder_Operator2));
      assertFalse(matchQueryBuilder_Operator2.equals((Object)matchQueryBuilder_Operator1));
      assertFalse(matchQueryBuilder_Operator2.equals((Object)matchQueryBuilder_Operator0));
      assertEquals(2, stringArray0.length);
      assertSame(string0, string1);
      assertNotSame(matchQueryBuilder_Operator1, matchQueryBuilder_Operator2);
      assertSame(matchQueryBuilder_Operator1, matchQueryBuilder_Operator0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder3);
      assertNotSame(matchQueryBuilder_Operator2, matchQueryBuilder_Operator1);
      assertNotSame(matchQueryBuilder_Operator2, matchQueryBuilder_Operator0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder12, multiMatchQueryBuilder6);
      
      String string2 = "abz`V+rb*)w";
      MultiMatchQueryBuilder multiMatchQueryBuilder13 = multiMatchQueryBuilder9.field(string2);
      assertNotNull(multiMatchQueryBuilder13);
      assertFalse(string0.equals((Object)string2));
      assertFalse(matchQueryBuilder_Operator1.equals((Object)matchQueryBuilder_Operator2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(2, stringArray0.length);
      assertSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(matchQueryBuilder_Operator1, matchQueryBuilder_Operator2);
      assertSame(matchQueryBuilder_Operator1, matchQueryBuilder_Operator0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder12);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder13, multiMatchQueryBuilder4);
      
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type1 = MultiMatchQueryBuilder.Type.BEST_FIELDS;
      MultiMatchQueryBuilder multiMatchQueryBuilder14 = multiMatchQueryBuilder7.type(multiMatchQueryBuilder_Type1);
      assertNotNull(multiMatchQueryBuilder14);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string2));
      assertFalse(int0 == int1);
      assertFalse(multiMatchQueryBuilder_Type1.equals((Object)multiMatchQueryBuilder_Type0));
      assertEquals(2, stringArray0.length);
      assertSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder12);
      assertSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder11);
      assertNotSame(multiMatchQueryBuilder_Type1, multiMatchQueryBuilder_Type0);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder14, multiMatchQueryBuilder6);
      
      String string3 = "";
      MultiMatchQueryBuilder multiMatchQueryBuilder15 = multiMatchQueryBuilder5.analyzer(string3);
      assertNotNull(multiMatchQueryBuilder15);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string2));
      assertFalse(int0 == int1);
      assertFalse(matchQueryBuilder_Operator0.equals((Object)matchQueryBuilder_Operator2));
      assertFalse(string3.equals((Object)string2));
      assertEquals(2, stringArray0.length);
      assertSame(string0, string3);
      assertSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder12);
      assertSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(string1, string3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(matchQueryBuilder_Operator0, matchQueryBuilder_Operator1);
      assertNotSame(matchQueryBuilder_Operator0, matchQueryBuilder_Operator2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(string3, string1);
      assertNotSame(string3, string2);
      assertSame(string3, string0);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder2);
      
      Decision.Single decision_Single0 = new Decision.Single();
      assertNotNull(decision_Single0);
      assertNull(decision_Single0.label());
      assertNull(decision_Single0.type());
      
      XContentBuilder xContentBuilder0 = CborXContent.contentBuilder();
      assertNotNull(xContentBuilder0);
      assertEquals(XContentType.CBOR, xContentBuilder0.contentType());
      assertFalse(xContentBuilder0.humanReadable());
      
      ToXContent.Params toXContent_Params0 = ToXContent.EMPTY_PARAMS;
      assertNotNull(toXContent_Params0);
      
      XContentBuilder xContentBuilder1 = decision_Single0.toXContent(xContentBuilder0, toXContent_Params0);
      assertNotNull(xContentBuilder1);
      assertNull(decision_Single0.label());
      assertNull(decision_Single0.type());
      assertEquals(XContentType.CBOR, xContentBuilder0.contentType());
      assertFalse(xContentBuilder0.humanReadable());
      assertEquals(XContentType.CBOR, xContentBuilder1.contentType());
      assertFalse(xContentBuilder1.humanReadable());
      assertSame(xContentBuilder0, xContentBuilder1);
      assertSame(xContentBuilder1, xContentBuilder0);
      
      Settings settings0 = NodeSettingsService.getGlobalSettings();
      assertNotNull(settings0);
      assertTrue(settings0.getSettingsRequireUnits());
      
      DiscoveryNodeService discoveryNodeService0 = new DiscoveryNodeService(settings0);
      assertNotNull(discoveryNodeService0);
      assertTrue(settings0.getSettingsRequireUnits());
      
      DiscoveryNodeService.CustomAttributesProvider discoveryNodeService_CustomAttributesProvider0 = mock(DiscoveryNodeService.CustomAttributesProvider.class, new ViolatedAssumptionAnswer());
      doReturn((Map) null).when(discoveryNodeService_CustomAttributesProvider0).buildAttributes();
      DiscoveryNodeService discoveryNodeService1 = discoveryNodeService0.addCustomAttributeProvider(discoveryNodeService_CustomAttributesProvider0);
      assertNotNull(discoveryNodeService1);
      assertTrue(settings0.getSettingsRequireUnits());
      assertSame(discoveryNodeService0, discoveryNodeService1);
      assertSame(discoveryNodeService1, discoveryNodeService0);
      
      Map<String, String> map0 = discoveryNodeService1.buildAttributes();
      assertNotNull(map0);
      assertTrue(settings0.getSettingsRequireUnits());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertSame(discoveryNodeService0, discoveryNodeService1);
      assertSame(discoveryNodeService1, discoveryNodeService0);
      
      ToXContent.DelegatingMapParams toXContent_DelegatingMapParams0 = new ToXContent.DelegatingMapParams(map0, toXContent_Params0);
      assertNotNull(toXContent_DelegatingMapParams0);
      assertTrue(settings0.getSettingsRequireUnits());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      
      multiMatchQueryBuilder15.doXContent(xContentBuilder1, toXContent_DelegatingMapParams0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string2));
      assertFalse(int0 == int1);
      assertFalse(matchQueryBuilder_Operator0.equals((Object)matchQueryBuilder_Operator2));
      assertFalse(string3.equals((Object)string2));
      assertEquals(2, stringArray0.length);
      assertNull(decision_Single0.label());
      assertNull(decision_Single0.type());
      assertEquals(XContentType.CBOR, xContentBuilder0.contentType());
      assertFalse(xContentBuilder0.humanReadable());
      assertEquals(XContentType.CBOR, xContentBuilder1.contentType());
      assertFalse(xContentBuilder1.humanReadable());
      assertTrue(settings0.getSettingsRequireUnits());
      assertEquals(0, map0.size());
      assertTrue(map0.isEmpty());
      assertSame(string0, string3);
      assertSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(xContentBuilder0, xContentBuilder1);
      assertSame(xContentBuilder1, xContentBuilder0);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(discoveryNodeService0, discoveryNodeService1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder15);
      assertSame(discoveryNodeService1, discoveryNodeService0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder12);
      assertSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(string1, string3);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(matchQueryBuilder_Operator0, matchQueryBuilder_Operator1);
      assertNotSame(matchQueryBuilder_Operator0, matchQueryBuilder_Operator2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(string3, string1);
      assertNotSame(string3, string2);
      assertSame(string3, string0);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder15, multiMatchQueryBuilder2);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder16 = multiMatchQueryBuilder10.analyzer(string1);
      assertNotNull(multiMatchQueryBuilder16);
      assertFalse(string0.equals((Object)string2));
      assertFalse(matchQueryBuilder_Operator1.equals((Object)matchQueryBuilder_Operator2));
      assertFalse(multiMatchQueryBuilder_Type0.equals((Object)multiMatchQueryBuilder_Type1));
      assertFalse(string1.equals((Object)string2));
      assertEquals(2, stringArray0.length);
      assertSame(string0, string3);
      assertSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(matchQueryBuilder_Operator1, matchQueryBuilder_Operator2);
      assertSame(matchQueryBuilder_Operator1, matchQueryBuilder_Operator0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder16);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder9, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder16);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertNotSame(multiMatchQueryBuilder_Type0, multiMatchQueryBuilder_Type1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder16);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder16);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder10, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder16);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder15);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder12);
      assertSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(string1, string3);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder14);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder13);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder10);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder12);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder8);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder11);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder9);
      assertSame(multiMatchQueryBuilder16, multiMatchQueryBuilder15);
      
      // Undeclared exception!
      try { 
        multiMatchQueryBuilder16.type((Object) matchQueryBuilder_ZeroTermsQuery0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // failed to parse [java.lang.String@0000000298] query type [java.lang.String@0000000299]. unknown type.
         //
         verifyException("org.elasticsearch.index.query.MultiMatchQueryBuilder$Type", e);
      }
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      String string0 = null;
      String[] stringArray0 = new String[4];
      stringArray0[2] = string0;
      EvoSuiteFile evoSuiteFile0 = null;
      byte[] byteArray0 = new byte[6];
      byte byte0 = (byte)0;
      byteArray0[0] = byte0;
      byte byte1 = (byte) (-7);
      byteArray0[1] = byte1;
      byte byte2 = (byte) (-121);
      byteArray0[2] = byte2;
      byte byte3 = (byte)25;
      byteArray0[3] = byte3;
      byte byte4 = (byte)49;
      byteArray0[4] = byte4;
      byte byte5 = (byte)3;
      byteArray0[5] = byte5;
      boolean boolean0 = FileSystemHandling.appendDataToFile(evoSuiteFile0, byteArray0);
      assertEquals(6, byteArray0.length);
      assertFalse(boolean0);
      assertArrayEquals(new byte[] {(byte)0, (byte) (-7), (byte) (-121), (byte)25, (byte)49, (byte)3}, byteArray0);
      
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      stringArray0[3] = string0;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(string0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(4, stringArray0.length);
      
      String string1 = "";
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.fuzzyRewrite(string1);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.queryName(string1);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      
      MatchQueryBuilder.ZeroTermsQuery matchQueryBuilder_ZeroTermsQuery0 = MatchQueryBuilder.ZeroTermsQuery.NONE;
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.zeroTermsQuery(matchQueryBuilder_ZeroTermsQuery0);
      assertNotNull(multiMatchQueryBuilder3);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.minimumShouldMatch(string1);
      assertNotNull(multiMatchQueryBuilder4);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      
      Object object0 = new Object();
      assertNotNull(object0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder4.fuzziness(object0);
      assertNotNull(multiMatchQueryBuilder5);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      
      int int0 = 0;
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder5.prefixLength(int0);
      assertNotNull(multiMatchQueryBuilder6);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      
      XContentBuilder xContentBuilder0 = SmileXContent.contentBuilder();
      assertNotNull(xContentBuilder0);
      assertFalse(xContentBuilder0.humanReadable());
      assertEquals(XContentType.SMILE, xContentBuilder0.contentType());
      
      ToXContent.Params toXContent_Params0 = ToXContent.EMPTY_PARAMS;
      assertNotNull(toXContent_Params0);
      
      multiMatchQueryBuilder2.doXContent(xContentBuilder0, toXContent_Params0);
      assertEquals(4, stringArray0.length);
      assertFalse(xContentBuilder0.humanReadable());
      assertEquals(XContentType.SMILE, xContentBuilder0.contentType());
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder7 = multiMatchQueryBuilder1.cutoffFrequency(int0);
      assertNotNull(multiMatchQueryBuilder7);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      String string0 = "hxvHvYbZnrk9?))MbI";
      String[] stringArray0 = new String[4];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      stringArray0[3] = string0;
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(string0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(4, stringArray0.length);
      
      boolean boolean0 = false;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.lenient(boolean0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.useDisMax(boolean0);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      
      MatchQueryBuilder.Operator matchQueryBuilder_Operator0 = MatchQueryBuilder.Operator.OR;
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder2.operator(matchQueryBuilder_Operator0);
      assertNotNull(multiMatchQueryBuilder3);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      
      float float0 = 0.0F;
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.tieBreaker(float0);
      assertNotNull(multiMatchQueryBuilder4);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      
      XContentType xContentType0 = XContentType.CBOR;
      BytesReference bytesReference0 = multiMatchQueryBuilder4.buildAsBytes(xContentType0);
      assertNotNull(bytesReference0);
      assertEquals(4, stringArray0.length);
      assertTrue(bytesReference0.hasArray());
      assertEquals(177, bytesReference0.length());
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      
      MatchQueryBuilder.ZeroTermsQuery matchQueryBuilder_ZeroTermsQuery0 = MatchQueryBuilder.ZeroTermsQuery.NONE;
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder2.zeroTermsQuery(matchQueryBuilder_ZeroTermsQuery0);
      assertNotNull(multiMatchQueryBuilder5);
      assertEquals(4, stringArray0.length);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      
      String string1 = multiMatchQueryBuilder5.toString();
      assertNotNull(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, stringArray0.length);
      assertEquals("{\n  \"multi_match\" : {\n    \"query\" : \"hxvHvYbZnrk9?))MbI\",\n    \"fields\" : [ \"hxvHvYbZnrk9?))MbI\", \"hxvHvYbZnrk9?))MbI\", \"hxvHvYbZnrk9?))MbI\", \"hxvHvYbZnrk9?))MbI\" ],\n    \"operator\" : \"OR\",\n    \"use_dis_max\" : false,\n    \"tie_breaker\" : 0.0,\n    \"lenient\" : false,\n    \"zero_terms_query\" : \"NONE\"\n  }\n}", string1);
      assertNotSame(string0, string1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertNotSame(string1, string0);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder6 = multiMatchQueryBuilder5.tieBreaker(float0);
      assertNotNull(multiMatchQueryBuilder6);
      assertFalse(string0.equals((Object)string1));
      assertEquals(4, stringArray0.length);
      assertNotSame(string0, string1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder6, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      
      float float1 = 2636.17F;
      MultiMatchQueryBuilder multiMatchQueryBuilder7 = multiMatchQueryBuilder4.field(stringArray0[1], float1);
      assertNotNull(multiMatchQueryBuilder7);
      assertFalse(string0.equals((Object)string1));
      assertNotEquals(float1, float0, 0.01F);
      assertNotEquals(float0, float1, 0.01F);
      assertEquals(4, stringArray0.length);
      assertNotSame(string0, string1);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder7, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder6);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder7);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder6);
      
      // Undeclared exception!
      try { 
        multiMatchQueryBuilder4.type((Object) multiMatchQueryBuilder1);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // failed to parse [java.lang.String@0000000155] query type [java.lang.String@0000000156]. unknown type.
         //
         verifyException("org.elasticsearch.index.query.MultiMatchQueryBuilder$Type", e);
      }
  }

  @Test(timeout = 11000)
  public void test46()  throws Throwable  {
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type0 = MultiMatchQueryBuilder.Type.MOST_FIELDS;
      assertEquals(MultiMatchQueryBuilder.Type.MOST_FIELDS, multiMatchQueryBuilder_Type0);
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      
      MatchQuery.Type matchQuery_Type0 = multiMatchQueryBuilder_Type0.matchQueryType();
      assertEquals(MatchQuery.Type.BOOLEAN, matchQuery_Type0);
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      
      String[] stringArray0 = new String[0];
      MultiMatchQueryBuilder multiMatchQueryBuilder0 = new MultiMatchQueryBuilder(matchQuery_Type0, stringArray0);
      assertNotNull(multiMatchQueryBuilder0);
      assertEquals(0, stringArray0.length);
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      
      float float0 = 0.0F;
      MultiMatchQueryBuilder multiMatchQueryBuilder1 = multiMatchQueryBuilder0.tieBreaker(float0);
      assertNotNull(multiMatchQueryBuilder1);
      assertEquals(0, stringArray0.length);
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      
      int int0 = 813;
      MultiMatchQueryBuilder multiMatchQueryBuilder2 = multiMatchQueryBuilder1.maxExpansions(int0);
      assertNotNull(multiMatchQueryBuilder2);
      assertEquals(0, stringArray0.length);
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder2, multiMatchQueryBuilder0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder3 = multiMatchQueryBuilder1.prefixLength(int0);
      assertNotNull(multiMatchQueryBuilder3);
      assertEquals(0, stringArray0.length);
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      
      String string0 = "mfgb$WO)>@nc6b";
      MultiMatchQueryBuilder multiMatchQueryBuilder4 = multiMatchQueryBuilder3.minimumShouldMatch(string0);
      assertNotNull(multiMatchQueryBuilder4);
      assertEquals(0, stringArray0.length);
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      
      boolean boolean0 = false;
      XContentType xContentType0 = XContentType.CBOR;
      BytesReference bytesReference0 = multiMatchQueryBuilder0.buildAsBytes(xContentType0);
      assertNotNull(bytesReference0);
      assertEquals(0, stringArray0.length);
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertTrue(bytesReference0.hasArray());
      assertEquals(178, bytesReference0.length());
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      
      String string1 = "phrase_prefix";
      Class<ParseField.Flag> class0 = ParseField.Flag.class;
      EnumSet<ParseField.Flag> enumSet0 = EnumSet.noneOf(class0);
      assertNotNull(enumSet0);
      assertEquals(0, enumSet0.size());
      
      ParseFieldMatcher parseFieldMatcher0 = new ParseFieldMatcher(enumSet0);
      assertNotNull(parseFieldMatcher0);
      assertEquals(0, enumSet0.size());
      
      MultiMatchQueryBuilder.Type multiMatchQueryBuilder_Type1 = MultiMatchQueryBuilder.Type.parse(string1, parseFieldMatcher0);
      assertFalse(multiMatchQueryBuilder_Type1.equals((Object)multiMatchQueryBuilder_Type0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(MultiMatchQueryBuilder.Type.PHRASE_PREFIX, multiMatchQueryBuilder_Type1);
      assertEquals(0, enumSet0.size());
      assertEquals(0.0F, multiMatchQueryBuilder_Type1.tieBreaker(), 0.01F);
      assertEquals(MatchQuery.Type.PHRASE_PREFIX, multiMatchQueryBuilder_Type1.matchQueryType());
      assertNotSame(multiMatchQueryBuilder_Type1, multiMatchQueryBuilder_Type0);
      assertNotSame(string1, string0);
      
      MultiMatchQueryBuilder multiMatchQueryBuilder5 = multiMatchQueryBuilder4.lenient(boolean0);
      assertNotNull(multiMatchQueryBuilder5);
      assertFalse(multiMatchQueryBuilder_Type0.equals((Object)multiMatchQueryBuilder_Type1));
      assertFalse(string0.equals((Object)string1));
      assertEquals(0, stringArray0.length);
      assertEquals(1.0F, multiMatchQueryBuilder_Type0.tieBreaker(), 0.01F);
      assertEquals(MatchQuery.Type.BOOLEAN, multiMatchQueryBuilder_Type0.matchQueryType());
      assertNotSame(multiMatchQueryBuilder_Type0, multiMatchQueryBuilder_Type1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder5, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder0, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder1, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder5);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder4);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder3, multiMatchQueryBuilder1);
      assertNotSame(string0, string1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder1);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder0);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder2);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder3);
      assertSame(multiMatchQueryBuilder4, multiMatchQueryBuilder5);
      
      String string2 = "";
      TermSuggestionBuilder termSuggestionBuilder0 = new TermSuggestionBuilder(string2);
      assertNotNull(termSuggestionBuilder0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      
      TermSuggestionBuilder termSuggestionBuilder1 = termSuggestionBuilder0.maxTermFreq(float0);
      assertNotNull(termSuggestionBuilder1);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(termSuggestionBuilder0, termSuggestionBuilder1);
      assertSame(termSuggestionBuilder1, termSuggestionBuilder0);
      
      int int1 = (-1009);
      TermSuggestionBuilder termSuggestionBuilder2 = termSuggestionBuilder1.minWordLength(int1);
      assertNotNull(termSuggestionBuilder2);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(int1 == int0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(termSuggestionBuilder0, termSuggestionBuilder1);
      assertSame(termSuggestionBuilder0, termSuggestionBuilder2);
      assertSame(termSuggestionBuilder1, termSuggestionBuilder0);
      assertSame(termSuggestionBuilder1, termSuggestionBuilder2);
      assertSame(termSuggestionBuilder2, termSuggestionBuilder1);
      assertSame(termSuggestionBuilder2, termSuggestionBuilder0);
      
      Integer integer0 = new Integer(int1);
      assertNotNull(integer0);
      assertFalse(int1 == int0);
      assertFalse(integer0.equals((Object)int0));
      assertTrue(integer0.equals((Object)int1));
      assertEquals((-1009), (int)integer0);
      
      TermSuggestionBuilder termSuggestionBuilder3 = termSuggestionBuilder2.maxInspections(integer0);
      assertNotNull(termSuggestionBuilder3);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(int1 == int0);
      assertFalse(integer0.equals((Object)int0));
      assertTrue(integer0.equals((Object)int1));
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(termSuggestionBuilder0, termSuggestionBuilder1);
      assertSame(termSuggestionBuilder0, termSuggestionBuilder3);
      assertSame(termSuggestionBuilder0, termSuggestionBuilder2);
      assertSame(termSuggestionBuilder1, termSuggestionBuilder0);
      assertSame(termSuggestionBuilder1, termSuggestionBuilder2);
      assertSame(termSuggestionBuilder1, termSuggestionBuilder3);
      assertSame(termSuggestionBuilder2, termSuggestionBuilder3);
      assertSame(termSuggestionBuilder2, termSuggestionBuilder1);
      assertSame(termSuggestionBuilder2, termSuggestionBuilder0);
      assertSame(termSuggestionBuilder3, termSuggestionBuilder1);
      assertSame(termSuggestionBuilder3, termSuggestionBuilder2);
      assertSame(termSuggestionBuilder3, termSuggestionBuilder0);
      
      byte[] byteArray0 = new byte[4];
      byte byte0 = (byte)21;
      byteArray0[0] = byte0;
      byte byte1 = (byte)23;
      byteArray0[1] = byte1;
      byte byte2 = (byte)41;
      byteArray0[2] = byte2;
      byte byte3 = (byte)0;
      byteArray0[3] = byte3;
      int int2 = 1758;
      int int3 = (-919);
      StreamInput streamInput0 = StreamInput.wrap(byteArray0, int2, int3);
      assertNotNull(streamInput0);
      assertFalse(int2 == int1);
      assertFalse(int2 == int3);
      assertFalse(int2 == int0);
      assertFalse(int3 == int1);
      assertFalse(int3 == int2);
      assertFalse(int3 == int0);
      assertEquals(4, byteArray0.length);
      assertArrayEquals(new byte[] {(byte)21, (byte)23, (byte)41, (byte)0}, byteArray0);
      
      TransportException transportException0 = null;
      try {
        transportException0 = new TransportException(streamInput0);
        fail("Expecting exception: EOFException");
      
      } catch(Throwable e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.common.io.stream.InputStreamStreamInput", e);
      }
  }
}
