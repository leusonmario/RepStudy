/*
 * This file was automatically generated by EvoSuite
 * Fri Oct 29 18:54:04 GMT 2021
 */

package org.elasticsearch.index.query.support;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.google.common.collect.ImmutableSortedMap;
import java.util.function.Consumer;
import org.apache.lucene.index.CodecReader;
import org.apache.lucene.index.ExitableDirectoryReader;
import org.apache.lucene.index.FilterCodecReader;
import org.apache.lucene.index.LeafReader;
import org.apache.lucene.index.LeafReaderContext;
import org.apache.lucene.index.QueryTimeoutImpl;
import org.apache.lucene.search.BooleanQuery;
import org.apache.lucene.search.Filter;
import org.apache.lucene.search.PhraseQuery;
import org.apache.lucene.search.join.BitDocIdSetCachingWrapperFilter;
import org.apache.lucene.search.join.BitDocIdSetFilter;
import org.apache.lucene.util.Bits;
import org.elasticsearch.common.xcontent.ToXContent;
import org.elasticsearch.common.xcontent.XContentBuilder;
import org.elasticsearch.common.xcontent.XContentParser;
import org.elasticsearch.common.xcontent.XContentType;
import org.elasticsearch.common.xcontent.json.JsonXContent;
import org.elasticsearch.common.xcontent.json.JsonXContentParser;
import org.elasticsearch.common.xcontent.support.AbstractXContentParser;
import org.elasticsearch.index.mapper.MergeResult;
import org.elasticsearch.index.mapper.object.ObjectMapper;
import org.elasticsearch.index.query.QueryParseContext;
import org.elasticsearch.index.query.support.NestedInnerQueryParseSupport;
import org.elasticsearch.search.fetch.FetchSubPhase;
import org.elasticsearch.search.internal.SearchContext;
import org.elasticsearch.search.internal.ShardSearchTransportRequest;
import org.elasticsearch.search.internal.SubSearchContext;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class NestedInnerQueryParseSupport_ESTest extends NestedInnerQueryParseSupport_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNotNull(nestedInnerQueryParseSupport0);
      
      String string0 = "2A1y'9$ENW\\J";
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNotNull(nestedInnerQueryParseSupport0);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNotNull(nestedInnerQueryParseSupport0);
      
      boolean boolean0 = nestedInnerQueryParseSupport0.queryFound();
      assertFalse(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getParentObjectMapper();
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(objectMapper0);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertNotNull(nestedInnerQueryParseSupport0);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNotNull(nestedInnerQueryParseSupport0);
      
      boolean boolean0 = nestedInnerQueryParseSupport0.filterFound();
      assertFalse(boolean0);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(objectMapper0);
      
      String string0 = nestedInnerQueryParseSupport0.getPath();
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(string0);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      SearchContext searchContext0 = SearchContext.current();
      assertNull(searchContext0);
      
      XContentParser xContentParser0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = null;
      try {
        nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(xContentParser0, searchContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNotNull(nestedInnerQueryParseSupport0);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.query();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      XContentParser xContentParser0 = null;
      SearchContext searchContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = null;
      try {
        nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(xContentParser0, searchContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      JsonXContent jsonXContent0 = JsonXContent.jsonXContent;
      assertEquals(XContentType.JSON, jsonXContent0.type());
      assertEquals((byte)10, jsonXContent0.streamSeparator());
      assertNotNull(jsonXContent0);
      
      byte[] byteArray0 = new byte[3];
      byte byte0 = (byte)26;
      byteArray0[0] = byte0;
      byte byte1 = (byte)38;
      byteArray0[1] = byte1;
      byte byte2 = (byte)119;
      byteArray0[2] = byte2;
      JsonXContentParser jsonXContentParser0 = (JsonXContentParser)jsonXContent0.createParser(byteArray0);
      assertArrayEquals(new byte[] {(byte)26, (byte)38, (byte)119}, byteArray0);
      assertTrue(AbstractXContentParser.DEFAULT_NUMBER_COEERCE_POLICY);
      assertEquals(XContentType.JSON, jsonXContent0.type());
      assertEquals((byte)10, jsonXContent0.streamSeparator());
      assertTrue(jsonXContentParser0.estimatedNumberType());
      assertEquals(XContentType.JSON, jsonXContentParser0.contentType());
      assertEquals(3, byteArray0.length);
      assertNotNull(jsonXContentParser0);
      
      SearchContext searchContext0 = null;
      SubSearchContext subSearchContext0 = new SubSearchContext(searchContext0);
      assertEquals(0, SearchContext.DEFAULT_TERMINATE_AFTER);
      assertEquals(0, subSearchContext0.docIdsToLoadFrom());
      assertEquals(3, subSearchContext0.size());
      assertFalse(subSearchContext0.nowInMillisUsed());
      assertFalse(subSearchContext0.hasFetchSourceContext());
      assertFalse(subSearchContext0.sourceRequested());
      assertFalse(subSearchContext0.hasScriptFields());
      assertFalse(subSearchContext0.trackScores());
      assertEquals(0, subSearchContext0.from());
      assertFalse(subSearchContext0.version());
      assertFalse(subSearchContext0.hasFieldNames());
      assertFalse(subSearchContext0.explain());
      assertEquals(0, subSearchContext0.docIdsToLoadSize());
      assertNotNull(subSearchContext0);
      
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = null;
      try {
        nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(jsonXContentParser0, subSearchContext0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.search.internal.FilteredSearchContext", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNotNull(nestedInnerQueryParseSupport0);
      
      String string0 = "";
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNotNull(nestedInnerQueryParseSupport0);
      
      boolean boolean0 = false;
      String string0 = "";
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNotNull(nestedInnerQueryParseSupport0);
      
      boolean boolean0 = false;
      nestedInnerQueryParseSupport0.queryFound = boolean0;
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      
      String string0 = nestedInnerQueryParseSupport0.getPath();
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(string0);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNotNull(nestedInnerQueryParseSupport0);
      
      String string0 = "";
      Filter filter0 = nestedInnerQueryParseSupport0.childFilter;
      assertNull(filter0);
      
      BitDocIdSetCachingWrapperFilter bitDocIdSetCachingWrapperFilter0 = new BitDocIdSetCachingWrapperFilter(filter0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertNotNull(bitDocIdSetCachingWrapperFilter0);
      
      nestedInnerQueryParseSupport0.childFilter = (Filter) bitDocIdSetCachingWrapperFilter0;
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertEquals(1.0F, bitDocIdSetCachingWrapperFilter0.getBoost(), 0.01F);
      assertEquals(1.0F, nestedInnerQueryParseSupport0.childFilter.getBoost(), 0.01F);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertNotNull(nestedInnerQueryParseSupport0);
      
      boolean boolean0 = nestedInnerQueryParseSupport0.filterFound();
      assertFalse(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      
      String string0 = nestedInnerQueryParseSupport0.getPath();
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertNull(string0);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNotNull(nestedInnerQueryParseSupport0);
      
      boolean boolean0 = nestedInnerQueryParseSupport0.queryFound();
      assertFalse(boolean0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getParentObjectMapper();
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(objectMapper0);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.filter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNotNull(nestedInnerQueryParseSupport0);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNotNull(nestedInnerQueryParseSupport0);
      
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(objectMapper0);
      
      boolean boolean0 = false;
      nestedInnerQueryParseSupport0.queryFound = boolean0;
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      
      Filter filter0 = null;
      nestedInnerQueryParseSupport0.childFilter = filter0;
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.setPath(objectMapper0.CONTENT_TYPE);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.support.NestedInnerQueryParseSupport", e);
      }
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNotNull(nestedInnerQueryParseSupport0);
      
      boolean boolean0 = true;
      BitDocIdSetFilter bitDocIdSetFilter0 = nestedInnerQueryParseSupport0.parentFilter;
      assertNull(bitDocIdSetFilter0);
      
      nestedInnerQueryParseSupport0.childFilter = (Filter) bitDocIdSetFilter0;
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      
      nestedInnerQueryParseSupport0.filterFound = boolean0;
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      
      boolean boolean1 = nestedInnerQueryParseSupport0.filterFound();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertNull(objectMapper0);
      
      String string0 = nestedInnerQueryParseSupport0.getPath();
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      assertNull(string0);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNotNull(nestedInnerQueryParseSupport0);
      
      BooleanQuery booleanQuery0 = new BooleanQuery();
      assertFalse(booleanQuery0.isCoordDisabled());
      assertEquals(0, booleanQuery0.getMinimumNumberShouldMatch());
      assertEquals(1024, booleanQuery0.getMaxClauseCount());
      assertEquals(1.0F, booleanQuery0.getBoost(), 0.01F);
      assertNotNull(booleanQuery0);
      
      boolean boolean0 = false;
      nestedInnerQueryParseSupport0.filterFound = boolean0;
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      
      boolean boolean1 = true;
      nestedInnerQueryParseSupport0.queryFound = boolean1;
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      
      String string0 = nestedInnerQueryParseSupport0.getPath();
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(string0);
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNotNull(nestedInnerQueryParseSupport0);
      
      PhraseQuery phraseQuery0 = new PhraseQuery();
      assertEquals(1.0F, phraseQuery0.getBoost(), 0.01F);
      assertEquals(0, phraseQuery0.getSlop());
      assertNotNull(phraseQuery0);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.queryFound = boolean0;
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerQuery();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertNotNull(nestedInnerQueryParseSupport0);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.filterFound = boolean0;
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      
      boolean boolean1 = nestedInnerQueryParseSupport0.queryFound();
      assertFalse(boolean1 == boolean0);
      assertFalse(boolean1);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertTrue(nestedInnerQueryParseSupport0.filterFound());
      
      // Undeclared exception!
      try { 
        nestedInnerQueryParseSupport0.getInnerFilter();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.elasticsearch.index.query.QueryParsingException", e);
      }
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      QueryParseContext queryParseContext0 = null;
      NestedInnerQueryParseSupport nestedInnerQueryParseSupport0 = new NestedInnerQueryParseSupport(queryParseContext0);
      assertFalse(nestedInnerQueryParseSupport0.queryFound());
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertNotNull(nestedInnerQueryParseSupport0);
      
      boolean boolean0 = true;
      nestedInnerQueryParseSupport0.queryFound = boolean0;
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      
      boolean boolean1 = nestedInnerQueryParseSupport0.queryFound();
      assertTrue(boolean1 == boolean0);
      assertTrue(boolean1);
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      
      ObjectMapper objectMapper0 = nestedInnerQueryParseSupport0.getNestedObjectMapper();
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertNull(objectMapper0);
      
      String string0 = nestedInnerQueryParseSupport0.getPath();
      assertFalse(nestedInnerQueryParseSupport0.filterFound());
      assertTrue(nestedInnerQueryParseSupport0.queryFound());
      assertNull(nestedInnerQueryParseSupport0.getPath());
      assertNull(string0);
      
      long long0 = (-1L);
      System.setCurrentTimeMillis(long0);
  }
}
